<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cargoFlowDashboard">
<resultMap id="cargoFlowDashboardVesselScheduleMap"			type="cargoFlowDashboardItem">
    	<result property="hatchQty"								column="HATCH_QTY"/>
    	<result property="vslCd"								column="VSL_CD"/>
    	<result property="vslNm"								column="VSL_NM"/>
    	<result property="arrvSaId"								column="ARRV_SA_ID"/>
    	<result property="voyage"								column="VOYAGE"/>
    	<result property="eta"									column="ETA"/>
    	<result property="etb"									column="ETB"/>
    	<result property="etd"									column="ETD"/>
    	<result property="berthLoc"								column="BERTH_LOC"/>
    </resultMap>
    
     <resultMap id="cargoFlowDashboardCommodityMap"				type="cargoFlowDashboardItem">
    	<result property="cmmdCd"								column="CMDT_CD"/>
    	<result property="cmmdNm"								column="CMDT_NM"/>
    </resultMap>
    
    <resultMap id="cargoFlowDashboardCommodityAmt"				type="cargoFlowDashboardItem">
    	<result property="cmmdCd"								column="CMDT_CD"/>
    	<result property="pkgQty"								column="PKG_QTY"/>
    	<result property="cgWgt"								column="CG_WGT"/>
    	<result property="cgVol"								column="CG_VOL"/>
    </resultMap>
    
    <resultMap id="cargoFlowDashboardPtnrMap"					type="cargoFlowDashboardItem">
    	<result property="ptnrCode"								column="SHIPG_AGNCY"/>
    	<result property="fwdCode"								column="FWRD"/>
    	<result property="cnsCode"								column="CNS"/>
    </resultMap>
    
    <resultMap id="cargoFlowDashboardVesselHatchData"			type="cargoFlowDashboardItem">
    	<result property="cmmdCd"								column="CMDT_CD"/>
    	<result property="vslCmmdNm"							column="CMDT_NM"/>
    	<result property="yardCmmdNm"							column="CMDT_NM"/>
    	<result property="gateCmmdNm"							column="CMDT_NM"/>
    	<result property="vslCargoTypeNm"						column="CG_TP_NM"/>
    	<result property="yardCargoTypeNm"						column="CG_TP_NM"/>
    	<result property="gateCargoTypeNm"						column="CG_TP_NM"/>
    	<result property="vslDeliveryTypeNm"					column="DELV_TP_NM"/>
    	<result property="pkgQty"								column="PKG_QTY"/>
    	<result property="cgWgt"								column="CG_WGT"/>
    	<result property="cgVol"								column="CG_VOL"/>
    </resultMap>
    <resultMap id="cargoFlowDashboardAmount"					type="cargoFlowDashboardItem">
    	<result property="pkgQty"								column="PKG_QTY"/>
    	<result property="cgWgt"								column="CG_WGT"/>
    	<result property="cgVol"								column="CG_VOL"/>
    </resultMap>
    
    <resultMap id="cargoFlowDashboardData"						type="cargoFlowDashboardItem">
    	<result property="vslCallId"							column="VSL_CALL_ID"/>
    	<result property="hatchNo"								column="HATCH_NO"/>
    	<result property="cmmdCd"								column="CMDT_CD"/>
    	<result property="cmmdNm"								column="CMDT_DESC"/>
    	<result property="cgTpCd"								column="CG_TP_CD"/>
    	<result property="cgTpNm"								column="CG_TP_NM"/>
    	<result property="delvTpCd"								column="DELV_TP_CD"/>
    	<result property="delvTpNm"								column="DELV_TP_NM"/>
    	<result property="balMt"								column="BAL_WGT"/>
    	<result property="balQty"								column="BAL_QTY"/>
    	<result property="actMt"								column="ACT_WGT"/>
    	<result property="actQty"								column="ACT_QTY"/>
    	<result property="totalMt"								column="TOTAL_WGT"/>
    	<result property="totalQty"								column="TOTAL_QTY"/>
    	<result property="tobeRecvMt"							column="TOBE_RECV_WGT"/>
    	<result property="tobeRecvQty"							column="TOBE_RECV_QTY"/>
    	<result property="percentage"							column="PERCENTAGE"/>
    	<result property="percentageStr"						column="PERCENTAGE_STR"/>
    	<result property="totalAmt"								column="TOTAL_AMT"/>
    	<result property="actAmt"								column="ACT_AMT"/>
    	<result property="balAmt"								column="BAL_AMT"/>
    	<result property="tobeRecvAmt"							column="TOBE_RECV_AMT"/>
    </resultMap>
	
    <resultMap id="cargoFlowDashboardSummaryData"				type="cargoFlowDashboardItem">
    	<result property="cmmdCd"								column="CMDT_CD"/>
    	<result property="cmmdNm"								column="CMDT_DESC"/>
    	<result property="pkgQty"								column="TOTAL_QTY"/>
    	<result property="cgWgt"								column="TOTAL_WGT"/>
    	<result property="cgVol"								column="TOTAL_M3"/>
    	<result property="dqty"									column="D_QTY"/>
    	<result property="dmt"									column="D_MT"/>
    	<result property="dm3"									column="D_M3"/>
    	<result property="iqty"									column="I_QTY"/>
    	<result property="imt"									column="I_MT"/>
    	<result property="im3"									column="I_M3"/>
    	<result property="cmmdSumTotal"							column="TOTAL_AMT"/>
    	<result property="cmmdSumDirect"						column="DIRECT_AMT"/>
    	<result property="cmmdSumIndirect"						column="INDIRECT_AMT"/>
    	<result property="cmmdSumDirectByBarge"					column="DIRECT_BARGE_AMT"/>
    	<result property="cgTpCd"								column="CG_TP_CD"/>
    	<result property="cgTpNm"								column="CG_TP_NM"/>
    	<result property="percentage"							column="PERCENTAGE"/>
    	<result property="percentageStr"						column="PERCENTAGE_STR"/>
    	<result property="whPercentage"							column="WH_PERCENTAGE"/>
    	<result property="truckPercentage"						column="D_LR_PERCENTAGE"/>
    	<result property="vslPercentage"						column="D_VSL_PERCENTAGE"/>
    </resultMap>
    
    <select id="selectVesselSchedule" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardVesselScheduleMap">
        SELECT /* cargoFlowDashboard.selectVesselSchedule */
	       CAST(PART.HATCH_QTY AS INT)                   					AS HATCH_QTY, 
	       PART.VSL_CD                       					AS VSL_CD,
	       PART.VSL_NM                       					AS VSL_NM,
	       SCH.ARRV_SA_ID                    					AS ARRV_SA_ID,
	       SCH.INB_VOY                       					AS VOYAGE,
	       FORMAT(ETA, 'yyyy/MM/dd HH:mm') 						AS ETA,
	       FORMAT(ETB, 'yyyy/MM/dd HH:mm') 						AS ETB,
	       FORMAT(ETD, 'yyyy/MM/dd HH:mm') 						AS ETD,
	       BERTH_LOC                         					AS BERTH_LOC
	   	FROM 
	   		TMT_VSL_PART 										PART
	   	INNER JOIN 
	   		TMT_VSL_SCH											SCH 
	   		ON PART.VSL_CD 										= SCH.VSL_CD
	 	WHERE 
	 		SCH.VSL_CALL_ID 									= #{vslCallId}
    </select>
    
    <select id="selectLoadingCommoditylist" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardCommodityMap">
        SELECT  /* cargoFlowDashboard.selectLoadingCommoditylist */
        	CMDT_CD,
			CASE F_GET_CMDT_DESC (CMDT_CD)
				WHEN '' THEN CMDT_CD
				ELSE F_GET_CMDT_DESC (CMDT_CD)
			END 												AS CMDT_NM
		FROM 
			TMT_SHIPG_NOTE
		WHERE 
			VSL_CALL_ID 										= #{vslCallId}
			AND STAT_CD 										= 'AP' 
		GROUP BY 
			CMDT_CD
    </select>
    
    <select id="selectLoadingCommodityTotalAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardCommodityAmt">
        SELECT /* cargoFlowDashboard.selectLoadingCommodityTotalAmt */
			CMDT_CD 											AS CMDT_CD,
			SUM (PKG_QTY)										AS PKG_QTY,
			SUM (CG_WGT)										AS CG_WGT,
			SUM (CG_VOL)     									AS CG_VOL
		FROM 
			TMT_SHIPG_NOTE
		WHERE 
			VSL_CALL_ID 										= #{vslCallId} 
			AND STAT_CD 										= 'AP' 
			AND CMDT_CD 										= #{cmmdCd}
		GROUP BY 
			CMDT_CD
    </select>
    
    <select id="selectLoadingCommodityAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardCommodityAmt">
        SELECT /* cargoFlowDashboard.selectLoadingCommodityAmt */
			CMDT_CD 											AS CMDT_CD,
			SUM (PKG_QTY)										AS PKG_QTY,
			SUM (CG_WGT)										AS CG_WGT,
			SUM (CG_VOL)     									AS CG_VOL
		FROM 
			TMT_SHIPG_NOTE
		WHERE 
			VSL_CALL_ID 										= #{vslCallId} 
			AND STAT_CD 										= 'AP' 
			AND CMDT_CD 										= #{cmmdCd}
			AND DELV_TP_CD 										= #{delveryTpCd} 
		GROUP BY 
			CMDT_CD
    </select>
    
    <select id="selectLoadingCommodityPtnr" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardPtnrMap">
		SELECT /* cargoFlowDashboard.selectLoadingCommodityPtnr */
			CASE SHIPG_AGNCY
				WHEN '' THEN 'N/A'
				ELSE SHIPG_AGNCY
			END 												AS SHIPG_AGNCY, 
			CASE FWRD
				WHEN '' THEN 'N/A'
				ELSE FWRD
			END 												AS FWRD, 
			CASE CNS
				WHEN '' THEN 'N/A'
				ELSE CNS
			END 												AS CNS, 
		FROM 
			TMT_SHIPG_NOTE
		WHERE 
			VSL_CALL_ID 										= #{vslCallId} 
			AND STAT_CD 										= 'AP' 
			AND CMDT_CD 										= #{cmmdCd}
    </select>
    
    <select id="selectDischargingCommoditylist" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardCommodityMap">
		SELECT /* cargoFlowDashboard.selectDischargingCommoditylist */
			CMDT_CD, 
			CASE dbo.F_GET_CMDT_DESC(CMDT_CD)
				WHEN '' THEN CMDT_CD
				ELSE dbo.F_GET_CMDT_DESC(CMDT_CD)
			END 												AS CMDT_NM
		FROM 
			TMT_BL
		WHERE 
			VSL_CALL_ID 										= #{vslCallId}
			AND STAT_CD 										= 'AP' 
		GROUP BY 
			CMDT_CD
    </select>
    
    <select id="selectDischargingCommodityTotalAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardCommodityAmt">
        SELECT /* cargoFlowDashboard.selectDischargingCommodityTotalAmt */
			CMDT_CD 											AS CMDT_CD,
			SUM (PKG_QTY)										AS PKG_QTY,
			SUM (CG_WGT)										AS CG_WGT,
			SUM (CG_VOL)     									AS CG_VOL
		FROM 
			TMT_BL
		WHERE 
			VSL_CALL_ID 										= #{vslCallId} 
			AND STAT_CD 										= 'AP' 
			AND CMDT_CD 										= #{cmmdCd}
		GROUP BY 
			CMDT_CD
    </select>
    
    <select id="selectDischargingCommodityAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardCommodityAmt">
		SELECT /* cargoFlowDashboard.selectDischargingCommodityAmt */
		 	A.CMDT_CD        									AS CMDT_CD,
			CASE SUM(A.PKG_QTY)
				WHEN '' THEN 'N/A'
				ELSE SUM (A.PKG_QTY)
			END 												AS PKG_QTY,
			CASE SUM (A.CG_WGT)
				WHEN '' THEN 'N/A'
				ELSE SUM (A.CG_WGT)
			END 												AS CG_WGT,
			CASE SUM(A.CG_VOL)
				WHEN '' THEN 'N/A'
				ELSE SUM(A.CG_VOL)
			END 												AS CG_VOL,
		FROM 
			(SELECT	
				BL.CMDT_CD 										AS CMDT_CD,
				SUM (BL.PKG_QTY) 								AS PKG_QTY,
				SUM (BL.CG_WGT) 								AS CG_WGT,
				SUM (BL.CG_VOL) 								AS CG_VOL
			FROM 
				TMT_BL 											BL
			WHERE     
				VSL_CALL_ID 									= #{vslCallId} 
				AND BL.DELV_TP_CD 								= #{delveryTpCd}
				AND BL.CMDT_CD 									= #{cmmdCd}
				AND BL.STAT_CD 									= 'AP'
			GROUP BY 
				CMDT_CD
		          
			UNION

			SELECT BL.CMDT_CD 									AS CMDT_CD,
				<if test='delveryTpCd != null and delveryTpCd == "D"' >
					SUM (DTL.D_QTY) 							AS PKG_QTY,
					SUM (DTL.D_MT) 								AS CG_WGT,
					SUM (DTL.D_M3) 								AS CG_VOL
				</if>
				<if test='delveryTpCd != null and delveryTpCd == "I"' >
					SUM (DTL.I_QTY) 							AS PKG_QTY,
					SUM (DTL.I_MT) 								AS CG_WGT,
					SUM (DTL.I_M3) 								AS CG_VOL
				</if>
				FROM 
					TMT_BL BL
				LEFT JOIN 
					TMT_DO DO
						ON 	BL.VSL_CD 							= DO.VSL_CD
						AND BL.CALL_YEAR 						= DO.CALL_YEAR
						AND BL.CALL_SEQ 						= DO.CALL_SEQ
						AND BL.VSL_CALL_ID 						= DO.VSL_CALL_ID
						AND BL.BL_NO 							= DO.BL_NO
						AND BL.CMDT_CD 							= DO.CMDT_CD
				LEFT JOIN 
					TMT_DO_DTL DTL
						ON DTL.VSL_CD 							= DO.VSL_CD
						AND DTL.CALL_YEAR 						= DO.CALL_YEAR
						AND DTL.CALL_SEQ 						= DO.CALL_SEQ
						AND DTL.VSL_CALL_ID 					= DO.VSL_CALL_ID
						AND DTL.BL_NO 							= DO.BL_NO
				WHERE     
					BL.VSL_CALL_ID 								= #{vslCallId} 
					AND BL.DELV_TP_CD 							= 'B'
					AND BL.CMDT_CD 								= #{cmmdCd}
					AND BL.STAT_CD 								= 'AP'
			GROUP BY 
				BL.CMDT_CD
			) 													A
			GROUP BY 
				A.CMDT_CD,
				A.PKG_QTY,
				A.CG_WGT,
				A.CG_VOL
    </select>
    
    <select id="selectDischargingCommodityPtnr" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardPtnrMap">
		SELECT  /* cargoFlowDashboard.selectDischargingCommodityPtnr */				
			CASE 
				(SELECT 
					ARRV_SA_ID
		        FROM 
					TMT_VSL_SCH
		        WHERE 
					VSL_CALL_ID 	= #{vslCallId})
				WHEN '' THEN 'N/A'
				ELSE 
					(SELECT 
						ARRV_SA_ID
					FROM 
						TMT_VSL_SCH
					WHERE 
						VSL_CALL_ID 	= #{vslCallId})
				END 											AS SHIPG_AGNCY,						
			   	CASE FWRD
			   		WHEN '' THEN 'N/A'
					ELSE FWRD
			   	END 											AS FWRD,
			   	CASE CNSNE
			   		WHEN '' THEN 'N/A'
					ELSE CNSNE
			   	END 											AS CNS
		FROM 
			TMT_BL
		WHERE 
			VSL_CALL_ID 										= #{vslCallId} 
			AND STAT_CD 										= 'AP' 
			AND CMDT_CD											= #{cmmdCd}
    </select>    
    
    <!-- Vessel (Discharging)-->
    <select id="selectVesselTotalAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardVesselHatchData">
		  SELECT MAIN.CMDT_CD AS CMDT_CD,
		         DECODE (dbo.F_GET_CMDT_DESC (MAIN.CMDT_CD),
		                 '', MAIN.CMDT_CD,
		                 dbo.F_GET_CMDT_DESC (MAIN.CMDT_CD))
		            AS CMDT_NM,
		         DECODE (dbo.F_CM_CODE_NM ('MT', 'CGTP', MAIN.CG_TP_CD),
		                 '', 'N/A',
		                 dbo.F_CM_CODE_NM ('MT', 'CGTP', MAIN.CG_TP_CD))
		            AS CG_TP_NM,
		         DECODE (dbo.F_CM_CODE_NM ('MT', 'DELVTP', MAIN.DELV_TP_CD),
		                 '', 'N/A',
		                 dbo.F_CM_CODE_NM ('MT', 'DELVTP', MAIN.DELV_TP_CD))
		            AS DELV_TP_NM,
		         DECODE (SUM (MAIN.PKG_QTY), '', '0', SUM (MAIN.PKG_QTY)) AS PKG_QTY,
		         DECODE (SUM (MAIN.CG_WGT), '', '0', SUM (MAIN.CG_WGT)) AS CG_WGT,
		         DECODE (SUM (MAIN.CG_VOL), '', '0', SUM (MAIN.CG_VOL)) AS CG_VOL
        <if test='opClassCd != null and opClassCd == "I"' >
	        FROM TMT_BL MAIN
		         INNER JOIN TMT_BL_DTL DTL
        </if>
        <if test='opClassCd != null and opClassCd == "E"' >
	        FROM TMT_SHIPG_NOTE MAIN
		         INNER JOIN TMT_SHIPG_NOTE_DTL DTL
        </if>
	            	ON MAIN.VSL_CALL_ID = DTL.VSL_CALL_ID
	               AND MAIN.VSL_CD = DTL.VSL_CD
	               AND MAIN.CALL_YEAR = DTL.CALL_YEAR
	               AND MAIN.CALL_SEQ = DTL.CALL_SEQ
	               AND MAIN.MF_DOC_ID = DTL.MF_DOC_ID
	               <if test='opClassCd != null and opClassCd == "I"' >
	               AND MAIN.BL_NO = DTL.BL_NO
	               </if>
	               <if test='opClassCd != null and opClassCd == "E"' >
	               AND MAIN.SHIPG_NOTE_NO = DTL.SHIPG_NOTE_NO
	               </if>
	    WHERE 1=1
	    AND MAIN.VSL_CALL_ID  = #{vslCallId} 
	    AND DTL.HATCH_NO  = #{hatchNo} 
	    GROUP BY MAIN.CMDT_CD, MAIN.CG_TP_CD, MAIN.DELV_TP_CD
    </select> 
    
    <select id="selectVesselHandledAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardAmount">
		  SELECT DECODE (SUM (MAIN.PKG_QTY), '', '0', SUM (MAIN.PKG_QTY)) AS PKG_QTY,
		       DECODE (SUM (MAIN.CG_WGT), '', '0', SUM (MAIN.CG_WGT)) AS CG_WGT,
		       DECODE (SUM (MAIN.CG_VOL), '', '0', SUM (MAIN.CG_VOL)) AS CG_VOL
		  FROM TMT_JOB MAIN
		  WHERE     MAIN.VSL_CALL_ID = #{vslCallId}
		       AND MAIN.HATCH_NO = #{hatchNo} 
		       <if test='opClassCd != null and opClassCd == "I"' >
		       AND MAIN.JOB_TP_CD = 'DS'
		       </if>
		       <if test='opClassCd != null and opClassCd == "E"' >
		       AND MAIN.JOB_TP_CD = 'LD'
		       </if>
		       AND MAIN.JOB_PURP_CD = 'VA'
	</select> 
    
     <!-- Warehouse -->
     <select id="selectYardTotalAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardAmount">
		  SELECT
               DECODE (SUM (MST.PKG_QTY), '', '0', SUM (MST.PKG_QTY)) AS PKG_QTY,
               DECODE (SUM (MST.CG_WGT), '', '0', SUM (MST.CG_WGT)) AS CG_WGT,
               DECODE (SUM (MST.CG_VOL), '', '0', SUM (MST.CG_VOL)) AS CG_VOL
          FROM TMT_CG_MST MST 
           <if test='opClassCd != null and opClassCd == "I"' >
             INNER JOIN TMT_BL MAIN
	             ON MST.VSL_CALL_ID = MAIN.VSL_CALL_ID
	             	AND MST.MF_DOC_ID = MAIN.MF_DOC_ID
	                AND MST.BL_NO = MAIN.BL_NO
	          INNER JOIN TMT_BL_DTL DTL
           </if>
            <if test='opClassCd != null and opClassCd == "E"' >
             INNER JOIN TMT_SHIPG_NOTE MAIN
	             ON MST.VSL_CALL_ID = MAIN.VSL_CALL_ID
	             AND MST.MF_DOC_ID = MAIN.MF_DOC_ID
	             AND MST.SHIPG_NOTE_NO = MAIN.SHIPG_NOTE_NO
	          INNER JOIN TMT_SHIPG_NOTE_DTL DTL
           </if>
             ON MAIN.VSL_CALL_ID = DTL.VSL_CALL_ID
                AND MAIN.VSL_CD = DTL.VSL_CD
                AND MAIN.CALL_YEAR = DTL.CALL_YEAR
                AND MAIN.CALL_SEQ = DTL.CALL_SEQ
                AND MAIN.MF_DOC_ID = DTL.MF_DOC_ID
            <if test='opClassCd != null and opClassCd == "I"' >
            	AND MAIN.BL_NO = DTL.BL_NO
            </if>
            <if test='opClassCd != null and opClassCd == "E"' >
            	AND MAIN.SHIPG_NOTE_NO = DTL.SHIPG_NOTE_NO
            </if>    
          WHERE DTL.VSL_CALL_ID = #{vslCallId} 
               AND DTL.HATCH_NO = #{hatchNo}
    </select> 
     <select id="selectYardHandledAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardAmount">
		  SELECT DECODE (SUM (MAIN.PKG_QTY), '', '0', SUM (MAIN.PKG_QTY)) AS PKG_QTY,
		       DECODE (SUM (MAIN.CG_WGT), '', '0', SUM (MAIN.CG_WGT)) AS CG_WGT,
		       DECODE (SUM (MAIN.CG_VOL), '', '0', SUM (MAIN.CG_VOL)) AS CG_VOL
		  FROM TMT_JOB MAIN
		  WHERE     MAIN.VSL_CALL_ID = #{vslCallId}
		       AND MAIN.HATCH_NO = #{hatchNo} 
		       <if test='opClassCd != null and opClassCd == "I"' >
		       AND MAIN.JOB_TP_CD = 'DS'
		       </if>
		       <if test='opClassCd != null and opClassCd == "E"' >
		       AND MAIN.JOB_TP_CD = 'LD'
		       </if>
		       AND MAIN.JOB_PURP_CD = 'AW'
    </select> 
      <!-- Gate -->
    
    <!-- discharge -->  
	<select id="selectVesselDischargedAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardData">
    	/*cargoFlowDashboard.selectVesselDischargedAmt*/
    	WITH DISCHARGED_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            B.CG_TP_CD,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY
		    FROM    TMT_JOB J
		            INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'DS'
		            AND J.JOB_PURP_CD IN ('VG', 'VA', 'VB')
		    GROUP BY    J.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                J.HATCH_NO 
		
		),
		
		DOCUMENT_INFO AS
		(
		    SELECT  D.VSL_CALL_ID,
		            B.CG_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'CGTP', B.CG_TP_CD) AS CG_TP_NM,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            D.HATCH_NO,
		            SUM(D.CG_WGT) AS CG_WGT,
		            SUM(D.PKG_QTY) AS PKG_QTY,
		            STRING_AGG(B.BL_NO, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, B.CMDT_CD, D.HATCH_NO) AS BL_NO
		    FROM    TMT_BL_DTL D 
		            INNER JOIN TMT_BL B ON D.VSL_CALL_ID = B.VSL_CALL_ID AND D.BL_NO = B.BL_NO
		    
		    WHERE   D.VSL_CALL_ID = #{vslCallId}
		            AND B.STAT_CD = 'AP'
		            AND D.HATCH_NO IS NOT NULL
		    GROUP BY    D.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                D.HATCH_NO 
		
		)
		
		SELECT  D.VSL_CALL_ID,
		        D.CG_TP_CD ,
		        D.CG_TP_NM,
		        D.DELV_TP_CD,
		        D.DELV_TP_NM,
		        D.CMDT_CD,
		        ISNULL(D.CMDT_DESC, D.CMDT_CD) AS CMDT_DESC,
		        D.HATCH_NO,
		        ISNULL(D.CG_WGT, 0) AS TOTAL_WGT,
		        ISNULL(D.PKG_QTY, 0) AS TOTAL_QTY,
		        ISNULL(J.CG_WGT, 0) AS ACT_WGT,
		        ISNULL(J.PKG_QTY, 0) AS ACT_QTY,
		        
		        ISNULL(D.CG_WGT, 0) - ISNULL(J.CG_WGT, 0) AS BAL_WGT,
		        ISNULL(D.PKG_QTY, 0) -  ISNULL(J.PKG_QTY, 0) AS BAL_QTY,
		        0 AS TOBE_RECV_WGT,
        		0 AS TOBE_RECV_QTY,
		        CASE
		            WHEN D.PKG_QTY != 0 THEN ROUND((ISNULL(J.PKG_QTY, 0)/CAST(D.PKG_QTY AS FLOAT)), 3)
		            ELSE ROUND((ISNULL(J.CG_WGT, 0)/D.CG_WGT), 3)
		        END AS PERCENTAGE,
		        
		         CASE
		            WHEN D.PKG_QTY != 0 THEN FORMAT(ROUND((ISNULL(J.PKG_QTY, 0)/CAST(D.PKG_QTY AS FLOAT)), 3)*100, 'N3', 'en-us') + '%'
		            ELSE FORMAT(ROUND((ISNULL(J.CG_WGT, 0)/D.CG_WGT), 3)*100 , 'N3', 'en-us')+ '%'
		        END AS PERCENTAGE_STR
		        
		FROM    DOCUMENT_INFO D
		        LEFT OUTER JOIN DISCHARGED_INFO J
		        ON J.VSL_CALL_ID = D.VSL_CALL_ID
		            AND J.CMDT_CD = D.CMDT_CD
		            AND J.HATCH_NO = D.HATCH_NO
		WHERE   D.VSL_CALL_ID = #{vslCallId}
		        AND D.HATCH_NO = #{hatchNo}
    </select>
    
    <select id="selectVesselDischargedAmtByVsl" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardData">
    	/*cargoFlowDashboard.selectVesselDischargedAmtByVsl*/
        WITH DISCHARGED_INFO AS
        (
            SELECT  J.VSL_CALL_ID,
                    J.HATCH_NO,
                    SUM(J.CG_WGT) AS CG_WGT,
                    SUM(J.CG_VOL) AS CG_VOL,
                    SUM(J.PKG_QTY) AS PKG_QTY
            FROM    TMT_JOB J
                    INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
            
            WHERE   J.VSL_CALL_ID = #{vslCallId}
                    AND J.JOB_TP_CD = 'DS'
                    AND J.JOB_PURP_CD IN ('VG', 'VA', 'VB')
            GROUP BY    J.VSL_CALL_ID,
                        J.HATCH_NO 
        
        ),
        
        DOCUMENT_INFO AS
        (
            SELECT  D.VSL_CALL_ID,
                    D.HATCH_NO,
                    SUM(D.CG_WGT) AS CG_WGT,
                    SUM(D.CG_VOL) AS CG_VOL,
                    SUM(D.PKG_QTY) AS PKG_QTY,
                    STRING_AGG(B.BL_NO, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, D.HATCH_NO) AS BL_NO
            FROM    TMT_BL_DTL D 
                    INNER JOIN TMT_BL B ON D.VSL_CALL_ID = B.VSL_CALL_ID AND D.BL_NO = B.BL_NO
            
            WHERE   D.VSL_CALL_ID = #{vslCallId}
                    AND B.STAT_CD = 'AP'
                    AND D.HATCH_NO IS NOT NULL
            GROUP BY    D.VSL_CALL_ID,
                        D.HATCH_NO 
        
        )
        
        SELECT  D.VSL_CALL_ID,
                D.HATCH_NO,
                <choose>
                	<when test="unitTp == 'QTY'">
                		ISNULL(D.PKG_QTY, 0) AS TOTAL_AMT,
                		ISNULL(J.PKG_QTY, 0) AS ACT_AMT,
                		ISNULL(D.PKG_QTY, 0) -  ISNULL(J.PKG_QTY, 0) AS BAL_AMT,
                		0 AS TOBE_RECV_AMT,
                	</when>
                	<when test="unitTp == 'M3'">
                		ISNULL(D.CG_VOL, 0) AS TOTAL_AMT,
                		ISNULL(J.CG_VOL, 0) AS ACT_AMT,
                		ISNULL(D.CG_VOL, 0) -  ISNULL(J.CG_VOL, 0) AS BAL_AMT,
                		0 AS TOBE_RECV_AMT,
                	</when>
                	<otherwise>
                		ISNULL(D.CG_WGT, 0) AS TOTAL_AMT,
                		ISNULL(J.CG_WGT, 0) AS ACT_AMT,
                		ISNULL(D.CG_WGT, 0) -  ISNULL(J.CG_WGT, 0) AS BAL_AMT,
                		0 AS TOBE_RECV_AMT,
                	</otherwise>
               	</choose>
                
                CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(D.PKG_QTY, 0) > 0
				        	THEN ROUND((ISNULL(J.PKG_QTY, 0)/CAST(D.PKG_QTY AS FLOAT)), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(D.CG_VOL, 0) > 0
				        	THEN ROUND(( ISNULL(J.CG_VOL, 0)/ISNULL(D.CG_VOL, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(D.CG_WGT, 0) > 0
				        	THEN ROUND(( ISNULL(J.CG_WGT, 0)/ISNULL(D.CG_WGT, 0)), 3)
	                	</otherwise>
                	</choose>
				    ELSE  0
				END AS PERCENTAGE,
				
				CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(D.PKG_QTY, 0) > 0
				        	THEN FORMAT(ROUND((ISNULL(J.PKG_QTY, 0)/CAST(D.PKG_QTY AS FLOAT)), 3)*100, 'N3', 'en-us') + '%'
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(D.CG_VOL, 0) > 0
				        	THEN FORMAT(ROUND(( ISNULL(J.CG_VOL, 0)/ISNULL(D.CG_VOL, 0)), 3)*100, 'N3', 'en-us') + '%'
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(D.CG_WGT, 0) > 0
				        	THEN FORMAT(ROUND(( ISNULL(J.CG_WGT, 0)/ISNULL(D.CG_WGT, 0)), 3)*100, 'N3', 'en-us') + '%'
	                	</otherwise>
                	</choose>
				    ELSE  '0.000%'
				END  AS PERCENTAGE_STR
                
        FROM    DOCUMENT_INFO D
                LEFT OUTER JOIN DISCHARGED_INFO J
                ON J.VSL_CALL_ID = D.VSL_CALL_ID
                    AND J.HATCH_NO = D.HATCH_NO
        WHERE   D.VSL_CALL_ID = #{vslCallId}
                AND D.HATCH_NO = #{hatchNo}
    </select>
    
    <select id="selectWarehouseDischargedAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardData">
    	/*cargoFlowDashboard.selectWarehouseDischargedAmt*/
    	WITH DISCHARGED_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            B.CG_TP_CD,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY
		    FROM    TMT_JOB J
		            INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'DS'
		            AND J.JOB_PURP_CD IN ('VG', 'VA', 'VB')
		    GROUP BY    J.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                J.HATCH_NO
		),
		
		AW_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            B.CG_TP_CD,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY
		    FROM    TMT_JOB J
		            INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'DS'
		            AND J.JOB_PURP_CD IN ('AW')
		    GROUP BY    J.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                J.HATCH_NO
		),
		
		WG_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            B.CG_TP_CD,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY
		    FROM    TMT_JOB J
		            INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'LO'
		            AND J.JOB_PURP_CD IN ('WG')
		    GROUP BY    J.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                J.HATCH_NO
		),
		
		DOCUMENT_INFO AS
		(
		    SELECT  D.VSL_CALL_ID,
		            B.CG_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'CGTP', B.CG_TP_CD) AS CG_TP_NM,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            D.HATCH_NO,
		            SUM(D.CG_WGT) AS CG_WGT,
		            SUM(D.PKG_QTY) AS PKG_QTY,
		            STRING_AGG(B.BL_NO, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, B.CMDT_CD, D.HATCH_NO) AS BL_NO
		    FROM    TMT_BL_DTL D 
		            INNER JOIN TMT_BL B ON D.VSL_CALL_ID = B.VSL_CALL_ID AND D.BL_NO = B.BL_NO
		            LEFT OUTER JOIN TMT_DO O ON D.VSL_CALL_ID = O.VSL_CALL_ID AND D.BL_NO = O.BL_NO
		    
		    WHERE   D.VSL_CALL_ID = #{vslCallId}
		            AND B.STAT_CD = 'AP'
		            AND D.HATCH_NO IS NOT NULL
		    GROUP BY    D.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                D.HATCH_NO 
		
		)
		
		SELECT  DOC.VSL_CALL_ID,
		        DOC.CG_TP_CD,
		        DOC.CG_TP_NM,
		        DOC.DELV_TP_CD,
		        DOC.DELV_TP_NM,
		        DOC.CMDT_CD,
		        ISNULL(DOC.CMDT_DESC, DOC.CMDT_CD) AS CMDT_DESC,
		        DOC.HATCH_NO,
		        ISNULL(DOC.CG_WGT, 0) - (ISNULL(AW.CG_WGT, 0)) AS TOBE_RECV_WGT,
		        ISNULL(DOC.PKG_QTY, 0) - (ISNULL(AW.PKG_QTY, 0)) AS TOBE_RECV_QTY,
		        
		        ISNULL(AW.CG_WGT, 0) AS TOTAL_WGT,
		        ISNULL(AW.PKG_QTY, 0) AS TOTAL_QTY,
		        ISNULL(WG.CG_WGT, 0) AS ACT_WGT,
		        ISNULL(WG.PKG_QTY, 0) AS ACT_QTY,
		        
		        (ISNULL(AW.CG_WGT, 0)) - ISNULL(WG.CG_WGT, 0) AS BAL_WGT,
		        (ISNULL(AW.PKG_QTY, 0)) - ISNULL(WG.PKG_QTY, 0) AS BAL_QTY,
		        
		        CASE
		            WHEN ISNULL(AW.PKG_QTY, 0) != 0
		                THEN ROUND((ISNULL(WG.PKG_QTY, 0)/CAST((ISNULL(AW.PKG_QTY, 0)) AS FLOAT)), 3)
		            
		            WHEN ISNULL(AW.CG_WGT, 0) != 0
		                THEN ROUND((ISNULL(WG.CG_WGT, 0)/(ISNULL(AW.CG_WGT, 0))), 3)
		            ELSE 0
		        END AS PERCENTAGE,
		        CASE
		            WHEN ISNULL(AW.PKG_QTY, 0) != 0
		                THEN FORMAT(ROUND((ISNULL(WG.PKG_QTY, 0)/CAST((ISNULL(AW.PKG_QTY, 0)) AS FLOAT)), 3) * 100, 'N3', 'en-us') + '%'
		            
		            WHEN ISNULL(AW.CG_WGT, 0) != 0
		                THEN FORMAT(ROUND((ISNULL(WG.CG_WGT, 0)/(ISNULL(AW.CG_WGT, 0))), 3) * 100, 'N3', 'en-us') + '%'
		            ELSE FORMAT(0 * 100, 'N3', 'en-us') + '%'
		        END AS PERCENTAGE_STR
		        
		FROM    DOCUMENT_INFO DOC
		        INNER JOIN DISCHARGED_INFO J
		            ON J.VSL_CALL_ID = DOC.VSL_CALL_ID
		                AND J.CMDT_CD = DOC.CMDT_CD
		                AND J.HATCH_NO = DOC.HATCH_NO
		        LEFT OUTER JOIN AW_INFO AW
		            ON  DOC.VSL_CALL_ID = AW.VSL_CALL_ID
		                AND DOC.CMDT_CD = AW.CMDT_CD
		        LEFT OUTER JOIN WG_INFO WG
		            ON  DOC.VSL_CALL_ID = WG.VSL_CALL_ID
		                AND DOC.CMDT_CD = WG.CMDT_CD
		
		WHERE   DOC.VSL_CALL_ID = #{vslCallId}
		        AND DOC.HATCH_NO = #{hatchNo}
    </select>
    <select id="selectGateDischargedAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardData">
    	/*cargoFlowDashboard.selectWarehouseDischargedAmt*/
    	WITH DISCHARGED_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            B.CG_TP_CD,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY
		    FROM    TMT_JOB J
		            INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'DS'
		            AND J.JOB_PURP_CD IN ('VG', 'VA', 'VB')
		    GROUP BY    J.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                J.HATCH_NO
		),
		
		VG_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            B.CG_TP_CD,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY
		    FROM    TMT_JOB J
		            INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'DS'
		            AND J.JOB_PURP_CD IN ('VG')
		    GROUP BY    J.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                J.HATCH_NO
		),
		
		WG_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            B.CG_TP_CD,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY
		    FROM    TMT_JOB J
		            INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'LO'
		            AND J.JOB_PURP_CD IN ('WG')
		    GROUP BY    J.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                J.HATCH_NO
		),
		
		IO_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            B.CG_TP_CD,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY
		    FROM    TMT_JOB J
		            INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'GO'
		            AND J.JOB_PURP_CD IN ('IO')
		    GROUP BY    J.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                J.HATCH_NO
		),
		
		DOCUMENT_INFO AS
		(
		    SELECT  D.VSL_CALL_ID,
		            B.CG_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'CGTP', B.CG_TP_CD) AS CG_TP_NM,
		            B.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', B.DELV_TP_CD) AS DELV_TP_NM,
		            B.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,
		            D.HATCH_NO,
		            SUM(D.CG_WGT) AS CG_WGT,
		            SUM(D.PKG_QTY) AS PKG_QTY,
		            STRING_AGG(B.BL_NO, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, B.CMDT_CD, D.HATCH_NO) AS BL_NO
		    FROM    TMT_BL_DTL D 
		            INNER JOIN TMT_BL B ON D.VSL_CALL_ID = B.VSL_CALL_ID AND D.BL_NO = B.BL_NO
		            LEFT OUTER JOIN TMT_DO O ON D.VSL_CALL_ID = O.VSL_CALL_ID AND D.BL_NO = O.BL_NO
		    
		    WHERE   D.VSL_CALL_ID = #{vslCallId}
		            AND B.STAT_CD = 'AP'
		            AND D.HATCH_NO IS NOT NULL
		    GROUP BY    D.VSL_CALL_ID,
		                B.CG_TP_CD,
		                B.DELV_TP_CD,
		                B.CMDT_CD,
		                D.HATCH_NO 
		
		)
		
		SELECT  DOC.VSL_CALL_ID,
		        DOC.CG_TP_CD,
		        DOC.CG_TP_NM,
		        DOC.DELV_TP_CD,
		        DOC.DELV_TP_NM,
		        DOC.CMDT_CD,
		        ISNULL(DOC.CMDT_DESC, DOC.CMDT_CD) AS CMDT_DESC,
		        DOC.HATCH_NO,
		        
		        ISNULL(DOC.CG_WGT, 0) - (ISNULL(VG.CG_WGT, 0) + ISNULL(WG.CG_WGT, 0)) AS TOBE_RECV_WGT,
		        ISNULL(DOC.PKG_QTY, 0) - (ISNULL(VG.PKG_QTY, 0) + ISNULL(WG.PKG_QTY, 0)) AS TOBE_RECV_QTY,
		        
		        ISNULL(VG.CG_WGT, 0) + ISNULL(WG.CG_WGT, 0) AS TOTAL_WGT,
		        ISNULL(VG.PKG_QTY, 0) + ISNULL(WG.PKG_QTY, 0) AS TOTAL_QTY,
		        ISNULL(IO.CG_WGT, 0) AS ACT_WGT,
		        ISNULL(IO.PKG_QTY, 0) AS ACT_QTY,
		        
		        (ISNULL(VG.CG_WGT, 0) + ISNULL(WG.CG_WGT, 0)) - ISNULL(IO.CG_WGT, 0) AS BAL_WGT,
		        (ISNULL(VG.PKG_QTY, 0) + ISNULL(WG.PKG_QTY, 0)) - ISNULL(IO.PKG_QTY, 0) AS BAL_QTY,
		        
		        CASE
		            WHEN ISNULL(VG.PKG_QTY, 0) != 0 OR ISNULL(WG.PKG_QTY, 0) != 0
		                THEN ROUND((ISNULL(IO.PKG_QTY, 0)/( ISNULL(VG.PKG_QTY, 0) + ISNULL(WG.PKG_QTY, 0))), 3)
		            
		            WHEN ISNULL(VG.CG_WGT, 0) > 0 OR ISNULL(WG.CG_WGT, 0) > 0
		                THEN ROUND((ISNULL(IO.CG_WGT, 0)/( ISNULL(VG.CG_WGT, 0) + ISNULL(WG.CG_WGT, 0))), 3)
		            ELSE 0
		        END AS PERCENTAGE,
		        CASE
		            WHEN ISNULL(VG.PKG_QTY, 0) != 0 OR ISNULL(WG.PKG_QTY, 0) != 0
		                THEN FORMAT(ROUND((ISNULL(IO.PKG_QTY, 0)/( ISNULL(VG.PKG_QTY, 0) + ISNULL(WG.PKG_QTY, 0))), 3) *100, 'N3', 'en-us') + '%'
		            
		            WHEN ISNULL(VG.CG_WGT, 0) > 0 OR ISNULL(WG.CG_WGT, 0) > 0
		                THEN FORMAT(ROUND((ISNULL(IO.CG_WGT, 0)/( ISNULL(VG.CG_WGT, 0) + ISNULL(WG.CG_WGT, 0))), 3) *100, 'N3', 'en-us') + '%'
		            ELSE FORMAT(0 *100, 'N3', 'en-us') + '%'
		        END AS PERCENTAGE_STR
		        
		FROM    DOCUMENT_INFO DOC
		        INNER JOIN DISCHARGED_INFO J
		            ON J.VSL_CALL_ID = DOC.VSL_CALL_ID
		                AND J.CMDT_CD = DOC.CMDT_CD
		                AND J.HATCH_NO = DOC.HATCH_NO
		        LEFT OUTER JOIN VG_INFO VG
		            ON  DOC.VSL_CALL_ID = VG.VSL_CALL_ID
		                AND DOC.CMDT_CD = VG.CMDT_CD
		        LEFT OUTER JOIN WG_INFO WG
		            ON  DOC.VSL_CALL_ID = WG.VSL_CALL_ID
		                AND DOC.CMDT_CD = WG.CMDT_CD
		        LEFT OUTER JOIN IO_INFO IO
		            ON  DOC.VSL_CALL_ID = IO.VSL_CALL_ID
		                AND DOC.CMDT_CD = IO.CMDT_CD
		
		WHERE   DOC.VSL_CALL_ID = #{vslCallId}
		        AND DOC.HATCH_NO = #{hatchNo}
    </select>
    
    <select id="selectDischargedSummaryByCmdt_V1" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardSummaryData">
    	/*cargoFlowDashboard.selectDischargedSummaryByCmdt*/
    	WITH TOTAL_BL_AMT AS 
		(         
		    SELECT 
		            B.CMDT_CD,
		            SUM(B.CG_WGT) AS CG_WGT,
		            SUM(B.CG_VOL) AS CG_VOL,
		            SUM(B.PKG_QTY) AS PKG_QTY,
		            STRING_AGG(B.BL_NO, ', ') WITHIN GROUP (ORDER BY B.CMDT_CD) AS BL_NO
		    FROM    TMT_BL B
		    WHERE   VSL_CALL_ID = #{vslCallId}
		            AND STAT_CD = 'AP'
		    GROUP BY CMDT_CD
		),
		
		SUM_BY_DELVTP AS
		(
		    SELECT 
		            B.CMDT_CD,
		            SUM(D.D_MT) AS D_MT,
		            SUM(D.D_M3) AS D_M3,
		            SUM(D.D_QTY) AS D_QTY,
		            SUM(D.I_MT) AS I_MT,
		            SUM(D.I_M3) AS I_M3,
		            SUM(D.I_QTY) AS I_QTY,
		            STRING_AGG(B.BL_NO, ', ') WITHIN GROUP (ORDER BY B.CMDT_CD) AS BL_NO
		    FROM    TMT_BL B
		            INNER JOIN TMT_DO D ON B.VSL_CALL_ID = D.VSL_CALL_ID AND B.BL_NO = D.BL_NO
		    WHERE   B.VSL_CALL_ID = #{vslCallId}
		            AND B.STAT_CD = 'AP'
		    GROUP BY B.CMDT_CD
		)
		
		SELECT  T.CMDT_CD,
		        ISNULL(dbo.F_GET_CMDT_DESC (T.CMDT_CD), T.CMDT_CD)  AS CMDT_DESC,
		        T.CG_WGT AS TOTAL_WGT,
		        T.CG_VOL AS TOTAL_M3,
		        T.PKG_QTY AS TOTAL_QTY,
		        ISNULL(D.D_MT, 0) AS D_MT,
		        ISNULL(D.D_M3, 0) AS D_M3,
		        ISNULL(D.D_QTY, 0) AS D_QTY,
		        ISNULL(D.I_MT, 0) AS I_MT,
		        ISNULL(D.I_M3, 0) AS I_M3,
		        ISNULL(D.I_QTY, 0) AS I_QTY,
        		'T: ' + T.PKG_QTY + '/ ' + T.CG_WGT + '/ ' + T.CG_VOL as TOTAL_AMT,
        		'D: ' + ISNULL(D.D_QTY, 0) + '/ ' + ISNULL(D.D_MT, 0) + '/ ' + ISNULL(D.D_M3, 0) as DIRECT_AMT,
        		'I: ' + ISNULL(D.I_QTY, 0) + '/ ' + ISNULL(D.I_MT, 0) + '/ ' + ISNULL(D.I_M3, 0) as INDIRECT_AMT
		         
		FROM    TOTAL_BL_AMT T 
		        LEFT OUTER JOIN SUM_BY_DELVTP D ON T.CMDT_CD = D.CMDT_CD
		ORDER BY T.CMDT_CD
    </select>
    
    <select id="selectDischargedSummaryByCmdt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardSummaryData">
    	WITH DOC_AMT_BY_CMDT AS
        (
            SELECT 
                    B.CG_TP_CD,
                    B.CMDT_CD,
                    SUM(D.D_MT) AS D_MT,
                    SUM(D.D_M3) AS D_M3,
                    SUM(D.D_QTY) AS D_QTY,
                    SUM(D.I_MT) AS I_MT,
                    SUM(D.I_M3) AS I_M3,
                    SUM(D.I_QTY) AS I_QTY,
                    
                    SUM(D.I_LR_MT) + SUM(D.D_LR_MT) as LR_MT,
                    SUM(D.I_LR_MT) AS I_LR_MT,
                    SUM(D.I_LR_QTY) AS I_LR_QTY,
                    
                    SUM(D.D_LR_MT) AS D_LR_MT,
                    SUM(D.D_LR_QTY) AS D_LR_QTY,
                    
                    SUM(D.D_VSL_MT) AS D_VSL_MT,
                    SUM(D.D_VSL_QTY) AS D_VSL_QTY,
                    
                    SUM(B.CG_WGT) AS CG_WGT,
                    SUM(B.CG_VOL) AS CG_VOL,
                    SUM(B.PKG_QTY) AS PKG_QTY,
                    
                    STRING_AGG(B.BL_NO, ', ') WITHIN GROUP (ORDER BY B.CMDT_CD) AS BL_NO
            FROM    TMT_BL B
                    LEFT OUTER JOIN TMT_DO D ON B.VSL_CALL_ID = D.VSL_CALL_ID AND B.BL_NO = D.BL_NO
            WHERE   B.VSL_CALL_ID = #{vslCallId}
                    AND B.STAT_CD = 'AP'
                    
            GROUP BY B.CG_TP_CD, B.CMDT_CD
        ),
        
        DISCHARGED_INFO AS
        (
            SELECT  J.VSL_CALL_ID,
                    B.CG_TP_CD,
                    B.CMDT_CD,
                    dbo.F_GET_CMDT_DESC (B.CMDT_CD) AS CMDT_DESC,

                    SUM(case when J.JOB_PURP_CD IN ('VG') then J.CG_WGT else 0 end) AS D_LR_MT,
                    SUM(case when J.JOB_PURP_CD IN ('VG') then J.PKG_QTY else 0 end) AS D_LR_QTY,
                    
                    SUM(case when J.JOB_PURP_CD IN ('VB', 'AB') then J.CG_WGT else 0 end) AS D_VSL_MT,
                    SUM(case when J.JOB_PURP_CD IN ('VB', 'AB') then J.PKG_QTY else 0 end) AS D_VSL_QTY,
                    
                    SUM(case when J.JOB_PURP_CD IN ('AW') then J.CG_WGT else 0 end) AS I_LR_MT,
                    SUM(case when J.JOB_PURP_CD IN ('AW') then J.PKG_QTY else 0 end) AS I_LR_QTY,
                    
                    SUM(case when J.JOB_PURP_CD IN ('VG', 'VB', 'VA') then J.CG_WGT else 0 end) AS CG_WGT,
                    SUM(case when J.JOB_PURP_CD IN ('VG', 'VB', 'VA') then J.PKG_QTY else 0 end) AS PKG_QTY

            FROM    TMT_JOB J
                    INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
            
            WHERE   J.VSL_CALL_ID = #{vslCallId}
                    AND J.JOB_TP_CD = 'DS'
            GROUP BY    J.VSL_CALL_ID,
                        B.CG_TP_CD,
                        B.CMDT_CD
        
        )
        
        SELECT  DOC.CMDT_CD,
                DOC.CG_TP_CD,
                ISNULL(dbo.F_GET_CMDT_DESC (DOC.CMDT_CD), DOC.CMDT_CD)  AS CMDT_DESC,
                dbo.F_CM_CODE_NM ('MT', 'CGTP', DOC.CG_TP_CD)  AS CG_TP_NM,
                DOC.CG_WGT AS TOTAL_WGT,
                DOC.CG_VOL AS TOTAL_M3,
                DOC.PKG_QTY AS TOTAL_QTY,
                CASE
                    WHEN DOC.CG_TP_CD = 'BBK' AND ISNULL(DOC.PKG_QTY, 0) > 0
                        THEN ROUND(( ISNULL(OPE.PKG_QTY, 0)/ISNULL(DOC.PKG_QTY, 0)), 3)
                    
                    ELSE  ROUND(( ISNULL(OPE.CG_WGT, 0)/ISNULL(DOC.CG_WGT, 0)), 3)
                END AS PERCENTAGE,
                CASE
                    WHEN DOC.CG_TP_CD = 'BBK' AND ISNULL(DOC.PKG_QTY, 0) > 0
                        THEN FORMAT((ROUND(( ISNULL(OPE.PKG_QTY, 0)/ISNULL(DOC.PKG_QTY, 0)), 3) *100), 'N3', 'en-us') + '%'
                    
                    ELSE FORMAT((ROUND(( ISNULL(OPE.CG_WGT, 0)/ISNULL(DOC.CG_WGT, 0)), 3) *100), 'N3', 'en-us') + '%'
                END AS PERCENTAGE_STR,
                
                CASE    WHEN DOC.CG_TP_CD = 'BBK'
                        THEN 'Total: ' + FORMAT(ISNULL(OPE.PKG_QTY, 0), 'N3', 'en-us')  + '/ ' + FORMAT(ISNULL(DOC.PKG_QTY, 0), 'N3', 'en-us') + '  (Qty)'
                        ELSE 'Total: ' + FORMAT(ISNULL(OPE.CG_WGT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.CG_WGT, 0), 'N3', 'en-us') + '  (MT)'
                END as TOTAL_AMT,
                
                CASE    WHEN DOC.CG_TP_CD = 'BBK'
                        THEN 'To Warehouse: ' + FORMAT(ISNULL(OPE.I_LR_QTY, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.I_LR_QTY, 0), 'N3', 'en-us') + '  (Qty)'
                        ELSE 'To Warehouse: ' + FORMAT(ISNULL(OPE.I_LR_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.I_LR_MT, 0), 'N3', 'en-us') + '  (MT)'
                END as INDIRECT_AMT,
                
                CASE    WHEN DOC.CG_TP_CD = 'BBK'
                        THEN 'Direct by Truck: ' + FORMAT(ISNULL(OPE.D_LR_QTY, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_LR_QTY, 0), 'N3', 'en-us') + '  (Qty)'
                        ELSE 'Direct by Truck: ' + FORMAT(ISNULL(OPE.D_LR_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_LR_MT, 0), 'N3', 'en-us') + '  (MT)'
                END as DIRECT_AMT,
                    
                CASE    WHEN DOC.CG_TP_CD = 'BBK'
                        THEN 'Direct by Barge: ' + FORMAT(ISNULL(OPE.D_VSL_QTY, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_VSL_QTY, 0), 'N3', 'en-us') + '  (Qty)'
                        ELSE 'Direct by Barge: ' + FORMAT(ISNULL(OPE.D_VSL_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_VSL_MT, 0), 'N3', 'en-us') + '  (MT)'
                END as DIRECT_BARGE_AMT
                
                
        FROM    DOC_AMT_BY_CMDT DOC
                LEFT OUTER JOIN DISCHARGED_INFO OPE ON DOC.CMDT_CD = OPE.CMDT_CD
        
        ORDER BY DOC.CMDT_CD
    </select>
    
    <select id="selectDischargedSummaryByVsl" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardSummaryData">
		WITH DOC_AMT_BY_VSL AS
        (
            SELECT 
                    SUM(D.D_MT) AS D_MT,
                    SUM(D.D_M3) AS D_M3,
                    SUM(D.D_QTY) AS D_QTY,
                    SUM(D.I_MT) AS I_MT,
                    SUM(D.I_M3) AS I_M3,
                    SUM(D.I_QTY) AS I_QTY,
                    
                    SUM(D.I_LR_MT) + SUM(D.D_LR_MT) as LR_MT,
                    SUM(D.I_LR_MT) AS I_LR_MT,
                    SUM(D.I_LR_QTY) AS I_LR_QTY,
                    SUM(D.I_LR_M3) AS I_LR_M3,
                    
                    SUM(D.D_LR_MT) AS D_LR_MT,
                    SUM(D.D_LR_QTY) AS D_LR_QTY,
                    SUM(D.D_LR_M3) AS D_LR_M3,
                    
                    SUM(D.D_VSL_MT) AS D_VSL_MT,
                    SUM(D.D_VSL_QTY) AS D_VSL_QTY,
                    SUM(D.D_VSL_M3) AS D_VSL_M3,
                    
                    SUM(B.CG_WGT) AS CG_WGT,
                    SUM(B.CG_VOL) AS CG_VOL,
                    SUM(B.PKG_QTY) AS PKG_QTY,
                    
                    STRING_AGG(B.BL_NO, ', ') WITHIN GROUP (ORDER BY B.CMDT_CD) AS BL_NO
            FROM    TMT_BL B
                    LEFT OUTER JOIN TMT_DO D ON B.VSL_CALL_ID = D.VSL_CALL_ID AND B.BL_NO = D.BL_NO
            WHERE   B.VSL_CALL_ID = #{vslCallId}
                    AND B.STAT_CD = 'AP'
        ),
        
        DISCHARGED_INFO_BY_VSL AS
        (
            SELECT  

                    SUM(case when J.JOB_PURP_CD IN ('VG') then J.CG_WGT else 0 end) AS D_LR_MT,
                    SUM(case when J.JOB_PURP_CD IN ('VG') then J.PKG_QTY else 0 end) AS D_LR_QTY,
                    SUM(case when J.JOB_PURP_CD IN ('VG') then J.CG_VOL else 0 end) AS D_LR_M3,
                    
                    SUM(case when J.JOB_PURP_CD IN ('VB', 'AB') then J.CG_WGT else 0 end) AS D_VSL_MT,
                    SUM(case when J.JOB_PURP_CD IN ('VB', 'AB') then J.PKG_QTY else 0 end) AS D_VSL_QTY,
                    SUM(case when J.JOB_PURP_CD IN ('VB', 'AB') then J.CG_VOL else 0 end) AS D_VSL_M3,
                    
                    SUM(case when J.JOB_PURP_CD IN ('AW') then J.CG_WGT else 0 end) AS I_LR_MT,
                    SUM(case when J.JOB_PURP_CD IN ('AW') then J.PKG_QTY else 0 end) AS I_LR_QTY,
                    SUM(case when J.JOB_PURP_CD IN ('AW') then J.CG_VOL else 0 end) AS I_LR_M3,
                    
                    SUM(case when J.JOB_PURP_CD IN ('VG', 'VB', 'VA') then J.CG_WGT else 0 end) AS CG_WGT,
                    SUM(case when J.JOB_PURP_CD IN ('VG', 'VB', 'VA') then J.PKG_QTY else 0 end) AS PKG_QTY,
                    SUM(case when J.JOB_PURP_CD IN ('VG', 'VB', 'VA') then J.CG_VOL else 0 end) AS CG_VOL

            FROM    TMT_JOB J
                    INNER JOIN TMT_BL B ON J.VSL_CALL_ID = B.VSL_CALL_ID AND J.CG_NO = B.BL_NO
            
            WHERE   J.VSL_CALL_ID = #{vslCallId}
                    AND J.JOB_TP_CD = 'DS'
        )
        
        SELECT  
                DOC.CG_WGT AS TOTAL_WGT,
                DOC.CG_VOL AS TOTAL_M3,
                DOC.PKG_QTY AS TOTAL_QTY,
                
				CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(DOC.PKG_QTY, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.PKG_QTY, 0)/ISNULL(DOC.PKG_QTY, 0)), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(DOC.CG_VOL, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.CG_VOL, 0)/ISNULL(DOC.CG_VOL, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(DOC.CG_WGT, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.CG_WGT, 0)/ISNULL(DOC.CG_WGT, 0)), 3)
	                	</otherwise>
                	</choose>
				    ELSE  0
				END AS PERCENTAGE,
				
				'Total: ' +
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		FORMAT (ISNULL(OPE.PKG_QTY, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.PKG_QTY, 0), 'N3', 'en-us') + '  (QTY)          '
						    + CASE
						        WHEN ISNULL(DOC.PKG_QTY, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.PKG_QTY, 0)/ISNULL(DOC.PKG_QTY, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		FORMAT (ISNULL(OPE.CG_VOL, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.CG_VOL, 0), 'N3', 'en-us') + '  (M3)          '
						    + CASE
						        WHEN ISNULL(DOC.CG_VOL, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.CG_VOL, 0)/ISNULL(DOC.CG_VOL, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<otherwise>
	                		FORMAT (ISNULL(OPE.CG_WGT, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.CG_WGT, 0), 'N3', 'en-us') + '  (MT)          '
						    + CASE
						        WHEN ISNULL(DOC.CG_WGT, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.CG_WGT, 0)/ISNULL(DOC.CG_WGT, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</otherwise>
	               	</choose>
				AS TOTAL_AMT,
				
				CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(DOC.I_LR_QTY, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.I_LR_QTY, 0)/ISNULL(DOC.I_LR_QTY, 0)), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(DOC.I_LR_M3, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.I_LR_M3, 0)/ISNULL(DOC.I_LR_M3, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(DOC.I_LR_MT, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.I_LR_MT, 0)/ISNULL(DOC.I_LR_MT, 0)), 3)
	                	</otherwise>
                	</choose>
				    ELSE  0
				END AS WH_PERCENTAGE,
				
				'To Warehouse: ' + 
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		FORMAT (ISNULL(OPE.I_LR_QTY, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.I_LR_QTY, 0), 'N3', 'en-us') + '  (QTY)          '
						    + CASE
						        WHEN ISNULL(DOC.I_LR_QTY, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.I_LR_QTY, 0)/ISNULL(DOC.I_LR_QTY, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		FORMAT (ISNULL(OPE.I_LR_M3, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.I_LR_M3, 0), 'N3', 'en-us') + '  (M3)          '
						    + CASE
						        WHEN ISNULL(DOC.I_LR_M3, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.I_LR_M3, 0)/ISNULL(DOC.I_LR_M3, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<otherwise>
	                		FORMAT (ISNULL(OPE.I_LR_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.I_LR_MT, 0), 'N3', 'en-us') + '  (MT)          '
						    + CASE
						        WHEN ISNULL(DOC.I_LR_MT, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.I_LR_MT, 0)/ISNULL(DOC.I_LR_MT, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</otherwise>
	               	</choose>
				AS INDIRECT_AMT,
				    
				CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(DOC.D_LR_QTY, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_LR_QTY, 0)/ISNULL(DOC.D_LR_QTY, 0)), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(DOC.D_LR_M3, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_LR_M3, 0)/ISNULL(DOC.D_LR_M3, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(DOC.D_LR_MT, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_LR_MT, 0)/ISNULL(DOC.D_LR_MT, 0)), 3)
	                	</otherwise>
                	</choose>
				    ELSE  0
				END AS D_LR_PERCENTAGE,
				
				'Direct by Truck: ' + 
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		FORMAT (ISNULL(OPE.D_LR_QTY, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.D_LR_QTY, 0), 'N3', 'en-us') + '  (QTY)          '
						    + CASE
						        WHEN ISNULL(DOC.D_LR_QTY, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.D_LR_QTY, 0)/ISNULL(DOC.D_LR_QTY, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		FORMAT (ISNULL(OPE.D_LR_M3, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.D_LR_M3, 0), 'N3', 'en-us') + '  (M3)          '
						    + CASE
						        WHEN ISNULL(DOC.D_LR_M3, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.D_LR_M3, 0)/ISNULL(DOC.D_LR_M3, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<otherwise>
	                		FORMAT (ISNULL(OPE.D_LR_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.D_LR_MT, 0), 'N3', 'en-us') + '  (MT)          '
						    + CASE
						        WHEN ISNULL(DOC.D_LR_MT, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.D_LR_MT, 0)/ISNULL(DOC.D_LR_MT, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</otherwise>
	               	</choose>	
				AS DIRECT_AMT,
				
				CASE
				    <choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(DOC.D_VSL_QTY, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_VSL_QTY, 0)/ISNULL(DOC.D_VSL_QTY, 0)), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(DOC.D_VSL_M3, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_VSL_M3, 0)/ISNULL(DOC.D_VSL_M3, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(DOC.D_VSL_MT, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_VSL_MT, 0)/ISNULL(DOC.D_VSL_MT, 0)), 3)
	                	</otherwise>
                	</choose>
				    
				    ELSE  0
				END AS D_VSL_PERCENTAGE,
				    
				'Direct by Barge: ' + 
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		FORMAT (ISNULL(OPE.D_VSL_QTY, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.D_VSL_QTY, 0), 'N3', 'en-us') + '  (QTY)          '
						    + CASE
						        WHEN ISNULL(DOC.D_VSL_QTY, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.D_VSL_QTY, 0)/ISNULL(DOC.D_VSL_QTY, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		FORMAT (ISNULL(OPE.D_VSL_M3, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.D_VSL_M3, 0), 'N3', 'en-us') + '  (M3)          '
						    + CASE
						        WHEN ISNULL(DOC.D_VSL_M3, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.D_VSL_M3, 0)/ISNULL(DOC.D_VSL_M3, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<otherwise>
	                		FORMAT (ISNULL(OPE.D_VSL_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT (ISNULL(DOC.D_VSL_MT, 0), 'N3', 'en-us') + '  (MT)          '
						    + CASE
						        WHEN ISNULL(DOC.D_VSL_MT, 0) > 0
						            THEN FORMAT (ROUND(( ISNULL(OPE.D_VSL_MT, 0)/ISNULL(DOC.D_VSL_MT, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</otherwise>
	               	</choose>	
	            AS DIRECT_BARGE_AMT

   
        FROM    DOC_AMT_BY_VSL DOC
                LEFT OUTER JOIN DISCHARGED_INFO_BY_VSL OPE ON 1=1
    </select>
    
    <!-- Loading -->
    <select id="selectLoadedSummaryByCmdt_v1" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardSummaryData">
    	/*cargoFlowDashboard.selectLoadedSummaryByCmdt*/
    	WITH TOTAL_SN_AMT AS 
		(         
		    SELECT 
		            CMDT_CD,
		            SUM(CG_WGT) AS CG_WGT,
		            SUM(CG_VOL) AS CG_VOL,
		            SUM(PKG_QTY) AS PKG_QTY,
		            STRING_AGG(SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY CMDT_CD) AS SHIPG_NOTE_NO
		    FROM    TMT_SHIPG_NOTE
		    WHERE   VSL_CALL_ID = #{vslCallId}
		            AND STAT_CD = 'AP'
		    GROUP BY CMDT_CD
		),
		
		SUM_BY_DELVTP AS
		(
		    SELECT 
		            CMDT_CD,
		            CASE WHEN DELV_TP_CD = 'D' THEN SUM(CG_WGT) ELSE 0 END AS D_MT,
		            CASE WHEN DELV_TP_CD = 'D' THEN SUM(CG_VOL) ELSE 0 END AS D_M3,
		            CASE WHEN DELV_TP_CD = 'D' THEN SUM(PKG_QTY) ELSE 0 END AS D_QTY,
		            CASE WHEN DELV_TP_CD = 'I' THEN SUM(CG_WGT) ELSE 0 END AS I_MT,
		            CASE WHEN DELV_TP_CD = 'I' THEN SUM(CG_VOL) ELSE 0 END AS I_M3,
		            CASE WHEN DELV_TP_CD = 'I' THEN SUM(PKG_QTY) ELSE 0 END AS I_QTY,
		            STRING_AGG(SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY CMDT_CD) AS SHIPG_NOTE_NO
		    FROM    TMT_SHIPG_NOTE
		    WHERE   VSL_CALL_ID = #{vslCallId}
		            AND STAT_CD = 'AP'
		    GROUP BY CMDT_CD, DELV_TP_CD
		)
		
		SELECT  T.CMDT_CD,
		        ISNULL(dbo.F_GET_CMDT_DESC (T.CMDT_CD), T.CMDT_CD)  AS CMDT_DESC,
		        T.CG_WGT AS TOTAL_WGT,
		        T.CG_VOL AS TOTAL_M3,
		        T.PKG_QTY AS TOTAL_QTY,
		        ISNULL(D.D_MT, 0) AS D_MT,
		        ISNULL(D.D_M3, 0) AS D_M3,
		        ISNULL(D.D_QTY, 0) AS D_QTY,
		        ISNULL(D.I_MT, 0) AS I_MT,
		        ISNULL(D.I_M3, 0) AS I_M3,
		        ISNULL(D.I_QTY, 0) AS I_QTY,
		        'T: ' + T.PKG_QTY + '/ ' + T.CG_WGT + '/ ' + T.CG_VOL as TOTAL_AMT,
		        'D: ' + ISNULL(D.D_QTY, 0) + '/ ' + ISNULL(D.D_MT, 0) + '/ ' + ISNULL(D.D_M3, 0) as DIRECT_AMT,
		        'I: ' + ISNULL(D.I_QTY, 0) + '/ ' + ISNULL(D.I_MT, 0) + '/ ' + ISNULL(D.I_M3, 0) as INDIRECT_AMT
		         
		FROM    TOTAL_SN_AMT T 
		        LEFT OUTER JOIN SUM_BY_DELVTP D ON T.CMDT_CD = D.CMDT_CD
		ORDER BY T.CMDT_CD
    </select>
    
    <select id="selectLoadedSummaryByCmdt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardSummaryData">
    	WITH DOC_AMT_BY_CMDT AS
        (
            SELECT 
                    S.CG_TP_CD,
                    S.CMDT_CD,

                    SUM(D.I_MT) + SUM(D.D_LR_MT) as LR_MT,
                    SUM(D.I_MT) AS I_LR_MT,
                    SUM(D.I_QTY) AS I_LR_QTY,
                    
                    SUM(D.D_LR_MT) AS D_LR_MT,
                    SUM(D.D_LR_QTY) AS D_LR_QTY,
                    
                    SUM(D.D_VSL_MT) AS D_VSL_MT,
                    SUM(D.D_VSL_QTY) AS D_VSL_QTY,
                    
                    SUM(S.CG_WGT) AS CG_WGT,
                    SUM(S.CG_VOL) AS CG_VOL,
                    SUM(S.PKG_QTY) AS PKG_QTY,
                    
                    STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY S.CMDT_CD) AS SHIPG_NOTE_NO
            FROM    TMT_SHIPG_NOTE S
                    INNER JOIN TMT_SHIPG_NOTE_AMT D ON S.VSL_CALL_ID = D.VSL_CALL_ID AND S.SHIPG_NOTE_NO = D.SHIPG_NOTE_NO
            
            WHERE   S.VSL_CALL_ID = #{vslCallId}
                    AND S.STAT_CD = 'AP'
                    
            GROUP BY S.CG_TP_CD, S.CMDT_CD
        ),
        
        LOADED_INFO AS
        (
            SELECT  J.VSL_CALL_ID,
                    S.CG_TP_CD,
                    S.CMDT_CD,
                    dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,

                    SUM(case when J.JOB_PURP_CD IN ('GV') then J.CG_WGT else 0 end) AS D_LR_MT,
                    SUM(case when J.JOB_PURP_CD IN ('GV') then J.PKG_QTY else 0 end) AS D_LR_QTY,
                    
                    SUM(case when J.JOB_PURP_CD IN ('BV') then J.CG_WGT else 0 end) AS D_VSL_MT,
                    SUM(case when J.JOB_PURP_CD IN ('BV') then J.PKG_QTY else 0 end) AS D_VSL_QTY,
                    
                    SUM(case when J.JOB_PURP_CD IN ('WA') then J.CG_WGT else 0 end) AS I_LR_MT,
                    SUM(case when J.JOB_PURP_CD IN ('WA') then J.PKG_QTY else 0 end) AS I_LR_QTY,
                    
                    SUM(case when J.JOB_PURP_CD IN ('GV', 'BV', 'AV') then J.CG_WGT else 0 end) AS CG_WGT,
                    SUM(case when J.JOB_PURP_CD IN ('GV', 'BV', 'AV') then J.PKG_QTY else 0 end) AS PKG_QTY

            FROM    TMT_JOB J
                    INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
                    INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
            
            WHERE   J.VSL_CALL_ID = #{vslCallId}
                    AND J.JOB_TP_CD = 'LD'
            GROUP BY    J.VSL_CALL_ID,
                        S.CG_TP_CD,
                        S.CMDT_CD
        
        )
        
        SELECT  DOC.CMDT_CD,
                DOC.CG_TP_CD,
                ISNULL(dbo.F_GET_CMDT_DESC (DOC.CMDT_CD), DOC.CMDT_CD)  AS CMDT_DESC,
                dbo.F_CM_CODE_NM ('MT', 'CGTP', DOC.CG_TP_CD)  AS CG_TP_NM,
                DOC.CG_WGT AS TOTAL_WGT,
                DOC.CG_VOL AS TOTAL_M3,
                DOC.PKG_QTY AS TOTAL_QTY,
                CASE
                    WHEN DOC.CG_TP_CD = 'BBK' AND ISNULL(DOC.PKG_QTY, 0) > 0
                        THEN ROUND(( CAST(ISNULL(OPE.PKG_QTY, 0) AS FLOAT)/ISNULL(DOC.PKG_QTY, 0)), 3)
                    
                    ELSE  ROUND(( ISNULL(OPE.CG_WGT, 0)/ISNULL(DOC.CG_WGT, 0)), 3)
                END AS PERCENTAGE,
                CASE
                    WHEN DOC.CG_TP_CD = 'BBK' AND ISNULL(DOC.PKG_QTY, 0) > 0
                        THEN FORMAT(ROUND(( CAST(ISNULL(OPE.PKG_QTY, 0) AS FLOAT)/ISNULL(DOC.PKG_QTY, 0)), 3) *100, 'N3', 'en-us') + '%'
                    
                    ELSE FORMAT(ROUND(( ISNULL(OPE.CG_WGT, 0)/ISNULL(DOC.CG_WGT, 0)), 3) *100, 'N3', 'en-us') + '%'
                END AS PERCENTAGE_STR,
                
                CASE    WHEN DOC.CG_TP_CD = 'BBK'
                        THEN 'Total: ' + FORMAT(CAST(ISNULL(OPE.PKG_QTY, 0) AS FLOAT), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.PKG_QTY, 0), 'N3', 'en-us') + '  (Qty)'
                        ELSE 'Total: ' + FORMAT(ISNULL(OPE.CG_WGT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.CG_WGT, 0), 'N3', 'en-us') + '  (MT)'
                END as TOTAL_AMT,
                
                CASE    WHEN DOC.CG_TP_CD = 'BBK'
                        THEN 'From Warehouse: ' + FORMAT(CAST(ISNULL(OPE.I_LR_QTY, 0) AS FLOAT), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.I_LR_QTY, 0), 'N3', 'en-us') + '  (Qty)'
                        ELSE 'From Warehouse: ' + FORMAT(ISNULL(OPE.I_LR_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.I_LR_MT, 0), 'N3', 'en-us') + '  (MT)'
                END as INDIRECT_AMT,
                
                CASE    WHEN DOC.CG_TP_CD = 'BBK'
                        THEN 'Direct by Truck: ' + FORMAT(CAST(ISNULL(OPE.D_LR_QTY, 0) AS FLOAT), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_LR_QTY, 0), 'N3', 'en-us') + '  (Qty)'
                        ELSE 'Direct by Truck: ' + FORMAT(ISNULL(OPE.D_LR_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_LR_MT, 0), 'N3', 'en-us') + '  (MT)'
                END as DIRECT_AMT,
                    
                CASE    WHEN DOC.CG_TP_CD = 'BBK'
                        THEN 'Direct by Barge: ' + FORMAT(CAST(ISNULL(OPE.D_VSL_QTY, 0) AS FLOAT), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_VSL_QTY, 0), 'N3', 'en-us') + '  (Qty)'
                        ELSE 'Direct by Barge: ' + FORMAT(ISNULL(OPE.D_VSL_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_VSL_MT, 0), 'N3', 'en-us') + '  (MT)'
                END as DIRECT_BARGE_AMT
                
                
        FROM    DOC_AMT_BY_CMDT DOC
                LEFT OUTER JOIN LOADED_INFO OPE ON DOC.CMDT_CD = OPE.CMDT_CD
        
        ORDER BY DOC.CMDT_CD
    </select>
    
    
    <select id="selectLoadedSummaryByVsl" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardSummaryData">
    	WITH DOC_AMT_BY_VSL AS
        (
            SELECT 
                    SUM(D.I_MT) + SUM(D.D_LR_MT) as LR_MT,
                    SUM(D.I_MT) AS I_LR_MT,
                    SUM(D.I_QTY) AS I_LR_QTY,
                    SUM(D.I_M3) AS I_LR_M3,
                    
                    SUM(D.D_LR_MT) AS D_LR_MT,
                    SUM(D.D_LR_QTY) AS D_LR_QTY,
                    SUM(D.D_LR_M3) AS D_LR_M3,
                    
                    SUM(D.D_VSL_MT) AS D_VSL_MT,
                    SUM(D.D_VSL_QTY) AS D_VSL_QTY,
                    SUM(D.D_VSL_M3) AS D_VSL_M3,
                    
                    SUM(S.CG_WGT) AS CG_WGT,
                    SUM(S.CG_VOL) AS CG_VOL,
                    SUM(S.PKG_QTY) AS PKG_QTY,
                    
                    STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY S.CMDT_CD) AS SHIPG_NOTE_NO
            FROM    TMT_SHIPG_NOTE S
                    INNER JOIN TMT_SHIPG_NOTE_AMT D ON S.VSL_CALL_ID = D.VSL_CALL_ID AND S.SHIPG_NOTE_NO = D.SHIPG_NOTE_NO
            
            WHERE   S.VSL_CALL_ID =  #{vslCallId}
                    AND S.STAT_CD = 'AP'
        ),
        
        LOADED_INFO_BY_VSL AS
        (
            SELECT  
                    SUM(case when J.JOB_PURP_CD IN ('GV') then J.CG_WGT else 0 end) AS D_LR_MT,
                    SUM(case when J.JOB_PURP_CD IN ('GV') then J.PKG_QTY else 0 end) AS D_LR_QTY,
                    SUM(case when J.JOB_PURP_CD IN ('GV') then J.CG_VOL else 0 end) AS D_LR_M3,
                    
                    SUM(case when J.JOB_PURP_CD IN ('BV') then J.CG_WGT else 0 end) AS D_VSL_MT,
                    SUM(case when J.JOB_PURP_CD IN ('BV') then J.PKG_QTY else 0 end) AS D_VSL_QTY,
                    SUM(case when J.JOB_PURP_CD IN ('BV') then J.CG_VOL else 0 end) AS D_VSL_M3,
                    
                    SUM(case when J.JOB_PURP_CD IN ('WA') then J.CG_WGT else 0 end) AS I_LR_MT,
                    SUM(case when J.JOB_PURP_CD IN ('WA') then J.PKG_QTY else 0 end) AS I_LR_QTY,
                    SUM(case when J.JOB_PURP_CD IN ('WA') then J.CG_VOL else 0 end) AS I_LR_M3,
                    
                    SUM(case when J.JOB_PURP_CD IN ('GV', 'BV', 'AV') then J.CG_WGT else 0 end) AS CG_WGT,
                    SUM(case when J.JOB_PURP_CD IN ('GV', 'BV', 'AV') then J.PKG_QTY else 0 end) AS PKG_QTY,
                    SUM(case when J.JOB_PURP_CD IN ('GV', 'BV', 'AV') then J.CG_VOL else 0 end) AS CG_VOL

            FROM    TMT_JOB J
                    INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
                    INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
            
            WHERE   J.VSL_CALL_ID =  #{vslCallId}
                    AND J.JOB_TP_CD = 'LD'
        )
        
        SELECT  
                DOC.CG_WGT AS TOTAL_WGT,
                DOC.CG_VOL AS TOTAL_M3,
                DOC.PKG_QTY AS TOTAL_QTY,
                				CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(DOC.PKG_QTY, 0) > 0
				        	THEN ROUND(( CAST(ISNULL(OPE.PKG_QTY, 0) AS FLOAT)/ISNULL(DOC.PKG_QTY, 0)), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(DOC.CG_VOL, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.CG_VOL, 0)/ISNULL(DOC.CG_VOL, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(DOC.CG_WGT, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.CG_WGT, 0)/ISNULL(DOC.CG_WGT, 0)), 3)
	                	</otherwise>
                	</choose>
				    ELSE  0
				END AS PERCENTAGE,
				
				'Total: ' +
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		FORMAT(ISNULL(OPE.PKG_QTY, 0), 'N3', 'en-us') + '/ ' + FORMAT(CAST(ISNULL(DOC.PKG_QTY, 0) as FLOAT), 'N3', 'en-us') + '  (QTY)          '
						    + CASE
						        WHEN ISNULL(DOC.PKG_QTY, 0) > 0
						            THEN FORMAT(ROUND(( CAST(ISNULL(OPE.PKG_QTY, 0) AS FLOAT)/ISNULL(DOC.PKG_QTY, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		FORMAT(ISNULL(OPE.CG_VOL, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.CG_VOL, 0), 'N3', 'en-us') + '  (M3)          '
						    + CASE
						        WHEN ISNULL(DOC.CG_VOL, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.CG_VOL, 0)/ISNULL(DOC.CG_VOL, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<otherwise>
	                		FORMAT(ISNULL(OPE.CG_WGT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.CG_WGT, 0), 'N3', 'en-us') + '  (MT)          '
						    + CASE
						        WHEN ISNULL(DOC.CG_WGT, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.CG_WGT, 0)/ISNULL(DOC.CG_WGT, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</otherwise>
	               	</choose>
				AS TOTAL_AMT,
				
				CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(DOC.I_LR_QTY, 0) > 0
				        	THEN ROUND(( CAST(ISNULL(OPE.I_LR_QTY, 0) AS FLOAT)/ISNULL(DOC.I_LR_QTY, 0)), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(DOC.I_LR_M3, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.I_LR_M3, 0)/ISNULL(DOC.I_LR_M3, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(DOC.I_LR_MT, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.I_LR_MT, 0)/ISNULL(DOC.I_LR_MT, 0)), 3)
	                	</otherwise>
                	</choose>
				    ELSE  0
				END AS WH_PERCENTAGE,
				
				'From Warehouse: ' + 
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		FORMAT(CAST(ISNULL(OPE.I_LR_QTY, 0) AS FLOAT), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.I_LR_QTY, 0), 'N3', 'en-us') + '  (QTY)          '
						    + CASE
						        WHEN ISNULL(DOC.I_LR_QTY, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.I_LR_QTY, 0)/ISNULL(DOC.I_LR_QTY, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		FORMAT(ISNULL(OPE.I_LR_M3, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.I_LR_M3, 0), 'N3', 'en-us') + '  (M3)          '
						    + CASE
						        WHEN ISNULL(DOC.I_LR_M3, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.I_LR_M3, 0)/ISNULL(DOC.I_LR_M3, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<otherwise>
	                		FORMAT(ISNULL(OPE.I_LR_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.I_LR_MT, 0), 'N3', 'en-us') + '  (MT)          '
						    + CASE
						        WHEN ISNULL(DOC.I_LR_MT, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.I_LR_MT, 0)/ISNULL(DOC.I_LR_MT, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</otherwise>
	               	</choose>
				AS INDIRECT_AMT,
				    
				CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(DOC.D_LR_QTY, 0) > 0
				        	THEN ROUND(( CAST(ISNULL(OPE.D_LR_QTY, 0) AS FLOAT)/ISNULL(DOC.D_LR_QTY, 0)), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(DOC.D_LR_M3, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_LR_M3, 0)/ISNULL(DOC.D_LR_M3, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(DOC.D_LR_MT, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_LR_MT, 0)/ISNULL(DOC.D_LR_MT, 0)), 3)
	                	</otherwise>
                	</choose>
				    ELSE  0
				END AS D_LR_PERCENTAGE,
				
				'Direct by Truck: ' + 
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		FORMAT(CAST(ISNULL(OPE.D_LR_QTY, 0) AS FLOAT), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_LR_QTY, 0), 'N3', 'en-us') + '  (QTY)          '
						    + CASE
						        WHEN ISNULL(DOC.D_LR_QTY, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.D_LR_QTY, 0)/ISNULL(DOC.D_LR_QTY, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		FORMAT(ISNULL(OPE.D_LR_M3, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_LR_M3, 0), 'N3', 'en-us') + '  (M3)          '
						    + CASE
						        WHEN ISNULL(DOC.D_LR_M3, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.D_LR_M3, 0)/ISNULL(DOC.D_LR_M3, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<otherwise>
	                		FORMAT(ISNULL(OPE.D_LR_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_LR_MT, 0), 'N3', 'en-us') + '  (MT)          '
						    + CASE
						        WHEN ISNULL(DOC.D_LR_MT, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.D_LR_MT, 0)/ISNULL(DOC.D_LR_MT, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</otherwise>
	               	</choose>	
				AS DIRECT_AMT,
				
				CASE
				    <choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(DOC.D_VSL_QTY, 0) > 0
				        	THEN ROUND(( CAST(ISNULL(OPE.D_VSL_QTY, 0) AS FLOAT)/ISNULL(DOC.D_VSL_QTY, 0)), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(DOC.D_VSL_M3, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_VSL_M3, 0)/ISNULL(DOC.D_VSL_M3, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(DOC.D_VSL_MT, 0) > 0
				        	THEN ROUND(( ISNULL(OPE.D_VSL_MT, 0)/ISNULL(DOC.D_VSL_MT, 0)), 3)
	                	</otherwise>
                	</choose>
				    
				    ELSE  0
				END AS D_VSL_PERCENTAGE,
				    
				'Direct by Barge: ' + 
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		FORMAT(ISNULL(OPE.D_VSL_QTY, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_VSL_QTY, 0), 'N3', 'en-us') + '  (QTY)          '
						    + CASE
						        WHEN ISNULL(DOC.D_VSL_QTY, 0) > 0
						            THEN FORMAT(ROUND(( CAST(ISNULL(OPE.D_VSL_QTY, 0) AS FLOAT)/ISNULL(DOC.D_VSL_QTY, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		FORMAT(ISNULL(OPE.D_VSL_M3, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_VSL_M3, 0), 'N3', 'en-us') + '  (M3)          '
						    + CASE
						        WHEN ISNULL(DOC.D_VSL_M3, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.D_VSL_M3, 0)/ISNULL(DOC.D_VSL_M3, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</when>
	                	<otherwise>
	                		FORMAT(ISNULL(OPE.D_VSL_MT, 0), 'N3', 'en-us') + '/ ' + FORMAT(ISNULL(DOC.D_VSL_MT, 0), 'N3', 'en-us') + '  (MT)          '
						    + CASE
						        WHEN ISNULL(DOC.D_VSL_MT, 0) > 0
						            THEN FORMAT(ROUND(( ISNULL(OPE.D_VSL_MT, 0)/ISNULL(DOC.D_VSL_MT, 0)), 3) *100, 'N3', 'en-us') + '%'
						        
						        ELSE '0.000%'
						        END
	                	</otherwise>
	               	</choose>	
	            AS DIRECT_BARGE_AMT
                
                    
        FROM    DOC_AMT_BY_VSL DOC
                LEFT OUTER JOIN LOADED_INFO_BY_VSL OPE ON 1=1
    </select>
    
    <select id="selectVesselLoadingAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardData">
    	/*cargoFlowDashboard.selectVesselLoadingAmt*/
    	WITH LOADED_INFO AS
        (
            SELECT  J.VSL_CALL_ID,
                    S.CG_TP_CD,
                    S.DELV_TP_CD,
                    dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
                    S.CMDT_CD,
                    dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
                    J.HATCH_NO,
                    SUM(J.CG_WGT) AS CG_WGT,
                    SUM(J.PKG_QTY) AS PKG_QTY
            FROM    TMT_JOB J
                    INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
                    INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
            
            WHERE   J.VSL_CALL_ID = #{vslCallId}
                    AND J.JOB_TP_CD = 'LD'
                    AND J.JOB_PURP_CD IN ('GV', 'AV', 'BV')
            GROUP BY    J.VSL_CALL_ID,
                        S.CG_TP_CD,
                        S.DELV_TP_CD,
                        S.CMDT_CD,
                        J.HATCH_NO 
        ),
        
        IN_WH_INFO AS
        (
            SELECT  J.VSL_CALL_ID,
                    S.CG_TP_CD,
                    S.DELV_TP_CD,
                    dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
                    S.CMDT_CD,
                    dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
                    J.HATCH_NO,
                    SUM(J.CG_WGT) AS CG_WGT,
                    SUM(J.PKG_QTY) AS PKG_QTY
            FROM    TMT_JOB J
                    INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
                    INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
            
            WHERE   J.VSL_CALL_ID = #{vslCallId}
                    AND J.JOB_TP_CD = 'LF'
                    AND J.JOB_PURP_CD IN ('GW')
            GROUP BY    J.VSL_CALL_ID,
                        S.CG_TP_CD,
                        S.DELV_TP_CD,
                        S.CMDT_CD,
                        J.HATCH_NO 
        ),
        
        DOCUMENT_INFO AS
        (
            SELECT  D.VSL_CALL_ID,
                    S.CG_TP_CD,
                    dbo.F_CM_CODE_NM ('MT', 'CGTP', S.CG_TP_CD) AS CG_TP_NM,
                    S.DELV_TP_CD,
                    dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
                    S.CMDT_CD,
                    dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
                    D.HATCH_NO,
                    SUM(D.CG_WGT) AS CG_WGT,
                    SUM(D.PKG_QTY) AS PKG_QTY,
                    STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, S.CMDT_CD, D.HATCH_NO) AS MF_DOC_ID,
                    STRING_AGG(S.MF_DOC_ID, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, S.CMDT_CD, D.HATCH_NO) AS SHIPG_NOTE_NO
            FROM    TMT_SHIPG_NOTE_DTL D 
                    INNER JOIN TMT_SHIPG_NOTE S ON D.VSL_CALL_ID = S.VSL_CALL_ID AND D.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
            
            WHERE   D.VSL_CALL_ID = #{vslCallId}
                    AND S.STAT_CD = 'AP'
                    AND D.HATCH_NO IS NOT NULL
            GROUP BY    D.VSL_CALL_ID,
                        S.CG_TP_CD,
                        S.DELV_TP_CD,
                        S.CMDT_CD,
                        D.HATCH_NO 
        )
        
        SELECT  D.VSL_CALL_ID,
                D.CG_TP_CD ,
                D.CG_TP_NM,
                D.DELV_TP_CD,
                D.DELV_TP_NM,
                D.CMDT_CD,
                ISNULL(D.CMDT_DESC, D.CMDT_CD) AS CMDT_DESC,
                D.HATCH_NO,
                CASE 
                    WHEN D.DELV_TP_CD = 'D'
                    THEN ISNULL(D.CG_WGT, 0)
                    ELSE ISNULL(I.CG_WGT, 0)
                END  AS TOTAL_WGT,
                CASE 
                    WHEN D.DELV_TP_CD = 'D'
                    THEN ISNULL(D.PKG_QTY, 0)
                    ELSE ISNULL(I.PKG_QTY, 0)
                END  AS TOTAL_QTY,

                ISNULL(J.CG_WGT, 0) AS ACT_WGT,
                ISNULL(J.PKG_QTY, 0) AS ACT_QTY,
                
                CASE 
                    WHEN D.DELV_TP_CD = 'D'
                    THEN ISNULL(D.CG_WGT, 0) - ISNULL(J.CG_WGT, 0)
                    ELSE ISNULL(I.CG_WGT, 0) - ISNULL(J.CG_WGT, 0)
                END  AS BAL_WGT,
                
                CASE 
                    WHEN D.DELV_TP_CD = 'D'
                    THEN ISNULL(D.PKG_QTY, 0) - ISNULL(J.PKG_QTY, 0)
                    ELSE ISNULL(I.PKG_QTY, 0) - ISNULL(J.PKG_QTY, 0)
                END  AS BAL_QTY,

                0 AS TOBE_RECV_WGT,
                0 AS TOBE_RECV_QTY,
                CASE
                    WHEN D.DELV_TP_CD = 'D' AND D.PKG_QTY != 0 THEN ROUND((CAST(ISNULL(J.PKG_QTY, 0) AS FLOAT)/D.PKG_QTY), 3)
                    WHEN D.DELV_TP_CD = 'D' AND D.CG_WGT != 0 THEN ROUND((ISNULL(J.CG_WGT, 0)/D.CG_WGT), 3)
                    WHEN D.DELV_TP_CD = 'I' AND I.PKG_QTY != 0 THEN ROUND((CAST(ISNULL(J.PKG_QTY, 0) AS FLOAT)/I.PKG_QTY), 3)
                    WHEN D.DELV_TP_CD = 'I' AND I.CG_WGT != 0 THEN ROUND((ISNULL(J.CG_WGT, 0)/I.CG_WGT), 3)
                    ELSE 0
                END AS PERCENTAGE,
                
                CASE
                    WHEN D.DELV_TP_CD = 'D' AND D.PKG_QTY != 0 THEN FORMAT(ROUND((CAST(ISNULL(J.PKG_QTY, 0) AS FLOAT)/D.PKG_QTY), 3) *100, 'N3', 'en-us') + '%'
                    WHEN D.DELV_TP_CD = 'D' AND D.CG_WGT != 0 THEN FORMAT(ROUND((ISNULL(J.CG_WGT, 0)/D.CG_WGT), 3) *100, 'N3', 'en-us') + '%'
                    WHEN D.DELV_TP_CD = 'I' AND I.PKG_QTY != 0 THEN FORMAT(ROUND((CAST(ISNULL(J.PKG_QTY, 0) AS FLOAT)/I.PKG_QTY), 3) *100, 'N3', 'en-us') + '%'
                    WHEN D.DELV_TP_CD = 'I' AND I.CG_WGT != 0 THEN FORMAT(ROUND((ISNULL(J.CG_WGT, 0)/I.CG_WGT), 3) *100, 'N3', 'en-us') + '%'
                    ELSE FORMAT(0 *100, 'N3', 'en-us') + '%'
                END AS PERCENTAGE_STR
                
        FROM    DOCUMENT_INFO D
                LEFT OUTER JOIN IN_WH_INFO I
                ON I.VSL_CALL_ID = D.VSL_CALL_ID
                    AND I.CMDT_CD = D.CMDT_CD
                LEFT OUTER JOIN LOADED_INFO J
                ON J.VSL_CALL_ID = D.VSL_CALL_ID
                    AND J.CMDT_CD = D.CMDT_CD
                    AND J.HATCH_NO = D.HATCH_NO
        WHERE   D.VSL_CALL_ID = #{vslCallId}
                AND D.HATCH_NO = #{hatchNo}
    </select>
    
    <select id="selectVesselLoadingAmtByVsl" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardData">
    	/*cargoFlowDashboard.selectVesselLoadingAmtByVsl*/
        WITH LOADED_INFO AS
        (
            SELECT  J.VSL_CALL_ID,
                    J.HATCH_NO,
                    SUM(J.CG_WGT) AS CG_WGT,
                    SUM(J.CG_VOL) AS CG_VOL,
                    SUM(J.PKG_QTY) AS PKG_QTY
            FROM    TMT_JOB J
                    INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
                    INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
            
            WHERE   J.VSL_CALL_ID = #{vslCallId}
                    AND J.JOB_TP_CD = 'LD'
                    AND J.JOB_PURP_CD IN ('GV', 'AV', 'BV')
            GROUP BY    J.VSL_CALL_ID,
                        J.HATCH_NO 
        ),
        
        DOCUMENT_INFO AS
        (
            SELECT  D.VSL_CALL_ID,
                    D.HATCH_NO,
                    SUM(D.CG_WGT) AS CG_WGT,
                    SUM(D.CG_VOL) AS CG_VOL,
                    SUM(D.PKG_QTY) AS PKG_QTY,
                    STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, D.HATCH_NO) AS SHIPG_NOTE_NO,
                    STRING_AGG(S.MF_DOC_ID, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, D.HATCH_NO) AS MF_DOC_ID
            FROM    TMT_SHIPG_NOTE_DTL D 
                    INNER JOIN TMT_SHIPG_NOTE S ON D.VSL_CALL_ID = S.VSL_CALL_ID AND D.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
            
            WHERE   D.VSL_CALL_ID = #{vslCallId}
                    AND S.STAT_CD = 'AP'
                    AND D.HATCH_NO IS NOT NULL
            GROUP BY    D.VSL_CALL_ID,
                        D.HATCH_NO 
        )
        
        SELECT  D.VSL_CALL_ID,
                D.HATCH_NO,
                <choose>
                	<when test="unitTp == 'QTY'">
                		ISNULL(D.PKG_QTY, 0) AS TOTAL_AMT,
                		ISNULL(J.PKG_QTY, 0) AS ACT_AMT,
                		ISNULL(D.PKG_QTY, 0) -  ISNULL(J.PKG_QTY, 0) AS BAL_AMT,
                		0 AS TOBE_RECV_AMT,
                	</when>
                	<when test="unitTp == 'M3'">
                		ISNULL(D.CG_VOL, 0) AS TOTAL_AMT,
                		ISNULL(J.CG_VOL, 0) AS ACT_AMT,
                		ISNULL(D.CG_VOL, 0) -  ISNULL(J.CG_VOL, 0) AS BAL_AMT,
                		0 AS TOBE_RECV_AMT,
                	</when>
                	<otherwise>
                		ISNULL(D.CG_WGT, 0) AS TOTAL_AMT,
                		ISNULL(J.CG_WGT, 0) AS ACT_AMT,
                		ISNULL(D.CG_WGT, 0) -  ISNULL(J.CG_WGT, 0) AS BAL_AMT,
                		0 AS TOBE_RECV_AMT,
                	</otherwise>
               	</choose>
                
                CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(D.PKG_QTY, 0) > 0
				        	THEN ROUND((CAST(ISNULL(J.PKG_QTY, 0) AS FLOAT)/D.PKG_QTY), 3)
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(D.CG_VOL, 0) > 0
				        	THEN ROUND(( ISNULL(J.CG_VOL, 0)/ISNULL(D.CG_VOL, 0)), 3)
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(D.CG_WGT, 0) > 0
				        	THEN ROUND(( ISNULL(J.CG_WGT, 0)/ISNULL(D.CG_WGT, 0)), 3)
	                	</otherwise>
                	</choose>
				    ELSE  0
				END AS PERCENTAGE,
				
				CASE
					<choose>
	                	<when test="unitTp == 'QTY'">
	                		WHEN ISNULL(D.PKG_QTY, 0) > 0
				        	THEN FORMAT(ROUND((CAST(ISNULL(J.PKG_QTY, 0) AS FLOAT)/D.PKG_QTY), 3)*100, 'N3', 'en-us') + '%'
	                	</when>
	                	<when test="unitTp == 'M3'">
	                		WHEN ISNULL(D.CG_VOL, 0) > 0
				        	THEN FORMAT(ROUND(( ISNULL(J.CG_VOL, 0)/ISNULL(D.CG_VOL, 0)), 3)*100, 'N3', 'en-us') + '%'
	                	</when>
	                	<otherwise>
	                		WHEN ISNULL(D.CG_WGT, 0) > 0
				        	THEN FORMAT(ROUND(( ISNULL(J.CG_WGT, 0)/ISNULL(D.CG_WGT, 0)), 3)*100, 'N3', 'en-us') + '%'
	                	</otherwise>
                	</choose>
				    ELSE  '0.000%'
				END  AS PERCENTAGE_STR
                
        FROM    DOCUMENT_INFO D
                LEFT OUTER JOIN LOADED_INFO J
                ON J.VSL_CALL_ID = D.VSL_CALL_ID
                    AND J.HATCH_NO = D.HATCH_NO
        WHERE   D.VSL_CALL_ID = #{vslCallId}
                AND D.HATCH_NO = #{hatchNo}
    </select> 
    
    <select id="selectWarehouseLoadingAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardData">
    	/*cargoFlowDashboard.selectWarehouseLoadingAmt*/  	
		WITH IN_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            S.CG_TP_CD,
		            S.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
		            S.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY
		    FROM    TMT_JOB J
		            INNER JOIN TMT_INV_LOC I ON J.VSL_CALL_ID = I.VSL_CALL_ID AND J.CG_NO = I.CG_NO AND J.JOB_NO = I.JOB_NO
		            INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
		            INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_PURP_CD IN ('GW', 'WW')
		    GROUP BY    J.VSL_CALL_ID,
		                S.CG_TP_CD,
		                S.DELV_TP_CD,
		                S.CMDT_CD,
		                J.HATCH_NO
		),
		
		OUT_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            S.CG_TP_CD,
		            S.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
		            S.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY,
		            STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY J.VSL_CALL_ID, S.CMDT_CD) AS MF_DOC_ID,
		            STRING_AGG(S.MF_DOC_ID, ', ') WITHIN GROUP (ORDER BY J.VSL_CALL_ID, S.CMDT_CD) AS SHIPG_NOTE_NO
		    FROM    TMT_JOB J
		            INNER JOIN TMT_INV_LOC I ON J.VSL_CALL_ID = I.VSL_CALL_ID AND J.CG_NO = I.CG_NO AND J.JOB_NO = I.JOB_NO
		            INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
		            INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_PURP_CD IN ('WA', 'WG')
		    GROUP BY    J.VSL_CALL_ID,
		                S.CG_TP_CD,
		                S.DELV_TP_CD,
		                S.CMDT_CD
		),
		
		DOCUMENT_INFO AS
		(
		    SELECT  D.VSL_CALL_ID,
		                    S.CG_TP_CD,
		                    dbo.F_CM_CODE_NM ('MT', 'CGTP', S.CG_TP_CD) AS CG_TP_NM,
		                    S.DELV_TP_CD,
		                    dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
		                    S.CMDT_CD,
		                    dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
		                    D.HATCH_NO,
		                    SUM(D.CG_WGT) AS CG_WGT,
		                    SUM(D.PKG_QTY) AS PKG_QTY,
		                    STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, S.CMDT_CD, D.HATCH_NO) AS MF_DOC_ID,
		                    STRING_AGG(S.MF_DOC_ID, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, S.CMDT_CD, D.HATCH_NO) AS SHIPG_NOTE_NO
		            FROM    TMT_SHIPG_NOTE_DTL D 
		                    INNER JOIN TMT_SHIPG_NOTE S ON D.VSL_CALL_ID = S.VSL_CALL_ID AND D.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
		            
		            WHERE   D.VSL_CALL_ID = #{vslCallId}
		                    AND S.STAT_CD = 'AP'
		                    AND D.HATCH_NO IS NOT NULL
		            GROUP BY    D.VSL_CALL_ID,
		                        S.CG_TP_CD,
		                        S.DELV_TP_CD,
		                        S.CMDT_CD,
		                        D.HATCH_NO
		
		)
		
		SELECT  D.VSL_CALL_ID,
		        D.CG_TP_CD,
		        D.CG_TP_NM,
		        D.DELV_TP_CD,
		        D.DELV_TP_NM,
		        D.CMDT_CD,
		        D.CMDT_DESC,
		        D.HATCH_NO,
		        ISNULL(D.CG_WGT, 0) - (ISNULL(I.CG_WGT, 0)) AS TOBE_RECV_WGT,
		        ISNULL(D.PKG_QTY, 0) - (ISNULL(I.PKG_QTY, 0)) AS TOBE_RECV_QTY,
		        
		        ISNULL(I.CG_WGT, 0) AS TOTAL_WGT,
		        ISNULL(I.PKG_QTY, 0) AS TOTAL_QTY,
		        ISNULL(O.CG_WGT, 0) AS ACT_WGT,
		        ISNULL(O.PKG_QTY, 0) AS ACT_QTY,
		        
		        (ISNULL(I.CG_WGT, 0)) - ISNULL(O.CG_WGT, 0) AS BAL_WGT,
		        (ISNULL(I.PKG_QTY, 0)) - ISNULL(O.PKG_QTY, 0) AS BAL_QTY,
		        
		        CASE
		            WHEN ISNULL(I.PKG_QTY, 0) != 0
		                THEN  (ISNULL(O.PKG_QTY, 0)/(CAST(ISNULL(I.PKG_QTY, 0) AS FLOAT)))
		            
		            WHEN ISNULL(I.CG_WGT, 0) != 0
		                THEN  (ISNULL(O.CG_WGT, 0)/(ISNULL(I.CG_WGT, 0)))
		            ELSE 0
		        END AS PERCENTAGE,
		        
		        CASE
		            WHEN ISNULL(I.PKG_QTY, 0) != 0
		                THEN  FORMAT((ISNULL(O.PKG_QTY, 0)/(CAST(ISNULL(I.PKG_QTY, 0) AS FLOAT))) *100, 'N3', 'en-us') + '%'
		            
		            WHEN ISNULL(I.CG_WGT, 0) != 0
		                THEN  FORMAT((ISNULL(O.CG_WGT, 0)/(ISNULL(I.CG_WGT, 0))) *100, 'N3', 'en-us') + '%'
		            ELSE FORMAT(0 *100, 'N3', 'en-us') + '%'
		        END AS PERCENTAGE_STR
		        
		FROM    DOCUMENT_INFO D
		        LEFT OUTER JOIN IN_INFO I
		            ON  D.VSL_CALL_ID = I.VSL_CALL_ID
		                AND D.CMDT_CD = I.CMDT_CD
		        LEFT OUTER JOIN OUT_INFO O
		            ON  D.VSL_CALL_ID = O.VSL_CALL_ID
		                AND D.CMDT_CD = O.CMDT_CD
		
		WHERE   D.VSL_CALL_ID = #{vslCallId}
		        AND D.HATCH_NO = #{hatchNo}
    </select>
    
    <select id="selectGateLoadingAmt" parameterType="cargoFlowDashboardParm" resultMap="cargoFlowDashboardData">
    	/*cargoFlowDashboard.selectGateLoadingAmt*/
		WITH GV_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            S.CG_TP_CD,
		            S.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
		            S.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY,
		            STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY J.VSL_CALL_ID, S.CMDT_CD) AS MF_DOC_ID,
		            STRING_AGG(S.MF_DOC_ID, ', ') WITHIN GROUP (ORDER BY J.VSL_CALL_ID, S.CMDT_CD) AS SHIPG_NOTE_NO
		    FROM    TMT_JOB J
		            INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
		            INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'LD'
		            AND J.JOB_PURP_CD IN ('GV')
		    GROUP BY    J.VSL_CALL_ID,
		                S.CG_TP_CD,
		                S.DELV_TP_CD,
		                S.CMDT_CD,
		                J.HATCH_NO
		),
		
		GW_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            S.CG_TP_CD,
		            S.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
		            S.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY,
		            STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY J.VSL_CALL_ID, S.CMDT_CD) AS MF_DOC_ID,
		            STRING_AGG(S.MF_DOC_ID, ', ') WITHIN GROUP (ORDER BY J.VSL_CALL_ID, S.CMDT_CD) AS SHIPG_NOTE_NO
		    FROM    TMT_JOB J
		            INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
		            INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'LF'
		            AND J.JOB_PURP_CD IN ('GW')
		    GROUP BY    J.VSL_CALL_ID,
		                S.CG_TP_CD,
		                S.DELV_TP_CD,
		                S.CMDT_CD,
		                J.HATCH_NO
		),
		
		IO_INFO AS
		(
		    SELECT  J.VSL_CALL_ID,
		            S.CG_TP_CD,
		            S.DELV_TP_CD,
		            dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
		            S.CMDT_CD,
		            dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
		            J.HATCH_NO,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.PKG_QTY) AS PKG_QTY,
		            STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY J.VSL_CALL_ID, S.CMDT_CD) AS MF_DOC_ID,
		            STRING_AGG(S.MF_DOC_ID, ', ') WITHIN GROUP (ORDER BY J.VSL_CALL_ID, S.CMDT_CD) AS SHIPG_NOTE_NO
		    FROM    TMT_JOB J
		            INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
		            INNER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
		    
		    WHERE   J.VSL_CALL_ID = #{vslCallId}
		            AND J.JOB_TP_CD = 'GO'
		            AND J.JOB_PURP_CD IN ('IO')
		    GROUP BY    J.VSL_CALL_ID,
		                S.CG_TP_CD,
		                S.DELV_TP_CD,
		                S.CMDT_CD,
		                J.HATCH_NO
		),
		
		DOCUMENT_INFO AS
		(
		    SELECT  D.VSL_CALL_ID,
		                    S.CG_TP_CD,
		                    dbo.F_CM_CODE_NM ('MT', 'CGTP', S.CG_TP_CD) AS CG_TP_NM,
		                    S.DELV_TP_CD,
		                    dbo.F_CM_CODE_NM ('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
		                    S.CMDT_CD,
		                    dbo.F_GET_CMDT_DESC (S.CMDT_CD) AS CMDT_DESC,
		                    D.HATCH_NO,
		                    SUM(D.CG_WGT) AS CG_WGT,
		                    SUM(D.PKG_QTY) AS PKG_QTY,
		                    STRING_AGG(S.SHIPG_NOTE_NO, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, S.CMDT_CD, D.HATCH_NO) AS MF_DOC_ID,
		                    STRING_AGG(S.MF_DOC_ID, ', ') WITHIN GROUP (ORDER BY D.VSL_CALL_ID, S.CMDT_CD, D.HATCH_NO) AS SHIPG_NOTE_NO
		            FROM    TMT_SHIPG_NOTE_DTL D 
		                    INNER JOIN TMT_SHIPG_NOTE S ON D.VSL_CALL_ID = S.VSL_CALL_ID AND D.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
		            
		            WHERE   D.VSL_CALL_ID = #{vslCallId}
		                    AND S.STAT_CD = 'AP'
		                    AND D.HATCH_NO IS NOT NULL
		            GROUP BY    D.VSL_CALL_ID,
		                        S.CG_TP_CD,
		                        S.DELV_TP_CD,
		                        S.CMDT_CD,
		                        D.HATCH_NO
		)
		
		SELECT  DOC.VSL_CALL_ID,
		        DOC.CG_TP_CD,
		        DOC.CG_TP_NM,
		        DOC.DELV_TP_CD,
		        DOC.DELV_TP_NM,
		        DOC.CMDT_CD,
		        DOC.CMDT_DESC,
		        DOC.HATCH_NO,
		        
		        ISNULL(DOC.CG_WGT, 0) - (ISNULL(GV.CG_WGT, 0) + ISNULL(GW.CG_WGT, 0)) AS TOBE_RECV_WGT,
		        ISNULL(DOC.PKG_QTY, 0) - (ISNULL(GV.PKG_QTY, 0) + ISNULL(GW.PKG_QTY, 0)) AS TOBE_RECV_QTY,
		        
		        ISNULL(GV.CG_WGT, 0) + ISNULL(GW.CG_WGT, 0) AS TOTAL_WGT,
		        ISNULL(GV.PKG_QTY, 0) + ISNULL(GW.PKG_QTY, 0) AS TOTAL_QTY,
		        ISNULL(IO.CG_WGT, 0) AS ACT_WGT,
		        ISNULL(IO.PKG_QTY, 0) AS ACT_QTY,
		        
		        (ISNULL(GV.CG_WGT, 0) + ISNULL(GW.CG_WGT, 0)) - ISNULL(IO.CG_WGT, 0) AS BAL_WGT,
		        (ISNULL(GV.PKG_QTY, 0) + ISNULL(GW.PKG_QTY, 0)) - ISNULL(IO.PKG_QTY, 0) AS BAL_QTY,
		        
		        CASE
		                    WHEN ISNULL(GV.PKG_QTY, 0) != 0 OR ISNULL(GW.PKG_QTY, 0) != 0 THEN ROUND((CAST(ISNULL(IO.PKG_QTY, 0) AS FLOAT)/(ISNULL(GV.PKG_QTY, 0) + ISNULL(GW.PKG_QTY, 0))), 3)
		                    WHEN ISNULL(GV.CG_WGT, 0) != 0 OR ISNULL(GW.CG_WGT, 0) != 0 THEN ROUND((ISNULL(IO.CG_WGT, 0)/(ISNULL(GV.CG_WGT, 0) + ISNULL(GW.CG_WGT, 0))), 3)
		                    ELSE 0
		        END AS PERCENTAGE,
		                
		        CASE
		                    WHEN ISNULL(GV.PKG_QTY, 0) != 0 OR ISNULL(GW.PKG_QTY, 0) != 0 THEN FORMAT(ROUND((CAST(ISNULL(IO.PKG_QTY, 0) AS FLOAT)/(ISNULL(GV.PKG_QTY, 0) + ISNULL(GW.PKG_QTY, 0))), 3) * 100, 'N3', 'en-us') + '%'
		                    WHEN ISNULL(GV.CG_WGT, 0) != 0 OR ISNULL(GW.CG_WGT, 0) != 0 THEN FORMAT(ROUND((ISNULL(IO.CG_WGT, 0)/(ISNULL(GV.CG_WGT, 0) + ISNULL(GW.CG_WGT, 0))), 3) * 100, 'N3', 'en-us') + '%'
		                    ELSE FORMAT(0 * 100, 'N3', 'en-us') + '%'
		        END AS PERCENTAGE_STR
		
		        
		FROM    DOCUMENT_INFO DOC
		        LEFT OUTER JOIN GV_INFO GV
		            ON  DOC.VSL_CALL_ID = GV.VSL_CALL_ID
		                AND DOC.CMDT_CD = GV.CMDT_CD
		        LEFT OUTER JOIN GW_INFO GW
		            ON  DOC.VSL_CALL_ID = GW.VSL_CALL_ID
		                AND DOC.CMDT_CD = GW.CMDT_CD
		        LEFT OUTER JOIN IO_INFO IO
		            ON  DOC.VSL_CALL_ID = IO.VSL_CALL_ID
		                AND DOC.CMDT_CD = IO.CMDT_CD
		
		WHERE   DOC.VSL_CALL_ID = #{vslCallId}
		        AND DOC.HATCH_NO = #{hatchNo}
    </select>
</mapper>