<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Thu Jun 18 09:41:35 ICT 2015-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bl">
	<resultMap 	id="resultUnitItem" 	type="blItem">
   		<result property = "vslCd"			column = "VSL_CD"/>
   		<result property = "callYear"		column = "CALL_YEAR"/>
   		<result property = "callSeq"		column = "CALL_SEQ"/>
   		<result property = "vslCallId"		column = "VSL_CALL_ID"/>
   		<result property = "mfDocId"		column = "MF_DOC_ID"/>
   		<result property = "blNo"			column = "CG_NO"/>
   		<result property = "unitNo"			column = "CHAS_NO"/>
   		<result property = "brandCd"		column = "BRAND_CD"/>
   		<result property = "brandNm"		column = "BRAND_NM"/>
   		<result property = "modelCd"		column = "MODEL_CD"/>
   		<result property = "modelNm" 		column = "MODEL_NM"/>
   		<result property = "roroMt"			column = "DOC_WGT"/>
   		<result property = "cbm"			column = "CBM"/>
   		<result property = "newYn" 			column = "NEW_YN"/>
 	</resultMap>
 	
	<resultMap 	id="resultBlCargoDetailItem" 	type="blItem">
   		<result property = "vslCd"			column = "VSL_CD"/>
   		<result property = "callYear"		column = "CALL_YEAR"/>
   		<result property = "callSeq"		column = "CALL_SEQ"/>
   		<result property = "vslCallId"		column = "VSL_CALL_ID"/>
   		<result property = "mfDocId"		column = "MF_DOC_ID"/>
   		<result property = "blNo"			column = "BL_NO"/>
   		<result property = "blDtlSeq"		column = "SEQ"/>
   		<result property = "pkgQty"	 		column = "PKG_QTY"/>
   		<result property = "pkgTpCd"		column = "PKG_TP_CD"/>
   		<result property = "wgt"			column = "CG_WGT"/>
   		<result property = "msrmt" 			column = "CG_VOL"/>
   		<result property = "hatchNo"		column = "HATCH_NO"/>
   		<result property = "cmdtCd"			column = "CMDT_CD"/>
 	</resultMap>
 	
 	<resultMap 	id="resultPackageItem" 	type="blItem">
   		<result property = "callYear"		column = "CALL_YEAR"/>
   		<result property = "callSeq"		column = "CALL_SEQ"/>
   		<result property = "vslCallId"		column = "VSL_CALL_ID"/>
   		<result property = "mfDocId"		column = "MF_DOC_ID"/>
   		<result property = "blNo"			column = "REF_NO"/>
   		<result property = "pkgNo"			column = "PKG_NO"/>
   		<result property = "pkgDesc"		column = "PKG_DESC"/>
   		<result property = "pkgMt"			column = "CG_WGT"/>
   		<result property = "pkgM3"			column = "CG_VOL"/>
   		<result property = "width" 			column = "WIDTH"/>
   		<result property = "height"			column = "HEIGHT"/>
   		<result property = "length"			column = "LENGTH"/>
   		<result property = "orgBlNo"		column = "ORG_BL_NO"/>
   		<result property = "pkgRmk"		column = "RMK"/>
 	</resultMap>
	
	<select id="selectBLList" parameterType="blParm" resultType="blItem">
	 	<if test="pageNo != 0"> 
			SELECT /*bl.selectBLList*/
				* FROM (SELECT inner.*, rownum row_num FROM ( 
		</if>
				<include refid="getBLList"/>
		<if test="pageNo != 0"> 
				)inner 
			)inner 
			WHERE inner.row_num <![CDATA[>]]> (TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo}))-1)* TO_NUMBER(#{sizePerPage}) 
		  	AND inner.row_num <![CDATA[<=]]> TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo})) * TO_NUMBER(#{sizePerPage})
		</if>
	</select>

	<sql id="getBLList">
		SELECT
	        docId,
	        jobNo, 
	        regNo,
	        docStatCd,
	        docStatNm,
	        blNo, 
	        gdsRmk,
	        pol, 
	        pod,
	        polNm, 
	        podNm, 
	        fnlPortCd,
	        fnlPortNm,
	        vslCallId,
	        shipCallNo,
	        vslNm,
	        mfDocId,
	        mfJobNo,
	        mfStatus,
	        mfStatusNm,
	        userDefNo,
	        vslCd,
	        callYear,
	        callSeq,
	        voyage,
	        rmk,
	        cgTpCd,
	        cgClassCd,
	        pkgTpCd,
	        pkgTpNm,
	        pkgQty,
	        custGdsRmk,
	        shaNm,
	        shaCd,
	        markNo,
	        eachWgt, 
	        eachVol, 
	        parentId, 
	        parentCgTp,
	        cgWidth,
	        cgHeight,
			cgLength, 
			freighTon,
	        wgt,
			vol,
			splitCgVol,
			splitCgWgt,
			splitPkgQty,
	        CUSTREF,
	        shpr,
	        shprNm,
	        shprAddr,
	        cnsne,
	        cnsneNm,
	        cnsneAddr,
	        fwdCd, 
	        fwdNm,
	        SCN,
	        imdgClass,
	        unno,
	        imdgunno,
	        validYn,
	        cnntVslCd,
	        delvTpCd,
	        catgCd,
	        opClassCd,
	        cmdtGrpCd,
	        cmdtGrpNm,
			cmdtCd,
			cmdtCdNm,
			hsCode,
			oldBlNo,
			oldMfDocId,
			insDate, 
			insUserId, 
			updDate, 
			updUserId,
			opClassNm,
			delvTpNm,
			cgTpNm,
			hatchNo,
			domesticChk,
			vslTp,
			projectCargo,
			wgtChk,
			orgBlNo,
			orgWgt,
			orgVol,
			orgPkgQty,
			bondedWhYn,
			additionalChk,
			lotNo,
			tsptTpCd,
			disWgt,
			disVol,
			disPkgQty,
			doNo
	    FROM (
	        SELECT
				'' docId,
				'' jobNo,
				'' regNo,
				BL.STAT_CD AS docStatCd,
				DECODE(BL.STAT_CD, 
					'AP',
					'Approved',
					'CF',
					'Confirmed',
					'SP',
					'Splitted',
					'Submitted'
				) AS docStatNm,
				BL.CATG_CD AS catgCd, 
				DECODE(BL.CATG_CD, 
					'I',
					'Import',
					'T',
					'Transshipment',
					'Transit'
				) AS catgNm,
				BL.OP_CLASS_CD AS opClassCd,
				DECODE(BL.OP_CLASS_CD, 
					'I',
					'Import',
					'T',
					'Transshipment',
					'Transit'
				) AS opClassNm,
				BL.BL_NO blNo,
				BL.BL_NO oldBlNo,
				BL.GDS_RMK gdsRmk,
				BL.POL pol,
				(SELECT PORT_NM FROM TMT_PORT_MST WHERE BL.POL = (CNTRY_CD || PORT_CD) AND ROWNUM=1) AS polNm,
				BL.POD pod,
				(SELECT PORT_NM FROM TMT_PORT_MST WHERE BL.POD = (CNTRY_CD || PORT_CD) AND ROWNUM=1) AS podNm,
				BL.FND as fnlPortCd,
	            (SELECT PORT_NM FROM TMT_PORT_MST WHERE BL.FND = (CNTRY_CD || PORT_CD) AND ROWNUM=1) AS fnlPortNm,
	            SCH.SHIP_CALL_NO shipCallNo, 
	            PART.VSL_NM vslNm,
	            BL.MF_DOC_ID mfDocId, 
	            BL.MF_DOC_ID oldMfDocId, 
	            '' mfJobNo,
	            '' mfStatus,
	            '' mfStatusNm,
	            '' userDefNo,
	            BL.VSL_CD vslCd, 
	            BL.CALL_YEAR callYear, 
	            BL.CALL_SEQ callSeq, 
	            SCH.INB_VOY voyage, 
	            BL.MARK_NO as markNo,
	            BL.EACH_WGT eachWgt, 
	            BL.EACH_VOL eachVol, 
	            BL.PARENT_ID parentId, 
	            BL.PARENT_CG_TP parentCgTp,
	            BL.WIDTH cgWidth, 
	            BL.HEIGHT cgHeight, 
	            BL.LENGTH cgLength, 
	            BL.FREIGHT_TON freighTon,
	            '' rmk,
	            BL.CG_TP_CD cgTpCd, 
	            '' cgClassCd, 
	            BL.PKG_TP_CD pkgTpCd, 
	            (SELECT S_CD_NM FROM TMT_CD_MSTD WHERE L_CD = 'MT' AND M_CD = 'PKGTP' AND S_CD_USE = 'Y' AND  S_CD = BL.PKG_TP_CD) pkgTpNm,
	            NVL(BL.PKG_QTY,'0') pkgQty, 
	            NVL(BL.PKG_QTY,'0') orgPkgQty, 
				TRIM(TO_CHAR(NVL(BL.CG_WGT,'0'), '99999999.999')) wgt,
				TRIM(TO_CHAR(NVL(BL.CG_WGT,'0'), '99999999.999')) orgWgt,
				NVL (BL.CG_VOL, '0') vol,
				NVL (BL.CG_VOL, '0') orgVol,
				NVL(BL.SPLIT_PKG_QTY,'0') splitPkgQty, 
				TRIM(TO_CHAR(NVL(BL.SPLIT_CG_WGT,'0'), '99999999.999')) splitCgWgt,
				NVL (BL.SPLIT_CG_VOL, '0') splitCgVol,
	       		'' custGdsRmk,
	       		PTNR.ENG_SNM shaNm,
	            PTNR.AGENCY_CODE shaCd,
	            '' CUSTREF,
	            BL.SHPR AS shpr,
			    (SELECT ENG_SNM FROM TMT_PTNR WHERE BL.SHPR = PTNR_CODE AND ROWNUM=1) AS shprNm,
			    (SELECT ADDR FROM TMT_PTNR WHERE BL.SHPR = PTNR_CODE AND ROWNUM=1) AS shprAddr,
			    BL.CNSNE AS cnsne,
			    (SELECT ENG_SNM FROM TMT_PTNR WHERE BL.CNSNE = PTNR_CODE AND ROWNUM=1) AS cnsneNm,
			    (SELECT ADDR FROM TMT_PTNR WHERE BL.CNSNE = PTNR_CODE AND ROWNUM=1) AS cnsneAddr,
			    BL.FWRD fwdCd,
			    (SELECT ENG_SNM FROM TMT_PTNR WHERE PTNR_TYPE = 'FWD' AND PTNR_CODE = BL.FWRD AND ROWNUM=1) AS fwdNm,
			    SCH.VSL_CALL_ID vslCallId,
			    SCH.SHIP_CALL_NO SCN, 
			    BL.IMDG_CLASS imdgClass, 
			    BL.UNNO unno,
			    BL.WGT_CHK wgtChk,
			    CASE
					WHEN BL.IMDG_CLASS IS NOT NULL AND BL.UNNO IS NOT NULL THEN BL.IMDG_CLASS || '/' || BL.UNNO 
					ELSE NULL
				END AS imdgunno, 
				'' validYn, 
				'' cnntVslCd, 
				BL.DELV_TP_CD delvTpCd, 
				DECODE(BL.DELV_TP_CD, 
					'I',
					'Indirect',
					'D',
					'Direct',
					'Both Direct and Indirect'
				) AS delvTpNm,
				BL.CMDT_GRP_CD cmdtGrpCd,
				(SELECT CMDT_GRP_DESC FROM TMT_CMDT WHERE CMDT_CD = BL.CMDT_CD AND CMDT_GRP_CD = BL.CMDT_GRP_CD AND ROWNUM=1) CMDTGRPNM,
				BL.CMDT_CD cmdtCd,
				(SELECT CMDT_DESC FROM TMT_CMDT CMDT WHERE CMDT.CMDT_CD = BL.CMDT_CD AND ROWNUM=1) AS CMDTCDNM,
				BL.HS_CODE hsCode, 
				F_CM_001('MT', 'CGTP', bl.CG_TP_CD) cgTpNm,
				BL.UPDATE_TIME insDate, 
				BL.STAFF_CD insUserId, 
				BL.UPDATE_TIME updDate, 
				BL.STAFF_CD updUserId,
				BL.ORG_BL_NO orgBlNo,
				DECODE(BL.DOMESTIC_CHK, 'Y', 'Domestic Cargo', ' ') domesticChk,
				PART.VSL_TP vslTp,
				BL.PROJECT_CARGO projectCargo,
				DECODE(BL.BONDED_WH_YN, 'Y', 'Y', '') bondedWhYn,
				BL.ADDITIONAL_CHK additionalChk,
				BL.LOT_NO lotNo,
				(
					SELECT  LISTAGG(DBL.HATCH_NO, ',') 
						WITHIN GROUP (
						ORDER BY 
							DBL.VSL_CD,
							DBL.CALL_YEAR,
							DBL.CALL_SEQ, 
							DBL.VSL_CALL_ID,
							DBL.MF_DOC_ID, 
							DBL.BL_NO
						) 
                	FROM TMT_BL_DTL DBL
                 	WHERE 1 = 1
                    AND DBL.VSL_CD = BL.VSL_CD
                    AND DBL.CALL_YEAR = BL.CALL_YEAR
                    AND DBL.CALL_SEQ = BL.CALL_SEQ
                    AND DBL.VSL_CALL_ID = BL.VSL_CALL_ID 
                    AND DBL.MF_DOC_ID = BL.MF_DOC_ID
                    AND DBL.BL_NO = BL.BL_NO
  				) HATCHNO,
  				BL.TSPT_TP_CD tsptTpCd,
  				(
  					SELECT SUM(NVL(CG_WGT, 0)) 
  					FROM TMT_JOB 
  					WHERE VSL_CALL_ID = BL.VSL_CALL_ID 
	  				AND CG_NO = BL.BL_NO 
	  				AND (DELV_TP_CD = 'D' AND JOB_PURP_CD = 'VG'
	  					OR
	  					DELV_TP_CD = 'I' AND JOB_PURP_CD = 'AW'
	  				)
	  			) AS DISWGT,
  				(
  					SELECT SUM(NVL(CG_VOL, 0)) 
  					FROM TMT_JOB 
  					WHERE VSL_CALL_ID = BL.VSL_CALL_ID 
  					AND CG_NO = BL.BL_NO 
  					AND (DELV_TP_CD = 'D' AND JOB_PURP_CD = 'VG'
	  					OR
	  					DELV_TP_CD = 'I' AND JOB_PURP_CD = 'AW'
	  				)
  				) AS DISVOL,
  				(
  					SELECT SUM(NVL(PKG_QTY, 0)) 
  					FROM TMT_JOB 
  					WHERE VSL_CALL_ID = BL.VSL_CALL_ID 
  					AND CG_NO = BL.BL_NO 
  					AND (DELV_TP_CD = 'D' AND JOB_PURP_CD = 'VG'
	  					OR
	  					DELV_TP_CD = 'I' AND JOB_PURP_CD = 'AW'
	  				)
  				) AS DISPKGQTY,
  				(SELECT DO_NO FROM TMT_DO WHERE VSL_CALL_ID = BL.VSL_CALL_ID AND BL_NO = BL.BL_NO) AS DONO
	        FROM 	TMT_BL BL
		            LEFT OUTER JOIN TMT_VSL_SCH SCH ON BL.VSL_CALL_ID = SCH.VSL_CALL_ID
		            LEFT OUTER JOIN TMT_VSL_PART PART ON SCH.VSL_CD = PART.VSL_CD
		            LEFT OUTER JOIN TMT_AGENCY_INFO PTNR ON SCH.ARRV_SA_ID = PTNR.AGENCY_CODE
	        
	        WHERE 
	        <choose>
		        <when test='splitChk=="Y"'>
					BL.ORG_BL_NO IS NOT NULL
				</when>
				<otherwise>
					BL.ORG_BL_NO IS NULL
				</otherwise>
			</choose>
			<if test="vslCallId !=null and vslCallId != ''">
				AND SCH.VSL_CALL_ID = #{vslCallId}
			</if>
			<if test="mfDocId !=null and mfDocId != ''">
				AND BL.MF_DOC_ID LIKE '%' || #{mfDocId} || '%'
			</if>
			<if test="blNo!=null and blNo!=''">
				<choose>
					<when test='splitChk=="Y"'>
						AND BL.ORG_BL_NO LIKE '%' || #{blNo} || '%'
					</when>
					<otherwise>
						AND BL.BL_NO LIKE '%' || #{blNo} || '%'
					</otherwise>
				</choose>
			</if>
			<if test="docStatCd!=null and docStatCd!=''">
				AND BL.STAT_CD = #{docStatCd}
			</if>
			<if test="userDefNo!=null and userDefNo!=''">
				AND BL.LOT_NO LIKE '%' || #{userDefNo} || '%'
			</if>
			<if test="docStatFromDate!= null  and docStatFromDate!= ''" >
				AND BL.UPDATE_TIME &gt;=  TO_DATE(#{docStatFromDate} || ' 00:00','DD/MM/YYYY HH24:MI') 
			</if>
			<if test="docStatToDate != null and docStatToDate != ''" >
				AND BL.UPDATE_TIME &lt;=  TO_DATE(#{docStatToDate} || ' 23:59','DD/MM/YYYY HH24:MI') 
			</if>
			<if test="ptnrCd != '' and ptnrCd != null">
				AND PTNR.PTNR_TYPE = #{ptnrCd}
			</if>
			<if test="shaCd !=null and shaCd != ''">
				AND PTNR.AGENCY_CODE = #{shaCd}
			</if>
			<if test="blDocId !=null and blDocId != ''">
				AND BL.OP_CLASS_CD = #{blDocId}
			</if>
			<if test="extUserCNSCd !=null and extUserCNSCd != ''">
				AND BL.CNSNE = #{extUserCNSCd}
			</if>
		)
		WHERE 1=1
	</sql>
	
	<select id="selectBLListCount" parameterType="blParm" resultType="java.lang.String" >
    	SELECT COUNT(*)
        	FROM (<include refid="getBLList"/>)
	</select>
	
	<select id="checkBLNo" parameterType="blParm" resultType="blItem">
		SELECT /*bl.checkBLNo*/
			BL_NO blNo
		FROM TMT_BL
		WHERE STAT_CD NOT IN ('DE','CA') 
		AND BL_NO = #{blNo}
		AND (VSL_CD, CALL_YEAR, CALL_SEQ) IN (SELECT VSL_CD, CALL_YEAR, CALL_SEQ FROM TMT_VSL_SCH WHERE VSL_CALL_ID = #{vslCallId})
	</select>
		
	<select id="selectBLListForMf" parameterType="blParm" resultType="blItem">
		SELECT /*bl.selectBLListForMf*/
			HDR.DOC_ID docId,
			HDR.JOB_NO jobNo,
			HDR.USER_DEF_NO regNo,
			BL.BL_NO blNo, 
			BL.HBL_NO hblNo,
			BL.GDS_RMK gdsRmk,
			DECODE (BL.CG_INOUT_TP, #{cgInOutTp}, BL.POL, BL.POD) pold,
			DECODE (BL.CG_INOUT_TP, #{cgInOutTp}, CONSIGNEE.PTNR_NM, CONSIGNOR.PTNR_NM) consNm,
			FAGENT.PTNR_NM fwdNm,
			FAGENT.PTNR_CD fwdCd,
			HDR.DOC_STAT_CD docStatCd,
			BL.VALID_YN validYn
		FROM TMT_BL BL,
	       TMT_DOC_HDR HDR,
	       TMT_DOC_PTNR_ROLE_DEF CONSIGNEE,
	       TMT_DOC_PTNR_ROLE_DEF CONSIGNOR,
	       TMT_DOC_PTNR_ROLE_DEF FAGENT,
	       TMT_DOC_PTNR_ROLE_DEF SAGENT
		WHERE BL.DOC_ID = HDR.DOC_ID
		AND BL.JOB_NO = HDR.JOB_NO
	    AND BL.DOC_ID = CONSIGNEE.DOC_ID
	    AND BL.JOB_NO = CONSIGNEE.JOB_NO
	    AND BL.DOC_ID = CONSIGNOR.DOC_ID
	    AND BL.JOB_NO = CONSIGNOR.JOB_NO
	    AND BL.DOC_ID = FAGENT.DOC_ID
	    AND BL.JOB_NO = FAGENT.JOB_NO
	    AND BL.DOC_ID = SAGENT.DOC_ID
	    AND BL.JOB_NO = SAGENT.JOB_NO
	    AND CONSIGNEE.ROLE_CD = 'CNSNEE'
	    AND CONSIGNOR.ROLE_CD = 'CNSNOR'
	    AND FAGENT.ROLE_CD = 'FWDAGN'
	    AND SAGENT.ROLE_CD = 'SHPAGN'
	    AND BL.DOC_ID = #{docId}
	    AND SAGENT.PTNR_CD = #{ptnrCd}
	    AND BL.VSL_CD = #{vslCd}
	    AND BL.CALL_YEAR = #{callYear}
	    AND BL.CALL_SEQ = #{callSeq}
	    AND BL.CG_INOUT_TP = #{cgInOutTp}
	    AND BL.MF_JOB_NO IS NULL
	    <if test="userDefNo!=null and userDefNo!=''">
			AND HDR.USER_DEF_NO  LIKE #{userDefNo} || '%'
		</if>
	    AND ( BL.HBL_NO LIKE #{blNo} || '%'
		OR BL.BL_NO LIKE #{blNo} || '%'
	    OR BL.HBL_NO IS NULL
	    OR BL.BL_NO IS NULL)
	    AND HDR.DOC_STAT_CD NOT IN ('DE', 'CA')
	    AND BL.VALID_YN = 'Y'
	</select>
	
	<select id="selectMfBLList" parameterType="blParm" resultType="blItem">
		SELECT /*bl.selectMfBLList*/
			BL.DOC_ID AS docId,                              
			BL.JOB_NO AS jobNo,                              
			HDR.REG_NO AS regNo,                             
			SAGENT.PTNR_NM AS shpagnNm,                
			HDR.DOC_STAT_CD AS doctStatCd,                        
			HDR.DOC_STAT_DTM AS docStatDtm                       
		FROM                                        
			TMT_BL BL,                              
			TMT_DOC_HDR HDR,                        
			TMT_DOC_PTNR_ROLE_DEF SAGENT            
		WHERE                                       
		    HDR.DOC_ID          = BL.DOC_ID         
		    AND HDR.JOB_NO      = BL.JOB_NO         
		    AND HDR.DOC_ID      = SAGENT.DOC_ID     
		    AND HDR.JOB_NO      = SAGENT.JOB_NO     
		    AND SAGENT.ROLE_CD  = 'SHPAGN'          
		    AND BL.MF_DOC_ID    =  #{mfDocId}             
		    AND BL.MF_JOB_NO    =  #{mfJobNo}
	</select>
	
	<select id="selectNewBLJobNo" parameterType="blParm" resultType="blItem">
		SELECT '14444' jobNo from dual
	</select>
	
	<insert id="insertDocBL" parameterType="blItem">
		INSERT /*bl.insertDocBL*/
		INTO TMT_BL(
			VSL_CD, 
			CALL_SEQ, 
			CALL_YEAR, 
			VSL_CALL_ID, 
			MF_DOC_ID, 
		    BL_NO, 
		    CG_TP_CD, 
		    CMDT_GRP_CD,
		    CMDT_CD, 
		    TSPTR, 
		    DELV_TP_CD, 
		    TSPT_TP_CD, 
		    FDEST, 
		    CATG_CD, 
		    DG_SEQ, 
		    PKG_QTY, 
		    PKG_TP_CD,
		    FWRD,
		    CG_WGT, 
		    CG_VOL,
		    GDS_RMK, 
		    MARK_NO,
		    POL, 
		    POD, 
		    FND,
		    OP_CLASS_CD, 
		    IMDG_CLASS, 
		    UNNO, 
		    CUSTOMS_APRV_DT, 
		    CUSTOMS_APRV_STAT, 
		    CUST_DECL_NO, 
		    UPDATE_TIME, 
		    STAFF_CD,
		    VERSION, 
		    CNSNE,
		    SHPR,
		    HS_CODE,
		    EACH_WGT, 
		    EACH_VOL, 
		    PARENT_ID, 
		    PARENT_CG_TP,
		    WIDTH, 
		    HEIGHT, 
		    LENGTH, 
		    FREIGHT_TON,
		    STAT_CD,
		    DOMESTIC_CHK,
		    PROJECT_CARGO,
		    WGT_CHK,
		    ORG_BL_NO,
		    SPLIT_CG_WGT,
		    SPLIT_CG_VOL,
		    SPLIT_PKG_QTY,
		    BONDED_WH_YN,
		    ADDITIONAL_CHK,
		    LOT_NO
		) Values (
			#{vslCd}, 
			#{callSeq}, 
			#{callYear}, 
			#{vslCallId}, 
			#{mfDocId}, 
		    #{blNo}, 
		    #{cgTpCd},
		    #{cmdtGrpCd},
		    #{cmdtCd}, 
		    #{tsptr}, 
		    #{delvTpCd}, 
		    #{tsptTpCd}, 
		    #{fDest}, 
		    #{opClassCd}, 
		    #{dgSeq}, 
		    #{pkgQty}, 
		    #{pkgTpCd},
		    #{fwrd}, 
		    #{wgt},
		    #{vol},
		    #{gdsRmk},
		    #{markNo},
		    #{pol}, 
		    #{pod},
		    #{fnlPortCd}, 
		    #{opClassCd}, 
		    #{imdgClass}, 
		    #{unno}, 
		    #{customsAprvDt}, 
		    #{customsAprvStat}, 
		    #{custDeclNo}, 
		    SYSDATE, 
		    #{userId}, 
		    #{version}, 
		    #{cnsne}, 
		    #{shpr},
		    #{hsCode}, 
		    #{eachWgt}, 
		    #{eachVol}, 
		    #{parentId},  
		    #{parentCgTp},
		    #{cgWidth}, 
		    #{cgHeight}, 
		    #{cgLength}, 
		    #{freighTon},
		    #{docStatCd},
		    #{domesticChk},
		    #{projectCargo},
		    #{wgtChk},
		    #{orgBlNo},
		    <choose>
				<when test='changeSplit == "Y"'>
					'0',
					'0',
					'0',
				</when>
				<otherwise>
					#{splitCgWgt},
				    #{splitCgVol},
				    #{splitPkgQty},
				</otherwise>
			</choose>
		    #{bondedWhYn},
		    #{additionalChk},
		    #{lotNo}
		)
	</insert>
	
	<update id="updateDocBL" parameterType="blItem">
		UPDATE /*bl.updateDocBL*/
		TMT_BL SET 
			CG_TP_CD = #{cgTpCd},
			CMDT_GRP_CD = #{cmdtGrpCd},
			CMDT_CD = #{cmdtCd},
			TSPTR = #{tsptr},
			DELV_TP_CD = #{delvTpCd},
			TSPT_TP_CD = #{tsptTpCd},
			FDEST = #{fDest},
			DG_SEQ = #{dgSeq},
			PKG_QTY = #{pkgQty},
			PKG_TP_CD = #{pkgTpCd},
			FWRD = #{fwrd},
			CG_WGT = #{wgt},
			CG_VOL = #{vol},
			GDS_RMK = #{gdsRmk},
			MARK_NO = #{markNo},
			POL = #{pol},
			FND = #{fnlPortCd},
			POD = #{pod},
			CATG_CD = #{opClassCd},
			OP_CLASS_CD = #{opClassCd},
			IMDG_CLASS = #{imdgClass},
			UNNO = #{unno},
			CUSTOMS_APRV_DT = #{customsAprvDt},
			CUSTOMS_APRV_STAT = #{customsAprvStat},
			CUST_DECL_NO = #{custDeclNo},
			STAT_CD = #{docStatCd},
			STAFF_CD  = #{userId},
			UPDATE_TIME = SYSDATE,
			VERSION = #{version},
			CNSNE = #{cnsne},
			SHPR = #{shpr},
			EACH_WGT = #{eachWgt}, 
			EACH_VOL = #{eachVol},
			PARENT_ID = #{parentId}, 
			PARENT_CG_TP = #{parentCgTp},
		    WIDTH = #{cgWidth}, 
		    HEIGHT = #{cgHeight}, 
		    LENGTH = #{cgLength}, 
		    FREIGHT_TON = #{freighTon},
			HS_CODE = #{hsCode},
		    BL_NO = #{blNo},
		    MF_DOC_ID = #{mfDocId},
		    DOMESTIC_CHK = #{domesticChk},
		    PROJECT_CARGO = #{projectCargo},
		    WGT_CHK = #{wgtChk},
		    BONDED_WH_YN = #{bondedWhYn},
		    ADDITIONAL_CHK = #{additionalChk},
		    LOT_NO = #{lotNo},
		    SPLIT_CG_WGT = CASE WHEN ORG_BL_NO IS NOT NULL THEN #{wgt} ELSE NULL END,
		    SPLIT_CG_VOL = CASE WHEN ORG_BL_NO IS NOT NULL THEN #{vol} ELSE NULL END,
		    SPLIT_PKG_QTY = CASE WHEN ORG_BL_NO IS NOT NULL THEN #{pkgQty} ELSE NULL END
		WHERE BL_NO = #{oldBlNo} 
		AND VSL_CALL_ID = #{vslCallId} 
		AND MF_DOC_ID = #{oldMfDocId}
	</update>
	
	<select id="selectContainerList" parameterType="java.util.Map" resultType="blItem">
		SELECT /*bl.selectContainerList*/
			CNTR_NO cntrNo, 
			CNTR_SZTP "size", 
			FCL_LCL_TP_CD type,
			(SELECT S_CD_NM packageNm FROM TCM_CD_MSTD WHERE L_CD = 'CM' AND M_CD = 'FETP' AND S_CD_USE = 'Y' and  S_CD = FCL_LCL_TP_CD) cntrTypeNm,
			SEAL_NO sealNo 
		FROM TMT_CNTR_LST_BL 
		where DOC_ID =#{docId} 
		AND JOB_NO = #{jobNo}
	</select>
	
	<select id="selectRoRoItems" parameterType="blParm" resultMap="resultUnitItem">
		SELECT 	DISTINCT /*bl.selectRoRoItems*/
			R.VSL_CD
			,R.CALL_YEAR
			,R.CALL_SEQ
			,R.VSL_CALL_ID
			,R.MF_DOC_ID
			,R.CG_NO
			,R.CHAS_NO
			,R.SEQ
			,R.BRAND_CD
			,R.MODEL_CD
			,B.BRAND_NM
			,M.MODEL_NM
			,R.DOC_WGT
			,R.CBM
			,R.NEW_YN
		FROM TMT_BL_DTL R 
			LEFT OUTER JOIN TMT_BRAND B ON R.BRAND_CD = B.BRAND_CD
			LEFT OUTER JOIN TMT_BRAND_DTL M  ON R.MODEL_CD = M.MODEL_CD AND R.BRAND_CD = M.BRAND_CD
			<if test="sdoNo !=null and sdoNo !=''">
				LEFT JOIN TMT_RORO_MST RM ON RM.VSL_CALL_ID = R.VSL_CALL_ID 
					AND RM.CG_NO = R.CG_NO 
					AND RM.CHAS_NO IN (SELECT CHAS_NO FROM TMT_BL_DTL BD WHERE BD.CHAS_NO = R.CHAS_NO)
			</if>
			 LEFT OUTER JOIN TMT_DO D ON R.VSL_CALL_ID = D.VSL_CALL_ID AND R.BL_NO = D.BL_NO
		WHERE 1=1
		<if test="vslCallId !=null and vslCallId !=''">
			AND R.VSL_CALL_ID = #{vslCallId}
		</if>
		<if test="mfDocId !=null and mfDocId !=''">
			AND R.MF_DOC_ID = #{mfDocId}
		</if>
		<if test="blNo !=null and blNo !=''">
			AND R.CG_NO = #{blNo}
		</if>
		<if test="sdoNo !=null and sdoNo !=''">
			AND RM.SDO_NO = #{sdoNo}
		</if>
		<if test="doNo !=null and doNo !=''">
			and R.CHAS_NO NOT IN (SELECT CHAS_NO FROM TMT_RORO_MST RM WHERE RM.CHAS_NO = R.CHAS_NO and RM.CG_NO = R.CG_NO AND RM.SDO_NO IS NOT NULL)
		</if>
		ORDER BY R.CHAS_NO ASC
	</select>
	
	<select id="selectPackageItems" parameterType="blParm" resultMap="resultPackageItem">
		SELECT	/*bl.selectPkgDetail*/
				CALL_YEAR, 
				CALL_SEQ, 
				VSL_CALL_ID, 
				PKG_NO, 
				PKG_DESC, 
				CG_WGT, 
				CG_VOL, 
				WIDTH, 
				LENGTH, 
				HEIGHT,
				ORG_BL_NO,
				RMK
		FROM TMT_PKG_INFO
		WHERE VSL_CALL_ID= #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
		AND (REF_NO = #{blNo} or ORG_BL_NO = #{blNo})
<!-- 		AND ORG_BL_NO IS NULL -->
	</select>
	
	<select id="selectSplitPackageItems" parameterType="blParm" resultMap="resultPackageItem">
		SELECT 	/*bl.selectSplitPackageItems*/
				CALL_YEAR, 
				CALL_SEQ, 
				VSL_CALL_ID, 
				PKG_NO, 
				PKG_DESC, 
				CG_WGT, 
				CG_VOL, 
				WIDTH, 
				LENGTH, 
				HEIGHT,
				ORG_BL_NO
		FROM TMT_PKG_INFO
		WHERE VSL_CALL_ID= #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
		AND REF_NO = #{blNo}
		AND ORG_BL_NO IS NOT NULL
	</select>
	
	<insert id="insertRoRoItems" parameterType="blItem">
		INSERT /*bl.insertRoRoItems*/
		INTO TMT_BL_DTL (
			VSL_CD,
			CALL_YEAR,
			CALL_SEQ,
			VSL_CALL_ID,
			MF_DOC_ID,
			BL_NO,
			CG_NO,
			CMDT_CD,
			CHAS_NO,
			SEQ,
			BRAND_CD,
			MODEL_CD,
			PKG_TP_CD,
			DOC_WGT,
			CBM,
			CATG_CD,
			CG_TP_CD,
			IX_CD,
			NEW_YN,
			STAT_CD,
			STAFF_CD,
			UPDATE_TIME
		) VALUES (     
			#{vslCd}
			,#{callYear}
			,#{callSeq}
			,#{vslCallId}
			,#{mfDocId}
			,#{blNo}
			,#{blNo}
			,#{cmdtCd}
			,#{unitNo}
			,(SELECT DECODE(MAX(SEQ), NULL, 1, MAX(SEQ)+ 1) FROM TMT_BL_DTL)
			,#{brandCd}
			,#{modelCd}
			,#{pkgTpCd}
			,#{roroMt}
			,#{cbm}
			,#{opClassCd}
			,#{cgTpCd}
			,#{ixCd}
			,#{newYn}
			,'RS'
			,#{userId}
			,SYSDATE
		)
	</insert>
	
	<insert id="insertRoRoMSTItems" parameterType="blItem">
		INSERT /*roro.insertRoRoItems*/
		INTO TMT_RORO_MST (
			VSL_CD,
			CALL_YEAR,
			CALL_SEQ,
			VSL_CALL_ID,
			MF_DOC_ID,
			SDO_NO,
			DO_NO,
			CG_NO,
			CHAS_NO,
			RORO_SEQ,
			BRAND_CD,
			MODEL_CD,
			DOC_WGT,
			CBM,
			CATG_CD,
			CG_TP_CD,
			IX_CD,
			NEW_YN,
			STAT_CD,
			STAFF_CD,
			UPDATE_TIME
		) VALUES (     
			#{vslCd}
			,#{callYear}
			,#{callSeq}
			,#{vslCallId}
			,#{mfDocId}
			,#{sdoNo}
			,#{doNo}
			,#{blNo}
			,#{unitNo}
			,(SELECT    RTRIM(LTRIM(TO_CHAR(MAX(A.roroSeq),'0000'))) roroSeq
                        FROM (
                                SELECT    CAST(MAX(RORO_SEQ) AS INT) + 1 as roroSeq
                                FROM    TMT_RORO_MST
                                WHERE   VSL_CALL_ID     =  #{vslCallId}
                                        AND MF_DOC_ID  =  #{mfDocId}
                                        <if test="blNo != null and blNo != ''">
											AND CG_NO   =  #{blNo}
										</if>
                                UNION
                                SELECT 1 roroSeq from dual) A)
			,#{brandCd}
			,#{modelCd}
			,#{roroMt}
			,#{cbm}
			,#{opClassCd}
			,#{cgTpCd}
			,#{ixCd}
			,#{newYn}
			,'RS'
			,#{userId}
			,SYSDATE
		)
	</insert>
	
	<update id="updateRoRoItems" parameterType="blItem">
		UPDATE /*bl.updateRoRoItems*/
		TMT_RORO_MST SET 
			SDO_NO = #{sdoNo}, 
			DO_NO = #{doNo},
			DOC_WGT = #{roroMt},
			CBM = #{cbm},
			STAFF_CD = #{userId},
			UPDATE_TIME = SYSDATE
		WHERE VSL_CALL_ID = #{vslCallId} 
		AND CG_NO = #{blNo}
		AND CHAS_NO= #{unitNo} 
	</update>
	
	<delete id="deleteRoRoItems" parameterType="blItem">
		DELETE /*bl.deleteRoRoItems*/
		FROM TMT_BL_DTL
		WHERE VSL_CALL_ID =  #{vslCallId}
		AND MF_DOC_ID =  #{mfDocId}
		AND CG_NO =  #{blNo}
		AND IX_CD = 'I'
	</delete>
	
	<select id="selectBlCargoDetail" parameterType="blParm" resultMap="resultBlCargoDetailItem">
		SELECT 	 /*bl.selectBlCargoDetail*/
			VSL_CD,
            CALL_YEAR,
            CALL_SEQ,
            VSL_CALL_ID,
            CMDT_CD,
            MF_DOC_ID,
            BL_NO,
            SEQ,
            CG_WGT,
            CG_VOL,
            PKG_QTY,
            PKG_TP_CD,
            HATCH_NO
		FROM TMT_BL_DTL 
		WHERE VSL_CALL_ID = #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
		AND BL_NO = #{blNo}
		ORDER BY SEQ
	</select>
	
	<insert id="insertBlCargoDetailItems" parameterType="blItem">
		INSERT /*bl.insertBlCargoDetailItems*/
		INTO TMT_BL_DTL (
			VSL_CD,
            CALL_YEAR,
            CALL_SEQ,
            VSL_CALL_ID,
            MF_DOC_ID,
            BL_NO,
            SEQ,
            CMDT_CD,
            PKG_QTY,
            PKG_TP_CD,
            CG_WGT,
            CG_VOL,
            HATCH_NO,
            STAFF_CD,
            UPDATE_TIME
		) VALUES (  
			#{vslCd}
            ,#{callYear}
            ,#{callSeq}
            ,#{vslCallId}
            ,#{mfDocId}
            ,#{blNo}
            ,(SELECT DECODE(MAX(SEQ), NULL, 1, MAX(SEQ)+ 1) FROM TMT_BL_DTL WHERE VSL_CALL_ID =  #{vslCallId} AND MF_DOC_ID =  #{mfDocId} AND BL_NO =  #{blNo})
            ,#{cmdtCd}
            ,#{pkgQty}
            ,#{pkgTpCd}
            ,#{wgt}
            ,#{msrmt}
            ,#{hatchNo}
            ,#{userId}
            ,SYSDATE
		)
	</insert>
	
	<insert id="insertPackageItems" parameterType="blItem">
		INSERT /*bl.insertPackageItems*/
		INTO TMT_PKG_INFO (
			VSL_CD,
			CALL_YEAR,
			CALL_SEQ,
			VSL_CALL_ID,
			REF_NO,
			MF_DOC_ID,
			PKG_NO,
			PKG_DESC,
			PKG_TP_CD,
			CG_VOL,
			CG_WGT,
			HEIGHT,
			LENGTH,
			WIDTH,
			OPE_CLASS_CD,
			ORG_BL_NO,
			UPDATE_TIME,
			STAFF_CD,
			RMK
		) VALUES (
			#{vslCd}
			,#{callYear}
			,#{callSeq}
			,#{vslCallId}
			,#{blNo}
			,UPPER(#{mfDocId})
			,#{pkgNo}
			,#{pkgDesc}
			,#{pkgTpCd}
			,#{pkgM3}
			,#{pkgMt}
			,#{height}
			,#{length}
			,#{width}
			,#{opClassCd}
			,#{orgBlNo}
			,SYSDATE
			,#{userId}
			,#{pkgRmk}
		) 
	</insert>
	
	<update id="updatePackageItems" parameterType="blItem">
		UPDATE /* bl.updatePackageItems */
		TMT_PKG_INFO SET
			REF_NO = #{blNo},
			ORG_BL_NO = #{orgBlNo},
			CG_WGT = #{pkgMt},
			CG_VOL = #{pkgM3},
			PKG_QTY = #{pkgQty}
		WHERE VSL_CALL_ID = #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
		AND PKG_NO = #{pkgNo}
	</update>
	
	<update id="updateSplitPackageItems" parameterType="blItem">
		UPDATE /* bl.updateSplitPackageItems */
		TMT_PKG_INFO SET
			REF_NO = #{orgBlNo},
			ORG_BL_NO = ''
		WHERE VSL_CALL_ID = #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
		AND REF_NO = #{blNo}
	</update>
	
	<delete id="deleteBlItems" parameterType="blItem">
		DELETE /*bl.deleteBlItems*/
		FROM TMT_BL
		WHERE VSL_CALL_ID =  #{vslCallId}
		AND MF_DOC_ID =  #{mfDocId}
		AND BL_NO =  #{blNo}
		AND OP_CLASS_CD = #{opClassCd}
	</delete>
	
	<delete id="deleteBlCargoDetailItems" parameterType="blItem">
		DELETE /*bl.deleteBlCargoDetailItems*/
		FROM TMT_BL_DTL
		WHERE VSL_CALL_ID = #{vslCallId}
		AND MF_DOC_ID =  #{mfDocId}
		AND BL_NO =  #{blNo}
	</delete>
	
	<delete id="deletePackageItems" parameterType="blItem">
		DELETE /*bl.deletePackageItems*/
		FROM TMT_PKG_INFO
		WHERE VSL_CALL_ID = #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
		AND REF_NO = #{blNo}
	</delete>
	
	<insert id="insertManifestItems" parameterType="blItem">
		INSERT /*bl.insertManifestItems*/
		INTO TMT_MF (
			VSL_CD,
			CALL_YEAR,
			CALL_SEQ,
			VSL_CALL_ID,
			MF_DOC_ID,
			STAFF_CD,
			UPDATE_TIME
		) VALUES (     
			#{vslCd}
            ,#{callYear}
            ,#{callSeq}
            ,#{vslCallId}
            ,#{mfDocId}
            ,#{userId}
            ,SYSDATE
		)
	</insert>
	
	<select id="checkManifest" parameterType="blParm" resultType="blItem">
		SELECT /*bl.checkManifest*/
			MF_DOC_ID mfDocId
		FROM TMT_MF
		WHERE VSL_CALL_ID = #{vslCallId} 
		AND MF_DOC_ID =  #{mfDocId} 
	</select>
	
	<select id="checkNilManifest" parameterType="blParm" resultType="blItem">
		SELECT /*bl.checkNilManifest*/
			BL_NO mfDocId
		FROM TMT_BL
		WHERE VSL_CALL_ID = #{vslCallId} 
		AND MF_DOC_ID = #{mfDocId} 
		AND OP_CLASS_CD = #{catgCd}
	</select>
	
	<update id="updateManifest" parameterType="blItem">
		UPDATE /*bl.updateManifest*/
		TMT_MF SET 
			MF_DOC_ID = #{mfDocId}, 
			VERSION = #{version}
		WHERE VSL_CALL_ID = #{vslCallId} 
		AND MF_DOC_ID = #{mfDocId} 
	</update>
	
	<delete id="deleteManifest" parameterType="blItem">
		DELETE /*bl.deleteManifest*/
		FROM TMT_MF
		WHERE VSL_CALL_ID = #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
	</delete>
	
	<select id="checkDO" parameterType="blParm" resultType="blItem">
		SELECT /*bl.checkDO*/
			BL_NO blNo
		FROM TMT_DO
		WHERE BL_NO = #{blNo} 
		AND VSL_CALL_ID =  #{vslCallId}
	</select>
	
	<select id="checkTruck" parameterType="blParm" resultType="blItem">
		SELECT /*bl.checkTruck*/
			BL_NO blNo
		FROM TMT_ASSIGN_TRANSPORT
		WHERE BL_NO = #{blNo} 
		AND VSL_CALL_ID =  #{vslCallId}
	</select>
	
	<select id="checkOperation" parameterType="blParm" resultType="blItem">
		SELECT /*bl.checkOperation*/
			BL_NO blNo
		FROM TMT_CG_MST
		WHERE BL_NO = #{blNo} 
		AND VSL_CALL_ID = #{vslCallId}
	</select>
	
	<select id="checkGateIn" parameterType="blParm" resultType="blItem">
		SELECT /*bl.checkGateIn*/
			CG_NO blNo
		FROM TMT_CG_ARRV_DELV
		WHERE CG_NO = #{blNo} 
		AND VSL_CALL_ID = #{vslCallId}
	</select>
	
	<select id="selectSplitWgtChk" parameterType="blParm" resultType="blItem">
		SELECT /*bl.selectSplitWgtChk*/
			SPLIT_CG_WGT AS SPLITCGWGT, SPLIT_CG_VOL AS SPLITCGVOL, SPLIT_PKG_QTY AS SPLITPKGQTY
		FROM TMT_BL
		WHERE ORG_BL_NO = #{orgBlNo} AND VSL_CALL_ID = #{vslCallId}
	</select>
	
	<select id="selectSplitWgt" parameterType="blParm" resultType="blItem">
		SELECT /*bl.selectSplitWgt*/
			CG_WGT AS WGT,
			CG_VOL AS MSRMT,
			PKG_QTY AS PKGQTY,
			SPLIT_CG_WGT AS SPLITCGWGT,
			SPLIT_CG_VOL AS SPLITCGVOL,
			SPLIT_PKG_QTY AS SPLITPKGQTY
		FROM TMT_BL
		WHERE ORG_BL_NO IS NOT NULL
		AND VSL_CALL_ID = #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
	</select>
	
	<select id="selectOriginalWgt" parameterType="blParm" resultType="blItem">
		SELECT /*bl.selectOriginalWgt*/
			BL.CG_WGT AS ORGWGT,
			BL.CG_VOL AS ORGVOL,
			BL.PKG_QTY AS ORGPKGQTY,
			NVL (BL.SPLIT_CG_WGT, '0') AS SPLITCGWGT,
			NVL (BL.SPLIT_CG_VOL, '0') AS SPLITCGVOL,
			NVL (BL.SPLIT_PKG_QTY, '0') AS SPLITPKGQTY,
			(
  				SELECT SUM(NVL(CG_WGT, 0)) 
  				FROM TMT_JOB 
  				WHERE VSL_CALL_ID = BL.VSL_CALL_ID 
	  			AND CG_NO = BL.BL_NO 
	  			AND (DELV_TP_CD = 'D' AND JOB_PURP_CD = 'VG'
	  				OR
	  				DELV_TP_CD = 'I' AND JOB_PURP_CD = 'AW'
	  			)
	  		) AS WGT,
  			(
  				SELECT SUM(NVL(CG_VOL, 0)) 
  				FROM TMT_JOB 
  				WHERE VSL_CALL_ID = BL.VSL_CALL_ID 
  				AND CG_NO = BL.BL_NO 
  				AND (DELV_TP_CD = 'D' AND JOB_PURP_CD = 'VG'
	  				OR
	  				DELV_TP_CD = 'I' AND JOB_PURP_CD = 'AW'
	  			)
  			) AS VOL,
  			(
  				SELECT SUM(NVL(PKG_QTY, 0)) 
  				FROM TMT_JOB 
  				WHERE VSL_CALL_ID = BL.VSL_CALL_ID 
  				AND CG_NO = BL.BL_NO 
  				AND (DELV_TP_CD = 'D' AND JOB_PURP_CD = 'VG'
	  				OR
	  				DELV_TP_CD = 'I' AND JOB_PURP_CD = 'AW'
	  			)
  			) AS PKGQTY
		FROM TMT_BL BL 
		WHERE BL.VSL_CALL_ID = #{vslCallId}
		AND BL.BL_NO = #{blNo}
		AND BL.MF_DOC_ID = #{mfDocId}
	</select>
	
	<select id="selectOriginalDOWgt" parameterType="blParm" resultType="blItem">
		SELECT /*bl.selectOriginalDOWgt*/
			NVL(D_MT, 0) AS DMT,
			NVL(D_M3, 0) AS DM3,
			NVL(D_QTY, 0) AS DQTY,
			NVL(I_MT, 0) AS IMT,
			NVL(I_M3, 0) AS IM3,
			NVL(I_QTY, 0) AS IQTY
		FROM TMT_DO 
		WHERE VSL_CALL_ID = #{vslCallId}
		AND BL_NO = #{blNo}
		AND MF_DOC_ID = #{mfDocId}
	</select>
	
	<select id="selectSplitExistChk" parameterType="blParm" resultType="blItem">
		SELECT /*bl.selectSplitExistChk*/
			BL_NO AS BLNO, SPLIT_CG_WGT AS SPLITBLWGT, SPLIT_CG_VOL AS SPLITCGVOL, SPLIT_PKG_QTY AS SPLITPKGQTY
		FROM TMT_BL
		WHERE ORG_BL_NO = #{orgBlNo} AND VSL_CALL_ID = #{vslCallId}
	</select>
	
	<select id="selectSubDoWeightList" parameterType="blParm" resultType="blItem">
		SELECT /*bl.selectSubDoWeightList*/
			DECODE(I_MT, 
                0, D_MT,
                null, D_MT,
                I_MT) AS WGT,
			DECODE(I_M3, 
                0, D_M3,
                null, D_M3,
                I_M3) AS VOL,
			DECODE(I_QTY, 
                0, D_QTY,
                null, D_QTY,
                I_QTY) AS PKGQTY,
			ADDITIONAL_CHK AS ADDITIONALCHK
		FROM TMT_DO_DTL
		WHERE VSL_CALL_ID = #{vslCallId} AND MF_DOC_ID = #{mfDocId} AND BL_NO = #{blNo}
	</select>
	
	<update id="updateOriginalBlWgt" parameterType="blItem">
		UPDATE /*bl.updateOriginalBlWgt*/
		TMT_BL SET 
			CG_WGT = #{wgt},
			CG_VOL = #{vol},
			PKG_QTY = #{pkgQty},
			SPLIT_CG_WGT = #{splitCgWgt},
			SPLIT_CG_VOL = #{splitCgVol},
			SPLIT_PKG_QTY = #{splitPkgQty}
		WHERE BL_NO = #{orgBlNo} 
		AND VSL_CALL_ID = #{vslCallId} 
		AND MF_DOC_ID = #{oldMfDocId}
	</update>
	
	<update id="updateDoWgt" parameterType="blItem">
		UPDATE /*bl.updateDoWgt*/
		TMT_DO SET 
			MT = #{wgt},
			M3 = #{vol},
			QTY = #{pkgQty},
			<choose>
				<when test='delvTpCd == "B"'>
					D_MT = #{dMt},
					D_M3 = #{dM3},
					D_QTY = #{dQty},
					I_MT = #{iMt},
					I_M3 = #{iM3},
					I_QTY = #{iQty}
				</when>
				<when test='delvTpCd == "D"'>
					D_MT = #{wgt},
					D_M3 = #{vol},
					D_QTY = #{pkgQty}
				</when>
				<otherwise>
					I_MT = #{wgt},
					I_M3 = #{vol},
					I_QTY = #{pkgQty}
				</otherwise>
			</choose>
		WHERE BL_NO = #{orgBlNo} 
		AND VSL_CALL_ID = #{vslCallId} 
		AND MF_DOC_ID = #{oldMfDocId}
	</update>
	
	<update id="updateOriginalBlStatus" parameterType="blItem">
		UPDATE /*bl.updateOriginalBlStatus*/
		TMT_BL SET 
			STAT_CD = 'SP'
		WHERE BL_NO = #{orgBlNo} 
		AND VSL_CALL_ID = #{vslCallId} 
		AND MF_DOC_ID = #{oldMfDocId}
	</update>
	
	<update id="updateBlStatus" parameterType="blItem">
		UPDATE /*bl.updateBlStatus*/
		TMT_BL SET 
			STAT_CD = 'AP'
		WHERE BL_NO = #{orgBlNo} 
		AND VSL_CALL_ID = #{vslCallId} 
		AND MF_DOC_ID = #{oldMfDocId}
	</update> 
	
	<select id="selectIsROROMst"   parameterType="cargoMasterParm" resultType="java.lang.String">
		SELECT	'1' FROM TMT_RORO_MST
		WHERE 	ROWNUM = 1 AND CG_NO = #{cgNo} AND	VSL_CALL_ID = #{vslCallId}
			<if test="unitNo != null and unitNo != ''">
				AND CHAS_NO = #{unitNo}
			</if>
	</select>
</mapper>