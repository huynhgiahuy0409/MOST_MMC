<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tariffCodeGenerator">
	<resultMap id="tariffcodeTypeMap" 		type="tariffCodeGatheredItem">
		<result property="trfTpCd"        	column="TRF_TP_CD"/> 
	</resultMap>
	
	 <resultMap id="tariffCodeVesselGeneratorItemMap" type="tariffCodeGeneratorItem">
		<result property="vslCallId"	column="VSLCALLID"/>	
		<result property="berthLoc"		column="BERTHLOC"/>           
		<result property="curAtb"		column="CURATB"/>    
		<result property="shipgAgnt"	column="ARRVSAID"/>  
		<result property="shaPayTpCd"	column="SHA_PAY_TP"/>
		<result property="accNo"		column="ACCNO"/>        
		<result property="departSaId"	column="DEPRSAID"/>		        
		<result property="VslTp"		column="VSLTP"/>        
		<result property="bbtLoc"		column="BBTLOC"/>
		<result property="loa"			column="LOA"/>
		<result property="nrt"			column="NRT"/>
		<result property="grt"			column="GRT"/>
		<result property="dwt"			column="DWT"/>
		<result property="eta"			column="ETA"/>
		<result property="etd"			column="ETD"/>
		<result property="atu"			column="ATU"/>
		<result property="atb"			column="ATB"/>
		<result property="sacorpId"		column="SACORPID"/>   
		<result property="tradeTp"		column="VSLTPTRADE"/>
		<result property="purpCallCd"	column="PURPCALLCD"/>   
	</resultMap> 
	
	<resultMap id="tariffcodegeneratorMap" type="tariffCodeGatheredItem">
		<result property="trfCd"			column="TRF_CD"/>
		<result property="trfTpCd"			column="TRF_TP_CD"/>
		<result property="subTrfCd"			column="SUB_TRF_CD"/>
		<result property="subsTrfCd"		column="SUBS_TRF_CD"/>
		<result property="descr"			column="DESCR"/>
		<result property="unitPrc"			column="UNIT_PRC"/>
		<result property="trfRegNo"			column="TRF_REG_NO"/>
		<result property="aplyYmd"			column="APLY_YMD"/>
		<result property="exprYmd"			column="EXPR_YMD"/>
		<result property="minVal1"			column="MIN_VAL1"/>
		<result property="minVal2"			column="MIN_VAL2"/>
		<result property="minVal3"			column="MIN_VAL3"/>
		<result property="maxAmt"			column="MAX_AMT"/>
		<result property="pkgNm"			column="PKG_NM"/>
		<result property="pkgTrfNo"			column="PKG_TRF_NO"/>
		<result property="prcTpCd"			column="PRC_TP_CD"/>
		<result property="billTpCd"			column="BILL_TP_CD"/>
		<result property="ssrTpCd"			column="SSR_TP_CD"/>     
		<result property="costCentCd"		column="COST_CENT_CD"/>
		<result property="erpCostCent"		column="ERP_COST_CENT"/>
		<result property="payer"			column="PAYER"/>
		<result property="ivUnit1"			column="IV_UNIT1"/>
		<result property="ivUnit2"			column="IV_UNIT2"/>
		<result property="ivUnit3"			column="IV_UNIT3"/>
		<result property="vldYn"			column="VLD_YN"/>
		<result property="aplyRuleCd"		column="APLY_RULE_CD"/>
		<result property="subsUnitVal"		column="SUBS_UNIT_VAL"/>
		<result property="subsRate"			column="SUBS_RATE"/>
		<result property="prptCd"			column="PRPT_CD"/>
		<result property="oprIdtCd"			column="OPR_IDT_CD"/>
		<result property="chrVal"			column="CHR_VAL"/>
		<result property="noVal"			column="NO_VAL"/>
		<result property="dtVal"			column="DT_VAL"/>
		<result property="tierVal1"			column="TIER_VAL1"/>
		<result property="tierVal2"			column="TIER_VAL2"/>
		<result property="bndVal1"			column="BND_VAL1"/>
		<result property="bndVal2"			column="BND_VAL2"/>
		<result property="tarSeq"			column="SEQ"/>
		<result property="gstTpCd"			column="TAX_TYPE"/>
		<result property="gstRate"			column="TAX_VALUE"/>
	</resultMap> 
	
	<resultMap id="condPrpt" 		type="tariffCodeConditionItem">
		<result property="trfCd"        column="TRF_CD"/> 
		<result property="subTrfCd"     column="SUB_TRF_CD"/> 
		<result property="prcTpCd"      column="PRC_TP_CD"/> 
		<result property="prptCd"       column="PRPT_CD"/> 
		<result property="prptNm"       column="PRPT_NM"/> 
		<result property="dataTpCd"     column="DATA_TP_CD"/> 
		<result property="opeMode"     column="OPE_MODE"/>
	</resultMap>
	
	<resultMap id="payerMap" 		type="tariffCodePayerItem">
		<result property="advNo"        column="ADV_NO"/> 
		<result property="advSeq"     	column="ADV_SEQ"/> 
		<result property="vslCallId"    column="VSL_CALL_ID"/> 
		<result property="ptnrTpCd"     column="PTNR_TP_CD"/> 
		<result property="ptnrCd"       column="PTNR_CD"/> 
		<result property="trfTpCd"      column="TRF_TP_CD"/> 
		<result property="opeTpCd"      column="OPE_TP_CD"/> 
		<result property="cmdtCd"       column="CMDT_CD"/> 
		<result property="blNp"      	column="BL_NO"/> 
		<result property="shipgNoteNo"  column="SHIPG_NOTE_NO"/> 
		<result property="wgt"       	column="WGT"/> 
		<result property="msRmt"     	column="MSRMT"/> 
		<result property="qty"        	column="QTY"/> 
		<result property="subTrfTpCd"   column="SUB_TRF_TP_CD"/> 
	</resultMap>
	<resultMap id="tariffCodeGeneratorItemMap" type="tariffCodeGeneratorItem">
		<result property="opeClass"     	column="OPE_CLASS"/>
		<result property="rhdlMode"    	 	column="RHDL_MODE"/>
		<result property="deliveryType"     column="DELIVERY_TYPE"/>
		<result property="pol"     			column="POL"/>
		<result property="pod"     			column="POD"/>
		<result property="cargoType"     	column="CARGO_TYPE"/>
		<result property="commodityGroup"   column="COMMODITY_GROUP"/>
		<result property="commodity"     	column="COMMODITY"/>
		<result property="packageType"     	column="PACKAGE_TYPE"/>
		<result property="dgClass"     		column="DG_CLASS"/>
		<result property="modeofOpr"     	column="MODE_OF_OPR"/>
		<result property="modeofOprLr"     	column="MODE_OF_OPR_LR"/>
		<result property="modeofOprSe"     	column="MODE_OF_OPR_SE"/>
		<result property="cgWgtLr"     		column="CG_WGT_LR"/>
		<result property="cgMsrmtLr"     	column="CG_MSRMT_LR"/>
		<result property="pkgQtyLr"     	column="PKG_QTY_LR"/>
		<result property="cgWgtSe"     		column="CG_WGT_SE"/>
		<result property="cgMsrmtSe"     	column="CG_MSRMT_SE"/>
		<result property="pkgQtySe"     	column="PKG_QTY_SE"/>
		<result property="damaged"     		column="DAMAGED"/>
		<result property="cargoImSt"     	column="CARGO_IM_ST"/>
		<result property="cargoImEnd"     	column="CARGO_IM_END"/>
		<result property="cargoExSt"     	column="CARGO_EX_ST"/>
		<result property="cargoExEnd"     	column="CARGO_EX_END"/>
		<result property="cargoBothSt"     	column="CARGO_BOTH_ST"/>
		<result property="cargoBothEnd"     column="CARGO_BOTH_END"/>
		<result property="whLocTp"     		column="WH_LOC_TP"/>
		<result property="cargoId"     		column="CARGO_NO"/>
		<result property="cgWgt"     		column="CG_WGT"/>
		<result property="cgMsrmt"     		column="CG_MSRMT"/>
		<result property="pkgQty"     		column="PKG_QTY"/>
		<result property="docWgt"     		column="DOC_WGT"/>
		<result property="docMsrmt"     	column="DOC_MSRMT"/>
		<result property="docPkgQty"     	column="DOC_PKG_QTY"/>
		<result property="hdlInTime"     	column="HDL_IN_TIME"/>
		<result property="hdlOutTime"     	column="HDL_OUT_TIME"/>
		<result property="lastBillingDate"  column="LAST_BILLING_DATE"/>
		<result property="freeStrgDD"     	column="FREE_STRG_DD"/>
		<result property="blNo"     		column="BL_NO"/>
		<result property="shipgNoteNo"     	column="SHIPG_NOTE_NO"/>
		<result property="shipgAgnt"     	column="SHIPG_AGNT"/>
		<result property="fwrAgent"     	column="FWR_AGNT"/>
		<result property="shpr"     		column="SHPR"/>
		<result property="cnsne"     		column="CNSNE"/>
		<result property="shipgAgntPayTpCd" column="SHIPG_AGENT_PAY_TP"/>
		<result property="fwrAgentPayTpCd"  column="FWD_PAY_TP"/>
		<result property="shprPayTpCd"     	column="SHPR_PAY_TP"/>
		<result property="cnsnePayTpCd"     column="CNS_PAY_TP"/>
		<result property="currLocId"     	column="CURR_LOC_ID"/>
		<result property="billPkgQty"     	column="BILL_PKG_QTY"/>
		<result property="billWgt"     		column="BILL_WGT"/>
		<result property="billMsrmt"     	column="BILL_MSRMT"/>
		<result property="callYear"     	column="CALL_YEAR"/>
		<result property="billwgtd"     	column="BILL_WGT_D"/>
		<result property="billMsgmtd"     	column="BILL_MSRMT_D"/>
		<result property="billPkgQtyd"     	column="BILL_PKG_QTY_D"/>
		<result property="descr"     		column="DESCR"/>
		<result property="repkgTpCd"     	column="REPKG_TP_CD"/>
		<result property="vslCallId"  		column="VSL_CALL_ID"/>
		<result property="scrId"  			column="SCR_ID"/>
		<result property="adhocYn"  		column="ADHOC_YN"/>
		<result property="refNo"  			column="REF_NO"/>
		<result property="refNo2"  			column="REF_NO2"/>
		<result property="ivPrfx"  			column="IV_PRFX"/>
		<result property="tsptTpCd"			column="TSPT_TP_CD"/>
		<result property="wgtChk"			column="WGT_CHK"/>
		<result property="equipmentType"	column="EQUIPMENT_TYPE"/>
		<result property="jobPurpCd"		column="JOB_TP_CD"/>
	</resultMap> 
	<resultMap id="tariffCodeServiceOrderGeneratorItemMap" type="tariffServiceOrderGatheredItem">
		<result property="vslCallId"		column="VSL_CALL_ID"	/>
		<result property="odrNo"			column="ODR_NO"			/>
		<result property="statCd"			column="STAT_CD" 		/>
		<result property="sumitBy"			column="SUMIT_BY" 		/>
		<result property="sumitDt"			column="SUMIT_DT" 		/>
		<result property="apprvBy"			column="APPRV_BY" 		/>
		<result property="apprvDt"			column="APPRV_DT" 		/>
		<result property="rejBy"			column="REJ_BY"		 	/>
		<result property="rejDt"			column="REJ_DT" 		/>
		<result property="cnclBy"			column="CNCL_BY" 		/>
		<result property="cnclDt"			column="CNCL_DT" 		/>
		<result property="comBy"			column="COM_BY" 		/>
		<result property="comDt"			column="COM_DT" 		/>
		<result property="payer"			column="PAYER" 			/>
		<result property="category1"		column="CATEGORY1" 		/>
		<result property="category2"		column="CATEGORY2" 		/>
		<result property="category3"		column="CATEGORY3" 		/>
		<result property="svcDtFmt"			column="SVC_DT_FMT" 	/>
		<result property="svcDtTp"			column="SVC_DT_TP" 		/>
		<result property="dt1Chk"			column="DT1_CHK" 		/>
		<result property="dt1Tit"			column="DT1_TIT" 		/>
		<result property="dt1Fmt"			column="DT1_FMT" 		/>
		<result property="dt1Tp"			column="DT1_TP" 		/>
		<result property="dt2Chk"			column="DT2_CHK" 		/>
		<result property="dt2Tit"			column="DT2_TIT" 		/>
		<result property="dt2Fmt"			column="DT2_FMT" 		/>
		<result property="dt2Tp"			column="DT2_TP" 		/>
		<result property="shftChk"			column="SHFT_CHK" 		/>
		<result property="unitTit"			column="UNIT_TIT" 		/>
		<result property="unitUom"			column="UNIT_UOM" 		/>
		<result property="unitDec"			column="UNIT_DEC" 		/>
		<result property="unit1Chk"			column="UNIT1_CHK" 		/>
		<result property="unit1Tit"			column="UNIT1_TIT" 		/>
		<result property="unit1Uom"			column="UNIT1_UOM" 		/>
		<result property="unit1Dec"			column="UNIT1_DEC" 		/>
		<result property="unit2Chk"			column="UNIT2_CHK" 		/>
		<result property="unit2Tit"			column="UNIT2_TIT" 		/>
		<result property="unit2Uom"			column="UNIT2_UOM" 		/>
		<result property="unit2Dec"			column="UNIT2_DEC" 		/>
		<result property="eqDivCd"			column="EQ_DIV_CD" 		/>
		<result property="capaCd"			column="CAPA_CD" 		/>
		<result property="payTpCd"			column="PAY_TP_CD" 		/>
		<result property="prcTpCd"			column="PRC_TP_CD" 		/>
		<result property="prcTpDesc"		column="PRC_TP_DESC" 	/>
		<result property="locChk"			column="LOC_CHK" 		/>
		<result property="rmkChk"			column="RMK_CHK" 		/>
		<result property="cmdtyChk"			column="CMDTY_CHK" 		/>
		<result property="svcDtFm"			column="SVC_DT_FM" 		/>
		<result property="svcDtTo"			column="SVC_DT_TO" 		/>
		<result property="dt1Fm"			column="DT1_FM" 		/>
		<result property="dt1To"			column="DT1_TO" 		/>
		<result property="dt2Fm"			column="DT2_FM" 		/>
		<result property="dt2To"			column="DT2_TO" 		/>
		<result property="shftId"			column="SHFT_ID" 		/>
		<result property="unit"				column="UNIT" 			/>
		<result property="unit1"			column="UNIT1" 			/>
		<result property="unit2"			column="UNIT2" 			/>
		<result property="locId"			column="LOC_ID" 		/>
		<result property="reqRmk"			column="REQ_RMK" 		/>
		<result property="comChk"			column="COM_CHK" 		/>
		<result property="cmdtyCd"			column="CMDTY_CD" 		/>			
		<result property="capaDescr"		column="CAPA_DESCR" 	/>
		<result property="loc"				column="LOC" 			/>
		<result property="comSvcDtFm"		column="COM_SVC_DT_FM" 	/>
		<result property="comSvcDtTo"		column="COM_SVC_DT_TO" 	/>
		<result property="comDt1Fm"			column="COM_DT1_FM" 	/>
		<result property="comDt1To"			column="COM_DT1_TO" 	/>
		<result property="comDt2Fm"			column="COM_DT2_FM" 	/>
		<result property="comDt2To"			column="COM_DT2_TO" 	/>
		<result property="comShftId"		column="COM_SHFT_ID" 	/>	
		<result property="comUnit"			column="COM_UNIT" 		/>
		<result property="comUnit1"			column="COM_UNIT1" 		/>
		<result property="comUnit2"			column="COM_UNIT2" 		/>
		<result property="comCapaCd"		column="COM_CAPA_CD" 	/>
		<result property="comLocId"			column="COM_LOC_ID" 	/>
		<result property="comRmk"			column="COM_RMK" 		/>
		<result property="rmk"				column="RMK" 			/>
		<result property="reqDocNo"			column="REQ_DOC_NO" 	/>
		<result property="comDocNo"			column="COM_DOC_NO" 	/>
		<result property="reqUnitNo"		column="REQ_UNIT_NO" 	/>
		<result property="comUnitNo"		column="COM_UNIT_NO" 	/>
		<result property="comUnitNo"		column="COM_UNIT_NO" 	/>
		<result property="payerType"		column="PAYER_TYPE" 	/>
		<result property="ivPrfx"  			column="IV_PRFX"		/>
	</resultMap>
	
	<select id="selectTariffCodeType" parameterType="tariffcodeGeneratorParm"	resultMap="tariffcodeTypeMap">
		SELECT S_CD AS TRF_TP_CD FROM TMT_CD_MSTD WHERE M_CD = 'TRFTP' 
		<if test="whereSQL != null and whereSQL != ''">
			${whereSQL}
		</if>	
	</select>
	<select id="selectParnerTariffRate" parameterType="tariffCodeGatheredItem"	resultType="java.lang.String">
			SELECT /*tariffCodeGenerator.selectParnerTariffRate*/
				UNIT_PRC
  			FROM TMT_B_TRF TRF
 			WHERE  1=1
 				AND TRF_CD = #{trfCd} 
	       		AND SUB_TRF_CD = #{subTrfCd}    		 
		        AND CASE WHEN PKG_TRF_NO <![CDATA[<>]]> '*' THEN 'a' 
		        		 ELSE PKG_TRF_NO
		        	END 
		        	=
		        	CASE WHEN PKG_TRF_NO <![CDATA[<>]]> '*' THEN 'a' 
		        		 ELSE #{pkgTrfNo}
		        	END
	       		AND PRC_TP_CD = 'P' 
	       		AND PTNR_CD = #{ptnrCd} 
       			AND (SELECT TO_CHAR (B.ETA, 'YYYYMMDD')
                     FROM TMT_BERTH_LOC A, TMT_VSL_SCH B
                     WHERE A.BERTH_CD = B.BERTH_LOC AND B.VSL_CALL_ID = #{vslCallId} ) BETWEEN TRF.APLY_YMD AND TRF.EXPR_YMD 
                AND ROWNUM = 1
            ORDER BY TRF.EXPR_YMD DESC
	</select>
	<select id="selectStandardTariffRate" parameterType="tariffCodeGatheredItem"	resultType="java.lang.String">
			SELECT /*tariffCodeGenerator.selectStandardTariffRate*/
				UNIT_PRC
  			FROM TMT_B_TRF TRF
 			WHERE  1=1
 				AND TRF_CD = #{trfCd} 
	       		AND SUB_TRF_CD = #{subTrfCd}
	       		AND PRC_TP_CD = 'S' 
	       		AND PTNR_CD = '*' 
       			AND (SELECT TO_CHAR (B.ETA, 'YYYYMMDD')
                     FROM TMT_BERTH_LOC A, TMT_VSL_SCH B
                     WHERE A.BERTH_CD = B.BERTH_LOC AND B.VSL_CALL_ID = #{vslCallId} ) BETWEEN TRF.APLY_YMD AND TRF.EXPR_YMD 
                AND ROWNUM = 1
            ORDER BY EXPR_YMD DESC
	</select>
	<select id="selectTariffCodelist" parameterType="tariffcodeGeneratorParm"	resultMap="tariffcodegeneratorMap">
		SELECT  /*tariffCodeGenerator.selectTariffCodelist*/
				DISTINCT(TRF.TRF_CD) AS TRF_CD,
                TRF.SUB_TRF_CD,
                TCD.DESCR,
                NVL(
                (SELECT UNIT_PRC FROM 
                	(SELECT UNIT_PRC AS UNIT_PRC
	                FROM TMT_B_TRF 
	                WHERE TRF_CD = TCD.TRF_CD 
		                AND SUB_TRF_CD = TCD.SUB_TRF_CD 
		                <if test="ptnrCd != null and ptnrCd != ''">
		                AND PTNR_CD = #{ptnrCd}
		                </if>
	              	ORDER BY EXPR_YMD DESC)
	              WHERE ROWNUM = 1),
                (SELECT UNIT_PRC FROM 
	                (SELECT UNIT_PRC AS UNIT_PRC
		             FROM TMT_B_TRF 
		             WHERE TRF_CD = TCD.TRF_CD 
			                AND SUB_TRF_CD = TCD.SUB_TRF_CD 
			                AND PTNR_CD = '*'
		             ORDER BY EXPR_YMD DESC)
	             WHERE ROWNUM = 1)) AS UNIT_PRC,
                TRF.TRF_REG_NO,
                TRF.APLY_YMD,
                TRF.EXPR_YMD,
                TRF.MIN_VAL1,
                TRF.MIN_VAL2,
                TRF.MIN_VAL3,
                TRF.MAX_AMT,
                TRF.PKG_NM,
                TRF.PKG_TRF_NO,
                TRF.PRC_TP_CD,
                TCD.BILL_TP_CD,
                TCD.SSR_TP_CD,
                TCD.COST_CENT_CD,
<!--                 TCD.ERP_COST_CENT,        -->
                (CASE 
                      WHEN TCD.PAYER IS NULL THEN
                             'SHA'
                      ELSE
                            TCD.PAYER
                END
                ) AS PAYER,
                TCD.IV_UNIT1,
                TCD.IV_UNIT2,
                TCD.IV_UNIT3,
                TCD.VLD_YN,
<!--                 NVL(TCD.APLY_RULE_CD,' ')    AS APLY_RULE_CD , -->
<!--                 TCD.SUBS_UNIT_VAL, -->
<!--                 TCD.SUBS_RATE,             -->
                TCD.SUB_TRF_CD,
                TCD.TRF_TP_CD,
                TCD.TAX_TYPE,
                TCD.TAX_VALUE,
                TCODE.PRPT_CD,
                NVL(TCODE.OPR_IDT_CD,'EQ') AS OPR_IDT_CD,
                TRIM(TCODE.CHR_VAL) AS CHR_VAL,
                TCODE.NO_VAL,
                TCODE.DT_VAL,
                TCODE.TIER_VAL1,
                TCODE.TIER_VAL2,
                TCODE.BND_VAL1,
                TCODE.BND_VAL2,
                TCODE.SEQ
        FROM    TMT_B_TRF_CD TCD
                INNER JOIN TMT_B_TRF TRF ON TCD.TRF_CD = TRF.TRF_CD AND TRF.SUB_TRF_CD = TCD.SUB_TRF_CD
                INNER JOIN(SELECT   NVL(TCD.TRF_CD, NULL)       AS TRF_CD,
                                    NVL(TCD.SUB_TRF_CD, NULL)   AS SUB_TRF_CD,
                                    CND.PRPT_CD 				AS PRPT_CD,
                                    CND.OPR_IDT_CD              AS OPR_IDT_CD,
                                    CND.CHR_VAL                 AS CHR_VAL,
                                    CND.NO_VAL                  AS NO_VAL,
                                    CND.DT_VAL                  AS DT_VAL,
                                    CND.TIER_VAL1               AS TIER_VAL1,
                                    CND.TIER_VAL2               AS TIER_VAL2,
                                    CND.BND_VAL1                AS BND_VAL1,
                                    CND.BND_VAL2                AS BND_VAL2,
                                    CND.SEQ                     AS SEQ
                           FROM TMT_B_TRF_CD TCD
                           INNER JOIN TMT_B_TRF TRF ON TCD.TRF_CD = TRF.TRF_CD AND TCD.SUB_TRF_CD = TRF.SUB_TRF_CD
                           INNER JOIN TMT_B_TRF_COND CND ON TRF.TRF_CD = CND.TRF_CD AND TRF.SUB_TRF_CD = CND.SUB_TRF_CD
                           WHERE TCD.TRF_TP_CD = #{tarDiv} 
                ) TCODE ON TCD.TRF_CD = TCODE.TRF_CD 
                AND TCD.SUB_TRF_CD = TCODE.SUB_TRF_CD
     			<if test='proformaChk == "Y"'>
     				AND (SELECT 
	                        TO_CHAR(
	                            DECODE(A.LOC_CD,'CT',B.ETA,'BBT',B.ETA,B.ETD) 
	                        ,'YYYYMMDD') 
	                     FROM TMT_BERTH_LOC A, TMT_VSL_SCH B 
	                     WHERE A.BERTH_CD = B.BERTH_LOC
	                           AND B.VSL_CALL_ID = #{vslCallId}
	                 ) BETWEEN TRF.APLY_YMD AND TRF.EXPR_YMD
     			</if>
                <if test="proformaChk == null">
	                AND (SELECT 
	                        TO_CHAR(
	                            DECODE(A.LOC_CD,'CT',B.ATB,'BBT',B.ATB,B.ATA) 
	                        ,'YYYYMMDD') 
	                     FROM TMT_BERTH_LOC A, TMT_VSL_SCH B 
	                     WHERE A.BERTH_CD = B.BERTH_LOC
	                           AND B.VSL_CALL_ID = #{vslCallId}
	                 ) BETWEEN TRF.APLY_YMD AND TRF.EXPR_YMD
                </if>
              	<if test="whereSQL != null and whereSQL != ''">
					${whereSQL}
				</if>
                ORDER BY TRF.TRF_CD,TRF.SUB_TRF_CD
	</select>
	<select id="selectGenerateVesselScheduleList" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeVesselGeneratorItemMap">
	<![CDATA[
        SELECT  /*tariffCodeGenerator.selectGenerateVesselScheduleList*/
		       A.VSL_CALL_ID 										     AS VSLCALLID,
		       A.BERTH_LOC 												 AS BERTHLOC,
		       TO_CHAR(F_GET_CUR_ATB (A.VSL_CALL_ID) ,'YYYYMMDDHH24MI')  AS CURATB,
		       A.ARRV_SA_ID 											 AS ARRVSAID,
		       (SELECT PAYMENT_TYPE FROM TMT_AGENCY_INFO WHERE AGENCY_CODE = A.ARRV_SA_ID AND PTNR_TYPE = 'SHA')     AS SHA_PAY_TP,
		       (SELECT ACC_NO
		          FROM TMT_AGENCY_INFO
		         WHERE AGENCY_CODE = A.ARRV_SA_ID AND ROWNUM = 1) 	 	 AS ACCNO,
		       A.DEPR_SA_ID 											 AS DEPRSAID,
		       B.VSL_NM 												 AS VSLNM,
		       B.VSL_TP 												 AS VSLTP,
		       NVL ( (SELECT LOC_CD
		                FROM TMT_BERTH_LOC
		               WHERE BERTH_CD = A.BERTH_LOC),
		            'N') 												 AS BBTLOC,
		       B.LOA 													 AS LOA,
		       B.NRT 													 AS NRT,
		       B.GRT 													 AS GRT,
		       B.DWT 													 AS DWT,
		       B.SA_CORP_ID 											 AS SACORPID,
		       A.ETA													 AS ETA,
		       A.ETD													 AS ETD,
		       A.ATU													 AS ATU,
		       A.ATB													 AS ATB,
		       DECODE(A.DOMESTIC_CHK,
			       'Y', 'D',
			       'N', 'I')											 AS VSLTPTRADE, 
		       A.PURP_CALL 											 	 AS PURPCALLCD
		  FROM (SELECT *
		          FROM TMT_VSL_SCH SCH
		         WHERE SCH.VSL_CALL_ID = #{vslCallId} AND SCH.SUMMIT_STAT <> 'CC') A,
		       TMT_VSL_PART B,
		       TMT_CONFM_SLP C
		 WHERE A.VSL_CD = B.VSL_CD AND A.VSL_CALL_ID = C.VSL_CALL_ID(+)
		]]>
	</select>
	
	<select id="selectGenerateCargolist" parameterType="tariffcodeGeneratorParm" resultMap="tariffCodeGeneratorItemMap">
		SELECT	/*tariffCodeGenerator.selectGenerateCargolist*/
				DISTINCT
				DECODE (CG.OPE_CLASS_CD, 'R', 'E', CG.OPE_CLASS_CD) 				AS OPE_CLASS,		/* C1 - Category */
		        RH.RHDL_MODE 														AS RHDL_MODE,  		/* C2 - Rehandle */
		        DECODE (CG.OPE_CLASS_CD, 'I', OA.DELV_TP_CD, CG.ACTL_DELV_TP_CD) 	AS DELIVERY_TYPE, 	/* C3 - Delivery Mode */
		        SUBSTR (CG.PORT_OF_LOAD, 1, 2) 										AS POL,
		        SUBSTR (CG.PORT_OF_DIS, 1, 2) 										AS POD,
		        DECODE(SCH.DOMESTIC_CHK, 'Y', 'D', 'I')								AS VSLTPTRADE, 		/* C4 - Trade Type */
		        NVL (OA.CG_TP_CD, CG.CG_TP_CD) 										AS CARGO_TYPE,		/* C7 - Cargo Type */ 
		        CG.CMDT_GRP_CD 														AS COMMODITY_GROUP,	/* C8 - Commodity Group */ 
		        CG.CMDT_CD 															AS COMMODITY,		/* C9 - Commodity */
		        NVL(OA.PKG_TP_CD, CG.PKG_TP_CD)										AS PACKAGE_TYPE,	/* C10 - Package Type */
		        '' 																	AS DG_CLASS,		/* C11 - DG Class */
		        NVL(OA.TSPT_TP_CD, CG.TSPT_TP_CD)									AS MODE_OF_OPR, 	/* C12 - Mode of OPR */
		        CG.DMG_YN 															AS DAMAGED,			/* C13 - Damaged */
		        (
		        	SELECT JOB.JOB_TP_CD 
		        	FROM TMT_JOB JOB 
		        	WHERE JOB.VSL_CALL_ID = CG.VSL_CALL_ID
		        	AND JOB.CG_NO = CG.CG_NO
		        	AND JOB.JOB_TP_CD IN ('DS', 'LD')
		        	AND ROWNUM = 1
		        )																	AS JOB_TP_CD,		/* C14 - Operation Type */
         		CASE WHEN DECODE (CG.OPE_CLASS_CD, 'I', CG.DIS_ST_DT + 3, '') IS NOT NULL 
         		 	THEN 
         		 		CASE 
         		 			WHEN DECODE (CG.OPE_CLASS_CD, 'I', CG.DIS_ST_DT + 3, '') <![CDATA[<]]> SCH.ATC 
								THEN TO_CHAR(DECODE (CG.OPE_CLASS_CD, 'I', CG.DIS_ST_DT + 3, ''),'YYYYMMDDHH24MI') 
								ELSE TO_CHAR(SCH.ATC,'YYYYMMDDHH24MI') 
						END 
				END AS CARGO_IM_ST, /* O6 - CARGO OVER Storage (START)   */
				TO_CHAR(DECODE (CG.OPE_CLASS_CD, 'I', CG.HDL_OUT_END_DT, ''),'YYYYMMDDHH24MI') AS CARGO_IM_END,  /* O6 - CARGO OVER Storage (END) */
				CASE WHEN DECODE (CG.OPE_CLASS_CD, 'E', CG.HDL_IN_ST_DT + 3, '') IS NOT NULL
					THEN
						CASE WHEN DECODE (CG.OPE_CLASS_CD, 'E', CG.HDL_IN_ST_DT + 3, '') <![CDATA[<]]> SCH.ATC 
							THEN TO_CHAR(DECODE (CG.OPE_CLASS_CD, 'E', CG.HDL_IN_ST_DT + 3, ''),'YYYYMMDDHH24MI') 
	                        ELSE TO_CHAR(SCH.ATC,'YYYYMMDDHH24MI') 
                     	END 
				END AS CARGO_EX_ST, /* O6 - CARGO OVER Storage (START)   */
				TO_CHAR(DECODE (CG.OPE_CLASS_CD, 'E', CG.LOAD_END_DT, ''),'YYYYMMDDHH24MI') AS CARGO_EX_END,  /* O6 - CARGO OVER Storage (END)   */
                CASE WHEN DECODE (CG.OPE_CLASS_CD, 'B', CG.DIS_ST_DT + 3, '') IS NOT NULL
					THEN
						CASE WHEN DECODE (CG.OPE_CLASS_CD, 'B', CG.DIS_ST_DT + 3, '') <![CDATA[<]]> SCH.ATC 
                        	THEN TO_CHAR(DECODE (CG.OPE_CLASS_CD, 'B', CG.DIS_ST_DT + 3, ''),'YYYYMMDDHH24MI') 
                        	ELSE TO_CHAR(SCH.ATC,'YYYYMMDDHH24MI') 
						END 
				END AS CARGO_BOTH_ST, /* O6 - CARGO OVER Storage (START)   */
				TO_CHAR(DECODE (CG.OPE_CLASS_CD, 'B', CG.HDL_OUT_END_DT, ''),'YYYYMMDDHH24MI') AS CARGO_BOTH_END,  /* O6 - CARGO OVER Storage (END)   */  
 				(
 					SELECT WH_LOC_TP 
 					FROM TMT_INV_LOC 
 					WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
 					AND CG_NO = CG.CG_NO 
 					AND UPDATE_TIME IN (
						SELECT MAX(UPDATE_TIME) 
						FROM TMT_INV_LOC 
						WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
						AND CG_NO = CG.CG_NO 
						AND WH_LOC_TP IS NOT NULL
					)
					GROUP BY WH_LOC_TP
				) 																	AS WH_LOC_TP, /* C6 - W/H Type   */ 
				CG.CG_NO 															AS CARGO_NO,
				NVL(OA.BILL_WGT, 0)													AS CG_WGT,
				NVL(OA.BILL_MSRMT, 0)												AS CG_MSRMT,
				NVL(OA.BILL_PKG_QTY, 0)												AS PKG_QTY,
		        CG.HDL_IN_ST_DT 													AS HDL_IN_TIME,
		        CG.HDL_OUT_END_DT 													AS HDL_OUT_TIME,
		        '' 																	AS LAST_BILLING_DATE,
		        '' 																	AS FREE_STRG_DD,
		        CG.BL_NO 															AS BL_NO,
		        CG.SHIPG_NOTE_NO 													AS SHIPG_NOTE_NO,
		        SCH.ARRV_SA_ID  													AS SHIPG_AGNT,
		        (
		        	SELECT PAYMENT_TYPE 
		        	FROM TMT_AGENCY_INFO SA 
		        	WHERE SA.AGENCY_CODE = SCH.ARRV_SA_ID 
		        	AND PTNR_TYPE = 'SHA' 
		        	AND ROWNUM = 1
		        ) 																	AS SHIPG_AGENT_PAY_TP,
				DOC.FWRD AS FWR_AGNT,
				JOB.EQ_TP_CD 														AS EQUIPMENT_TYPE,
				(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.FWRD AND PTNR_TYPE = 'FWD' AND ROWNUM = 1) AS FWD_PAY_TP,
				DOC.SHPR AS SHPR,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.SHPR AND PTNR_TYPE = 'SHP' AND ROWNUM = 1) AS SHPR_PAY_TP,
		        DOC.CNSNE AS CNSNE,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.CNSNE AND PTNR_TYPE = 'CNS' AND ROWNUM = 1) AS CNS_PAY_TP,
		        CG.CURR_LOC_ID AS CURR_LOC_ID,
		        NVL (
					DECODE (CG.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'I', OA.BILL_PKG_QTY, 0),
						CG.BILL_PKG_QTY),
		            0) AS BILL_PKG_QTY,
		        NVL (
		            DECODE (CG.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'I', OA.BILL_WGT, 0),
						CG.BILL_WGT),
		            0) AS BILL_WGT,
		        NVL (
		            DECODE (CG.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'I', OA.BILL_MSRMT, 0),
						CG.BILL_MSRMT),
		            0) AS BILL_MSRMT,
		        SCH.CALL_YEAR AS CALL_YEAR,
		        NVL (
		            DECODE (CG.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'D', OA.BILL_WGT, 0),
						CG.BILL_WGT_D),
		            0) AS BILL_WGT_D,
		        NVL (
		            DECODE (CG.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'D', OA.BILL_MSRMT, 0),
						CG.BILL_MSRMT_D),
		            0) AS BILL_MSRMT_D,
		        NVL (
		            DECODE (CG.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'D', OA.BILL_PKG_QTY, 0),
						CG.BILL_PKG_QTY_D),
		            0) AS BILL_PKG_QTY_D,
		        CASE WHEN CG.OPE_CLASS_CD = 'I'
						THEN
							(SELECT CMDT_DESC
							FROM TMT_CMDT
							WHERE CMDT_CD = OA.CMDT_CD AND ROWNUM = 1)
						ELSE
							(SELECT CMDT_DESC
							FROM TMT_CMDT
							WHERE CMDT_CD = CG.CMDT_CD AND ROWNUM = 1)
				END AS DESCR,
				REPKG_TP_CD,
				CG.VSL_CALL_ID,
				NVL(CG.BL_NO, CG.SHIPG_NOTE_NO) AS REF_NO,
				DOC.MF_DOC_ID AS REF_NO2,
				'INV' AS IV_PRFX,
				'OPE' AS SCR_ID,
				DOC.WGT_CHK,
				
				(SELECT CASE WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
							 THEN CASE WHEN DOC.DELV_TP_CD = 'I' THEN NVL(I_MT, 0) 
								  	   ELSE NVL(D_LR_MT, 0) 
								  END
							 ELSE 0
						END
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_WGT_LR,
					   
				(SELECT CASE WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
							 THEN CASE WHEN DOC.DELV_TP_CD = 'I' THEN NVL(I_M3, 0) 
								  	   ELSE NVL(D_LR_M3, 0) 
								  END
							 ELSE 0
						END
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_MSRMT_LR,
					   
				(SELECT CASE WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
							 THEN CASE WHEN DOC.DELV_TP_CD = 'I' THEN NVL(I_QTY, 0) 
								  	   ELSE NVL(D_LR_QTY, 0) 
								  END
							 ELSE 0
						END
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS PKG_QTY_LR,
					   
				(SELECT NVL(D_VSL_MT, 0) 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_WGT_SE,
				(SELECT NVL(D_VSL_M3, 0) 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_MSRMT_SE,
				(SELECT NVL(D_VSL_QTY, 0) 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS PKG_QTY_SE
		FROM	TMT_VSL_SCH SCH 
				INNER JOIN TMT_CG_MST CG 
					ON SCH.VSL_CALL_ID = CG.VSL_CALL_ID
				INNER JOIN (
		            SELECT 
		                VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,BL_NO
		                ,'null' AS SHIPG_NOTE_NO
		                ,BL_NO  AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,NULL         AS POR
					    ,FDEST
					    ,WGT_CHK
					    ,DELV_TP_CD
		            FROM TMT_BL
		            WHERE VSL_CALL_ID = #{vslCallId}
		            UNION
		            SELECT 
		                 VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,'null' AS BL_NO
		                ,SHIPG_NOTE_NO
		                ,SHIPG_NOTE_NO AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,POR
					    ,FDEST
					    ,WGT_CHK
					    ,DELV_TP_CD
		            FROM TMT_SHIPG_NOTE
		            WHERE VSL_CALL_ID = #{vslCallId}
		        ) DOC
		        	ON CG.VSL_CALL_ID = DOC.VSL_CALL_ID 
		        	AND (CG.BL_NO = DOC.BL_NO OR CG.SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO)
		        LEFT OUTER JOIN TMT_B_OPE_AMNT OA
	            	ON CG.VSL_CALL_ID = OA.VSL_CALL_ID 
	            	AND (
	            		(CG.SHIPG_NOTE_NO IS NULL AND OA.CG_NO = CG.BL_NO)
	            		OR
	            		(CG.SHIPG_NOTE_NO IS NOT NULL AND OA.CG_NO = CG.SHIPG_NOTE_NO)
	            	)
		        LEFT OUTER JOIN (
		        	SELECT EQ.EQ_TP_CD, J.CG_WGT, J.CG_VOL, J.PKG_QTY, J.CG_NO, J.EQ_NO, J.VSL_CALL_ID, J.REPKG_TYPE_CD
		            FROM TMT_EQ_FAC EQ
		            INNER JOIN(
		            	SELECT VSL_CALL_ID,
		                    CG_NO,
		                    NVL(SUM(CG_WGT), 0)  AS CG_WGT,
		                    NVL(SUM(CG_VOL), 0)  AS CG_VOL,
		                    NVL(SUM(PKG_QTY), 0) AS PKG_QTY,
		                    EQ_NO,
		                    JOB_PURP_CD,
		                    REPKG_TYPE_CD
		                FROM TMT_JOB
		                WHERE JOB_PURP_CD IN ('VA', 'VG', 'VB', 'AV', 'GV', 'BV')
		                GROUP BY VSL_CALL_ID,
		                    CG_NO,
		                    EQ_NO,
		                    JOB_PURP_CD,
		                    REPKG_TYPE_CD
		            ) J
		            	ON EQ.EQ_FAC_NO = J.EQ_NO
		            INNER JOIN (
		                SELECT VSL_CALL_ID, BL_NO AS CG_NO FROM TMT_BL
		                UNION
		                SELECT VSL_CALL_ID, GR_NO AS CG_NO FROM TMT_GR
		            ) DOC
		            	ON  DOC.VSL_CALL_ID = J.VSL_CALL_ID
		            	AND DOC.CG_NO = J.CG_NO
	            ) JOB
		        	ON JOB.VSL_CALL_ID = CG.VSL_CALL_ID
		        	AND JOB.CG_NO = CG.CG_NO
		        	AND JOB.CG_WGT = NVL(OA.BILL_WGT_V, 0)
					AND JOB.CG_VOL = NVL(OA.BILL_MSRMT_V, 0)
					AND JOB.PKG_QTY = NVL(OA.BILL_PKG_QTY_V, 0)
	         	LEFT OUTER JOIN TMT_CMDT CM 
	         		ON CG.CMDT_CD = CM.CMDT_CD
	         	LEFT OUTER JOIN TMT_RHDL_CG RH
	            	ON SCH.VSL_CALL_ID = RH.VSL_CALL_ID AND CG.CG_NO = RH.ORG_REF_NO
	         	LEFT OUTER JOIN TMT_DG DG
	            	ON SCH.VSL_CD = DG.VSL_CD
	               	AND SCH.CALL_YEAR = DG.CALL_YEAR
					AND SCH.CALL_SEQ = DG.CALL_SEQ
					AND (
						(CG.CG_NO = DG.CG_NO AND CG.SHIPG_NOTE_NO IS NULL)
	                    OR 
	                    (CG.SHIPG_NOTE_NO = DG.CG_NO AND CG.SHIPG_NOTE_NO IS NOT NULL)
					)
				
		WHERE 	SCH.VSL_CALL_ID = #{vslCallId}
			<choose>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND CG.OPE_CLASS_CD IN ('I', 'E')
				</when>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk != 'Y'.toString()">
					AND CG.OPE_CLASS_CD IN ('I')
				</when>
				<when test="imVrfChk != 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND CG.OPE_CLASS_CD IN ('E')
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
		ORDER BY NVL(OA.CG_TP_CD, CG.CG_TP_CD) ASC
	</select>
	
	<select id="selectGeneratePortHandling" parameterType="tariffcodeGeneratorParm" resultMap="tariffCodeGeneratorItemMap">
		WITH JOBS AS (
		    SELECT 
		         J.VSL_CALL_ID
		        ,NVL(SHIPG_NOTE_NO, BL_NO) AS CG_NO
		        ,J.OPE_CLASS_CD
		        ,JOB_TP_CD
		        ,JOB_PURP_CD
		        ,J.DELV_TP_CD
		        ,SUM(J.CG_WGT) CG_WGT
		        ,SUM(J.CG_VOL) CG_VOL
		        ,SUM(J.PKG_QTY) PKG_QTY
		        ,MIN(WORK_ST_DT)    WORK_ST_DT
		        ,MAX(WORK_END_DT)   WORK_END_DT
		        ,MIN(JOB_NO) AS JOB_NO
		        ,MIN(GATE_TXN_NO) GATE_TXN_NO
		        ,BL_NO
		        ,SHIPG_NOTE_NO
		        ,MAX(J.TSPT_TP_CD)    AS TSPT_TP_CD
		        ,MAX(MARK_NO)   AS MARK_NO
		        ,MIN(GATE_IN_DT)    AS GATE_IN_DT
		        ,MAX(GATE_OUT_DT)   AS GATE_OUT_DT
		        ,MIN(HDL_IN_ST_DT)  AS HDL_IN_ST_DT
		        ,MAX(HDL_IN_END_DT) AS HDL_IN_END_DT
		        ,MIN(HDL_OUT_ST_DT) AS HDL_OUT_ST_DT
		        ,MAX(HDL_OUT_END_DT)    AS HDL_OUT_END_DT
		        ,MIN(LOAD_ST_DT)    AS LOAD_ST_DT
		        ,MAX(LOAD_END_DT)   AS LOAD_END_DT
		        ,MIN(DIS_ST_DT) AS DIS_ST_DT
		        ,MAX(DIS_END_DT)    AS DIS_END_DT
		        ,NVL(MAX(J.REPKG_TYPE_CD), MAX(J.PKG_TP_CD)) AS PKG_TP_CD
		        ,MAX(J.DMG_YN)    AS DMG_YN
		        ,MAX(J.RHDL_MODE) AS RHDL_MODE
		        ,MAX(CG_TP_CD)  AS CG_TP_CD
		        ,MAX(CMDT_CD)   AS CMDT_CD
		        ,MIN(TMNL_IN_DT)    AS TMNL_IN_DT
		        ,MAX(TMNL_OUT_DT)   AS TMNL_OUT_DT
		        ,MAX(PREV_LOC_ID)   AS PREV_LOC_ID
		        ,MAX(CURR_LOC_ID)   AS CURR_LOC_ID
		        ,MAX(NX_LOC_ID) AS NX_LOC_ID
		        ,MAX(SHIPG_AGNT)    AS SHIPG_AGNT
		        ,MAX(FWR_AGNT)  AS FWR_AGNT
		        ,MAX(SHPR)  AS SHPR
		        ,MAX(SHPR_NM)   AS SHPR_NM
		        ,MAX(SHPR_ADDR) AS SHPR_ADDR
		        ,MAX(CNSNE) AS CNSNE
		        ,MAX(CNSNE_NM)  AS CNSNE_NM
		        ,MAX(CNSNE_ADDR)    AS CNSNE_ADDR
		        ,MAX(CNTRY_OF_ORG)  AS CNTRY_OF_ORG
		        ,MAX(PORT_OF_LOAD)  AS PORT_OF_LOAD
		        ,MAX(PORT_OF_DIS)   AS PORT_OF_DIS
		        ,MAX(FDEST) AS FDEST
		        ,MAX(J.RMK)   AS RMK
		        ,MAX(WH_FNL_DELV_YN)    AS WH_FNL_DELV_YN
		        ,SUM(J.LD_DMG_QTY)    AS LD_DMG_QTY
		        ,SUM(J.LD_DMG_MT) AS LD_DMG_MT
		        ,SUM(J.LD_DMG_M3) AS LD_DMG_M3
		        ,SUM(BILL_WGT)  AS BILL_WGT
		        ,SUM(BILL_MSRMT)    AS BILL_MSRMT
		        ,SUM(BILL_PKG_QTY)  AS BILL_PKG_QTY
		        ,SUM(BILL_WGT_D)    AS BILL_WGT_D
		        ,SUM(BILL_MSRMT_D)  AS BILL_MSRMT_D
		        ,SUM(BILL_PKG_QTY_D)    AS BILL_PKG_QTY_D
		        ,SUM(BILL_WGT_V)    AS BILL_WGT_V
		        ,SUM(BILL_MSRMT_V)  AS BILL_MSRMT_V
		        ,SUM(BILL_PKG_QTY_V)    AS BILL_PKG_QTY_V
		        ,MAX(DO_NO) AS DO_NO
		        ,MAX(CMDT_GRP_CD)   AS CMDT_GRP_CD
		        ,MAX(J.REPKG_TP_CD)   AS REPKG_TP_CD
		        ,MIN(GR_NO) AS GR_NO
		        ,MAX(J.EQ_NO) AS EQ_NO
		    FROM TMT_JOB J
		    LEFT JOIN TMT_CG_MST CG ON J.VSL_CALL_ID = CG.VSL_CALL_ID AND J.CG_NO = CG.CG_NO
		    WHERE 1 = 1
		    AND JOB_PURP_CD IN ('WG', 'GW')
		    AND J.VSL_CALL_ID = #{vslCallId}
		    GROUP BY JOB_TP_CD, J.VSL_CALL_ID, JOB_PURP_CD, J.DELV_TP_CD, J.OPE_CLASS_CD, BL_NO, SHIPG_NOTE_NO
		)
		
		SELECT	/*tariffCodeGenerator.selectGenerateCargolist*/
				DISTINCT
				DECODE (CG.OPE_CLASS_CD, 'R', 'E', CG.OPE_CLASS_CD) 				AS OPE_CLASS,		/* C1 - Category */
		        RH.RHDL_MODE 														AS RHDL_MODE,  		/* C2 - Rehandle */
		        CG.DELV_TP_CD													 	AS DELIVERY_TYPE, 	/* C3 - Delivery Mode */
		        SUBSTR (CG.PORT_OF_LOAD, 1, 2) 										AS POL,
		        SUBSTR (CG.PORT_OF_DIS, 1, 2) 										AS POD,
		        DECODE(SCH.DOMESTIC_CHK, 'Y', 'D', 'I')								AS VSLTPTRADE, 		/* C4 - Trade Type */
		        CG.CG_TP_CD					 										AS CARGO_TYPE,		/* C7 - Cargo Type */ 
		        CG.CMDT_GRP_CD 														AS COMMODITY_GROUP,	/* C8 - Commodity Group */ 
		        CG.CMDT_CD 															AS COMMODITY,		/* C9 - Commodity */
		        CG.PKG_TP_CD														AS PACKAGE_TYPE,	/* C10 - Package Type */
		        '' 																	AS DG_CLASS,		/* C11 - DG Class */
		        CG.TSPT_TP_CD														AS MODE_OF_OPR, 	/* C12 - Mode of OPR */
		        CG.DMG_YN 															AS DAMAGED,			/* C13 - Damaged */
		        CG.JOB_TP_CD														AS JOB_TP_CD,		/* C14 - Operation Type */
 				(
 					SELECT WH_LOC_TP 
 					FROM TMT_INV_LOC 
 					WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
 					AND CG_NO = CG.CG_NO 
 					AND UPDATE_TIME IN (
						SELECT MAX(UPDATE_TIME) 
						FROM TMT_INV_LOC 
						WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
						AND CG_NO = CG.CG_NO 
						AND WH_LOC_TP IS NOT NULL
					)
					GROUP BY WH_LOC_TP
				) 																	AS WH_LOC_TP, /* C6 - W/H Type   */ 
				CG.CG_NO 															AS CARGO_NO,
				NVL(CG.CG_WGT, 0)													AS CG_WGT,
				NVL(CG.CG_VOL, 0)												AS CG_MSRMT,
				NVL(CG.PKG_QTY, 0)												AS PKG_QTY,
		        CG.HDL_IN_ST_DT 													AS HDL_IN_TIME,
		        CG.HDL_OUT_END_DT 													AS HDL_OUT_TIME,
		        '' 																	AS LAST_BILLING_DATE,
		        '' 																	AS FREE_STRG_DD,
		        CG.BL_NO 															AS BL_NO,
		        CG.SHIPG_NOTE_NO 													AS SHIPG_NOTE_NO,
		        SCH.ARRV_SA_ID  													AS SHIPG_AGNT,
		        (
		        	SELECT PAYMENT_TYPE 
		        	FROM TMT_AGENCY_INFO SA 
		        	WHERE SA.AGENCY_CODE = SCH.ARRV_SA_ID 
		        	AND PTNR_TYPE = 'SHA' 
		        	AND ROWNUM = 1
		        ) 																	AS SHIPG_AGENT_PAY_TP,
				DOC.FWRD AS FWR_AGNT,
				(
					SELECT EQ.EQ_TP_CD
				    FROM TMT_EQ_FAC EQ
				    INNER JOIN TMT_JOB JOB
				        ON EQ.EQ_FAC_NO = JOB.EQ_NO
				    INNER JOIN (
				        SELECT VSL_CALL_ID, BL_NO AS CG_NO
				        FROM TMT_BL
				        UNION
				        SELECT VSL_CALL_ID, GR_NO AS CG_NO
				        FROM TMT_GR
					) DOC
						ON DOC.VSL_CALL_ID = JOB.VSL_CALL_ID
						AND DOC.CG_NO = JOB.CG_NO
					WHERE JOB.VSL_CALL_ID = #{vslCallId}
					AND DOC.CG_NO = CG.CG_NO
					AND JOB.JOB_PURP_CD IN ('WG', 'GW')
					AND ROWNUM = 1
				) AS EQUIPMENT_TYPE,
				(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.FWRD AND PTNR_TYPE = 'FWD' AND ROWNUM = 1) AS FWD_PAY_TP,
				DOC.SHPR AS SHPR,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.SHPR AND PTNR_TYPE = 'SHP' AND ROWNUM = 1) AS SHPR_PAY_TP,
		        DOC.CNSNE AS CNSNE,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.CNSNE AND PTNR_TYPE = 'CNS' AND ROWNUM = 1) AS CNS_PAY_TP,
		        CG.CURR_LOC_ID AS CURR_LOC_ID,
				(
					SELECT CMDT_DESC
					FROM TMT_CMDT
					WHERE CMDT_CD = CG.CMDT_CD 
					AND ROWNUM = 1
				) AS DESCR,
				REPKG_TP_CD,
				CG.VSL_CALL_ID,
				NVL(CG.BL_NO, CG.SHIPG_NOTE_NO) AS REF_NO,
				DOC.MF_DOC_ID AS REF_NO2,
				'INV' AS IV_PRFX,
				'OPE' AS SCR_ID,
				DOC.WGT_CHK,
				
				(SELECT CASE WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
							 THEN CASE WHEN DOC.DELV_TP_CD = 'I' THEN NVL(I_MT, 0) 
								  	   ELSE NVL(D_LR_MT, 0) 
								  END
							 ELSE 0
						END
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_WGT_LR,
					   
				(SELECT CASE WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
							 THEN CASE WHEN DOC.DELV_TP_CD = 'I' THEN NVL(I_M3, 0) 
								  	   ELSE NVL(D_LR_M3, 0) 
								  END
							 ELSE 0
						END 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_MSRMT_LR,
					   
				(SELECT CASE WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
							 THEN CASE WHEN DOC.DELV_TP_CD = 'I' THEN NVL(I_QTY, 0) 
								  	   ELSE NVL(D_LR_QTY, 0) 
								  END
							 ELSE 0
						END
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS PKG_QTY_LR,
					   
				(SELECT NVL(D_VSL_MT, 0) 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_WGT_SE,
				(SELECT NVL(D_VSL_M3, 0) 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_MSRMT_SE,
				(SELECT NVL(D_VSL_QTY, 0) 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = DOC.VSL_CALL_ID 
					   AND MF_DOC_ID = DOC.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS PKG_QTY_SE
		FROM	TMT_VSL_SCH SCH 
				INNER JOIN JOBS CG 
					ON SCH.VSL_CALL_ID = CG.VSL_CALL_ID
				INNER JOIN (
		            SELECT 
		                VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,BL_NO
		                ,'null' AS SHIPG_NOTE_NO
		                ,BL_NO  AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,NULL         AS POR
					    ,FDEST
					    ,WGT_CHK
					    ,DELV_TP_CD
		            FROM TMT_BL
		            WHERE VSL_CALL_ID = #{vslCallId}
		            UNION
		            SELECT 
		                 VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,'null' AS BL_NO
		                ,SHIPG_NOTE_NO
		                ,SHIPG_NOTE_NO AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,POR
					    ,FDEST
					    ,WGT_CHK
					    ,DELV_TP_CD
		            FROM TMT_SHIPG_NOTE
		            WHERE VSL_CALL_ID = #{vslCallId}
		        ) DOC
		        	ON CG.VSL_CALL_ID = DOC.VSL_CALL_ID 
		        	AND (CG.BL_NO = DOC.BL_NO OR CG.SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO)
	         	LEFT OUTER JOIN TMT_CMDT CM 
	         		ON CG.CMDT_CD = CM.CMDT_CD
	         	LEFT OUTER JOIN TMT_RHDL_CG RH
	            	ON SCH.VSL_CALL_ID = RH.VSL_CALL_ID AND CG.CG_NO = RH.ORG_REF_NO
	         	LEFT OUTER JOIN TMT_DG DG
	            	ON SCH.VSL_CD = DG.VSL_CD
	               	AND SCH.CALL_YEAR = DG.CALL_YEAR
					AND SCH.CALL_SEQ = DG.CALL_SEQ
					AND (
						(CG.CG_NO = DG.CG_NO AND CG.SHIPG_NOTE_NO IS NULL)
	                    OR 
	                    (CG.SHIPG_NOTE_NO = DG.CG_NO AND CG.SHIPG_NOTE_NO IS NOT NULL)
					)
				
		WHERE 	SCH.VSL_CALL_ID = #{vslCallId}
			<choose>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND CG.OPE_CLASS_CD IN ('I', 'E')
				</when>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk != 'Y'.toString()">
					AND CG.OPE_CLASS_CD IN ('I')
				</when>
				<when test="imVrfChk != 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND CG.OPE_CLASS_CD IN ('E')
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
		ORDER BY CG.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateCargoForProformaExportList" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		SELECT 	/*tariffCodeGenerator.selectGenerateCargoForProformaExportList*/
				CG.CATG_CD 						AS OPE_CLASS,						/* C1 - Category */
				'' 								AS RHDL_MODE,						/* C2 - Rehandle */
				CG.DELV_TP_CD					AS DELIVERY_TYPE,					/* C3 - Delivery Mode */
				SUBSTR (CG.POL, 1, 2) 			AS POL,
				SUBSTR (CG.POD, 1, 2) 			AS POD,								/* C4 - Trade Type */
				CG.CG_TP_CD						AS CARGO_TYPE,						/* C7 - Cargo Type */
				CG.CMDT_GRP_CD 					AS COMMODITY_GROUP,      			/* C8 - Commodity Group */
				CG.CMDT_CD 						AS COMMODITY,						/* C9 - Commodity */
				CG.PKG_TP_CD 					AS PACKAGE_TYPE,					/* C10 - Package Type */
				CASE WHEN CG.DELV_TP_CD = 'I' THEN 'LR' ELSE CG.TSPT_TP_CD END	AS MODE_OF_OPR,	/* C12 - Mode of OPR */
				CASE WHEN (SELECT NVL(D_LR_MT, 0) 
						   FROM TMT_SHIPG_NOTE_AMT 
						   WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
						   		 AND MF_DOC_ID = CG.MF_DOC_ID 
						   		 AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
						   		 AND ROWNUM = 1) = 0 THEN ''
					 ELSE 'LR'
				END								AS MODE_OF_OPR_LR,
				CASE WHEN (SELECT NVL(D_VSL_MT, 0) 
						   FROM TMT_SHIPG_NOTE_AMT 
						   WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
						   		 AND MF_DOC_ID = CG.MF_DOC_ID 
						   		 AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
						   		 AND ROWNUM = 1) = 0 THEN ''
					 ELSE 'SE'
				END								AS MODE_OF_OPR_SE,
				
				(SELECT CASE WHEN CG.SHIPG_NOTE_NO IS NOT NULL 
							 THEN CASE WHEN CG.DELV_TP_CD = 'I' THEN NVL(I_MT, 0) 
								  	   ELSE NVL(D_LR_MT, 0) 
								  END
							 ELSE 0
						END
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					   AND MF_DOC_ID = CG.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_WGT_LR,
					   
				(SELECT CASE WHEN CG.SHIPG_NOTE_NO IS NOT NULL 
							 THEN CASE WHEN CG.DELV_TP_CD = 'I' THEN NVL(I_M3, 0) 
								  	   ELSE NVL(D_LR_M3, 0) 
								  END
							 ELSE 0
						END
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					   AND MF_DOC_ID = CG.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_MSRMT_LR,
					   
				(SELECT CASE WHEN CG.SHIPG_NOTE_NO IS NOT NULL 
							 THEN CASE WHEN CG.DELV_TP_CD = 'I' THEN NVL(I_QTY, 0) 
								  	   ELSE NVL(D_LR_QTY, 0) 
								  END
							 ELSE 0
						END
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					   AND MF_DOC_ID = CG.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS PKG_QTY_LR,
					   
				(SELECT NVL(D_VSL_MT, 0) 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					   AND MF_DOC_ID = CG.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_WGT_SE,
				(SELECT NVL(D_VSL_M3, 0) 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					   AND MF_DOC_ID = CG.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS CG_MSRMT_SE,
				(SELECT NVL(D_VSL_QTY, 0) 
				 FROM TMT_SHIPG_NOTE_AMT 
				 WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					   AND MF_DOC_ID = CG.MF_DOC_ID 
					   AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					   AND ROWNUM = 1) 			AS PKG_QTY_SE,
					   
				CG.SHIPG_NOTE_NO				AS CARGO_NO,
				CG.CG_WGT 						AS CG_WGT,
				CG.CG_VOL 						AS CG_MSRMT,
				CG.PKG_QTY 						AS PKG_QTY,
				CG.CG_WGT     					AS DOC_WGT,
				CG.CG_VOL	    				AS DOC_MSRMT,
				CG.PKG_QTY						AS DOC_PKG_QTY,
				CG.WGT_CHK						AS WGT_CHK,
  				CG.SHIPG_NOTE_NO 				AS SHIPG_NOTE_NO,
<!-- 				CG.SHIPG_AGENT AS SHIPG_AGNT, -->
				CG.FWRD 						AS FWR_AGNT,
				CG.SHPR 						AS SHPR,
				CG.CNSNE 						AS CNSNE,
				(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.FWRD AND PTNR_TYPE = 'FWD')     AS FWD_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.SHPR AND PTNR_TYPE = 'CNS')     AS SHPR_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.CNSNE AND PTNR_TYPE = 'CNS')     AS CNS_PAY_TP,
<!-- 				F_GET_CMDT_DESC (CG.CMDT_CD) AS DESCR, -->
				CG.VSL_CALL_ID,
				'PRF' 							AS SCR_ID,
				CG.SHIPG_NOTE_NO 				AS REF_NO,
				CG.MF_DOC_ID 					AS REF_NO2
		FROM 	TMT_VSL_SCH SCH
		        INNER JOIN TMT_SHIPG_NOTE CG ON SCH.VSL_CALL_ID = CG.VSL_CALL_ID
		WHERE	SCH.VSL_CALL_ID = #{vslCallId} 
				AND CG.MF_DOC_ID = #{bookingNo}
				AND CG.CG_TP_CD NOT LIKE 'RCV'
				<if test="shipgNoteNo != '' and shipgNoteNo != null ">
					AND CG.SHIPG_NOTE_NO = #{shipgNoteNo}
				</if>
		ORDER BY CG.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateCargoForProformaImportList" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		SELECT 	/*tariffCodeGenerator.selectGenerateCargoForProformaImportList*/
				CG.CATG_CD 						AS OPE_CLASS,						/* C1 - Category */
				'' 								AS RHDL_MODE,						/* C2 - Rehandle */
				CG.DELV_TP_CD 					AS DELIVERY_TYPE,					/* C3 - Delivery Mode */
				SUBSTR (CG.POL, 1, 2) 			AS POL,
				SUBSTR (CG.POD, 1, 2) 			AS POD,								/* C4 - Trade Type */
				CG.CG_TP_CD						AS CARGO_TYPE,						/* C7 - Cargo Type */
 				CG.CMDT_GRP_CD 					AS COMMODITY_GROUP,      			/* C8 - Commodity Group */ 
				CG.CMDT_CD 						AS COMMODITY,						/* C9 - Commodity */
				CG.PKG_TP_CD 					AS PACKAGE_TYPE,					/* C10 - Package Type */
				CG.TSPT_TP_CD 					AS MODE_OF_OPR,						/* C12 - Mode of OPR */
				CG.BL_NO 						AS CARGO_NO,
				CG.CG_WGT 						AS CG_WGT,
				CG.CG_VOL 						AS CG_MSRMT,
				CG.PKG_QTY 						AS PKG_QTY,
				CG.CG_WGT     					AS DOC_WGT,
				CG.CG_VOL	    				AS DOC_MSRMT,
				CG.PKG_QTY						AS DOC_PKG_QTY,
				CG.BL_NO 						AS BL_NO,
				CG.WGT_CHK						AS WGT_CHK,
<!-- 				CG.SHIPG_AGENT AS SHIPG_AGNT, -->
				CG.FWRD 						AS FWR_AGNT,
				CG.SHPR 						AS SHPR,
				CG.CNSNE 						AS CNSNE,
				(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.FWRD AND PTNR_TYPE = 'FWD')     AS FWD_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.SHPR AND PTNR_TYPE = 'CNS')     AS SHPR_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.CNSNE AND PTNR_TYPE = 'CNS')     AS CNS_PAY_TP,
<!-- 				F_GET_CMDT_DESC (CG.CMDT_CD) AS DESCR, -->
				CG.VSL_CALL_ID,
				'PRF' 							AS SCR_ID,
				CG.BL_NO 						AS REF_NO,
				CG.MF_DOC_ID 					AS REF_NO2
		FROM 	TMT_VSL_SCH SCH
		        INNER JOIN TMT_BL CG ON SCH.VSL_CALL_ID = CG.VSL_CALL_ID
		WHERE	SCH.VSL_CALL_ID = #{vslCallId} 
				AND CG.MF_DOC_ID = #{masterBL}
				AND CG.CG_TP_CD NOT LIKE 'RCV'
				<if test="blNo != '' and blNo != null ">
					AND CG.BL_NO = #{blNo}
				</if>
		ORDER BY CG.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateRoroList" parameterType="tariffcodeGeneratorParm" resultMap="tariffCodeGeneratorItemMap">
		SELECT	/*tariffCodeGenerator.selectGenerateRoroList*/
				DISTINCT
				DECODE (JOB.OPE_CLASS_CD, 'R', 'E', JOB.OPE_CLASS_CD) 				AS OPE_CLASS,		/* C1 - Category */
		        RH.RHDL_MODE 														AS RHDL_MODE,  		/* C2 - Rehandle */
		        DECODE (JOB.OPE_CLASS_CD, 'I', OA.DELV_TP_CD, JOB.DELV_TP_CD) 		AS DELIVERY_TYPE, 	/* C3 - Delivery Mode */
		        DECODE(SCH.DOMESTIC_CHK, 'Y', 'D', 'I')								AS VSLTPTRADE, 		/* C4 - Trade Type */
		        NVL (OA.CG_TP_CD, RORO.CG_TP_CD) 									AS CARGO_TYPE,		/* C7 - Cargo Type */ 
		        DOC.CMDT_GRP_CD 													AS COMMODITY_GROUP,	/* C8 - Commodity Group */ 
		        DOC.CMDT_CD															AS COMMODITY,		/* C9 - Commodity */
		        NVL(OA.PKG_TP_CD, JOB.PKG_TP_CD)									AS PACKAGE_TYPE,	/* C10 - Package Type */
		        '' 																	AS DG_CLASS,		/* C11 - DG Class */
		        NVL(NVL(OA.TSPT_TP_CD, JOB.TSPT_TP_CD), 'OH')						AS MODE_OF_OPR, 	/* C12 - Mode of OPR */
		        (
		        	SELECT JOB.JOB_TP_CD 
		        	FROM TMT_JOB JOB 
		        	WHERE JOB.VSL_CALL_ID = RORO.VSL_CALL_ID
		        	AND JOB.CG_NO = RORO.CG_NO
		        	AND JOB.JOB_TP_CD IN ('DS', 'LD')
		        	AND ROWNUM = 1
		        )																	AS JOB_TP_CD,		/* C14 - Operation Type */
				JOB.WH_TP           												AS WH_LOC_TP, /* C6 - W/H Type   */
				RORO.CG_NO 															AS CARGO_NO,
				NVL(OA.BILL_WGT, 0)													AS CG_WGT,
				NVL(OA.BILL_MSRMT, 0)												AS CG_MSRMT,
				NVL(OA.BILL_PKG_QTY, 0)												AS PKG_QTY,
		        '' 																	AS LAST_BILLING_DATE,
		        '' 																	AS FREE_STRG_DD,
		        DOC.BL_NO 															AS BL_NO,
		        DOC.SHIPG_NOTE_NO 													AS SHIPG_NOTE_NO,
		        SCH.ARRV_SA_ID  													AS SHIPG_AGNT,
		        (
		        	SELECT PAYMENT_TYPE 
		        	FROM TMT_AGENCY_INFO SA 
		        	WHERE SA.AGENCY_CODE = SCH.ARRV_SA_ID 
		        	AND PTNR_TYPE = 'SHA' 
		        	AND ROWNUM = 1
		        ) 																	AS SHIPG_AGENT_PAY_TP,
				DOC.FWRD AS FWR_AGNT,
				(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.FWRD AND PTNR_TYPE = 'FWD' AND ROWNUM = 1) AS FWD_PAY_TP,
				DOC.SHPR AS SHPR,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.SHPR AND PTNR_TYPE = 'SHP' AND ROWNUM = 1) AS SHPR_PAY_TP,
		        DOC.CNSNE AS CNSNE,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.CNSNE AND PTNR_TYPE = 'CNS' AND ROWNUM = 1) AS CNS_PAY_TP,
		        NVL (
					DECODE (JOB.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'I', OA.BILL_PKG_QTY, 0),
						JOB.PKG_QTY),
		            0) AS BILL_PKG_QTY,
		        NVL (
		            DECODE (JOB.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'I', OA.BILL_WGT, 0),
						JOB.CG_WGT),
		            0) AS BILL_WGT,
		        NVL (
		            DECODE (JOB.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'I', OA.BILL_MSRMT, 0),
						JOB.CG_VOL),
		            0) AS BILL_MSRMT,
		        SCH.CALL_YEAR AS CALL_YEAR,
		        NVL (
		            DECODE (JOB.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'D', OA.BILL_WGT, 0),
						JOB.CG_WGT),
		            0) AS BILL_WGT_D,
		        NVL (
		            DECODE (JOB.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'D', OA.BILL_MSRMT, 0),
						JOB.CG_VOL),
		            0) AS BILL_MSRMT_D,
		        NVL (
		            DECODE (JOB.OPE_CLASS_CD,
						'I', DECODE (OA.DELV_TP_CD, 'D', OA.BILL_PKG_QTY, 0),
						JOB.PKG_QTY),
		            0) AS BILL_PKG_QTY_D,
		        CASE WHEN JOB.OPE_CLASS_CD = 'I'
		        		THEN
							(SELECT CMDT_DESC
							FROM TMT_CMDT
							WHERE CMDT_CD = OA.CMDT_CD AND ROWNUM = 1)
						ELSE
							(SELECT CMDT_DESC
							FROM TMT_CMDT
							WHERE CMDT_CD = DOC.CMDT_CD AND ROWNUM = 1)
				END AS DESCR,
				NVL(OA.PKG_TP_CD, DOC.PKG_TP_CD) AS REPKG_TP_CD,
				RORO.VSL_CALL_ID,
				RORO.CG_NO AS REF_NO,
				DOC.MF_DOC_ID AS REF_NO2,
				'INV' AS IV_PRFX,
				'OPE' AS SCR_ID,
				DOC.WGT_CHK
		FROM	TMT_VSL_SCH SCH 
				INNER JOIN TMT_RORO_MST RORO 
					ON SCH.VSL_CALL_ID = RORO.VSL_CALL_ID
				INNER JOIN (
		            SELECT 
		                VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,BL_NO
		                ,NULL AS SHIPG_NOTE_NO
		                ,BL_NO  AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,NULL         AS POR
					    ,FDEST
					    ,WGT_CHK
		            FROM TMT_BL
		            WHERE VSL_CALL_ID = #{vslCallId}
		            UNION
		            SELECT 
		                 VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,NULL AS BL_NO
		                ,SHIPG_NOTE_NO
		                ,SHIPG_NOTE_NO AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,POR
					    ,FDEST
					    ,WGT_CHK
		            FROM TMT_SHIPG_NOTE
		            WHERE VSL_CALL_ID = #{vslCallId}
		        ) DOC
		        	ON RORO.VSL_CALL_ID = DOC.VSL_CALL_ID 
		        	AND (RORO.CG_NO = DOC.BL_NO OR RORO.CG_NO = DOC.SHIPG_NOTE_NO)
		        LEFT OUTER JOIN TMT_B_OPE_AMNT OA
	            	ON RORO.VSL_CALL_ID = OA.VSL_CALL_ID 
	            	AND RORO.CG_NO = OA.CG_NO
		        LEFT OUTER JOIN (
		        	SELECT
			        	B.VSL_CALL_ID,
						B.BL_NO AS CG_NO,
						B.CG_TP_CD,
						B.CATG_CD,
						J.DELV_TP_CD,
						NVL(J.TSPT_TP_CD, 'LR') AS TSPT_TP_CD,
						B.CMDT_CD,
						J.CG_WGT						AS CG_WGT,
						J.CG_VOL						AS CG_VOL,
						J.PKG_QTY						AS PKG_QTY,
						NVL(J.REPKG_TYPE_CD, B.PKG_TP_CD) AS PKG_TP_CD,
						J.JOB_PURP_CD,
						J.OPE_CLASS_CD,
						RORO.WH_ID						AS WH_ID,
						LOC.LOC_TP_CD					AS WH_TP,
						(SELECT S_CD_NM FROM TMT_CD_MSTD WHERE L_CD = 'MT' AND M_CD   = 'WHTP' AND S_CD   = LOC.LOC_TP_CD) AS WH_TP_NM,
						RORO.JOB_NO
					FROM TMT_JOB J
						INNER JOIN TMT_BL B
							ON J.VSL_CALL_ID = B.VSL_CALL_ID
							AND J.CG_NO = B.BL_NO
						LEFT OUTER JOIN (
							SELECT MST.VSL_CALL_ID,
								MST.CG_NO,
								MST.WH_ID,
								JOB.CHAS_NO,
								JOB.JOB_NO
							FROM TMT_JOB JOB
							INNER JOIN TMT_RORO_MST MST
							ON JOB.VSL_CALL_ID = MST.VSL_CALL_ID
							AND JOB.CG_NO = MST.CG_NO
							WHERE MST.VSL_CALL_ID = JOB.VSL_CALL_ID
							AND MST.CG_NO = JOB.CG_NO
							AND MST.LOC_ID = JOB.TO_LOC_ID
							AND JOB.JOB_PURP_CD = 'AW'
							GROUP BY MST.VSL_CALL_ID, MST.CG_NO, MST.WH_ID, JOB.CHAS_NO, JOB.JOB_NO
						) RORO 
							ON RORO.VSL_CALL_ID = J.VSL_CALL_ID
								AND RORO.CG_NO = J.CG_NO
								AND RORO.CHAS_NO = J.CHAS_NO
						LEFT OUTER JOIN TMT_LOC_DEF LOC
							ON LOC.LOC_ID = RORO.WH_ID
					WHERE J.JOB_PURP_CD IN ('VG', 'VA', 'VB')
					AND J.JOB_TP_CD = 'DS'
					AND J.VSL_CALL_ID = #{vslCallId}
					AND B.CG_TP_CD = 'RCV'
					GROUP BY B.VSL_CALL_ID, B.BL_NO, B.CG_TP_CD, B.CATG_CD, J.DELV_TP_CD, J.TSPT_TP_CD, B.CMDT_CD, J.CG_WGT, J.CG_VOL, J.PKG_QTY, J.REPKG_TYPE_CD, B.PKG_TP_CD, J.JOB_PURP_CD, J.OPE_CLASS_CD, RORO.WH_ID, LOC.LOC_TP_CD, RORO.JOB_NO
				) JOB
		        	ON JOB.VSL_CALL_ID = RORO.VSL_CALL_ID
		        	AND JOB.CG_NO = RORO.CG_NO
		        	AND JOB.CG_WGT = NVL(OA.BILL_WGT_V, 0)
					AND JOB.CG_VOL = NVL(OA.BILL_MSRMT_V, 0)
					AND JOB.PKG_QTY = NVL(OA.BILL_PKG_QTY_V, 0)
	         	LEFT OUTER JOIN TMT_CMDT CM 
	         		ON DOC.CMDT_CD = CM.CMDT_CD
	         	LEFT OUTER JOIN TMT_RHDL_CG RH
	            	ON SCH.VSL_CALL_ID = RH.VSL_CALL_ID AND RORO.CG_NO = RH.ORG_REF_NO
	         	LEFT OUTER JOIN TMT_DG DG
	            	ON SCH.VSL_CD = DG.VSL_CD
	               	AND SCH.CALL_YEAR = DG.CALL_YEAR
					AND SCH.CALL_SEQ = DG.CALL_SEQ
					AND RORO.CG_NO = DG.CG_NO
		WHERE SCH.VSL_CALL_ID = #{vslCallId}
			<choose>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND JOB.OPE_CLASS_CD IN ('I', 'E')
				</when>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk != 'Y'.toString()">
					AND JOB.OPE_CLASS_CD IN ('I')
				</when>
				<when test="imVrfChk != 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND JOB.OPE_CLASS_CD IN ('E')
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
		ORDER BY NVL(OA.CG_TP_CD, RORO.CG_TP_CD) ASC
	</select>
	
	<select id="selectGenerateRoroPortHadlingList" parameterType="tariffcodeGeneratorParm" resultMap="tariffCodeGeneratorItemMap">
		WITH JOBS AS (
		    SELECT 
		         J.VSL_CALL_ID
		        ,RORO.CG_NO AS CG_NO
		        ,J.OPE_CLASS_CD
		        ,JOB_TP_CD
		        ,JOB_PURP_CD
		        ,J.DELV_TP_CD
		        ,J.CG_WGT CG_WGT
		        ,J.CG_VOL CG_VOL
		        ,J.PKG_QTY PKG_QTY
		        ,MIN(WORK_ST_DT)    WORK_ST_DT
		        ,MAX(WORK_END_DT)   WORK_END_DT
		        ,JOB_NO
		        ,MIN(GATE_TXN_NO) GATE_TXN_NO
		        ,J.TSPT_TP_CD
		        ,NVL(MAX(J.REPKG_TYPE_CD), MAX(J.PKG_TP_CD)) AS PKG_TP_CD
		        ,MAX(J.DMG_YN)    AS DMG_YN
		        ,MAX(J.RHDL_MODE) AS RHDL_MODE
		        ,CG_TP_CD
		        ,MAX(J.RMK)   AS RMK
		        ,J.LD_DMG_QTY    AS LD_DMG_QTY
		        ,J.LD_DMG_MT AS LD_DMG_MT
		        ,J.LD_DMG_M3 AS LD_DMG_M3
		        ,MAX(DO_NO) AS DO_NO
		        ,MAX(CMDT_GRP_CD)   AS CMDT_GRP_CD
		        ,MAX(J.REPKG_TP_CD)   AS REPKG_TP_CD
		        ,MIN(GR_NO) AS GR_NO
		        ,MAX(J.EQ_NO) AS EQ_NO
		        ,J.TO_LOC_ID	AS TO_LOC_ID
		    FROM TMT_JOB J
		    LEFT JOIN TMT_RORO_MST RORO ON J.VSL_CALL_ID = RORO.VSL_CALL_ID AND J.CG_NO = RORO.CG_NO
		    WHERE 1 = 1
		    AND JOB_PURP_CD IN ('WG', 'GW')
		    AND J.VSL_CALL_ID = #{vslCallId}
		    GROUP BY JOB_TP_CD, RORO.CG_NO, J.VSL_CALL_ID, JOB_PURP_CD, J.DELV_TP_CD, J.OPE_CLASS_CD, JOB_NO, CG_TP_CD, J.CG_WGT, J.CG_VOL, J.PKG_QTY, J.TSPT_TP_CD, J.LD_DMG_QTY, J.LD_DMG_MT, J.LD_DMG_M3, J.TO_LOC_ID
		)
		
		SELECT	/*tariffCodeGenerator.selectGenerateRoroPortHadlingList*/
				DISTINCT
				DECODE (RORO.OPE_CLASS_CD, 'R', 'E', RORO.OPE_CLASS_CD) 			AS OPE_CLASS,		/* C1 - Category */
		        RH.RHDL_MODE 														AS RHDL_MODE,  		/* C2 - Rehandle */
		        RORO.DELV_TP_CD													 	AS DELIVERY_TYPE, 	/* C3 - Delivery Mode */
		        DECODE(SCH.DOMESTIC_CHK, 'Y', 'D', 'I')								AS VSLTPTRADE, 		/* C4 - Trade Type */
		        RORO.CG_TP_CD					 									AS CARGO_TYPE,		/* C7 - Cargo Type */ 
		        DOC.CMDT_GRP_CD 													AS COMMODITY_GROUP,	/* C8 - Commodity Group */ 
		        DOC.CMDT_CD 														AS COMMODITY,		/* C9 - Commodity */
		        RORO.PKG_TP_CD														AS PACKAGE_TYPE,	/* C10 - Package Type */
		        '' 																	AS DG_CLASS,		/* C11 - DG Class */
		        RORO.TSPT_TP_CD														AS MODE_OF_OPR, 	/* C12 - Mode of OPR */
		        RORO.DMG_YN 														AS DAMAGED,			/* C13 - Damaged */
		        RORO.JOB_TP_CD														AS JOB_TP_CD,		/* C14 - Operation Type */
 				LOC.LOC_TP_CD														AS WH_LOC_TP, 		/* C6 - W/H Type   */ 
				RORO.CG_NO 															AS CARGO_NO,
				NVL(RORO.CG_WGT, 0)													AS CG_WGT,
				NVL(RORO.CG_VOL, 0)													AS CG_MSRMT,
				NVL(RORO.PKG_QTY, 0)												AS PKG_QTY,
		        '' 																	AS LAST_BILLING_DATE,
		        '' 																	AS FREE_STRG_DD,
		        DOC.BL_NO 															AS BL_NO,
		        DOC.SHIPG_NOTE_NO 													AS SHIPG_NOTE_NO,
		        SCH.ARRV_SA_ID  													AS SHIPG_AGNT,
		        (
		        	SELECT PAYMENT_TYPE 
		        	FROM TMT_AGENCY_INFO SA 
		        	WHERE SA.AGENCY_CODE = SCH.ARRV_SA_ID 
		        	AND PTNR_TYPE = 'SHA' 
		        	AND ROWNUM = 1
		        ) 																	AS SHIPG_AGENT_PAY_TP,
				DOC.FWRD AS FWR_AGNT,
				(
					SELECT EQ.EQ_TP_CD
				    FROM TMT_EQ_FAC EQ
				    INNER JOIN TMT_JOB JOB
				        ON EQ.EQ_FAC_NO = JOB.EQ_NO
				    INNER JOIN (
				        SELECT VSL_CALL_ID, BL_NO AS CG_NO
				        FROM TMT_BL
				        UNION
				        SELECT VSL_CALL_ID, GR_NO AS CG_NO
				        FROM TMT_GR
					) DOC
						ON DOC.VSL_CALL_ID = JOB.VSL_CALL_ID
						AND DOC.CG_NO = JOB.CG_NO
					WHERE JOB.VSL_CALL_ID = #{vslCallId}
					AND DOC.CG_NO = RORO.CG_NO
					AND JOB.JOB_PURP_CD IN ('WG', 'GW')
					AND ROWNUM = 1
				) AS EQUIPMENT_TYPE,
				(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.FWRD AND PTNR_TYPE = 'FWD' AND ROWNUM = 1) AS FWD_PAY_TP,
				DOC.SHPR AS SHPR,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.SHPR AND PTNR_TYPE = 'SHP' AND ROWNUM = 1) AS SHPR_PAY_TP,
		        DOC.CNSNE AS CNSNE,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.CNSNE AND PTNR_TYPE = 'CNS' AND ROWNUM = 1) AS CNS_PAY_TP,
				(
					SELECT CMDT_DESC
					FROM TMT_CMDT
					WHERE CMDT_CD = DOC.CMDT_CD 
					AND ROWNUM = 1
				) AS DESCR,
				REPKG_TP_CD,
				RORO.VSL_CALL_ID,
				RORO.CG_NO AS REF_NO,
				DOC.MF_DOC_ID AS REF_NO2,
				'INV' AS IV_PRFX,
				'OPE' AS SCR_ID,
				DOC.WGT_CHK
		FROM	TMT_VSL_SCH SCH 
				INNER JOIN JOBS RORO 
					ON SCH.VSL_CALL_ID = RORO.VSL_CALL_ID
				INNER JOIN (
		            SELECT 
		                VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,BL_NO
		                ,NULL AS SHIPG_NOTE_NO
		                ,BL_NO  AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,NULL         AS POR
					    ,FDEST
					    ,WGT_CHK
		            FROM TMT_BL
		            WHERE VSL_CALL_ID = #{vslCallId}
		            UNION
		            SELECT 
		                 VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,NULL AS BL_NO
		                ,SHIPG_NOTE_NO
		                ,SHIPG_NOTE_NO AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,POR
					    ,FDEST
					    ,WGT_CHK
		            FROM TMT_SHIPG_NOTE
		            WHERE VSL_CALL_ID = #{vslCallId}
		        ) DOC
		        	ON RORO.VSL_CALL_ID = DOC.VSL_CALL_ID 
		        	AND (RORO.CG_NO = DOC.BL_NO OR RORO.CG_NO = DOC.SHIPG_NOTE_NO)
	         	LEFT OUTER JOIN TMT_CMDT CM 
	         		ON DOC.CMDT_CD = CM.CMDT_CD
	         	LEFT OUTER JOIN TMT_RHDL_CG RH
	            	ON SCH.VSL_CALL_ID = RH.VSL_CALL_ID AND RORO.CG_NO = RH.ORG_REF_NO
	            LEFT OUTER JOIN TMT_LOC_DEF LOC
					ON SUBSTR(RORO.TO_LOC_ID, 0, INSTR(RORO.TO_LOC_ID, '(', 1, 1) - 1) = LOC.WH_ID
		WHERE 	SCH.VSL_CALL_ID = #{vslCallId}
		AND 	LOC.LOC_DIV_CD = 'WHO'
			<choose>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND RORO.OPE_CLASS_CD IN ('I', 'E')
				</when>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk != 'Y'.toString()">
					AND RORO.OPE_CLASS_CD IN ('I')
				</when>
				<when test="imVrfChk != 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND RORO.OPE_CLASS_CD IN ('E')
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
		ORDER BY RORO.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateRoroForProformaExportList" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		SELECT 	/*tariffCodeGenerator.selectGenerateRoroForProformaExportList*/
				DOC.CATG_CD 					AS OPE_CLASS,						/* C1 - Category */
				'' 								AS RHDL_MODE,						/* C2 - Rehandle */
				DOC.DELV_TP_CD					AS DELIVERY_TYPE,					/* C3 - Delivery Mode */
				SUBSTR (DOC.POL, 1, 2) 			AS POL,
				SUBSTR (DOC.POD, 1, 2) 			AS POD,								/* C4 - Trade Type */
				DOC.CG_TP_CD					AS CARGO_TYPE,						/* C7 - Cargo Type */
				DOC.CMDT_GRP_CD 				AS COMMODITY_GROUP,      			/* C8 - Commodity Group */
				DOC.CMDT_CD 					AS COMMODITY,						/* C9 - Commodity */
				DOC.PKG_TP_CD 					AS PACKAGE_TYPE,					/* C10 - Package Type */
				DOC.TSPT_TP_CD 					AS MODE_OF_OPR,						/* C12 - Mode of OPR */
				DOC.SHIPG_NOTE_NO				AS CARGO_NO,
				DOC.CG_WGT 						AS CG_WGT,
				DOC.CG_VOL 						AS CG_MSRMT,
				DOC.PKG_QTY 					AS PKG_QTY,
				DOC.CG_WGT     					AS DOC_WGT,
				DOC.CG_VOL	    				AS DOC_MSRMT,
				DOC.PKG_QTY						AS DOC_PKG_QTY,
				DOC.WGT_CHK						AS WGT_CHK,
  				DOC.SHIPG_NOTE_NO 				AS SHIPG_NOTE_NO,
<!-- 				DOC.SHIPG_AGENT AS SHIPG_AGNT, -->
				DOC.FWRD 						AS FWR_AGNT,
				DOC.SHPR 						AS SHPR,
				DOC.CNSNE 						AS CNSNE,
				(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.FWRD AND PTNR_TYPE = 'FWD')     AS FWD_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.SHPR AND PTNR_TYPE = 'CNS')     AS SHPR_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.CNSNE AND PTNR_TYPE = 'CNS')     AS CNS_PAY_TP,
<!-- 				F_GET_CMDT_DESC (DOC.CMDT_CD) AS DESCR, -->
				DOC.VSL_CALL_ID,
				'PRF' 							AS SCR_ID,
				DOC.SHIPG_NOTE_NO 				AS REF_NO,
				DOC.MF_DOC_ID 					AS REF_NO2
		FROM 	TMT_VSL_SCH SCH
		        INNER JOIN TMT_SHIPG_NOTE DOC ON SCH.VSL_CALL_ID = DOC.VSL_CALL_ID
		WHERE	SCH.VSL_CALL_ID = #{vslCallId} 
				AND DOC.MF_DOC_ID = #{bookingNo}
				AND DOC.CG_TP_CD LIKE 'RCV'
				<if test="shipgNoteNo != '' and shipgNoteNo != null ">
					AND DOC.SHIPG_NOTE_NO = #{shipgNoteNo}
				</if>
		ORDER BY DOC.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateRoroForProformaImportList" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		SELECT 	/*tariffCodeGenerator.selectGenerateRoroForProformaImportList*/
				DOC.CATG_CD 					AS OPE_CLASS,						/* C1 - Category */
				'' 								AS RHDL_MODE,						/* C2 - Rehandle */
				DOC.DELV_TP_CD 					AS DELIVERY_TYPE,					/* C3 - Delivery Mode */
				SUBSTR (DOC.POL, 1, 2) 			AS POL,
				SUBSTR (DOC.POD, 1, 2) 			AS POD,								/* C4 - Trade Type */
				DOC.CG_TP_CD					AS CARGO_TYPE,						/* C7 - Cargo Type */
 				DOC.CMDT_GRP_CD 				AS COMMODITY_GROUP,      			/* C8 - Commodity Group */ 
				DOC.CMDT_CD 					AS COMMODITY,						/* C9 - Commodity */
				DOC.PKG_TP_CD 					AS PACKAGE_TYPE,					/* C10 - Package Type */
				DOC.TSPT_TP_CD 					AS MODE_OF_OPR,						/* C12 - Mode of OPR */
				DOC.BL_NO 						AS CARGO_NO,
				DOC.CG_WGT 						AS CG_WGT,
				DOC.CG_VOL 						AS CG_MSRMT,
				DOC.PKG_QTY 					AS PKG_QTY,
				DOC.CG_WGT     					AS DOC_WGT,
				DOC.CG_VOL	    				AS DOC_MSRMT,
				DOC.PKG_QTY						AS DOC_PKG_QTY,
				DOC.BL_NO 						AS BL_NO,
				DOC.WGT_CHK						AS WGT_CHK,
<!-- 				DOC.SHIPG_AGENT AS SHIPG_AGNT, -->
				DOC.FWRD 						AS FWR_AGNT,
				DOC.SHPR 						AS SHPR,
				DOC.CNSNE 						AS CNSNE,
				(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.FWRD AND PTNR_TYPE = 'FWD')     AS FWD_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.SHPR AND PTNR_TYPE = 'CNS')     AS SHPR_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.CNSNE AND PTNR_TYPE = 'CNS')     AS CNS_PAY_TP,
<!-- 				F_GET_CMDT_DESC (DOC.CMDT_CD) AS DESCR, -->
				DOC.VSL_CALL_ID,
				'PRF' 							AS SCR_ID,
				DOC.BL_NO 						AS REF_NO,
				DOC.MF_DOC_ID 					AS REF_NO2
		FROM 	TMT_VSL_SCH SCH
		        INNER JOIN TMT_BL DOC ON SCH.VSL_CALL_ID = DOC.VSL_CALL_ID
		WHERE	SCH.VSL_CALL_ID = #{vslCallId} 
				AND DOC.MF_DOC_ID = #{masterBL}
				AND DOC.CG_TP_CD LIKE 'RCV'
				<if test="blNo != '' and blNo != null ">
					AND DOC.BL_NO = #{blNo}
				</if>
		ORDER BY DOC.CG_TP_CD ASC
	</select>
	
	<select id="selectTrfCondPrpt" parameterType="tariffCodeGatheredItem" resultMap="condPrpt">
		SELECT /*tariffCodeGenerator.selectTrfCondPrpt*/
			TRF_CD, SUB_TRF_CD, PRC_TP_CD, PRPT_CD, PRPT_NM, DATA_TP_CD, 
			NVL((SELECT CHR_VAL FROM TMT_B_TRF_COND WHERE TRF_CD = #{trfCd} AND SUB_TRF_CD = #{subTrfCd} AND PRPT_CD = 'C12' AND ROWNUM = 1), 'NULL') AS OPE_MODE
		FROM TMT_B_TRF_COND_PRPT
		WHERE TRF_CD = #{trfCd}
		AND SUB_TRF_CD = #{subTrfCd}
		AND PRC_TP_CD = #{prcTpCd}
    </select>
    
    <select id="selectTrfPayerList" parameterType="tariffcodeGeneratorParm" resultMap="payerMap">
		SELECT 	/*tariffCodeGenerator.selectTrfPayerList*/
				ADV.ADV_NO AS ADV_NO, 
				ADV_SEQ, 
				VSL_CALL_ID, 
				ADV.PAYER_TP_CD AS PTNR_TP_CD, 
				ADV.PAYER_CD AS PTNR_CD, 
				TRF_TP_CD, 
				DECODE(OPE_TP_CD, 'DS', 'I', 'E') AS OPE_TP_CD,
   			   	CMDT_CD, 
   			   	BL_NO, 
   			   	SHIPG_NOTE_NO, 
   			   	WGT, 
   			   	VOL, 
   			   	QTY, 
   			   	SUB_TRF_TP_CD
		FROM TMT_B_IV_ADV ADV
		WHERE ADV.VSL_CALL_ID = #{vslCallId}
    </select>
    
	<select id="selectInvoiceItemsForDataGathering"  parameterType="tariffcodeGeneratorParm" resultType="InvoiceDataItem">
		SELECT /*tariffCodeGenerator.selectInvoiceItemsForDataGathering*/
			SUM(NVL(APLY_AMT, 0)) AS APLYAMT
		    ,SUM(NVL(UNIT1_VAL, 0)) AS UNIT1VAL
		FROM TMT_B_IV_DATA IV_DATA
		LEFT JOIN TMT_B_TRF_CD TRF ON TRF.TRF_CD = IV_DATA.TRF_CD AND TRF.SUB_TRF_CD = IV_DATA.SUB_TRF_CD 
		WHERE VSL_CALL_ID = #{vslCallId}
		<if test="trfTpCd != 'CC' and trfTpCd != 'BM'">
		    <choose>
		    	<when test="masterBL !=null and masterBL != ''">
			    	AND REF_NO1 = #{blNo}
			    	AND REF_NO2 = #{masterBL}
		    	</when>
		    	<otherwise>
		    		AND REF_NO1 = #{shipgNoteNo}
			    	AND REF_NO2 = #{bookingNo}
		    	</otherwise>
		    </choose>
	    </if>
		AND TRF.TRF_TP_CD = #{trfTpCd}
		AND STAT_CD IN ('IV','PC','SM','VF') 
		HAVING  SUM(NVL(APLY_AMT, 0)) IS NOT NULL AND SUM(NVL(UNIT1_VAL, 0)) IS NOT NULL
	</select>
	
	<select id="selectInvoiceItemsForProformalist"  parameterType="tariffcodeGeneratorParm" resultType="InvoiceDataItem">
		SELECT /*tariffCodeGenerator.selectInvoiceItemsForProformalist*/
		     IV_DATA.UNIT1_VAL 				AS PRFUNIT1VAL
		    ,IV_DATA.APLY_AMT 				AS PRFAMT
			,COND.CHR_VAL 					AS DELVTPCD 
		    <!-- ,SUMMARY_IV_DATA.ALL_UNIT1_VAL	AS UNIT1VAL
		    ,SUMMARY_IV_DATA.ALL_APLY_AMT	AS APPLIEDAMT
		    ,SUMMARY_IV_DATA.REF_NO4 		AS REFNO4 -->
		FROM TMT_B_IV_DATA IV_DATA
		LEFT JOIN TMT_B_TRF_CD TRF ON TRF.TRF_CD = IV_DATA.TRF_CD AND TRF.SUB_TRF_CD = IV_DATA.SUB_TRF_CD
		LEFT JOIN (
		        SELECT 
		             TRF_CD
		            ,SUB_TRF_CD
		            ,CHR_VAL
		    FROM TMT_B_TRF_COND COND
		    WHERE PRPT_CD = 'C3'
		    AND CHR_VAL NOT IN ('B')
		    ) COND ON TRF.TRF_CD = COND.TRF_CD AND TRF.SUB_TRF_CD = COND.SUB_TRF_CD
		<!-- INNER JOIN (
				SELECT
				    MIN(IV_NO) AS IV_NO, -->
				    <!-- SUM(CASE WHEN REF_NO4 = 'CDI' THEN 0 ELSE UNIT1_VAL END) AS ALL_UNIT1_VAL, -->
				    <!-- SUM(APLY_AMT) AS ALL_APLY_AMT -->
				    <!-- MIN(REF_NO4) AS REF_NO4 -->
				 <!-- FROM
				    TMT_B_IV_DATA IV_DATA
				    LEFT JOIN TMT_B_TRF_CD TRF ON TRF.TRF_CD = IV_DATA.TRF_CD
				                                  AND TRF.SUB_TRF_CD = IV_DATA.SUB_TRF_CD
				WHERE
				    VSL_CALL_ID = #{vslCallId}
			    	AND REF_NO1 = #{blNo}
			    	AND REF_NO2 = #{masterBL}
				    AND TRF.TRF_TP_CD = #{trfTpCd}
				    AND SCR_ID = 'PRF'
				    AND STAT_CD IN ('IV','PC','SM','VF')
		) SUMMARY_IV_DATA ON SUMMARY_IV_DATA.IV_NO = IV_DATA.IV_NO -->
		WHERE IV_DATA.VSL_CALL_ID = #{vslCallId}
	    <if test="trfTpCd != 'CC' and trfTpCd != 'BM'">
		    <choose>
		    	<when test="masterBL !=null and masterBL != ''">
			    	AND REF_NO1 = #{blNo}
			    	AND REF_NO2 = #{masterBL}
		    	</when>
		    	<otherwise>
		    		AND REF_NO1 = #{shipgNoteNo}
			    	AND REF_NO2 = #{bookingNo}
		    	</otherwise>
		    </choose>
	    </if>
	    AND TRF.TRF_TP_CD = #{trfTpCd}
	    AND SCR_ID = 'PRF'
	    <!-- AND IV_DATA.REF_NO4 = 'PFI' -->
	    AND STAT_CD IN ('IV','PC','SM','VF')
	    AND ADHOC_YN IS NULL
	</select>
	
	<select id="selectInvoiceItemsForServiceOrder"  parameterType="tariffcodeGeneratorParm" resultType="InvoiceDataItem">
		SELECT /*tariffCodeGenerator.selectInvoiceItemsForServiceOrder*/
			SUM(APLY_AMT) AS APLYAMT
		    ,SUM(UNIT1_VAL) AS UNIT1VAL
		FROM TMT_B_IV_DATA IV_DATA
		LEFT JOIN TMT_B_TRF_CD TRF ON TRF.TRF_CD = IV_DATA.TRF_CD AND TRF.SUB_TRF_CD = IV_DATA.SUB_TRF_CD 
		WHERE VSL_CALL_ID = #{vslCallId}
    	AND REF_NO1 = #{odrNo}
    	AND REF_NO2 = #{vslCallId}
		AND TRF.TRF_TP_CD = #{trfTpCd}
		AND STAT_CD IN ('IV','PC','SM','VF') 
	</select>
	
	<select id="selectGenerateServiceOrderCreditList" parameterType="tariffcodeGeneratorParm" resultMap="tariffCodeServiceOrderGeneratorItemMap">
		SELECT /*tariffCodeGenerator.selectGenerateServiceOrderCreditList*/
			 DISTINCT
             VSL_CALL_ID
             , A.ODR_NO
             , STAT_CD
             , SUMIT_BY
             , TO_CHAR(SUMIT_DT, 'YYYYHHDDHH24MI') SUMIT_DT
             , APPRV_BY
             , TO_CHAR(APPRV_DT, 'YYYYHHDDHH24MI') APPRV_DT
             , REJ_BY
             , TO_CHAR(REJ_DT, 'YYYYHHDDHH24MI') REJ_DT
             , CNCL_BY
             , TO_CHAR(CNCL_DT, 'YYYYHHDDHH24MI') CNCL_DT
             , COM_BY
             , TO_CHAR(COM_DT, 'YYYYHHDDHH24MI') COM_DT
             , PAYER
             , CATEGORY1
             , CATEGORY2
             , CATEGORY3
             , SVC_DT_FMT
             , SVC_DT_TP
             , DT1_CHK
             , DT1_TIT
             , DT1_FMT
             , DT1_TP
             , DT2_CHK
             , DT2_TIT
             , DT2_FMT
             , DT2_TP
             , SHFT_CHK
             , UNIT_TIT
             , UNIT_UOM
             , UNIT_DEC
             , UNIT1_CHK
             , UNIT1_TIT
             , UNIT1_UOM
             , UNIT1_DEC
             , UNIT2_CHK
             , UNIT2_TIT
             , UNIT2_UOM
             , UNIT2_DEC
             , EQ_DIV_CD
             , NVL(CAPA_CD, '') CAPA_CD
             , PAY_TP_CD
             , PRC_TP_CD
             , LOC_CHK
             , RMK_CHK
             , CMDTY_CHK
             , TO_CHAR(SVC_DT_FM,'YYYYMMDDHH24MI') AS  SVC_DT_FM
             , TO_CHAR(SVC_DT_TO,'YYYYMMDDHH24MI') AS  SVC_DT_TO
             , TO_CHAR(DT1_FM,'YYYYMMDDHH24MI')    AS  DT1_FM
             , TO_CHAR(DT1_TO,'YYYYMMDDHH24MI')    AS  DT1_TO
             , TO_CHAR(DT2_FM,'YYYYMMDDHH24MI')    AS  DT2_FM
             , TO_CHAR(DT2_TO,'YYYYMMDDHH24MI')    AS  DT2_TO
             , SHFT_ID
             , UNIT
             , UNIT1
             , UNIT2
             , LOC_ID
             , REQ_RMK
             , COM_CHK
             , CMDTY_CD
             , COM_CMDTY_CD
             , TO_CHAR(SVC_DT_FM,'YYYYMMDDHH24MI')  AS COM_SVC_DT_FM
             , TO_CHAR(SVC_DT_FM,'YYYYMMDDHH24MI')  AS COM_SVC_DT_TO
             , TO_CHAR(SVC_DT_FM,'YYYYMMDDHH24MI')  AS COM_DT1_FM
             , TO_CHAR(SVC_DT_FM,'YYYYMMDDHH24MI')  AS COM_DT1_TO
             , TO_CHAR(SVC_DT_FM,'YYYYMMDDHH24MI')  AS COM_DT2_FM
             , TO_CHAR(SVC_DT_FM,'YYYYMMDDHH24MI')  AS COM_DT2_TO
             , NVL (com_shft_id, decode(com_svc_dt_fm, null,null, F_GET_SHIFT_CD (com_svc_dt_fm))) COM_SHFT_ID
             , COM_UNIT
             , COM_UNIT1
             , COM_UNIT2
             , NVL(COM_CAPA_CD, '') COM_CAPA_CD
             , COM_LOC_ID
             , COM_RMK
             , RMK
             , REQ_DOC_NO
             , COM_DOC_NO
             , REQ_UNIT_NO
             , COM_UNIT_NO
             , (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE 1=1 AND PTNR_CODE = PAYER AND PAYMENT_TYPE = 'C' AND ROWNUM = 1) AS PAYER_TYPE
             , 'INV' AS IV_PRFX
        FROM  TMT_SVC_ODR A
        WHERE  ODR_NO IS NOT NULL
        AND STAT_CD = 'CP'
       <!--   AND STAT_CD = 'CP' -->
        <if test="vslCallId != null and vslCallId != ''">
			AND VSL_CALL_ID = #{vslCallId}
		</if>
		<!-- 
		 <if test="payTpCd != null and payTpCd != ''">
			AND PAY_TP_CD = #{payTpCd}
		</if>
		 -->
	</select>
	
	<select id="selectReconcileVerifyChk"  parameterType="tariffcodeGeneratorParm" resultType="InvoiceDataItem">
		SELECT /*tariffCodeGenerator.selectReconcileVerifyChk*/
			NVL(IM_RECCL_CD, 'N') AS IMVRFCHK,
			NVL(EX_RECCL_CD, 'N') AS EXVRFCHK
		FROM TMT_B_RECCL
		WHERE VSL_CALL_ID = #{vslCallId}
	</select>
	
	<insert id="insertItems"  parameterType="invoiceDataItem">
		<selectKey order="BEFORE" resultType="String" keyProperty="gatherNo" >
			(SELECT 'MOST'||'_'|| REPLACE(TO_CHAR (TO_NUMBER (NVL (MAX (SUBSTR (GATHER_NO, 6, 6)), '0')) + 1, '000000'),' ','') ||'_'||TO_CHAR (SYSDATE, 'YYYYMMDD') AS gatherNo 
              FROM  TMT_B_IV_DATA WHERE GATHER_NO LIKE 'MOST%' || TO_CHAR (SYSDATE, 'YYYYMMDD'))
		</selectKey>
		INSERT 
		INTO TMT_B_IV_DATA (
		 	 TRF_CD,
		 	 SUB_TRF_CD,
		 	 PAYER,
		 	 GATHER_NO,
			 BILL_TP_CD,
		 	 IV_PRFX,
		 	 VSL_CALL_ID,
		 	 TRF_DESCR,
		 	 UNIT1_VAL,
		 	 UNIT2_VAL,
		 	 UNIT3_VAL,
		 	 STAT_CD,
		 	 IV_NO,
		 	 GATHER_DT,
		 	 CAL_FM_YMD,
		 	 CAL_TO_YMD,
		 	 PKG_TRF_NM,
		 	 APLY_RATE,
		 	 APLY_AMT,
		 	 STD_RATE,
		 	 ADHOC_YN,
		 	 REVS_RATE,
		 	 REVS_AMT,
		 	 REVS_UNIT1_VAL,
		 	 REVS_UNIT2_VAL,
		 	 REVS_UNIT3_VAL,
		 	 AREA,
		 	 UPDATE_TIME,
		 	 STAFF_CD,
		 	 VERSION,
		 	 <if test="refNo != null and refNo != ''">
		 	 	REF_NO1,
		 	 </if>
		 	 <if test="refNo2 != null and refNo2 != ''">
		 	 	REF_NO2,
		 	 </if>
		 	 SCR_ID,
		 	 COST_CENT_CD,
		 	 TAX_TYPE,
		 	 TAX_VALUE,
		 	 TAX_AMT,
		 	 TOTAL_AMT
		) VALUES (
			 #{trfCd},
			 #{subTrfCd},
			 #{payer},
			 #{gatherNo},
			 #{billTpCd},
			 #{ivPrfx}, 	
			 #{vslCallId}, 	 	
			 #{trfDescr}, 	 	 	
			 NVL(TO_NUMBER(#{unit1Val}),0),  	 	 
		 	 NVL(TO_NUMBER(#{unit2Val}),0),    	 	 
		 	 NVL(TO_NUMBER(#{unit3Val}),0),	  	 	 
		 	 #{statCd}, 	 	 	
		 	 #{ivNo}, 	 	 		
	     	 TO_DATE(#{gatherDt}, 'DD/MM/YYYY'),
			 #{calFmYmd},
			 #{calToYmd},
			 #{pkgTrfNm},	 	 	
			 TO_NUMBER(#{aplyRate}), 	 	 
			 ROUND(NVL(TO_NUMBER(#{aplyAmt}),0),2), 	 	 
			 TO_NUMBER(#{stdRate}),
			 #{adhocYn},	  	 	 
			 TO_NUMBER(#{revsRate}),
			 ROUND(NVL(TO_NUMBER(#{revsAmt}),0),2), 	 	 
			 TO_NUMBER(#{revsUnit1Val}), 
			 TO_NUMBER(#{revsUnit2Val}),
			 TO_NUMBER(#{revsUnit3Val}),
			 #{area},
			 systimestamp,
			 #{userId},
			 #{newVersion},
			 <if test="refNo != null and refNo != ''">
		 	 	#{refNo},
		 	 </if>
			 <if test="refNo2 != null and refNo2 != ''">
		 	 	#{refNo2},
		 	 </if>
			 <choose>
			 	<when test="scrId != null and scrId != ''"> #{scrId},</when>
			 	<otherwise>'OPE',</otherwise>
			 </choose>
			 #{costCentCd},
			 #{gstType},
			 #{gstPercent},
			 #{gstAmt},
			 #{totalAmt}
		)
	</insert>
	
	<delete id="deleteItem" parameterType="invoiceDataItem">
		DELETE TMT_B_IV_DATA 
	  	WHERE VSL_CALL_ID = #{vslCallId}
	  	AND STAT_CD NOT IN ('IV','VF','WV')
		<if test="bookingNo != null and bookingNo != ''">
			AND (REF_NO2 = #{bookingNo} OR REF_NO2 IS NULL)
		</if>
		<if test="masterBl != null and masterBl != ''">
			AND (REF_NO2 = #{masterBl} OR REF_NO2 IS NULL)
		</if>
	  	<if test="scrId != null and scrId != ''">
			AND SCR_ID = #{scrId}
		</if>
  	</delete>	
</mapper>
