<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cargoDischarging">
	
	<!--  ################ Query Statement Define ######################################### -->
	<select id="selectCargoDischargingList"  parameterType="cargoDischargingParm" resultType="cargoDischargingItem">
		WITH VA
		     AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
		                (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
		                (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY,
                  		JB.TSPT_TP_CD
		           FROM TMT_JOB JB
		          WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
		                AND JB.JOB_PURP_CD = 'VA'
		                AND JB.TSPT_TP_CD <![CDATA[<>]]> 'GI'
		          GROUP BY JB.TSPT_TP_CD),
		     VA_HAS_GET_IN
		     AS (  SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
		                  (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
		                  (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
		             FROM TMT_JOB JB
		            WHERE JB.VSL_CALL_ID = #{vslCallId} AND JB.CG_NO = #{blNo} 
		            		AND JB.JOB_PURP_CD = 'VA'),
		     AW
		     AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
		                (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
		                (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
		           FROM TMT_JOB JB
		          WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
		                AND JB.JOB_PURP_CD = 'AW'
		                AND JB.TSPT_TP_CD <![CDATA[<>]]> 'GI'),
		     AG
		     AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
		                (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
		                (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
		           FROM TMT_JOB JB
		          WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
		                AND JB.JOB_PURP_CD = 'AG'),
		     VG
		     AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
		                (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
		                (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
		           FROM TMT_JOB JB
		          WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
		                AND JB.JOB_PURP_CD = 'VG')
		    ,VB
             AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
                        (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
                        (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
                   FROM TMT_JOB JB
                  WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
                        AND JB.JOB_PURP_CD = 'VB')
                        
             ,AB
             AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
                        (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
                        (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
                   FROM TMT_JOB JB
                  WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
                        AND JB.JOB_PURP_CD = 'AB')
		     ,SDO_INFORMATION AS
	        ( SELECT  VSL_CALL_ID,
	                  BL_NO,
	                  DO_NO,
	                  SDO_NO,
	                  SUM(NVL(D_MT,0))  DMT,
	                  SUM(NVL(D_M3,0))  DM3,
	                  SUM(NVL(D_QTY,0)) DQTY,
	                  MAX(TSPT_TP_CD)   TSPT_TP_CD,
	                  SUM(NVL(I_MT,0))  IMT,
	                  SUM(NVL(I_M3,0))  IM3,
	                  SUM(NVL(I_QTY,0)) IQTY,
	                  MAX(I_TSPT_TP_CD) I_TSPT_TP_CD
	          FROM  TMT_DO_DTL
	          WHERE VSL_CALL_ID = #{vslCallId}
	                AND BL_NO = #{blNo}
	                AND SDO_NO = #{sdoNo}
<!--                 	<if test="sdoNo != null and sdoNo != ''"> -->
<!--                 		AND SDO_NO = #{sdoNo} -->
<!--                 	</if> -->
	                
	          GROUP BY VSL_CALL_ID, BL_NO, DO_NO, SDO_NO
	        ),
	        PIPLINE_D_AMOUNT AS
	        (
	        	SELECT (NVL(SDO.D_MT, 0) - NVL(OPE.CG_WGT, 0)) AS WGT,
	        			 (NVL(SDO.D_M3, 0) - NVL(OPE.CG_VOL, 0)) AS M3,
	        			 (NVL(SDO.D_QTY, 0) - NVL(OPE.PKG_QTY, 0)) AS QTY,
	        			 SDO.VSL_CALL_ID,
	        			 SDO.BL_NO 
	        			 
						FROM (SELECT SUM(D_MT) AS D_MT,
									 SUM(D_M3) AS D_M3,
									 SUM(D_QTY) AS D_QTY,
									 VSL_CALL_ID,
									 BL_NO
							  FROM TMT_DO_DTL
							  WHERE VSL_CALL_ID = #{vslCallId} AND BL_NO = #{blNo} AND TSPT_TP_CD = 'PL'
							  GROUP BY VSL_CALL_ID, BL_NO) SDO
							   
							LEFT OUTER JOIN
							
							(SELECT SUM(CG_WGT) AS CG_WGT,
									SUM(CG_VOL) AS CG_VOL,
									SUM(PKG_QTY) AS PKG_QTY,
									VSL_CALL_ID,
									CG_NO
							FROM TMT_JOB
							WHERE VSL_CALL_ID = #{vslCallId} AND CG_NO = #{blNo} 
							AND TSPT_TP_CD = 'PL' AND JOB_PURP_CD = 'VG'
							GROUP BY VSL_CALL_ID, CG_NO) OPE ON SDO.VSL_CALL_ID = OPE.VSL_CALL_ID AND SDO.BL_NO = OPE.CG_NO
							
						WHERE SDO.VSL_CALL_ID = #{vslCallId} AND SDO.BL_NO = #{blNo}
	        )           
		SELECT 	/*cargoDischarging.selectCargoDischargingList*/
		      	B.BL_NO AS BLNO,
		      	B.MF_DOC_ID AS MFDOCID,
		       	DO.DO_NO AS DONO,
		       	B.VSL_CALL_ID AS VSLCALLID,
		       	B.VSL_CD AS VSLCD,
		       	B.CALL_YEAR AS CALLYEAR,
		       	B.CALL_SEQ AS CALLSEQ,
		       	P.VSL_NM AS VSLNM,
		       	NVL (TO_NUMBER (B.PKG_QTY), 0) AS QTY,
		       	NVL (TO_NUMBER (REPLACE (NVL (TRUNC (B.CG_WGT, 3), 0), ',', '')), 0) AS MT,
		       	NVL (TO_NUMBER (TRUNC (B.CG_VOL, 3)), 0) AS M3,      /*Direct Balance*/
<!-- 		        J.HATCH_NO AS hatchNo, -->
		       	TO_NUMBER (REPLACE (NVL (TRUNC (B.PKG_QTY, 3), 0), ',', ''))
			       - (NVL(TO_NUMBER (VAGI.QTY),0) + TO_NUMBER (VB.QTY) + TO_NUMBER (VG.QTY))
			          AS BALQTY,
			         TO_NUMBER (REPLACE (NVL (TRUNC (B.CG_WGT, 3), 0), ',', ''))
			       - (NVL(TO_NUMBER (VAGI.MT),0) + TO_NUMBER (VB.MT) + TO_NUMBER (VG.MT))
			          AS BALMT,
			         TO_NUMBER (REPLACE (NVL (TRUNC (B.CG_VOL, 3), 0), ',', ''))
			       - (NVL(TO_NUMBER (VAGI.M3),0) + TO_NUMBER (VB.M3) + TO_NUMBER (VG.M3))
			          AS BALM3,
		       	NVL (TO_NUMBER (VA.QTY - AW.QTY - AG.QTY - AB.QTY), 0) AS AQTY,
                NVL (TO_NUMBER (VA.MT - AW.MT - AG.MT - AB.MT), 0) AS AMT,
                NVL (TO_NUMBER (VA.M3 - AW.M3 - AG.M3 - AB.M3), 0) AS AM3,
		      	NVL (TO_NUMBER (VA.QTY - AG.QTY - AW.QTY), 0) AS ABQTY,
		       	NVL (TO_NUMBER (VA.MT - AG.MT - AW.MT), 0) AS ABMT,
		       	NVL (TO_NUMBER (VA.M3 - AG.M3 - AW.M3), 0) AS ABM3,
		       	B.TSPTR AS TSPTR,
		       	(SELECT ENG_SNM
		          FROM TMT_PTNR
		         WHERE PTNR_TYPE = 'TRK' AND PTNR_CODE = B.TSPTR)
		          AS TSPTRNM,
		       	B.DELV_TP_CD AS DELVTPCD,
		       	NVL (B.CATG_CD, ' ') AS CATGCD,
		       	NVL (C.WH_FNL_DELV_YN, 'N') AS WHFNLDELVYN,
		       	B.CMDT_CD AS CMDTCD,
		       	B.CMDT_GRP_CD AS CMDTGRPCD,
		       	(SELECT M.CMDT_DESC
		          FROM TMT_CMDT M
		         WHERE M.CMDT_CD = B.CMDT_CD)
		          AS CARGO,
		       	B.PKG_TP_CD AS PKGTPCD,
		       	B.PKG_TP_CD AS REPKGTYPECD,
		       	B.CG_WGT_UNIT AS WGTUNIT,
		       	B.CG_VOL_UNIT AS MSRMTUNIT,
		       	B.POL AS PORTOFLOAD,
		       	B.POD AS PORTOFDIS,
		       	B.FND AS FDEST,
		       	B.CG_TP_CD AS CGTPCD,
		       	(SELECT A.LORRY_NO AS LORRYID
		          FROM TMT_CG_ARRV_DELV A
		         WHERE     A.CG_IN_OUT_CD = 'O'
		               AND A.GATE_OUT_DT IS NULL
		               AND A.LORRY_NO IS NOT NULL
		               AND A.VSL_CALL_ID = B.VSL_CALL_ID
		               AND A.CG_NO = B.BL_NO
		               AND ROWNUM = 1)
		          AS externalLorryNo,
		       	NVL (B.FWRD, ' ') AS FWRAGNT,
		       	(SELECT JJ.RMK
		          FROM TMT_JOB JJ
		         WHERE     JJ.VSL_CALL_ID = #{vslCallId}
		               AND JJ.CG_NO = #{blNo}
		               AND JJ.JOB_PURP_CD IN ('VG', 'VA', 'VW')
		               AND JJ.JOB_NO =
		                      (SELECT MAX (J.JOB_NO)
		                         FROM TMT_JOB J
		                        WHERE     J.VSL_CALL_ID = #{vslCallId}
		                              AND J.CG_NO = #{blNo}
		                              AND J.JOB_PURP_CD IN ('VG', 'VA', 'VW')
		                              AND J.RMK IS NOT NULL))
		          AS RMK,
		       	(SELECT CASE
		                  WHEN CUS.DOC_NO IS NULL
		                  THEN
		                     'HOLD'
		                  WHEN CUS.DOC_NO IS NOT NULL AND CUS.RELEASE_MT IS NULL
		                  THEN
		                     'RELEASE'
		                  ELSE
		                     'RELEASE'
		               END
		                  AS status
			          FROM TMT_BL BL
			               LEFT OUTER JOIN (  SELECT DOC_NO,
			                                         REF_NO,
			                                         VSL_CALL_ID,
			                                         SUM (RELEASE_MT) AS RELEASE_MT,
			                                         SUM (RELEASE_QTY) AS RELEASE_QTY
			                                    FROM TMT_CUSTOMS_RELEASE
			                                GROUP BY DOC_NO, REF_NO, VSL_CALL_ID) CUS
			                  ON     CUS.VSL_CALL_ID = BL.VSL_CALL_ID
			                     AND (   (    CUS.REF_NO IS NULL
			                              AND CUS.DOC_NO = BL.MF_DOC_ID)
			                          OR (    CUS.REF_NO IS NOT NULL
			                              AND CUS.REF_NO = BL.BL_NO))
			         WHERE BL.VSL_CALL_ID = B.VSL_CALL_ID AND BL.BL_NO = B.BL_NO)
		          	AS CUSTMODE,
		       	(  SELECT 'Y'
		            FROM TMT_JOB J
		           WHERE     J.JOB_PURP_CD IN ('VA', 'VG', 'VW')
		                 AND J.FNL_OPE_YN IN ('Y')
		                 AND J.VSL_CALL_ID = C.VSL_CALL_ID
		                 AND J.CG_NO = C.CG_NO
		        GROUP BY J.VSL_CALL_ID, J.CG_NO)
		          AS FNLDIS
		       ,NVL(VA.TSPT_TP_CD, 'LR') AS  TSPTTPCD
		       
		       	<if test="shftId != null and shftId != ''">
					,TO_DATE((SELECT TO_CHAR(TO_DATE(#{shftDt},'YYYYMMDD'),'dd/MM/YYYY')|| ' ' ||TO_CHAR(TO_date(S.FM_HHMM,'hh24:mi'),'HH24:MI') AS STARTDT FROM TMT_SHFT S
					   WHERE S.SHFT_METH_CD ='Standard' AND S.VLD_YN = 'Y'
						 AND S.SHFT_ID=#{shftId}
					), 'dd/MM/YYYY hh24:mi') AS STARTDT
					,TO_DATE((SELECT CASE 
						WHEN TO_NUMBER(S.TO_HHMM) &lt;= TO_NUMBER(S.FM_HHMM)
						THEN TO_CHAR(TO_DATE(#{shftDt},'YYYYMMDD')+1,'dd/MM/YYYY')|| ' ' ||TO_CHAR(TO_date(S.TO_HHMM,'hh24:mi'),'HH24:MI')
						ELSE TO_CHAR(TO_DATE(#{shftDt},'YYYYMMDD'),'dd/MM/YYYY')|| ' ' ||TO_CHAR(TO_date(S.TO_HHMM,'hh24:mi'),'HH24:MI')
						 END AS ENDDT 
						FROM TMT_SHFT S
					   WHERE S.SHFT_METH_CD ='Standard' AND S.VLD_YN = 'Y'
					AND S.SHFT_ID=#{shftId}), 'dd/MM/YYYY hh24:mi') AS ENDDT
				</if>
		       	<if test="startDtStr != null and startDtStr != ''">
		       		, F_GET_SHIFT_CD(TO_DATE(#{startDtStr}, 'DD/MM/YYYY HH24:MI'), 'CD') AS SHFTID
					, F_GET_SHIFT_CD(TO_DATE(#{startDtStr}, 'DD/MM/YYYY HH24:MI'), 'NM') AS SHFTNM
		       	</if>
		       	,'' AS GATETXNNO
				,'' AS LORRYNO
		        ,B.EACH_WGT AS eachWgt 
		        ,B.EACH_VOL AS eachVol
		        ,NVL(B.ADDITIONAL_CHK, 'N') AS additionalCheckYn
		        ,F_CM_001('MT', 'TSPTTP', NVL (VA.TSPT_TP_CD, 'LR')) AS TSPTTPNM
        		,F_CM_001('MT', 'DELVTP', B.DELV_TP_CD) AS DELVTPNM
        		,F_CM_001('MT', 'CGTP', B.CG_TP_CD) AS CGTPNM
        		,NVL(B.WGT_CHK	, 'Y') AS WEIGHTCHECKYN
        		,SDO.DMT
				,SDO.DM3
				,SDO.DQTY
				,SDO.DMT AS norDMt
				,SDO.DM3 AS norDM3
				,SDO.DQTY AS norDQty
				,SDO.IMT
				,SDO.IM3
				,SDO.IQTY
				,SDO.SDO_NO AS SDONO
				,NVL(C.REPKG_TP_CD, B.PKG_TP_CD) AS REPKGTPCD
				,B.DOMESTIC_CHK AS DOMESTICCHK
				,PL.WGT AS piplineDMt
				,PL.M3 AS piplineDM3
				,PL.QTY AS piplineDQty
		  FROM 	TMT_BL B
				LEFT OUTER JOIN TMT_DO DO
				   ON B.VSL_CALL_ID = DO.VSL_CALL_ID AND B.BL_NO = DO.BL_NO
				   
				LEFT OUTER JOIN SDO_INFORMATION SDO ON B.VSL_CALL_ID = SDO.VSL_CALL_ID AND B.BL_NO = SDO.BL_NO AND DO.DO_NO = SDO.DO_NO
				   
				LEFT OUTER JOIN TMT_CG_MST C
				   ON B.VSL_CALL_ID = C.VSL_CALL_ID AND B.BL_NO = C.CG_NO
				LEFT OUTER JOIN TMT_VSL_SCH SCH ON B.VSL_CALL_ID = SCH.VSL_CALL_ID
				LEFT OUTER JOIN TMT_VSL_PART P ON SCH.VSL_CD = P.VSL_CD
				LEFT OUTER JOIN VA ON 1 = 1
				LEFT OUTER JOIN VA_HAS_GET_IN VAGI ON 1 = 1
				LEFT OUTER JOIN AW ON 1 = 1
				LEFT OUTER JOIN AG ON 1 = 1
				LEFT OUTER JOIN VG ON 1 = 1
				
				LEFT OUTER JOIN VB ON 1 = 1
				LEFT OUTER JOIN AB ON 1 = 1
				LEFT OUTER JOIN PIPLINE_D_AMOUNT PL ON B.VSL_CALL_ID = PL.VSL_CALL_ID AND B.BL_NO = PL.BL_NO
		 WHERE 	B.VSL_CALL_ID = #{vslCallId}
				AND B.BL_NO = #{blNo}
				AND B.STAT_CD = 'AP'
	</select>
	
	<select id="selectCargoDischargingOfBarge"  parameterType="cargoDischargingParm" resultType="cargoDischargingItem">
		/*cargoDischarging.selectCargoDischargingOfBarge*/
		WITH VA
		     AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
		                (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
		                (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
		           FROM TMT_JOB JB
		          WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
		                AND JB.JOB_PURP_CD = 'VA'),
		     AW
		     AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
		                (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
		                (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
		           FROM TMT_JOB JB
		          WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
		                AND JB.JOB_PURP_CD = 'AW'),
		     AG
		     AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
		                (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
		                (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
		           FROM TMT_JOB JB
		          WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
		                AND JB.JOB_PURP_CD = 'AG'),
		     VG
		     AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
		                (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
		                (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
		           FROM TMT_JOB JB
		          WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
		                AND JB.JOB_PURP_CD = 'VG')
		    ,VB
             AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
                        (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
                        (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
                   FROM TMT_JOB JB
                  WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
                        AND JB.JOB_PURP_CD = 'VB')
                        
             ,AB
             AS (SELECT (NVL (TO_NUMBER (SUM (CG_WGT)), 0)) AS MT,
                        (NVL (TO_NUMBER (SUM (CG_VOL)), 0)) AS M3,
                        (NVL (TO_NUMBER (SUM (PKG_QTY)), 0)) AS QTY
                   FROM TMT_JOB JB
                  WHERE     JB.VSL_CALL_ID = #{vslCallId}
		                AND JB.CG_NO = #{blNo}
                        AND JB.JOB_PURP_CD = 'AB')
		                
		SELECT 	
		      	B.BL_NO AS BLNO,
		      	B.MF_DOC_ID AS MFDOCID,
		       	DO.DO_NO AS DONO,
		       	B.VSL_CALL_ID AS VSLCALLID,
		       	B.VSL_CD AS VSLCD,
		       	B.CALL_YEAR AS CALLYEAR,
		       	B.CALL_SEQ AS CALLSEQ,
		       	P.VSL_NM AS VSLNM,
		       	NVL (TO_NUMBER (B.PKG_QTY), 0) AS QTY,
		       	NVL (TO_NUMBER (REPLACE (NVL (TRUNC (B.CG_WGT, 3), 0), ',', '')), 0) AS MT,
		       	NVL (TO_NUMBER (TRUNC (B.CG_VOL, 3)), 0) AS M3,      /*Direct Balance*/
		       	TO_NUMBER (NVL (B.PKG_QTY, 0)) - TO_NUMBER (NVL (C.PKG_QTY, 0)) AS BALQTY,
		        TO_NUMBER (REPLACE (NVL (TRUNC (B.CG_WGT, 3), 0), ',', ''))
		       		- TO_NUMBER (REPLACE (NVL (C.CG_WGT, 0), ',', '')) AS BALMT,
		       	/*TO_NUMBER (REPLACE (NVL (TRUNC (B.CG_WGT, 3), 0), ',', ''))
		       		- (TO_NUMBER (VA.MT)+TO_NUMBER (VB.MT)+TO_NUMBER (VG.MT)) AS BALMT,*/
		        TO_NUMBER (NVL (TRUNC (B.CG_VOL, 3), 0))
		       		- TO_NUMBER (NVL (C.CG_VOL, 0))
		          AS BALM3,
		       	NVL (TO_NUMBER (VA.QTY - AW.QTY - AG.QTY - AB.QTY), 0) AS AQTY,
                NVL (TO_NUMBER (VA.MT - AW.MT - AG.MT - AB.MT), 0) AS AMT,
                NVL (TO_NUMBER (VA.M3 - AW.M3 - AG.M3 - AB.M3), 0) AS AM3,
		      	NVL (TO_NUMBER (VA.QTY - AG.QTY - AW.QTY), 0) AS ABQTY,
		       	NVL (TO_NUMBER (VA.MT - AG.MT - AW.MT), 0) AS ABMT,
		       	NVL (TO_NUMBER (VA.M3 - AG.M3 - AW.M3), 0) AS ABM3,
		       	B.TSPTR AS TSPTR,
		       	(SELECT ENG_SNM
		          FROM TMT_PTNR
		         WHERE PTNR_TYPE = 'TRK' AND PTNR_CODE = B.TSPTR)
		          AS TSPTRNM,
		       	B.DELV_TP_CD AS DELVTPCD,
		       	NVL (B.CATG_CD, ' ') AS CATGCD,
		       	NVL (C.WH_FNL_DELV_YN, 'N') AS WHFNLDELVYN,
		       	B.CMDT_CD AS CMDTCD,
		       	B.CMDT_GRP_CD AS CMDTGRPCD,
		       	(SELECT M.CMDT_DESC
		          FROM TMT_CMDT M
		         WHERE M.CMDT_CD = B.CMDT_CD)
		          AS CARGO,
		       	B.PKG_TP_CD AS PKGTPCD,
		       	B.PKG_TP_CD AS REPKGTYPECD,
		       	B.CG_WGT_UNIT AS WGTUNIT,
		       	B.CG_VOL_UNIT AS MSRMTUNIT,
		       	B.POL AS PORTOFLOAD,
		       	B.POD AS PORTOFDIS,
		       	B.FND AS FDEST,
		       	B.CG_TP_CD AS CGTPCD,
		       	(SELECT A.LORRY_NO AS LORRYID
		          FROM TMT_CG_ARRV_DELV A
		         WHERE     A.CG_IN_OUT_CD = 'O'
		               AND A.GATE_OUT_DT IS NULL
		               AND A.LORRY_NO IS NOT NULL
		               AND A.VSL_CALL_ID = B.VSL_CALL_ID
		               AND A.CG_NO = B.BL_NO
		               AND ROWNUM = 1)
		          AS externalLorryNo,
		       	NVL (B.FWRD, ' ') AS FWRAGNT,
		       	(SELECT JJ.RMK
		          FROM TMT_JOB JJ
		         WHERE     JJ.VSL_CALL_ID = #{vslCallId}
		               AND JJ.CG_NO = #{blNo}
		               AND JJ.JOB_PURP_CD IN ('VG', 'VA', 'VW')
		               AND JJ.JOB_NO =
		                      (SELECT MAX (J.JOB_NO)
		                         FROM TMT_JOB J
		                        WHERE     J.VSL_CALL_ID = #{vslCallId}
		                              AND J.CG_NO = #{blNo}
		                              AND J.JOB_PURP_CD IN ('VG', 'VA', 'VW')
		                              AND J.RMK IS NOT NULL))
		          AS RMK,
		       	(SELECT CASE
		                  WHEN CUS.DOC_NO IS NULL
		                  THEN
		                     'HOLD'
		                  WHEN CUS.DOC_NO IS NOT NULL AND CUS.RELEASE_MT IS NULL
		                  THEN
		                     'RELEASE'
		                  ELSE
		                     'RELEASE'
		               END
		                  AS status
			          FROM TMT_BL BL
			               LEFT OUTER JOIN (  SELECT DOC_NO,
			                                         REF_NO,
			                                         VSL_CALL_ID,
			                                         SUM (RELEASE_MT) AS RELEASE_MT,
			                                         SUM (RELEASE_QTY) AS RELEASE_QTY
			                                    FROM TMT_CUSTOMS_RELEASE
			                                GROUP BY DOC_NO, REF_NO, VSL_CALL_ID) CUS
			                  ON     CUS.VSL_CALL_ID = BL.VSL_CALL_ID
			                     AND (   (    CUS.REF_NO IS NULL
			                              AND CUS.DOC_NO = BL.MF_DOC_ID)
			                          OR (    CUS.REF_NO IS NOT NULL
			                              AND CUS.REF_NO = BL.BL_NO))
			         WHERE BL.VSL_CALL_ID = B.VSL_CALL_ID AND BL.BL_NO = B.BL_NO)
		          	AS CUSTMODE,
		       	(  SELECT 'Y'
		            FROM TMT_JOB J
		           WHERE     J.JOB_PURP_CD IN ('VA', 'VG', 'VW')
		                 AND J.FNL_OPE_YN IN ('Y')
		                 AND J.VSL_CALL_ID = C.VSL_CALL_ID
		                 AND J.CG_NO = C.CG_NO
		        GROUP BY J.VSL_CALL_ID, J.CG_NO)
		          AS FNLDIS
		       ,NVL(SDO.TSPT_TP_CD, 'LR') AS  TSPTTPCD
		       
		       	<if test="shftId != null and shftId != ''">
					,TO_DATE((SELECT TO_CHAR(TO_DATE(#{shftDt},'YYYYMMDD'),'dd/MM/YYYY')|| ' ' ||TO_CHAR(TO_date(S.FM_HHMM,'hh24:mi'),'HH24:MI') AS STARTDT FROM TMT_SHFT S
					   WHERE S.SHFT_METH_CD ='Standard' AND S.VLD_YN = 'Y'
						 AND S.SHFT_ID=#{shftId}
					), 'dd/MM/YYYY hh24:mi') AS STARTDT
					,TO_DATE((SELECT CASE 
						WHEN TO_NUMBER(S.TO_HHMM) &lt;= TO_NUMBER(S.FM_HHMM)
						THEN TO_CHAR(TO_DATE(#{shftDt},'YYYYMMDD')+1,'dd/MM/YYYY')|| ' ' ||TO_CHAR(TO_date(S.TO_HHMM,'hh24:mi'),'HH24:MI')
						ELSE TO_CHAR(TO_DATE(#{shftDt},'YYYYMMDD'),'dd/MM/YYYY')|| ' ' ||TO_CHAR(TO_date(S.TO_HHMM,'hh24:mi'),'HH24:MI')
						 END AS ENDDT 
						FROM TMT_SHFT S
					   WHERE S.SHFT_METH_CD ='Standard' AND S.VLD_YN = 'Y'
					AND S.SHFT_ID=#{shftId}), 'dd/MM/YYYY hh24:mi') AS ENDDT
				</if>
		       	<if test="startDtStr != null and startDtStr != ''">
		       		, F_GET_SHIFT_CD(TO_DATE(#{startDtStr}, 'DD/MM/YYYY HH24:MI'), 'CD') AS SHFTID
					, F_GET_SHIFT_CD(TO_DATE(#{startDtStr}, 'DD/MM/YYYY HH24:MI'), 'NM') AS SHFTNM
		       	</if>
		       	,'' AS GATETXNNO
				,'' AS LORRYNO
		        ,B.EACH_WGT AS eachWgt 
		        ,B.EACH_VOL AS eachVol
		        ,NVL(B.ADDITIONAL_CHK, 'N') AS additionalCheckYn
		        ,SDO.SDO_NO AS sdoNo
		        ,SDO.D_M3 AS dm3
		        ,SDO.D_MT AS dmt
		        ,SDO.D_QTY AS dqty
		        ,F_CM_001('MT', 'TSPTTP', DECODE(SDO.DELV_TP_CD, 'D', SDO.TSPT_TP_CD, SDO.I_TSPT_TP_CD)) AS TSPTTPNM
        		,F_CM_001('MT', 'DELVTP', SDO.DELV_TP_CD) AS DELVTPNM
        		,F_CM_001('MT', 'CGTP', B.CG_TP_CD) AS CGTPNM
        		,NVL(B.WGT_CHK	, 'Y') AS WEIGHTCHECKYN
        		,NVL(C.REPKG_TP_CD, B.PKG_TP_CD) AS REPKGTPCD
        		,B.PROJECT_CARGO AS PROJECTCARGO
        		,B.DOMESTIC_CHK AS DOMESTICCHK
		  FROM 	TMT_BL B
		       	INNER JOIN TMT_DO DO
          			ON B.VSL_CALL_ID = DO.VSL_CALL_ID AND B.BL_NO = DO.BL_NO
       			INNER JOIN TMT_DO_DTL SDO
          			ON B.VSL_CALL_ID = SDO.VSL_CALL_ID AND B.BL_NO = SDO.BL_NO AND DO.DO_NO = SDO.DO_NO
				LEFT OUTER JOIN TMT_CG_MST C
				   ON B.VSL_CALL_ID = C.VSL_CALL_ID AND B.BL_NO = C.CG_NO
				LEFT OUTER JOIN TMT_VSL_SCH SCH ON B.VSL_CALL_ID = SCH.VSL_CALL_ID
				LEFT OUTER JOIN TMT_VSL_PART P ON SCH.VSL_CD = P.VSL_CD
				LEFT OUTER JOIN VA ON 1 = 1
				LEFT OUTER JOIN AW ON 1 = 1
				LEFT OUTER JOIN AG ON 1 = 1
				LEFT OUTER JOIN VG ON 1 = 1
				
				LEFT OUTER JOIN VB ON 1 = 1
				LEFT OUTER JOIN AB ON 1 = 1
		 WHERE 	B.VSL_CALL_ID = #{vslCallId}
			    AND B.BL_NO = #{blNo}
			    <if test="sdoNo != null and sdoNo != ''">
					AND SDO.SDO_NO = #{sdoNo}
				</if>
	</select>
	
	<insert id="insertCargoDischargingItems" parameterType="cargoDischargingItem">
		INSERT INTO TMT_CG_MST (
			VSL_CALL_ID,
			CG_NO,
			OPE_CLASS_CD,
			TSPT_TP_CD,
			STAT_CD,
			DIS_ST_DT,
			DIS_END_DT,
			PKG_QTY,
			PKG_TP_CD,
			CG_WGT,
			CG_WGT_UNIT,
			CG_VOL,
			CG_VOL_UNIT,
			DMG_YN,
			DELV_TP_CD,
			CG_TP_CD,
			CMDT_CD,
			CMDT_GRP_CD,
			TMNL_IN_DT,
			TMNL_OUT_DT,
			BL_NO,
			CNTRY_OF_ORG,
			PORT_OF_LOAD,
			PORT_OF_DIS,
			FDEST,
			RMK,
			ACTL_DELV_TP_CD,
			SHIPG_AGNT, 
			FWR_AGNT,
			CNSNE, 
			CNSNE_NM, 
			SHPR, 
			SHPR_NM,
			UPDATE_TIME,
			STAFF_CD,
			VERSION,
			SHORT_YN,
			LORRY_NO,
			REPKG_TP_CD
		) VALUES (
			#{vslCallId}
			,#{cgNo}
			,#{catgCd}
			,#{tsptTpCd}
			,#{stat}
			,TO_DATE(#{disStDtStr}, 'DD/MM/YYYY HH24:MI')
			,TO_DATE(#{disEndDtStr}, 'DD/MM/YYYY HH24:MI')
			,TO_NUMBER(NVL(#{pkgQty},0))
			,#{pkgTpCd}
			,TO_NUMBER(NVL(#{wgt},0))
			,#{wgtUnit}
			,TO_NUMBER(NVL(#{msrmt},0))
			,#{msrmtUnit}
			,#{dmgYn}
			,#{delvTpCd}
			,#{cgTpCd}
			,#{cmdtCd}
			,#{cmdtGrpCd}
			,#{tmnlInDt}
			,#{tmnlOutDt}
			,#{blNo}
			,#{cntryOfOrg}
			,#{portOfLoad}
			,#{portOfDis}
			,#{fdest}
			,#{rmk}
			,#{opDelvTpCd}
			,#{shpgAgent}
			,#{fwrAgnt}
			,#{shpr}
			,#{shprNm}
			,#{cnsne}
			,#{cnsneNm}
			,SYSDATE
			,#{userId}
			,#{newVersion}
			,#{shortYn}
			,#{lorryNo}
			,#{rePkgTpCd}
		)
	</insert>
	
	<update id="updateCargoDischargingItems" parameterType="cargoDischargingItem">
		UPDATE	TMT_CG_MST
		SET 	OPE_CLASS_CD = #{catgCd},
				TSPT_TP_CD = #{tsptTpCd},
				STAT_CD = #{stat},
				PKG_QTY = TO_NUMBER(NVL(PKG_QTY,0)) + TO_NUMBER(NVL(#{pkgQty},0)),
				PKG_TP_CD = #{pkgTpCd},
				CG_WGT = TO_NUMBER(NVL(CG_WGT,0))+TO_NUMBER(NVL(#{wgt},0)),
				CG_WGT_UNIT = #{wgtUnit},
				CG_VOL = TO_NUMBER(NVL(CG_VOL,0))+TO_NUMBER(NVL(#{msrmt},0)),
				CG_VOL_UNIT = #{msrmtUnit},
				DMG_YN = #{dmgYn},
				DELV_TP_CD = #{delvTpCd},
				CG_TP_CD = #{cgTpCd},
				CMDT_CD = #{cmdtCd},
				TMNL_IN_DT = #{tmnlInDt},
				TMNL_OUT_DT = #{tmnlOutDt},
				BL_NO = #{blNo},
				CNTRY_OF_ORG = #{cntryOfOrg},
				PORT_OF_LOAD = #{portOfLoad}, 
				PORT_OF_DIS = #{portOfDis},
				FDEST = #{fdest},
				RMK = #{rmk},
				ACTL_DELV_TP_CD = #{opDelvTpCd},
				SHIPG_AGNT = #{shpgAgent},
				FWR_AGNT = #{fwrAgnt},
				UPDATE_TIME = SYSDATE
				,STAFF_CD = #{userId}
				,VERSION = #{newVersion}
				,REPKG_TP_CD = #{rePkgTpCd}
		WHERE	CG_NO = #{cgNo} 
		  		AND VSL_CALL_ID = #{vslCallId}

	</update>
	
	<update id="updateDischaringAmts" parameterType="cargoDischargingItem">
		UPDATE	TMT_CG_MST
		SET		PKG_QTY = TO_NUMBER(NVL(PKG_QTY,0)) + TO_NUMBER(NVL(#{pkgQty},0)), 
				CG_WGT = TO_NUMBER(NVL(CG_WGT,0))+TO_NUMBER(NVL(#{wgt},0)), 
				CG_VOL = TO_NUMBER(NVL(CG_VOL,0))+TO_NUMBER(NVL(#{msrmt},0)),
				UPDATE_TIME = SYSDATE,
				STAFF_CD = #{userId},
				VERSION = #{newVersion}
		 WHERE 	CG_NO  =#{cgNo}
		   		AND VSL_CALL_ID = #{vslCallId}
	</update>
	
	<insert id="insertJobItems" parameterType="cargoDischargingItem">
		<selectKey order="BEFORE" resultType="cargoDischargingItem" keyProperty="jobNo" >
			SELECT 
				('J' || TO_CHAR(SYSDATE, 'YYMMDD') 
					 || (SELECT NVL(TRIM(To_CHAR(SUBSTR(MAX(JOB_NO) ,-9,9)+1, '000000000')),'000000000') 
					  FROM  TMT_JOB)) AS jobNo
			 FROM DUAL
		</selectKey>
		INSERT INTO TMT_JOB (
			JOB_NO,
			JOB_TP_CD,
			WORK_ST_DT,
			WORK_END_DT,
			SHFT_ID,
			PKG_TP_CD,
			PKG_QTY,
			CG_VOL,
			CG_WGT,
			CNTR_QTY,
			EQ_NO,
			TO_LOC_ID,
			STAT_CD,
			CG_NO,
			VSL_CALL_ID,
			JOB_PURP_CD,
			DELV_TP_CD,
			FNL_OPE_YN,
			FNL_DELV_YN,
			HATCH_NO,
			HATCH_DRT,
			GANG_NO,
			OPE_CLASS_CD,
			DMG_YN,
			SHFT_DT,
			JOB_GROUP,
			UPDATE_TIME,
			STAFF_CD,
			VERSION,
			TSPT_TP_CD,
			JOB_CO_CD,
			SP_CA_CO_CD,
			REPKG_TYPE_CD,
<!-- 			PKG_NO, -->
			RMK,
			LORRY_NO,
			GATE_TXN_NO,
			BARGE_NO,
			SDO_NO,
			NEXT_JOB_NO,
			WB_TRANSACTION_NO
		) VALUES (
			#{jobNo},
			#{jobTpCd},
			TO_DATE(#{startDtStr}, 'DD/MM/YYYY HH24:MI'),
			TO_DATE(#{endDtStr}, 'DD/MM/YYYY HH24:MI'),
			F_GET_SHIFT_CD(TO_DATE(#{endDtStr}, 'DD/MM/YYYY HH24:MI'), 'CD'),
			#{pkgTpCd},
			TO_NUMBER(NVL(#{pkgQty},0)),
			TO_NUMBER(NVL(#{msrmt},0)),
			TO_NUMBER(NVL(#{wgt},0)),
			#{cntrQty},
			#{eqNo},
			#{toLocId},
			#{stat},
			#{cgNo},
			#{vslCallId},
			#{jobPurpCd},
			#{delvTpCd},
			DECODE(#{fnlOpeYn},'true','Y','Y','Y','N'),
			#{fnlDelvYn},
			#{hatchNo},
			#{hatchDrt},
			#{gangNo},
			#{catgCd},
			DECODE(#{dmgYn},NULL,'N','true','Y','false','N','Y','Y','N','N'),
			TO_DATE(#{shftDt}, 'YYYYMMDD'),
			#{jobGroup},
			SYSDATE,
			#{userId},
			#{newVersion},
			#{tsptTpCd},
			#{jobCoCd},
			#{spCaCoCd},
			#{rePkgTpCd},
<!-- 			#{pkgNo}, -->
			#{rmk},
			#{lorryNo},
			#{gateTxnNo},
			CASE #{jobPurpCd} WHEN 'VB' THEN #{bargeNoOfVslBarge} WHEN 'AB' THEN #{bargeNoOfAprBarge} ELSE '' END,
			<if test="lorryNo == null or lorryNo == ''">
				<if test="delvTpCd eq 'D'.toString() and tsptTpCd eq 'PL'.toString()">
					(SELECT SDO_NO 
						FROM 
							(SELECT DISTINCT SDO_NO 
							FROM TMT_DO_DTL
							WHERE VSL_CALL_ID = #{vslCallId} AND BL_NO = #{cgNo} AND TSPT_TP_CD = 'PL'
									AND SDO_NO NOT IN((
														SELECT DISTINCT SDO_NO 
														FROM TMT_JOB
														WHERE VSL_CALL_ID = #{vslCallId} AND CG_NO = #{cgNo} AND TSPT_TP_CD = 'PL' AND JOB_PURP_CD = 'VG'
													))	
							ORDER BY SDO_NO ASC)
						WHERE ROWNUM = 1),
				</if>
				<if test="delvTpCd != 'D'.toString() or tsptTpCd != 'PL'.toString()">
					#{sdoNo},
				</if>
			</if>
			<if test="lorryNo != null and lorryNo != ''">
				#{sdoNo},
			</if>
			CASE WHEN #{bargeCheck} = 'Y' THEN 'BARGE' ELSE NULL END,
			#{wbTransactionNo}
		)
	</insert>
	
	<update id="updateCargoMasterStatus" parameterType="cargoDischargingItem">
		<![CDATA[ CALL PRC_CG_MST_UPDATE_STAT(#{vslCallId}, #{cgNo}, #{jobNo},#{catgCd},#{userId},#{newVersion}) ]]>
	</update>
	
	<update id="updateCargoMasterInfo" parameterType="cargoDischargingItem">
		<![CDATA[ CALL PRC_CG_MST_UPDATE_AMT(#{vslCallId}, #{cgNo}, #{jobNo},#{catgCd},#{userId},#{newVersion}) ]]>
	</update>
	
	<insert id="insertDelvItems" parameterType="cargoDischargingItem">
		<selectKey order="BEFORE" resultType="String" keyProperty="jobNo" >
			SELECT J.JOB_NO AS jobNo FROM TMT_JOB J
			 WHERE J.VSL_CALL_ID = #{vslCallId}
			   AND J.CG_NO = #{cgNo}
			   AND J.JOB_GROUP = #{jobGroup}
			   AND J.JOB_CO_CD = #{jobCoCd}
			   AND nvl(J.SP_CA_CO_CD,' ') = nvl(#{spCaCoCd},' ')
		</selectKey>
		INSERT INTO TMT_CG_ARRV_DELV (
			CG_NO,
			CG_IN_OUT_CD,
			SEQ,
			CG_WGT,
			CG_WGT_UNIT,
			CG_VOL,
			CG_VOL_UNIT,
			PKG_QTY,
			PKG_TP_CD,
			CMDT_CD,
			CG_TP_CD,
<!-- 			DG_CG_IDT, -->
			GATE_IN_DT,
			GATE_OUT_DT,
			TSPT_TP_CD,
			FNL_YN,
			GR_NO,
			LOC_ID,
			RMK,
			LORRY_NO,
			GATE_PASS_NO,
			GATE_PASS_ISSUE_DT,
			ISSUE_CNT,
<!-- 			TRIP_NO, -->
<!-- 			IS_WH_DELV, -->
			UPDATE_TIME,
			STAFF_CD,
			VSL_CALL_ID,
			JOB_NO,
			VERSION
		) VALUES (
			#{cgNo},
			#{cgInOutCd},
			(SELECT NVL(TO_NUMBER(MAX(SEQ)), 0)+1
			   FROM TMT_CG_ARRV_DELV
			  WHERE CG_NO = #{cgNo} 
				AND CG_IN_OUT_CD = #{cgInOutCd}
				AND VSL_CALL_ID = #{vslCallId}),
			TO_NUMBER(NVL(#{loadMt},0)),
			#{wgtUnit},
			TO_NUMBER(NVL(#{loadM3},0)),
			#{msrmtUnit},
			TO_NUMBER(NVL(#{loadQty},0)),
			#{pkgTpCd},
			#{cmdtCd},
			#{cgTpCd},
<!-- 			DECODE(#{dmgYn},'Y','Y','N'), -->
			TO_DATE(#{startDtStr}, 'DD/MM/YYYY HH24:MI'),
			DECODE(#{fnlOpeYn},'Y',TO_DATE(#{endDtStr}, 'DD/MM/YYYY HH24:MI'),''),
			#{tsptTpCd},
			DECODE(#{fnlOpeYn},'true','Y','Y','Y','N'),
			#{grNo},
			#{locId},
			#{rmk},
			#{lorryNo},
			#{gatePassNo},
			SYSDATE,
			(SELECT NVL(MAX(ISSUE_CNT), 0)+1
			   FROM TMT_CG_ARRV_DELV
			  WHERE VSL_CALL_ID = #{vslCallId}
				AND CG_NO = #{cgNo}
				AND CG_IN_OUT_CD = #{cgInOutCd}
				AND LORRY_NO = #{lorryNo}),
<!-- 			(SELECT NVL(MAX(TRIP_NO),0)+1 -->
<!-- 				FROM TMT_CG_ARRV_DELV -->
<!-- 				WHERE VSL_CALL_ID = #{vslCallId} -->
<!-- 					AND CG_NO = #{cgNo} -->
<!-- 					AND CG_IN_OUT_CD = #{cgInOutCd} -->
<!-- 					AND IS_WH_DELV = 'N'), -->
<!-- 			'N', -->
			SYSDATE,
			#{userId},
			#{vslCallId},
			#{jobNo},
			#{newVersion}
		)
	</insert>
	
	<update id="updateDelvItems" parameterType="cargoDischargingItem">
		UPDATE	TMT_CG_ARRV_DELV
		SET 	CG_IN_OUT_CD = #{cgInOutCd},
		   		GATE_PASS_ISSUE_DT = SYSDATE,
				GATE_PASS_NO = #{gatePassNo},
				RMK = #{rmk},
				UPDATE_TIME = SYSDATE,
				STAFF_CD = #{userId},
				JOB_NO = ( SELECT J.JOB_NO AS jobNo FROM TMT_JOB J
							 WHERE J.VSL_CALL_ID = #{vslCallId}
							   AND J.CG_NO = #{cgNo}
							   AND J.JOB_GROUP = #{jobGroup}
							   AND J.GATE_TXN_NO = #{gateTxnNo}
							   AND ROWNUM=1),
				VERSION =#{newVersion}
		 WHERE 	VSL_CALL_ID=#{vslCallId} 
		   		AND CG_NO=#{cgNo} 
				AND LORRY_NO = #{lorryNo}
				<if test="gateTxnNo != null and gateTxnNo != ''">
					AND GATE_TXN_NO = #{gateTxnNo}
				</if>
				<if test="cgInOutCd != null and cgInOutCd != ''">
					AND CG_IN_OUT_CD =#{cgInOutCd}
				</if>
				AND GATE_PASS_NO IS NULL
	</update>
	
	<insert id="insertBalItems" parameterType="cargoDischargingItem">
		<selectKey order="BEFORE" resultType="String" keyProperty="jobNo" >
			SELECT NVL((
				SELECT J.JOB_NO AS jobNo FROM TMT_JOB J
				 WHERE J.VSL_CALL_ID = #{vslCallId}
				   AND J.CG_NO = #{cgNo}
				   AND J.JOB_GROUP = #{jobGroup}
				   AND J.JOB_CO_CD = #{jobCoCd}
				   AND nvl(J.SP_CA_CO_CD,' ') = nvl(#{spCaCoCd},' ')
				   AND ROWNUM = 1
			), NULL) FROM DUAL
		</selectKey>
		INSERT INTO TMT_CG_BAL (
			SEQ,
			VSL_CALL_ID,
			CG_NO,
			STAT_CD,
			PKG_QTY,
			CG_WGT, 
			CG_VOL,
			CHK_DT,
			JOB_NO,
			UPDATE_TIME,
			STAFF_CD,
			VERSION
		) VALUES (
			(SELECT NVL(MAX(SEQ), 0)+1 FROM TMT_CG_BAL),
			#{vslCallId},
			#{cgNo},
			#{balStatCd},
			TO_NUMBER(NVL(#{pkgQty},0)),
			TO_NUMBER(NVL(#{wgt},0)),
			TO_NUMBER(NVL(#{msrmt},0)),
			SYSDATE,
			#{jobNo},
			SYSDATE,
			#{userId},
			#{newVersion}
		)
	</insert>
	
	<insert id="insertCargoInvLocationItems" parameterType="cargoDischargingItem">
		<selectKey order="BEFORE" resultType="String" keyProperty="jobNo" >
			SELECT J.JOB_NO AS jobNo FROM TMT_JOB J
			 WHERE TRIM(J.VSL_CALL_ID) = TRIM(#{vslCallId})
			   AND TRIM(J.CG_NO) = TRIM(#{cgNo})
			   AND TRIM(J.JOB_GROUP) = TRIM(#{jobGroup})
			   AND TO_NUMBER(J.PKG_QTY) = TO_NUMBER(#{pkgQty})
			   AND TO_NUMBER(J.CG_VOL) = TO_NUMBER(#{msrmt})
			   AND TO_NUMBER(J.CG_WGT) = TO_NUMBER(#{wgt})
			   AND TRIM(J.JOB_PURP_CD) = TRIM(#{jobPurpCd})
			   AND TRIM(J.JOB_TP_CD) = TRIM(#{jobTpCd})
			   AND TRIM(J.TO_LOC_ID) = TRIM(#{locArea})
			   AND TRIM(J.JOB_CO_CD) = TRIM(#{jobCoCd})
			   AND nvl(J.SP_CA_CO_CD,' ') = nvl(#{spCaCoCd},' ')
		</selectKey>
		INSERT INTO TMT_INV_LOC (
				JOB_NO,
				CG_NO,
				LOC_ID,
				PKG_QTY,
				CG_VOL,
				CG_WGT,
				VSL_CALL_ID,
				WH_TP_CD,
				UPDATE_TIME,
				STAFF_CD,
				VERSION,
				SEQ,
				WH_LOC_ID
				,WH_LOC_TP
			) VALUES (
				#{jobNo},
				#{cgNo},
				#{locId},
				#{locQty},
				#{locMsrmt},
				#{locWgt},
				#{vslCallId},
				#{whTpCd},
				SYSDATE,
				#{userId},
				#{newVersion},
				(SELECT NVL(MAX(SEQ), 0)+1
				   FROM TMT_INV_LOC
				  WHERE VSL_CALL_ID = #{vslCallId}
					AND CG_NO = #{cgNo}
					AND JOB_NO = #{jobNo}
					AND LOC_ID = #{locId}),
				SUBSTR(#{locId}, 0, INSTR(#{locId}, '-')-1)
				,#{whLocTpCd}
		)
	</insert>
	
	<update id="updateDischaringFinals" parameterType="cargoDischargingItem">
		UPDATE 	TMT_CG_MST
		SET 	DIS_END_DT = TO_DATE(#{disEndDtStr}, 'DD/MM/YYYY HH24:MI'),
				SHORT_YN = nvl(#{shortYn},null),
				UPDATE_TIME = SYSDATE,
				STAFF_CD = #{userId},
				VERSION = #{newVersion}
		WHERE 	CG_NO = #{cgNo}
		   		AND VSL_CALL_ID = #{vslCallId}
	</update>
	
	<update id="updateNextPurpCd" parameterType="cargoDischargingItem">
		UPDATE 	TMT_JOB
			SET NEXT_JOB_NO = #{jobNo},
				UPDATE_TIME = SYSDATE
				,STAFF_CD = #{userId}
		WHERE 	CG_NO = #{cgNo} 
		  		AND VSL_CALL_ID = #{vslCallId}
		  		AND JOB_PURP_CD = 'VA'
		  		AND JOB_NO = #{preJobNo}

	</update>
	
	<insert id="insertPackageJobItems" parameterType="packageJobItem">
		INSERT INTO TMT_PKG_JOB ( VSL_CALL_ID
		                          ,VSL_CD
		                          ,CALL_SEQ
		                          ,CALL_YEAR
		                          ,MF_DOC_ID
		                          ,REF_NO
		                          ,PKG_NO
		                          ,JOB_NO
		                          ,JOB_PURP_CD
		                          ,JOB_TP_CD
		                          ,OPE_CLASS_CD
		                          ,PKG_TP_CD
		                          ,STAFF_CD
		                          ,UPDATE_TIME
		                          ,VERSION
		)
		VALUES (
			#{vslCallId}
			,#{vslCd}
			,#{callSeq}
			,#{callYear}
			,#{mfDocId}
			,#{refNo}
			,#{pkgNo}
			,#{jobNo}
			,#{jobPurpCd}
			,#{jobTpCd}
			,#{opeClassCd}
			,#{pkgTpCd}
			,#{userId}
			,sysdate
			,#{newVersion}
		)
	</insert>
</mapper>
