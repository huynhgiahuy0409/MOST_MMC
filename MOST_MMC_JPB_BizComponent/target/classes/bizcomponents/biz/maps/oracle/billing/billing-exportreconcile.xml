<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="exportReconcile">
	
	<!--  ################ Query Statement Define ######################################### -->
	<select id="selectExportReconcileCount"  parameterType="exportReconcileParm" resultType="java.lang.String">
		SELECT COUNT(*)
          FROM (<include refid="getExportReconcile"/>)
	</select>
	
	<select id="selectExportReconcile"  parameterType="exportReconcileParm" resultType="exportReconcileItem">
		<if test="pageNo != 0"> 
             SELECT * FROM (SELECT inner.*, rownum row_num FROM ( 
		</if>
				<include refid="getExportReconcile"/>
		<if test="pageNo != 0"> 
				)inner 
			)inner 
			WHERE inner.row_num <![CDATA[>]]> (TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo}))-1)* TO_NUMBER(#{sizePerPage}) 
		  	AND inner.row_num <![CDATA[<=]]> TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo})) * TO_NUMBER(#{sizePerPage})
		</if>
	</select>
	<sql id="getExportReconcile">
		<!-- EXPORT RECONCILE -->
		WITH LOADED AS
		(
		    SELECT  J.VSL_CALL_ID,
		            S.SHIPG_NOTE_NO,
		            S.CG_TP_CD,
		            S.CATG_CD,
		            J.DELV_TP_CD,
		            NVL(J.TSPT_TP_CD, 'LR') AS TSPT_TP_CD,
		            S.CMDT_CD,
		            SUM(J.CG_WGT) AS CG_WGT,
		            SUM(J.CG_VOL) AS CG_VOL,
		            SUM(J.PKG_QTY) AS PKG_QTY,
		            NVL(J.REPKG_TYPE_CD, S.PKG_TP_CD) AS PKG_TP_CD
		            
		    FROM    TMT_JOB J
		            INNER JOIN TMT_GR G ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
		            INNER JOIN TMT_SHIPG_NOTE S ON J.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
		    WHERE   J.JOB_PURP_CD IN ('GV', 'AV', 'BV')
		            AND J.JOB_TP_CD = 'LD'
		            AND J.VSL_CALL_ID = #{vslCallId}
		    GROUP BY J.VSL_CALL_ID,
		            S.SHIPG_NOTE_NO,
		            S.CG_TP_CD,
		            S.CATG_CD,
		            J.DELV_TP_CD,
		            J.TSPT_TP_CD,
		            S.CMDT_CD,
		            J.REPKG_TYPE_CD, 
		            S.PKG_TP_CD
		)
		
		SELECT  /*exportReconcile.getExportReconcile*/
				LD.VSL_CALL_ID 												AS VSLCALLID,
		        VP.VSL_NM 													AS VSLNM,
		        DECODE(VS.ATB, NULL, '', TO_CHAR(VS.ATB, 'DD/MM/YYYY'))		AS ATB,
		        DECODE(VS.ATU, NULL, '', TO_CHAR(VS.ATU, 'DD/MM/YYYY')) 	AS ATU,
		        SN.CG_WGT 													AS DOCWGT,
		        SN.CG_VOL 													AS DOCMSRMT,
		        SN.PKG_QTY 													AS DOCPKGQTY,
		        
		        NVL(BO.BILL_WGT_V, LD.CG_WGT) 								AS WGT,
		        NVL(BO.BILL_MSRMT_V, LD.CG_VOL) 							AS MSRMT,
		        NVL(BO.BILL_PKG_QTY_V, LD.PKG_QTY) 							AS PKGQTY,
		        
		        NVL(BO.BILL_WGT, LD.CG_WGT) 								AS BILLWGT,
		        NVL(BO.BILL_MSRMT, LD.CG_VOL) 								AS BILLMSRMT,
		        NVL(BO.BILL_PKG_QTY, LD.PKG_QTY) 							AS BILLPKGQTY,
		        
		        NVL(BO.DELV_TP_CD, LD.DELV_TP_CD) 							AS DELVTPCD,
		        NVL(BO.SEQ, 0) 												AS SEQ,
		        LD.TSPT_TP_CD 												AS TSPTTPCD,
		        LD.TSPT_TP_CD 												AS OLDTSPTTPCD,
		        LD.CATG_CD 													AS CATGCD,
		        SN.FWRD 													AS FWRAGNT,
		        SN.CNSNE 													AS CNSNE,
		        LD.CG_TP_CD 												AS CGTPCD,
		        LD.CMDT_CD 													AS CMDTCD,
		        (SELECT CMDT_DESC FROM TMT_CMDT WHERE CMDT_CD = LD.CMDT_CD) AS CMDTDESCR,
		        NVL(BO.PKG_TP_CD, LD.PKG_TP_CD) 							AS PKGTPCD,
		        SN.SHIPG_NOTE_NO 											AS SNNO,
		        SN.POD  													AS POD,
		        SN.SHPR														AS SHPR
		        
		FROM    LOADED LD
		        INNER JOIN TMT_SHIPG_NOTE SN 
					ON LD.VSL_CALL_ID = SN.VSL_CALL_ID 
					AND LD.SHIPG_NOTE_NO = SN.SHIPG_NOTE_NO
				LEFT OUTER JOIN TMT_B_OPE_AMNT BO 
					ON LD.VSL_CALL_ID = BO.VSL_CALL_ID 
					AND LD.SHIPG_NOTE_NO = BO.CG_NO 
					AND LD.DELV_TP_CD = BO.DELV_TP_CD 
					AND LD.TSPT_TP_CD = BO.TSPT_TP_CD
					AND LD.CMDT_CD = BO.CMDT_CD
					AND LD.PKG_TP_CD = BO.PKG_TP_CD
					AND LD.CATG_CD = BO.CATG_CD
		        LEFT OUTER JOIN TMT_VSL_SCH VS 
		        	ON SN.VSL_CALL_ID = VS.VSL_CALL_ID
		        LEFT OUTER JOIN TMT_VSL_PART VP
		            ON SN.VSL_CD = VP.VSL_CD
		
		WHERE 	LD.VSL_CALL_ID = #{vslCallId}
				<if test="fromAtb != null and fromAtb != ''">
					AND VS.ATB  <![CDATA[>=]]> TO_DATE(#{fromAtb} || ' 00:00:00','DD/MM/YYYY HH24:MI:SS')
				</if>
				<if test="toAtb != null and toAtb != ''">
					AND	VS.ATB <![CDATA[<=]]> TO_DATE(#{toAtb}|| ' 23:59:59','DD/MM/YYYY HH24:MI:SS')
				</if>
		        <if test="status != null and status != ''">
					AND	R.EX_RECCL_CD = #{status}
		        </if>
	</sql>

	<select id="selectExportReconcileStatus"  parameterType="exportReconcileParm" resultType="exportReconcileItem">
		SELECT /*exportReconcile.selectExportReconcileStatus*/
				VSL_CALL_ID AS VSLCALLID,
				EX_RECCL_CD AS STATUS,
				STAFF_CD 	AS USERID,
				UPDATE_TIME AS UPDATETIME,
				VERSION 	AS VERSION,
				NVL2(
			   		(	SELECT DISTINCT VSL_CALL_ID 
			   			FROM TMT_B_IV_DATA
				   		WHERE SCR_ID='OPE'
				   		<if test="vslCallId != null and vslCallId != ''">
							AND	VSL_CALL_ID = #{vslCallId}
						</if>
						AND ROWNUM = 1 ),'Y','Y') AS EDITABLE
		FROM TMT_B_RECCL
		WHERE 1=1
		<if test="vslCallId != null and vslCallId != ''">
			AND	VSL_CALL_ID = #{vslCallId}
		</if>
	</select>
	
	<select id="isDataCollected"  parameterType="exportReconcileParm" resultType="exportReconcileItem">
		SELECT COUNT(1) FROM TMT_INV_SUM
			WHERE rownum = 1 AND	VSL_CALL_ID = #{vslCallId}
	</select>
	
	<select id="selectSNList"  parameterType="exportReconcileParm" resultType="exportReconcileItem">
		SELECT /*exportReconcile.selectSNList*/
			   B.SHIPG_NOTE_NO AS SNNO
		  FROM TMT_CG_MST B,
		       TMT_SHIPG_NOTE A,
		  	   TMT_GR C
         WHERE B.VSL_CALL_ID = C.VSL_CALL_ID(+) AND B.CG_NO = C.GR_NO(+)
		   AND B.OPE_CLASS_CD = 'E' AND A.SHIPG_NOTE_NO(+) = C.SHIPG_NOTE_NO
		   AND A.VSL_CALL_ID(+) = C.VSL_CALL_ID
		   AND B.VSL_CALL_ID = #{vslCallId}
	  GROUP BY B.SHIPG_NOTE_NO
	</select>
	
	<insert id="insertExportReconcileStatus" parameterType="exportReconcileItem">
		INSERT /*exportReconcile.insertExportReconcileStatus*/
		INTO TMT_B_RECCL(
			VSL_CALL_ID,
			EX_RECCL_CD,
			EX_RECCL_DT,
			STAFF_CD,
			UPDATE_TIME,
			VERSION
		) VALUES (
			#{vslCallId},
			#{status},
			systimestamp,
			#{userId},
			systimestamp,
			#{newVersion}
		)
	</insert>
	
	<insert id="insertExportReconciles" parameterType="exportReconcileItem">
		INSERT /*exportReconcile.insertExportReconciles*/
		INTO TMT_B_OPE_AMNT(
			VSL_CALL_ID,
			SEQ,
			CG_NO,
			UPDATE_TIME,
			STAFF_CD,
			PKG_TP_CD,
			TSPT_TP_CD,
			CG_TP_CD,
			CMDT_CD,
			DELV_TP_CD,
			CATG_CD,
			
			BILL_WGT,
			BILL_MSRMT,
			BILL_PKG_QTY,
			
			BILL_WGT_V,
			BILL_MSRMT_V,
			BILL_PKG_QTY_V,
			
			VERSION,
			RORO_JOB_NO
		) VALUES (
			#{vslCallId},
			(SELECT NVL(MAX(SEQ), 0)+1 FROM TMT_B_OPE_AMNT WHERE VSL_CALL_ID = #{vslCallId}),
			#{snNo},
			systimestamp, 
			#{userId},
			#{pkgTpCd},
			#{tsptTpCd},
			#{cgTpCd},
			#{cmdtCd},
			#{delvTpCd},
			#{catgCd},
			
			#{billWgt},
			#{billMsrmt},
			#{billPkgQty},
			
			#{wgt},
			#{msrmt},
			#{pkgQty},
			
			#{newVersion},
			#{roroJobNo}
		)
	</insert>
	
	<!--  ################ Update Statement Define ######################################### -->
	<update id="updateExportStatus" parameterType="exportReconcileItem">
		UPDATE /*exportReconcile.updateExportStatus*/
		TMT_B_RECCL SET 
			EX_RECCL_CD = DECODE( 
					CASE
                     WHEN (SELECT DISTINCT VSL_CALL_ID
                             FROM TMT_B_IV_DATA
                            WHERE     VSL_CALL_ID = #{vslCallId} AND SCR_ID = 'OPE' AND STAT_CD NOT IN ('WV','VF','GT','IV','PD') AND ROWNUM = 1) IS NULL THEN 'Y'
                     ELSE 'N'
                  	END, 'Y', 'Y',
								'N', #{status}),     <!-- if #{vslCallId} value was existed in TMT_B_IV_DATA, so EX_RECCL_CD = 'Y'-->
			EX_RECCL_DT = systimestamp,
            UPDATE_TIME = systimestamp,
            STAFF_CD = #{userId},
            VERSION = #{newVersion}
        WHERE VSL_CALL_ID = #{vslCallId}
	</update>
	
	<update id="updateExportReconciles"  parameterType="exportReconcileItem">
		UPDATE /*exportReconcile.updateExportReconciles*/
		TMT_B_OPE_AMNT SET
			UPDATE_TIME = systimestamp, 
			STAFF_CD = #{userId},
			PKG_TP_CD = #{pkgTpCd},
			TSPT_TP_CD = #{tsptTpCd},
			CG_TP_CD = #{cgTpCd},
			CMDT_CD = #{cmdtCd},
			BILL_WGT = #{billWgt},
			BILL_MSRMT = #{billMsrmt},
			BILL_PKG_QTY = #{billPkgQty}
		WHERE VSL_CALL_ID = #{vslCallId} 
		AND CG_NO = #{snNo}
		AND SEQ = #{seq}
		AND DELV_TP_CD = #{delvTpCd}
		AND CATG_CD = #{catgCd}
		AND TSPT_TP_CD = #{oldTsptTpCd}
	</update>
		
	<update id="updateExportReconcileForPackageTypeCd"  parameterType="exportReconcileItem">
		UPDATE /*exportReconcile.updateExportReconcileForPackageTypeCd*/
		TMT_B_OPE_AMNT SET		
			STAFF_CD = #{userId},
			UPDATE_TIME = systimestamp,
			PKG_TP_CD = #{pkgTpCd},
			CG_TP_CD = #{cgTpCd},
			CMDT_CD  = #{cmdtCd}				
		WHERE VSL_CALL_ID = #{vslCallId} 
		AND SHIPG_NOTE_NO = #{snNo}
		AND	CATG_CD = #{catgCd}
		AND	SEQ = #{seq}
	</update>
	
	<!-- Added by Joseph for iss 46027, after update Transport tyoe in Reconcile screen, data in Controller will upate Transport type also -->
	<update id="updateExportReconcileForTsptTpCd"  parameterType="exportReconcileItem">
		UPDATE /*exportReconcile.updateExportReconcileForTsptTpCd*/
		TMT_B_OPE_AMNT SET	
			TSPT_TP_CD = #{tsptTpCd},
			STAFF_CD = #{userId},
	   		UPDATE_TIME = systimestamp
	 	WHERE VSL_CALL_ID = #{vslCallId}
 		AND CG_NO = #{snNo}
 		AND SEQ = #{seq}
   		AND DELV_TP_CD = #{delvTpCd}
   		AND CATG_CD = #{catgCd}
   		<!-- FIX ISSUE RECONCILE TSPT_TP_CD -->
  		AND TSPT_TP_CD = #{oldTsptTpCd}
	</update>
	
	<update id="updateControllerTmtJob"  parameterType="exportReconcileItem">
        UPDATE /*exportReconcile.updateControllerTmtJob*/
        TMT_JOB SET
            TSPT_TP_CD = #{tsptTpCd}
        WHERE VSL_CALL_ID = #{vslCallId}
        AND CG_NO IN (
                SELECT CG_NO
                FROM TMT_CG_MST
                WHERE VSL_CALL_ID = #{vslCallId} 
                AND SHIPG_NOTE_NO = #{snNo}
            ) 
        AND DELV_TP_CD = #{delvTpCd}
	</update>
	<update id="updateControllerTmtCgArrvDelv"  parameterType="exportReconcileItem">
        UPDATE /*exportReconcile.updateControllerTmtCgArrvDelv*/
        TMT_CG_ARRV_DELV SET
            TSPT_TP_CD = #{tsptTpCd}
        WHERE VSL_CALL_ID = #{vslCallId}
		AND CG_NO = #{snNo}
		AND TSPT_TP_CD = #{oldTsptTpCd}
	</update>
	
	<update id="clearExportReconcile"    parameterType="exportReconcileItem">
		UPDATE /*exportReconcile.clearExportReconcile*/
		TMT_B_OPE_AMNT SET
		<if test='delvTpCd != "D"'>
			BILL_WGT = NULL,
			BILL_MSRMT = NULL,
			BILL_PKG_QTY = NULL
		</if>
		<if test='delvTpCd == "D"'>
			BILL_WGT_V = NULL,
			BILL_MSRMT_V = NULL,
			BILL_PKG_QTY_V = NULL
		</if>
		WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{snNo}
		AND CATG_CD = #{catgCd}			 
	</update>
	
	<delete id="deleteExportReconciles"  parameterType="exportReconcileItem">
		DELETE /*exportReconcile.deleteExportReconciles*/
		FROM TMT_B_OPE_AMNT /* ImportReconcile.xml  deleteExportReconciles */
		WHERE VSL_CALL_ID = #{vslCallId}
		AND CG_NO = #{snNo}
		AND DELV_TP_CD = #{delvTpCd}
		AND TSPT_TP_CD = #{oldTsptTpCd}
		AND CATG_CD = #{catgCd}
		AND SEQ = #{seq}
		AND CATG_CD = #{catgCd}
	</delete>
</mapper>
