<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="proformaInvoice">

	<resultMap id="resultProformaMap" type="proformaInvoiceItem">
		<result property = "vslCallId" 			column = "VSL_CALL_ID"/>
		<result property = "payerCd" 			column = "PAYER_CD"/>
		<result property = "payerNm" 			column = "PAYER_NM"/>
		<result property = "payerAddr" 			column = "PAYER_ADDR"/>
		<result property = "payerTp" 			column = "PAYER_TP"/>
		<result property = "cmdtCd"			 	column = "CMDT_CD"/>
		<result property = "wgt"				column = "WGT"/>
		<result property = "msrmt" 				column = "MSRMT"/>
		<result property = "pkgQty"	 			column = "PKG_QTY"/>
		<result property = "trfTpCd" 			column = "TRF_TP_CD"/>
		<result property = "trfTpNm" 			column = "TRF_TP_NM"/>
		<result property = "trfCd"				column = "TRF_CD"/>
		<result property = "subTrf" 			column = "SUB_TRF_CD"/>
		<result property = "trfDesc"			column = "DESCR"/>
		<result property = "unitPrc"			column = "UNIT_PRC"/>
		<result property = "totalAmt"			column = "TOTAL_AMOUNT"/>
		<result property = "ivAmt"				column = "NET_AMOUNT"/>
		<result property = "billTpCd"			column = "BILL_TP_CD"/>
		<result property = "stdRate"			column = "STD_RATE"/>
		<result property = "applyRate"			column = "UNIT_PRC"/>
		<result property = "blSnNo"				column = "CG_NO"/>
		<result property = "cgTpCd"				column = "CG_TP_CD"/>
		<result property = "opClassCd"			column = "CATG_CD"/>
		<result property = "delvTpCd"			column = "DELV_TP_CD"/>
		<result property = "gatherTpCd"			column = "GATHER_TP_CD"/>
		<result property = "ivPrfx"				column = "IV_PRFX"/>
		<result property = "ivTp"				column = "IV_TP"/>
		<result property = "costCenter"			column = "COST_CENT_CD"/>
		<result property = "issuedMT"			column = "ISSUED_MT"/>
 	</resultMap>
 	
 	<resultMap type="proformaInvoiceItem" id="comboMap">
    	<result property="cd"               	column="CD"/>
		<result property="cdNm"                 column="CD_NM"/>
		<result property="delvTpCd"             column="DELV_TP_CD"/>
		<result property="docNo"             	column="MF_DOC_ID"/>
    </resultMap>
    
    <resultMap type="proformaInvoiceItem" id="payerComboMap">
    	<result property="cd"               	column="CD"/>
		<result property="cdNm"                 column="CD_NM"/>
		<result property="payerTp"             	column="PAYER_TP"/>
    </resultMap>
    
    <resultMap id="gatheringDataMap" type="proformaInvoiceItem">
		<result property = "vslCallId" 			column = "VSL_CALL_ID"/>
		<result property = "payerCd" 			column = "PAYER"/>
		<result property = "payerNm" 			column = "PAYER_NM"/>
		<result property = "payerAddr" 			column = "PAYER_ADDR"/>
		<result property = "payerTp" 			column = "PAYER_TP"/>
		<result property = "gatherNo"			column = "GATHER_NO"/>
		<result property = "ivUnit1" 			column = "IV_UNIT1"/>
		<result property = "ivUnit2" 			column = "IV_UNIT2"/>
		<result property = "ivUnit3" 			column = "IV_UNIT3"/>
		<result property = "unit1Val"			column = "UNIT1_VAL"/>
		<result property = "unit2Val" 			column = "UNIT2_VAL"/>
		<result property = "unit3Val" 			column = "UNIT3_VAL"/>
		<result property = "trfTpCd" 			column = "TRF_TP_CD"/>
		<result property = "trfTpNm" 			column = "TRF_TP_NM"/>
		<result property = "trfCd"				column = "TRF_CD"/>
		<result property = "subTrf" 			column = "SUB_TRF_CD"/>
		<result property = "trfDesc"			column = "TRF_DESCR"/>
		<result property = "applyRate"			column = "APLY_RATE"/>
		<result property = "stdRate"			column = "STD_RATE"/>
		<result property = "ivAmt"				column = "APLY_AMT"/>
		<result property = "taxAmt"				column = "TAX_AMT"/>
		<result property = "totalAmt"			column = "TOTAL_AMT"/>
		<result property = "blSnNo"				column = "BL_NO"/>
		<result property = "opClassCd"			column = "CATG_CD"/>
		<result property = "ivPrfx"				column = "IV_PRFX"/>
		<result property = "ivTp"				column = "IV_TP"/>
		<result property = "costCenter"			column = "COST_CENT_CD"/>
		
		<result property = "paymentType"		column = "PAYMENT_TP"/>
		<result property = "svcDtFrom"			column = "SVC_ST_DT"/>
		<result property = "svcDtTo"			column = "SVC_END_DT"/>
		<result property = "delvTpCd"			column = "DELV_TP_CD"/>
		<result property = "delvTpNm"			column = "DELV_TP_NM"/>
		<result property = "statusCd"			column = "STAT_CD"/>
		<result property = "paidYn"				column = "PAID_YN"/>
		<result property = "ivNo"				column = "IV_NO"/>
		<result property = "itemStatus"			column = "ITEM_STATUS"/>
		<result property = "docNo"				column = "MF_DOC_ID"/>
		<result property = "proformaInvoiceNo"	column = "IV_NO"/>
		<result property = "adhocYn"			column = "ADHOC_YN"/>
		<result property = "groupingField"		column = "GROUPING_FIELD"/>
 	</resultMap>
 	
 	 <resultMap id="receiptMap" type="proformaInvoiceItem">
 	 	<result property = "crcyCd" 			column = "CRCY_CD"/>
		<result property = "gatherNo" 			column = "GATHER_NO"/>
		<result property = "trfCd" 				column = "TRF_CD"/>
		<result property = "subTrf" 			column = "SUB_TRF_CD"/>
		<result property = "trfDescr" 			column = "TRF_DESCR"/>
		<result property = "trfTpCd" 			column = "TRF_TP_CD"/>
		<result property = "trfTpNm" 			column = "TRF_TP_NM"/>
		<result property = "costCenter" 		column = "COST_CENT_CD"/>
		<result property = "payer" 				column = "PAYER"/>
		<result property = "engSnm" 			column = "PAYER_NM"/>
		<result property = "payerTp" 			column = "PAYER_TP_CD"/>
		<result property = "payerAddr" 			column = "PAYER_ADDR"/>
		<result property = "payerTel" 			column = "PAYER_TEL"/>
		<result property = "payerTaxNo" 		column = "PAYER_TAX_NO"/>
		<result property = "unit1Val" 			column = "UNIT1_VAL"/>
		<result property = "unit2Val" 			column = "UNIT2_VAL"/>
		<result property = "unit3Val" 			column = "UNIT3_VAL"/>
		<result property = "aplyRate" 			column = "APLY_RATE"/>
		<result property = "aplyAmt"			column = "APLY_AMT"/>
		<result property = "taxCd" 				column = "TAX_TYPE"/>
		<result property = "taxValue"			column = "TAX_VALUE"/>
		<result property = "taxAmt" 			column = "TAX_AMT"/>
		<result property = "totalAmt" 			column = "TOTAL_AMT"/>
		<result property = "vslNm" 				column = "VSL_NM"/>
		<result property = "vslCallId" 			column = "VSL_CALL_ID"/>
		<result property = "docNo" 				column = "MF_DOC_ID"/>
		<result property = "blSnNo" 			column = "BL_NO"/>
		<result property = "ivDt" 				column = "IV_DT"/>
		<result property = "paymentType" 		column = "PAY_TP_CD"/>
		<result property = "ivTp" 				column = "IV_TP"/>
		<result property = "statusCd" 			column = "STAT_CD"/>
		<result property = "paidYn" 			column = "PAID_YN"/>
		<result property = "ivNo" 				column = "IV_NO"/>
		<result property = "tmnlNm" 			column = "TMNL_NM"/>
		<result property = "tmnlTaxNo" 			column = "COMP_REG_NO"/>
		<result property = "tmnlTel" 			column = "TEL_NO"/>
		<result property = "tmnlFax" 			column = "FAX_NO"/>
		<result property = "userId" 			column = "STAFF_CD"/>
		<result property = "accNo" 				column = "ACCNO"/>
		<result property = "accNm" 				column = "ACCNM"/>
		<result property = "eta" 				column = "ETA"/>
		<result property = "etd" 				column = "ETD"/>
		<result property = "etw" 				column = "ETW"/>
		<result property = "etc" 				column = "ETC"/>
		<result property = "grt" 				column = "GRT"/>
		<result property = "loa" 				column = "LOA"/>
		<result property = "payerTaxCd"			column = "PAYER_TAX_CD"/>
 	</resultMap>
	 
 	<sql id="getTrfInfoForProformaIvOfImportHG">
 		WITH CG_INFO
		     AS (
		     	SELECT *
				FROM TMT_BL
				WHERE BL_NO = #{blNo} 
				AND VSL_CALL_ID = #{vslCallId}
			 ),
			 TRF_FILTER
		     AS (
		     	SELECT C.TRF_CD,
		               C.SUB_TRF_CD,
		               S.UNIT_PRC,
		               S.APLY_YMD,
		               S.EXPR_YMD,
		               NVL (COUNT (*), 0) AS CNT
				FROM TMT_B_TRF_CD T INNER JOIN TMT_B_TRF_COND C
					ON T.TRF_CD = C.TRF_CD AND T.SUB_TRF_CD = C.SUB_TRF_CD
					LEFT OUTER JOIN TMT_B_TRF S
					ON T.TRF_CD = S.TRF_CD AND T.SUB_TRF_CD = S.SUB_TRF_CD AND S.PRC_TP_CD = 'S',
					CG_INFO G
				WHERE T.TRF_TP_CD = 'HG'
				AND (  (C.PRPT_CD = 'C1' AND C.CHR_VAL = G.CATG_CD)
					OR (C.PRPT_CD = 'C3' AND C.CHR_VAL = G.DELV_TP_CD)
					OR (C.PRPT_CD = 'C7' AND C.CHR_VAL = G.CG_TP_CD)
					OR (C.PRPT_CD = 'C8' AND C.CHR_VAL = G.CMDT_CD))
				GROUP BY C.TRF_CD,
		                 C.SUB_TRF_CD,
		                 S.UNIT_PRC,
		                 S.APLY_YMD,
		                 S.EXPR_YMD
				ORDER BY CNT DESC
			 ),
			 TRF_INFO
		     AS (
		     	SELECT *
				FROM TRF_FILTER
				WHERE ROWNUM = 1
			 )
		SELECT T.TRF_CD,
		       T.SUB_TRF_CD,
		       T.DESCR,
		       T.TRF_TP_CD,
		       F_CM_001 ('MT', 'TRFTP', T.TRF_TP_CD) AS TRF_TP_NM,
		       T.BILL_TP_CD,
		       S.UNIT_PRC,
		       S.UNIT_PRC AS STD_RATE,
		       T.PAYER AS PAYER_TP,
		       DECODE (T.PAYER,  'FWD', G.FWRD,  'SHA', '',  '')
		          AS PAYER_CD,
		       F_GET_PARTNER_INFO (
		          DECODE (T.PAYER,  'FWD', G.FWRD,  'SHA', '',  ''),
		          'ENG_SNM')
		          AS PAYER_NM,
		       F_GET_PARTNER_INFO (
		          DECODE (T.PAYER,  'FWD', G.FWRD,  'SHA', '',  ''),
		          'ADDR')
		          AS PAYER_ADDR,
		       CAST (ROUND ( (NVL (S.UNIT_PRC, 1) * G.CG_WGT), 2) AS NUMERIC (15, 3))
		          AS NET_AMOUNT,
		       G.VSL_CALL_ID,
		       G.BL_NO AS CG_NO,
		       G.CMDT_CD,
		       F_GET_CMDT_DESC (G.CMDT_CD) AS CMDT_DESC,
		       G.CG_TP_CD,
		       G.CATG_CD,
		       G.DELV_TP_CD,
		       G.CG_WGT,
		       'PRF' AS GATHER_TP_CD,
		       'PRF' AS IV_PRFX,
		       'P'	AS IV_TP,
		       T.COST_CENT_CD,
		       G.CG_WGT AS ISSUED_MT
		  FROM TMT_B_TRF_CD T
		       INNER JOIN TMT_B_TRF_COND C
		          ON T.TRF_CD = C.TRF_CD AND T.SUB_TRF_CD = C.SUB_TRF_CD
		       INNER JOIN TRF_INFO F
		          ON T.TRF_CD = F.TRF_CD AND T.SUB_TRF_CD = F.SUB_TRF_CD
		       LEFT OUTER JOIN TMT_B_TRF S
		          ON     T.TRF_CD = S.TRF_CD
		             AND T.SUB_TRF_CD = S.SUB_TRF_CD
		             AND S.PRC_TP_CD = 'S',
		       CG_INFO G
		 WHERE ROWNUM = 1
 	</sql>
 	
 	<sql id="getTrfInfoForProformaIvOfExportHG">
		WITH CG_INFO
		     AS (
		     	SELECT *
		        FROM TMT_SHIPG_NOTE
		        WHERE SHIPG_NOTE_NO = #{shipgNoteNo} 
		        AND VSL_CALL_ID = #{vslCallId}
			 ),
		     TRF_FILTER
		     AS (
		     	SELECT C.TRF_CD,
		               C.SUB_TRF_CD,
	                   S.UNIT_PRC,
	                   S.APLY_YMD,
	                   S.EXPR_YMD,
	                   NVL (COUNT (*), 0) AS CNT
				FROM TMT_B_TRF_CD T INNER JOIN TMT_B_TRF_COND C
					ON T.TRF_CD = C.TRF_CD AND T.SUB_TRF_CD = C.SUB_TRF_CD
					LEFT OUTER JOIN TMT_B_TRF S
					ON T.TRF_CD = S.TRF_CD AND T.SUB_TRF_CD = S.SUB_TRF_CD AND S.PRC_TP_CD = 'S',
					CG_INFO G
				WHERE T.TRF_TP_CD = 'HG'
				AND (  (C.PRPT_CD = 'C1' AND C.CHR_VAL = G.CATG_CD) --CATG_CD
					OR (C.PRPT_CD = 'C3' AND C.CHR_VAL = G.DELV_TP_CD) --DELV_TP_CD
					OR (C.PRPT_CD = 'C7' AND C.CHR_VAL = G.CG_TP_CD) --CG_TP_CD
					OR (C.PRPT_CD = 'C8' AND C.CHR_VAL = G.CMDT_CD))
				GROUP BY C.TRF_CD,
		                 C.SUB_TRF_CD,
		                 S.UNIT_PRC,
		                 S.APLY_YMD,
		                 S.EXPR_YMD
				ORDER BY CNT DESC
			),
		    TRF_INFO
		    AS (
		    	SELECT *
				FROM TRF_FILTER
		        WHERE ROWNUM = 1
			)
		SELECT T.TRF_CD,
		       T.SUB_TRF_CD,
		       T.DESCR,
		       T.TRF_TP_CD,
		       F_CM_001 ('MT', 'TRFTP', T.TRF_TP_CD) AS TRF_TP_NM,
		       T.BILL_TP_CD,
		       S.UNIT_PRC,
		       S.UNIT_PRC AS STD_RATE,
		       T.PAYER AS PAYER_TP,
		       DECODE (T.PAYER,  'FWD', G.FWRD,  'SHA', G.SHIPG_AGNCY,  '')
		          AS PAYER_CD,
		       F_GET_PARTNER_INFO (
		          DECODE (T.PAYER,  'FWD', G.FWRD,  'SHA', G.SHIPG_AGNCY,  ''),
		          'ENG_SNM')
		          AS PAYER_NM,
		       F_GET_PARTNER_INFO (
		          DECODE (T.PAYER,  'FWD', G.FWRD,  'SHA', G.SHIPG_AGNCY,  ''),
		          'ADDR')
		          AS PAYER_ADDR,
		       CAST (ROUND ( (NVL (S.UNIT_PRC, 1) * G.CG_WGT), 2) AS NUMERIC (15, 3))
		          AS NET_AMOUNT,
		       G.VSL_CALL_ID,
		       G.SHIPG_NOTE_NO AS CG_NO,
		       G.CMDT_CD,
		       F_GET_CMDT_DESC (G.CMDT_CD) AS CMDT_DESC,
		       G.CG_TP_CD,
		       G.CATG_CD,
		       G.DELV_TP_CD,
		       G.CG_WGT AS WGT,
		       'PRF' AS GATHER_TP_CD,
		       'PRF' AS IV_PRFX,
		       'P'	AS IV_TP,
		       T.COST_CENT_CD,
		       G.CG_WGT AS ISSUED_MT
		  FROM TMT_B_TRF_CD T
		       INNER JOIN TMT_B_TRF_COND C
		          ON T.TRF_CD = C.TRF_CD AND T.SUB_TRF_CD = C.SUB_TRF_CD
		       INNER JOIN TRF_INFO F
		          ON T.TRF_CD = F.TRF_CD AND T.SUB_TRF_CD = F.SUB_TRF_CD
		       LEFT OUTER JOIN TMT_B_TRF S
		          ON     T.TRF_CD = S.TRF_CD
		             AND T.SUB_TRF_CD = S.SUB_TRF_CD
		             AND S.PRC_TP_CD = 'S',
		       CG_INFO G
		 WHERE ROWNUM = 1
 	</sql>
 	
 	<select id="selectTrfInfoForProformaIv" resultMap="resultProformaMap" parameterType="proformaInvoiceParm">	
		<choose>
			<when test="searchTp == 'BL'">
				<include refid="getTrfInfoForProformaIvOfImportHG"/>
			</when>
			<otherwise>
				<include refid="getTrfInfoForProformaIvOfExportHG"/>
			</otherwise>
		</choose>
	</select>
	
	<select id="selectGatheringDataForProformaIv" resultMap="gatheringDataMap" parameterType="proformaInvoiceParm">
		<if test="searchTp == 'BL'">
			SELECT  /*proformaInvoice.selectGatheringDataForProformaIv*/
					I.GATHER_NO,
			        I.TRF_CD,
			        I.SUB_TRF_CD,
			        I.TRF_DESCR,
			        T.TRF_TP_CD,
			        F_CM_001 ('MT', 'TRFTP', T.TRF_TP_CD) AS TRF_TP_NM,
			        NVL(I.COST_CENT_CD, T.COST_CENT_CD) AS COST_CENT_CD,
			        I.PAYER,
			        NVL(I.PAYER_TP_CD, A.PAYER_TP_CD) AS PAYER_TP,
			        T.IV_UNIT1,
			        T.IV_UNIT2,
			        T.IV_UNIT3,
			        I.UNIT1_VAL,
			        I.UNIT2_VAL,
			        I.UNIT3_VAL,
			        I.STD_RATE,
			        I.APLY_RATE,
			        I.APLY_AMT,
			        I.TAX_AMT,
			        I.TOTAL_AMT,
			        B.CATG_CD,
			        F_CM_001 ('MT', 'CATGTP', B.CATG_CD) AS CATG_NM,
			        I.VSL_CALL_ID,
			        B.MF_DOC_ID,
			        B.BL_NO,
			        'PRF' AS IV_PRFX,
			        'M' AS PAYMENT_TP,
			        'P' AS IV_TP,
			        B.DELV_TP_CD,
			        F_CM_001('MT', 'DELVTP', B.DELV_TP_CD)  DELV_TP_NM,
			        I.STAT_CD,
			        (SELECT S_CD_NM FROM TMT_CD_MSTD WHERE M_CD = 'IVSTAT' AND S_CD = I.STAT_CD) AS ITEM_STATUS,
			        NVL(A.PAID_ST, 'N') AS PAID_YN,
			        I.ADHOC_YN AS ADHOC_YN,
			        A.IV_NO,
			        B.BL_NO || '/' ||  F_CM_001('MT', 'DELVTP', B.DELV_TP_CD) AS GROUPING_FIELD
			FROM    TMT_B_IV_DATA I
					LEFT OUTER JOIN TMT_B_IV A ON I.VSL_CALL_ID = A.VSL_CALL_ID AND I.IV_NO = A.IV_NO
			        INNER JOIN TMT_B_TRF_CD T ON I.TRF_CD = T.TRF_CD AND I.SUB_TRF_CD = T.SUB_TRF_CD
			        INNER JOIN TMT_BL B ON I.VSL_CALL_ID = B.VSL_CALL_ID AND I.REF_NO1 = B.BL_NO 
			WHERE   I.VSL_CALL_ID = #{vslCallId} 
					AND I.REF_NO1 IN (SELECT BL_NO FROM TMT_BL WHERE VSL_CALL_ID = #{vslCallId}
					<if test = "masterBL != null and masterBL != ''">
						AND MF_DOC_ID = #{masterBL}
					</if>
					<if test = "blNoSnNo != null and blNoSnNo != ''">
						AND BL_NO = #{blNoSnNo}
					</if>
					<if test = "blNo != null and blNo != ''">
						AND BL_NO = #{blNo}
					</if>
					)
			        AND I.SCR_ID = 'PRF'
					AND I.STAT_CD NOT IN ('IC')
		</if>
		<if test="searchTp == 'SN'">
			SELECT  /*proformaInvoice.selectGatheringDataForProformaIv*/
					I.GATHER_NO,
			        I.TRF_CD,
			        I.SUB_TRF_CD,
			        I.TRF_DESCR,
			        T.TRF_TP_CD,
			        F_CM_001 ('MT', 'TRFTP', T.TRF_TP_CD) AS TRF_TP_NM,
			        NVL(I.COST_CENT_CD, T.COST_CENT_CD) AS COST_CENT_CD,
			        I.PAYER,
			        NVL(I.PAYER_TP_CD, A.PAYER_TP_CD) AS PAYER_TP,
			        T.IV_UNIT1,
			        T.IV_UNIT2,
			        T.IV_UNIT3,
			        I.UNIT1_VAL,
			        I.UNIT2_VAL,
			        I.UNIT3_VAL,
			        I.STD_RATE,
			        I.APLY_RATE,
			        I.APLY_AMT,
			        I.TAX_AMT,
			        I.TOTAL_AMT,
			        S.CATG_CD,
			        F_CM_001 ('MT', 'CATGTP', S.CATG_CD) AS CATG_NM,
			        I.VSL_CALL_ID,
			        S.MF_DOC_ID,
			        S.SHIPG_NOTE_NO AS BLSNNO,
			        'PRF' AS IV_PRFX,
			        'M' AS PAYMENT_TP,
			        'P' AS IV_TP,
			        S.DELV_TP_CD,
			        F_CM_001('MT', 'DELVTP', S.DELV_TP_CD)  DELV_TP_NM,
			        I.STAT_CD,
			        (SELECT S_CD_NM FROM TMT_CD_MSTD WHERE M_CD = 'IVSTAT' AND S_CD = I.STAT_CD) AS ITEM_STATUS,
			        NVL(A.PAID_ST, 'N') AS PAID_YN,
			        I.ADHOC_YN AS ADHOC_YN,
			        A.IV_NO,
			        S.SHIPG_NOTE_NO || '/' ||  F_CM_001('MT', 'DELVTP', S.DELV_TP_CD) AS GROUPING_FIELD
			FROM    TMT_B_IV_DATA I
					LEFT OUTER JOIN TMT_B_IV A ON I.VSL_CALL_ID = A.VSL_CALL_ID AND I.IV_NO = A.IV_NO
			        INNER JOIN TMT_B_TRF_CD T ON I.TRF_CD = T.TRF_CD AND I.SUB_TRF_CD = T.SUB_TRF_CD
			        INNER JOIN TMT_SHIPG_NOTE S ON I.VSL_CALL_ID = S.VSL_CALL_ID AND I.REF_NO1 = S.SHIPG_NOTE_NO 
			WHERE   I.VSL_CALL_ID = #{vslCallId} 
					AND I.REF_NO1 IN (SELECT SHIPG_NOTE_NO FROM TMT_SHIPG_NOTE WHERE VSL_CALL_ID = #{vslCallId}
					<if test = "bookingNo != null and bookingNo != ''">
						AND MF_DOC_ID = #{bookingNo}
					</if>
					<if test = "blNoSnNo != null and blNoSnNo != ''">
						AND SHIPG_NOTE_NO = #{blNoSnNo}
					</if>
					<if test = "shipgNoteNo != null and shipgNoteNo != ''">
						AND SHIPG_NOTE_NO = #{shipgNoteNo}
					</if>
					)
			        AND I.SCR_ID = 'PRF'
					AND I.STAT_CD NOT IN ('IC')	
		</if>
		UNION
		  SELECT
		        I.GATHER_NO,
				I.TRF_CD,
				I.SUB_TRF_CD,
				I.TRF_DESCR,
				T.TRF_TP_CD,
				F_CM_001 ('MT', 'TRFTP', T.TRF_TP_CD) AS TRF_TP_NM,
				NVL (I.COST_CENT_CD, T.COST_CENT_CD) AS COST_CENT_CD,
				I.PAYER,
				NVL (I.PAYER_TP_CD, A.PAYER_TP_CD) AS PAYER_TP,
				T.IV_UNIT1,
		        T.IV_UNIT2,
		        T.IV_UNIT3,
				I.UNIT1_VAL,
				I.UNIT2_VAL,
				I.UNIT3_VAL,
				I.STD_RATE,
				I.APLY_RATE,
				I.APLY_AMT,
				I.TAX_AMT,
				I.TOTAL_AMT,
				'' AS  CATG_CD,
				'' AS  CATG_NM,
				I.VSL_CALL_ID,
				'' AS  MF_DOC_ID,
				'' AS BL_NO,
				'PRF' AS IV_PRFX,
				'M' AS PAYMENT_TP,
				'P' AS IV_TP,
				'' AS DELV_TP_CD,
				'' AS  DELV_TP_NM,
				I.STAT_CD,
				(SELECT S_CD_NM
				   FROM TMT_CD_MSTD
				  WHERE M_CD = 'IVSTAT' AND S_CD = I.STAT_CD)
				   AS ITEM_STATUS,
				NVL (A.PAID_ST, 'N') AS PAID_YN,
				I.ADHOC_YN AS ADHOC_YN,
				A.IV_NO,
				I.VSL_CALL_ID AS GROUPING_FIELD
		FROM 	TMT_B_IV_DATA I
		        LEFT OUTER JOIN TMT_B_IV A
		            ON I.VSL_CALL_ID = A.VSL_CALL_ID AND I.IV_NO = A.IV_NO
		        INNER JOIN TMT_B_TRF_CD T
		            ON I.TRF_CD = T.TRF_CD AND I.SUB_TRF_CD = T.SUB_TRF_CD
		        
		WHERE    I.VSL_CALL_ID = #{vslCallId} 
		         AND I.REF_NO1 IS NULL
		         AND I.SCR_ID = 'PRF'
		         AND I.STAT_CD NOT IN ('IC')
	</select>
	
	<select id="selectIsExistedPorthandlingInvoiced"   parameterType="proformaInvoiceParm" resultType="java.lang.String">
		SELECT COUNT(1) AS strResult 
		FROM TMT_B_IV_DATA I INNER JOIN TMT_B_TRF_CD T ON I.TRF_CD = T.TRF_CD AND I.SUB_TRF_CD = T.SUB_TRF_CD
		WHERE   SCR_ID = 'PRF' 
		        AND T.TRF_TP_CD IN ('HG')
				AND STAT_CD NOT IN ('GT')
		        AND VSL_CALL_ID = #{vslCallId}
		        AND REF_NO1 = #{blNo}
	</select>
	
	<select id="selectReceiptReport" parameterType="proformaInvoiceParm" resultMap="receiptMap">
		  SELECT /*proformaInvoice.selectReceiptReport*/
		  		 #{curr} AS CRCY_CD,
		  		 I.GATHER_NO,
		         I.TRF_CD,
		         I.SUB_TRF_CD,
		         I.TRF_DESCR,
		         T.TRF_TP_CD,
		         F_CM_001 ('MT', 'TRFTP', T.TRF_TP_CD) AS TRF_TP_NM,
		         NVL (I.COST_CENT_CD, T.COST_CENT_CD) AS COST_CENT_CD,
		         A.PAYER,
		         A.PAYER_TP_CD,
				 F_GET_PARTNER_INFO (I.PAYER, 'ENG_SNM') AS PAYER_NM,
		         F_GET_PARTNER_INFO (I.PAYER, 'ADDR') AS PAYER_ADDR,
		         CASE
		            WHEN A.PAYER_TP_CD = 'SHA'
		            THEN
		               (SELECT A1.TEL_NO
		                  FROM TMT_AGENCY_INFO A1
		                 WHERE A1.AGENCY_CODE = A.PAYER AND ROWNUM = 1)
		            ELSE
		               (SELECT A1.TEL_NO
		                  FROM TMT_PTNR A1
		                 WHERE     A1.PTNR_CODE = A.PAYER
		                       AND A1.PTNR_TYPE = A.PAYER_TP_CD
		                       AND ROWNUM = 1)
		         END
		            AS PAYER_TEL,
		         CASE
		            WHEN A.PAYER_TP_CD = 'SHA'
		            THEN
		               (SELECT A1.REG_NO
		                  FROM TMT_AGENCY_INFO A1
		                 WHERE A1.AGENCY_CODE = A.PAYER AND ROWNUM = 1)
		            ELSE
		               (SELECT A1.REG_NO
		                  FROM TMT_PTNR A1
		                 WHERE     A1.PTNR_CODE = A.PAYER
		                       AND A1.PTNR_TYPE = A.PAYER_TP_CD
		                       AND ROWNUM = 1)
		         END
		            AS PAYER_TAX_NO,
		         I.UNIT1_VAL,
		         I.UNIT2_VAL,
		         I.UNIT3_VAL,
		         I.APLY_RATE,
		         I.APLY_AMT,
		         I.TOTAL_AMT,
		         P.VSL_NM,
		         I.VSL_CALL_ID,
		         B.MF_DOC_ID,
		         B.BL_NO,
		         TO_CHAR (A.UPDATE_TIME, 'DD-Mon-YYYY', 'NLS_DATE_LANGUAGE=AMERICAN') IV_DT,
		         A.PAY_TP_CD,
		         A.IV_TP,
		         I.STAT_CD,
		         NVL (A.PAID_ST, 'N') AS PAID_YN,
		         A.IV_NO,
		         D.TMNL_NM,
		         D.COMP_REG_NO,
		         D.TEL_NO,
		         D.FAX_NO,
		         A.STAFF_CD,
		         DECODE (
					I.SCR_ID,
	                'STR', I.REF_NO2,
	                'SSR/Add hoc', NVL (
	                          NVL(DECODE (I.RMK, '-', ' ', I.RMK), I.REF_NO1),
	                          (SELECT REF_NO
	                             FROM TMT_B_SSR
	                            WHERE     VSL_CALL_ID = I.VSL_CALL_ID
	                                  AND I.REF_NO2 = SSR_NO
	                                  AND ROWNUM = 1)),
	                NVL (NVL(DECODE (I.RMK, '-', ' ', I.RMK),I.REF_NO1), I.REF_NO2)
				 ) AS refNo,
		         (SELECT CUST_CD
				 FROM TMT_PTNR PTNR
				 WHERE PTNR.PTNR_CODE = I.PAYER
				 AND ROWNUM =1
				 UNION
				 SELECT CUST_CD
				 FROM TMT_AGENCY_INFO PTNR
				 WHERE PTNR.AGENCY_CODE = I.PAYER
				 AND ROWNUM = 1) AS accNo,
				 F_GET_PARTNER_INFO (I.PAYER, 'ADDR') AS accNm,
				 I.TAX_TYPE,
				 NVL(I.TAX_AMT, 0) TAX_AMT,
				 NVL(I.TAX_VALUE, 0) AS TAX_VALUE,
		         S.ETA AS eta,
				 S.ETD AS ted,
				 S.ETW AS etw,
				 S.ETC AS etc,
				 P.GRT,
				 P.LOA,
				 (
				 	SELECT TAX_CD
				 	FROM (
				  		SELECT TAX_CD 
				  		FROM TMT_PTNR 
				  		WHERE PTNR_CODE = A.PAYER
				  		UNION
				  		SELECT TAX_CD
				  		FROM TMT_AGENCY_INFO
				  		WHERE AGENCY_CODE = A.PAYER
				 	)
				 	WHERE ROWNUM = 1
				) AS PAYER_TAX_CD
		    FROM TMT_B_IV_DATA I
		         INNER JOIN TMT_B_IV A
		            ON I.VSL_CALL_ID = A.VSL_CALL_ID AND I.IV_NO = A.IV_NO
		         INNER JOIN TMT_B_TRF_CD T
		            ON I.TRF_CD = T.TRF_CD AND I.SUB_TRF_CD = T.SUB_TRF_CD
		         LEFT OUTER JOIN TMT_BL B
		            ON I.VSL_CALL_ID = B.VSL_CALL_ID AND I.REF_NO1 = B.BL_NO
		         LEFT OUTER JOIN TMT_VSL_SCH S ON B.VSL_CALL_ID = S.VSL_CALL_ID
		         LEFT OUTER JOIN TMT_VSL_PART P ON S.VSL_CD = P.VSL_CD
		         LEFT OUTER JOIN TMT_TMNL_DEF D ON 1 = 1
		   WHERE 	I.VSL_CALL_ID = #{vslCallId}
		   			AND A.IV_NO = #{ivNo}
		ORDER BY B.BL_NO,
		         T.TRF_TP_CD,
		         T.TRF_CD,
		         I.UPDATE_TIME
	</select>
	
	<select id="selectTrfInfoForCreditAdditionalIv" resultMap="resultProformaMap" parameterType="proformaInvoiceParm">	
		SELECT  /* proformaInvoice.selectTrfInfoForCreditAdditionalIv */
				I.TRF_CD
		        ,I.SUB_TRF_CD
		        ,T.DESCR
		        ,T.TRF_TP_CD
		        ,T.COST_CENT_CD
		        ,T.BILL_TP_CD
		        ,I.PAYER as PAYER_CD
		        ,B.PAYER_TP_CD as PAYER_TP
		        ,S.UNIT_PRC
		        ,I.VSL_CALL_ID
		        ,C.CATG_CD
		        ,C.DELV_TP_CD
		        ,C.CG_TP_CD
		        ,C.CMDT_CD
		        ,C.PKG_QTY
		        <choose>
		        	<when test="category == 'Import'">
		        		,C.BL_NO AS CG_NO
		        		,C.WGT AS WGT
		        		,C.VOL AS MSRMT
		        	</when>
		        	<otherwise>
		        		,C.SHIPG_NOTE_NO AS CG_NO
		        		,C.CG_WGT AS WGT
		        		,C.CG_MSRMT AS MSRMT
		        	</otherwise>
		        </choose>
		        
		FROM    TMT_B_IV_DATA I
		        INNER JOIN TMT_B_IV_DATA_DTL D ON I.VSL_CALL_ID = D.VSL_CALL_ID AND I.GATHER_NO = D.GATHER_NO
		        INNER JOIN TMT_B_IV B ON I.VSL_CALL_ID = B.VSL_CALL_ID AND I.IV_NO = B.IV_NO
		        INNER JOIN TMT_B_TRF_CD T ON I.TRF_CD = T.TRF_CD AND I.SUB_TRF_CD = T.SUB_TRF_CD
		        <choose>
		        	<when test="category == 'Import'">
		        		INNER JOIN TMT_BL C ON I.VSL_CALL_ID = C.VSL_CALL_ID AND I.REF_NO1 = C.BL_NO
		        	</when>
		        	<otherwise>
		        		INNER JOIN TMT_SHIPG_NOTE C ON I.VSL_CALL_ID = C.VSL_CALL_ID AND I.REF_NO1 = C.SHIPG_NOTE_NO
		        	</otherwise>
		        </choose>

		        LEFT OUTER JOIN TMT_B_TRF S
		                  ON     T.TRF_CD = S.TRF_CD
		                     AND T.SUB_TRF_CD = S.SUB_TRF_CD
		                     AND S.PRC_TP_CD = 'S'
		                     
		WHERE   I.IV_NO = #{ivNo}
		        AND I.VSL_CALL_ID = #{vslCallId}
		        AND T.TRF_TP_CD = 'HG'
	</select>
	
	<select id="selectInvoiceNo"   parameterType="proformaInvoiceParm"  resultType="java.lang.String">
		SELECT ( #{ivPrfx}
					|| TO_CHAR(SYSDATE, 'YYMM') 
					|| (NVL(TRIM(TO_CHAR(MAX(SUBSTR(IV_NO, -6, 6))+1, '000000')),'000001')) )  AS IVNO  
		FROM TMT_B_IV 
		WHERE IV_NO LIKE #{ivPrfx} ||TO_CHAR(SYSDATE, 'YYMM') ||'%'
	</select>
	
	<sql id="sqlProformaInvoice">
	/* proformaInvoice.sqlProformaInvoice */
		WITH IMPORT_OPE_DATA
		     AS (  SELECT VSL_CALL_ID,
		                  CG_NO,
		                  SUM (CG_WGT) AS WGT,
		                  SUM (CG_VOL) AS MSRMT,
		                  SUM (PKG_QTY) AS PKG_QTY
		             FROM (SELECT M.VSL_CALL_ID,
		                          M.BL_NO AS CG_NO,
		                          M.CG_TP_CD,
		                          M.SHIPG_AGNT,
		                          M.FWR_AGNT,
		                          M.CNSNE,
		                          M.ACTL_DELV_TP_CD,
		                          CAST (J.JOB_NO AS NVARCHAR2 (20)) AS JOB_NO,
		                          CASE WHEN J.FNL_OPE_YN = 'Y' THEN 1 ELSE 0 END
		                             AS FNL_OPE_YN,
		                          J.CG_WGT,
		                          J.CG_VOL,
		                          J.PKG_QTY,
		                          J.WORK_END_DT
		                     FROM TMT_CG_MST M
		                          INNER JOIN TMT_BL B
		                             ON     M.VSL_CALL_ID = B.VSL_CALL_ID
		                                AND M.BL_NO = B.BL_NO
		                          INNER JOIN TMT_JOB J
		                             ON     M.VSL_CALL_ID = J.VSL_CALL_ID
		                                AND M.CG_NO = J.CG_NO
		                    WHERE     J.JOB_PURP_CD IN ('WG', 'VG', 'AG')
		                    		<if test="vslCallId != '' and vslCallId != null ">
		                    			AND M.VSL_CALL_ID = #{vslCallId}
		                    		</if>
		                          
		                   UNION ALL
		                   SELECT R.VSL_CALL_ID,
		                          R.CG_NO,
		                          R.CG_TP_CD,
		                          '' AS SHIPG_AGNT,
		                          B.FWRD AS FWR_AGNT,
		                          B.CNSNE,
		                          R.DELV_TP_CD AS ACTL_DELV_TP_CD,
		                          CAST (R.RORO_SEQ AS NVARCHAR2 (20)) AS JOB_NO,
		                          CASE MIN (
		                                  CASE
		                                     WHEN R.GATE_OUT_DTM IS NULL THEN 'N'
		                                     ELSE 'Y'
		                                  END)
		                               OVER (PARTITION BY R.CG_NO)
		                             WHEN 'N'
		                             THEN
		                                0
		                             ELSE
		                                1
		                          END
		                             AS FNL_OPE_YN,
		                          R.CG_WGT AS WGT,
		                          R.CBM AS MSRMT,
		                          1 AS PKG_QTY,
		                          R.GATE_OUT_DTM AS WORK_END_DT
		                     FROM TMT_RORO_MST R
		                          INNER JOIN TMT_BL B
		                             ON     R.CG_NO = B.BL_NO
		                                AND R.VSL_CALL_ID = B.VSL_CALL_ID
		                    WHERE     R.CG_TP_CD = 'RCV'
		                          	AND IX_CD = 'I'
		                          	<if test="vslCallId != '' and vslCallId != null ">
		                    			AND R.VSL_CALL_ID = #{vslCallId}
		                    		</if>
		                          
		                          )
		         GROUP BY VSL_CALL_ID, CG_NO),
		         
		     EXPORT_OPE_DATA
		     AS (  SELECT VSL_CALL_ID,
		                  CG_NO,
		                  SUM (CG_WGT) AS WGT,
		                  SUM (CG_VOL) AS MSRMT,
		                  SUM (PKG_QTY) AS PKG_QTY
		             FROM (SELECT M.VSL_CALL_ID,
		                          M.SHIPG_NOTE_NO AS CG_NO,
		                          M.CG_TP_CD,
		                          M.SHIPG_AGNT,
		                          M.FWR_AGNT,
		                          M.CNSNE,
		                          M.ACTL_DELV_TP_CD,
		                          CAST (J.JOB_NO AS NVARCHAR2 (20)) AS JOB_NO,
		                          CASE WHEN J.FNL_OPE_YN = 'Y' THEN 1 ELSE 0 END
		                             AS FNL_OPE_YN,
		                          J.CG_WGT,
		                          J.CG_VOL,
		                          J.PKG_QTY,
		                          J.WORK_END_DT
		                     FROM TMT_CG_MST M
		                          INNER JOIN TMT_SHIPG_NOTE S
		                             ON     M.VSL_CALL_ID = S.VSL_CALL_ID
		                                AND M.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
		                          INNER JOIN TMT_JOB J
		                             ON     M.VSL_CALL_ID = J.VSL_CALL_ID
		                                AND M.CG_NO = J.CG_NO
		                    WHERE     J.JOB_PURP_CD IN ('AV', 'GV')
		                    		<if test="vslCallId != '' and vslCallId != null ">
		                    			AND M.VSL_CALL_ID = #{vslCallId}
		                    		</if>
		                   UNION ALL
		                   SELECT R.VSL_CALL_ID,
		                          R.CG_NO,
		                          R.CG_TP_CD,
		                          S.SHIPG_AGNCY AS SHIPG_AGNT,
		                          S.FWRD AS FWR_AGNT,
		                          S.CNSNE,
		                          R.DELV_TP_CD AS ACTL_DELV_TP_CD,
		                          CAST (R.RORO_SEQ AS NVARCHAR2 (20)) AS JOB_NO,
		                          CASE MIN (
		                                  CASE
		                                     WHEN R.GATE_OUT_DTM IS NULL THEN 'N'
		                                     ELSE 'Y'
		                                  END)
		                               OVER (PARTITION BY R.CG_NO)
		                             WHEN 'N'
		                             THEN
		                                0
		                             ELSE
		                                1
		                          END
		                             AS FNL_OPE_YN,
		                          R.CG_WGT AS WGT,
		                          R.CBM AS MSRMT,
		                          1 AS PKG_QTY,
		                          R.GATE_OUT_DTM AS WORK_END_DT
		                     FROM TMT_RORO_MST R
		                          INNER JOIN TMT_SHIPG_NOTE S
		                             ON     R.CG_NO = S.SHIPG_NOTE_NO
		                                AND R.VSL_CALL_ID = S.VSL_CALL_ID
		                    WHERE     R.CG_TP_CD = 'RCV'
		                          	AND IX_CD = 'X'
		                          	<if test="vslCallId != '' and vslCallId != null ">
		                    			AND R.VSL_CALL_ID = #{vslCallId}
		                    		</if>
		                          )
		         GROUP BY VSL_CALL_ID, CG_NO)
		         
		SELECT I.VSL_CALL_ID AS vslCallId,
		       B.MF_DOC_ID AS docNo,
		       B.BL_NO AS blSnNo,
		       'Import' AS category,
		       B.CG_WGT AS docMT,
		       D.UNIT1_VAL AS issuedMT,
		       I.PAYER AS payerCd,
		       F_GET_PARTNER_INFO (I.PAYER, 'ENG_SNM') AS payerNm,
		       I.IV_NO AS ivNo,
		       I.IV_NO AS finalInvoiceNo,
		       I.IV_AMT AS ivAmt,
		       I.TOTAL_AMT AS totalAmt,
		       F_CM_001 ('MT', 'IVSTAT', I.STAT_CD) AS issuedStatus,
       		   I.IV_TP as ivTp,
       		   F_CM_001 ('MT', 'IVTP', I.IV_TP) AS ivTpNm,
       		   I.REF_IV_NO as refInvNo,
       		   '' as addCreditIvNo,
		       CASE WHEN (SELECT COUNT(1) FROM TMT_B_IV I1 WHERE I1.VSL_CALL_ID = I.VSL_CALL_ID AND I1.IV_TP IN ('C', 'A') AND I1.REF_IV_NO = I.IV_NO) = 0
		            THEN 'Y'
		            ELSE 'N'
		            END AS allowCreateAddCredit,
       		   NVL(I.PAID_ST, 'N') AS paidYn,
			   TO_CHAR(I.IV_DT, 'DD/MM/YYYY HH24:MI') AS ivDt,
			   I.TAX_AMT AS TAXAMT
		  FROM TMT_B_IV I
		       INNER JOIN (
                SELECT 
                     VSL_CALL_ID
                    ,SUM(UNIT1_VAL) UNIT1_VAL
                    ,IV_NO
                    ,REF_NO1
                FROM TMT_B_IV_DATA
                GROUP BY VSL_CALL_ID, IV_NO, REF_NO1
            ) D
		          ON I.VSL_CALL_ID = D.VSL_CALL_ID AND I.IV_NO = D.IV_NO
		       INNER JOIN TMT_BL B
		          ON I.VSL_CALL_ID = B.VSL_CALL_ID AND D.REF_NO1 = B.BL_NO
		 WHERE  I.IV_PRFX = 'PRF' 
		 		<if test="invoiceType != '' and invoiceType != null ">
		 			AND I.IV_TP = #{invoiceType}
		 		</if>
		 		<if test="vslCallId != '' and vslCallId != null ">
		        	AND I.VSL_CALL_ID = #{vslCallId}
		        </if>  
		        <if test="ivNo != '' and ivNo != null ">
			     	AND I.IV_NO LIKE '%' || #{ivNo} || '%'
			    </if>
		       	<if test="fromDate != '' and fromDate != null ">
		        	AND I.IV_DT &gt;=
		              TO_DATE (#{fromDate} || ' 00:00:00', 'DD/MM/YYYY HH24:MI:SS')
		        </if>
		        <if test="toDate != '' and toDate != null ">
		        	AND I.IV_DT &lt;=
		              TO_DATE (#{toDate} || ' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
		        </if>  
		UNION ALL
		SELECT I.VSL_CALL_ID AS vslCallId,
		       S.MF_DOC_ID AS docNo,
		       S.SHIPG_NOTE_NO AS blSnNo,
		       'Export' AS category,
		       S.CG_WGT AS docMT,
		       D.UNIT1_VAL AS issuedMT,
		       I.PAYER AS payerCd,
		       F_GET_PARTNER_INFO (I.PAYER, 'ENG_SNM') AS payerNm,
		       I.IV_NO AS ivNo,
		       I.IV_NO AS finalInvoiceNo,
		       I.IV_AMT AS ivAmt,
		       I.TOTAL_AMT AS totalAmt,
		       F_CM_001 ('MT', 'IVSTAT', I.STAT_CD) AS issuedStatus,
       		   I.IV_TP as ivTp,
       		   F_CM_001 ('MT', 'IVTP', I.IV_TP) AS ivTpNm,
       		   I.REF_IV_NO as refInvNo,
       		   '' as addCreditIvNo,
		       CASE WHEN (SELECT COUNT(1) FROM TMT_B_IV I1 WHERE I1.VSL_CALL_ID = I.VSL_CALL_ID AND I1.IV_TP IN ('C', 'A') AND I1.REF_IV_NO = I.IV_NO) = 0
		            THEN 'Y'
		            ELSE 'N'
		            END AS allowCreateAddCredit,
			   NVL(I.PAID_ST, 'N') AS paidYn,
			   TO_CHAR(I.IV_DT, 'DD/MM/YYYY HH24:MI') AS ivDt,
			   I.TAX_AMT AS TAXAMT
		  FROM TMT_B_IV I
		       INNER JOIN TMT_B_IV_DATA D
		          ON I.VSL_CALL_ID = D.VSL_CALL_ID AND I.IV_NO = D.IV_NO
		       INNER JOIN TMT_SHIPG_NOTE S
		          ON I.VSL_CALL_ID = S.VSL_CALL_ID AND D.REF_NO1 = S.SHIPG_NOTE_NO
		 WHERE  I.IV_PRFX = 'PRF' 
				<if test="invoiceType != '' and invoiceType != null ">
		 			AND I.IV_TP = #{invoiceType}
		 		</if>
				<if test="vslCallId != '' and vslCallId != null ">
			     	AND I.VSL_CALL_ID = #{vslCallId}
			    </if>  
			    <if test="ivNo != '' and ivNo != null ">
			     	AND I.IV_NO LIKE '%' || #{ivNo} || '%'
			    </if> 
			    <if test="fromDate != '' and fromDate != null ">
			     	AND I.IV_DT &gt;=
			           TO_DATE (#{fromDate} || ' 00:00:00', 'DD/MM/YYYY HH24:MI:SS')
			    </if>
			    <if test="toDate != '' and toDate != null ">
			     	AND I.IV_DT &lt;=
			           TO_DATE (#{toDate} || ' 23:59:29', 'DD/MM/YYYY HH24:MI:SS')
			    </if>
	</sql>
 	
	<select id="selectProformaInvoiceCount" parameterType="proformaInvoiceParm" resultType="java.lang.String" >
        SELECT COUNT(*)
          FROM (<include refid="sqlProformaInvoice"/>)
	</select>
	
	<select id="selectProformaInvoice" resultType="proformaInvoiceItem" parameterType="proformaInvoiceParm">	
	 	<if test="pageNo != 0"> 
             SELECT * FROM (SELECT inner.*, rownum row_num FROM ( 
		</if>
				<include refid="sqlProformaInvoice"/>
		<if test="pageNo != 0"> 
				)inner 
			)inner 
			WHERE inner.row_num <![CDATA[>]]> (TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo}))-1)* TO_NUMBER(#{sizePerPage}) 
		  	AND inner.row_num <![CDATA[<=]]> TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo})) * TO_NUMBER(#{sizePerPage})
		</if>
		
		ORDER BY vslCallId, docNo, ivDt
	</select>

	<!-- End Proforma Invoice Screen -->
	
	<!-- Proforma Detail Screen -->
	<insert id="insertProformaInvoice" parameterType="proformaInvoiceItem">
		INSERT /* proformaInvoice.insertProformaInvoice */ 
		INTO TMT_B_IV (
			VSL_CALL_ID, 
 			IV_NO, 
			IV_PRFX,
			STAT_CD,
			IV_DT,
			IV_DUE_DT,
			PAYER,
			IV_AMT,
			STAFF_CD,
			UPDATE_TIME,
			VERSION,
			TOTAL_AMT,
			PAY_TP_CD,
			IV_TP,
			PAYER_TP_CD,
			REF_IV_NO,
			PAID_ST
		) VALUES (
			#{vslCallId},
			#{ivNo},
			#{ivPrfx},
			#{statusCd},
			SYSDATE, 
			SYSDATE, 
			#{payerCd},
			#{ivAmt},
			#{userId},					
			SYSDATE,
			#{version},
			#{totalAmt},
			#{paymentType},
			#{ivTp},
			#{payerTp},
			#{refInvNo},
			#{paidYn}
		)
	 </insert>
	 
	<insert id="insertProformaInvoiceData" parameterType="proformaInvoiceItem">
		<selectKey order="BEFORE" resultType="String" keyProperty="gatherNo" >
		 	(SELECT 'MOST'||'_'|| REPLACE(TO_CHAR (TO_NUMBER (NVL (MAX (SUBSTR (GATHER_NO, 6, 6)), '0')) + 1, '000000'),' ','') ||'_'||TO_CHAR (SYSDATE, 'YYYYMMDD') AS gatherNo 
              FROM  TMT_B_IV_DATA WHERE GATHER_NO LIKE 'MOST%' || TO_CHAR (SYSDATE, 'YYYYMMDD'))
		</selectKey> 
		INSERT /* proformaInvoice.insertProformaInvoiceData */ 
		INTO TMT_B_IV_DATA (
			GATHER_NO,
			TRF_CD,
			SUB_TRF_CD,
			TRF_DESCR,
			PAYER,
			BILL_TP_CD,
			VSL_CALL_ID,
			STAT_CD,
			UNIT1_VAL,
			UNIT2_VAL,
			UNIT3_VAL,
			STD_RATE,
			IV_PRFX,
			IV_NO,
			REF_NO1,
			REF_NO2,
			REVS_RATE,
			REVS_AMT,
			REVS_UNIT1_VAL,
			STAFF_CD,
			UPDATE_TIME,
			VERSION,
			SCR_ID,
			TOTAL_AMT,
			GATHER_DT,
			APLY_RATE,
			APLY_AMT,
			COST_CENT_CD,
			ADHOC_YN,
			TAX_TYPE,
			TAX_VALUE,
			TAX_AMT
		) VALUES (
			#{gatherNo},
			#{trfCd},
			#{subTrf},
			#{trfDesc},
			#{payerCd},
			'VV',
			#{vslCallId},
			#{statusCd},
			#{unit1Val},
			#{unit2Val},
			#{unit3Val},
			#{stdRate},
			#{ivPrfx},
			#{ivNo},
			#{blSnNo},
			#{docNo},
			#{stdRate},
			#{ivAmt},
			#{issuedMT},
			#{userId},
			SYSDATE,
			#{version},
			'PRF',
			#{totalAmt},
			SYSDATE,
			#{applyRate},
			#{ivAmt},
			#{costCenter},
			#{adhocYn},
			#{taxCd},
			#{taxValue},
			#{taxAmt}
		)
	</insert> 
	
	<insert id="insertProformaInvoiceDataDetail" parameterType="proformaInvoiceItem">
		<selectKey keyProperty="gatherSeq" resultType="proformaInvoiceItem" order="BEFORE">
			SELECT /* proformaInvoice.generateGatherSeq*/
				(SELECT NVL(MAX(GATHER_SEQ), 0) + 1 FROM TMT_B_IV_DATA_DTL WHERE GATHER_NO = #{gatherNo}) as gatherSeq from dual
		</selectKey>
		INSERT /* proformaInvoice.insertProformaInvoiceDataDetail */
		INTO TMT_B_IV_DATA_DTL (
			GATHER_NO,
			GATHER_SEQ,
			BILL_TP_CD,
			GATHER_TP_CD,
			TRF_CD,
			SUB_TRF_CD,
			TRF_DESCR,
			PAYER,
			VSL_CALL_ID,
			ADHOC_YN,
			IV_PRFX,
			IV_NO,
			UNIT1_VAL,
			CG_TP_CD,
			WGT,
			MSRMT,
			BL_NO,
			SHIPG_NOTE_NO,
			SHIPG_AGNT,
			FWR_AGNT,
			SHPR,
			CNSNE,
			STAFF_CD,
			UPDATE_TIME,
			VERSION,
			SYTM_ID,
			GATHER_DT,
			OPE_CLASS_CD,
			DELV_TP_CD,
			PKG_TP_CD,
			CMDT_CD,
			DG_CLASS,
			TSPT_TP_CD
		) VALUES (
			#{gatherNo},
			#{gatherSeq},
			'VV',
			#{gatherTpCd},
			#{trfCd},
			#{subTrf},
			#{trfDesc},
			#{payerCd},
			#{vslCallId},
			'N',
			#{ivPrfx},
			#{ivNo},
			#{issuedMT},
			#{cgTpCd},
			#{wgt},
			#{msrmt},
			<choose>
				<when test="opClassCd == 'I'.toString()">
					#{blSnNo},
					NULL,
				</when>
				<otherwise>
					NULL,
					#{blSnNo},
				</otherwise>
			</choose>
			#{shaCd},
			#{fwdCd},
			#{shpCd},
			#{cnsCd},
			#{userId},
			SYSDATE,
			SYSDATE,
			'MT',
			SYSDATE,
			#{opClassCd},
			#{delvTpCd},
			#{pkgTpCd},
			#{cmdtCd},
			#{imdgClass},
			#{transportTpCd}
		)
	</insert>
	
	<update id="updateInvoiceNoToProformaIvData"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateInvoiceInfoToIvData */ 
				TMT_B_IV_DATA
		SET 	IV_NO = #{ivNo}
				,STAT_CD = #{statusCd}
				,IV_PRFX = #{ivPrfx}
				,UPDATE_TIME = SYSDATE
        		,STAFF_CD = #{userId}
        		,VERSION = #{newVersion}
        		,PAYER = #{payerCd}
		WHERE 	GATHER_NO = #{gatherNo}
				AND VSL_CALL_ID = #{vslCallId}
	</update>
	
	<update id="updateOriginalHandlingGoodsIvData"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateOriginalHandlingGoodsIvData */ 
				TMT_B_IV_DATA
		SET 	 REF_NO3 = #{refNo3}
				,UPDATE_TIME = SYSDATE
        		,STAFF_CD = #{userId}
        		,VERSION = #{newVersion}
		WHERE 	GATHER_NO = #{gatherNo}
				AND VSL_CALL_ID = #{vslCallId}
	</update>
	
	<update id="updateRefIvNo"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateRefIvNo */ 
				TMT_B_IV 
		SET 	REF_IV_NO = #{ivNo}
				,UPDATE_TIME = SYSDATE
        		,STAFF_CD = #{userId}
        		,VERSION = #{newVersion}
		WHERE 	IV_NO = #{proformaInvoiceNo}
				AND VSL_CALL_ID = #{vslCallId}
	</update>
	
	<update id="updateBillWgtCargoMaster"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateBillWgtCargoMaster */ 
				TMT_CG_MST
		SET 	BILL_WGT  = NVL(BILL_WGT, 0) + TO_NUMBER(#{wgt})
				,BILL_MSRMT = NVL(BILL_MSRMT, 0) + TO_NUMBER(#{msrmt})
				,UPDATE_TIME = SYSDATE
        		,STAFF_CD = #{userId}
        		,VERSION = #{newVersion}
		WHERE 	VSL_CALL_ID = #{vslCallId}
				AND CG_NO = #{blSnNo}
				AND BL_NO = #{blSnNo}
	</update>
	
	<update id="updateInvoiceDataStatus" parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateInvoiceDataStatus */ 
		TMT_B_IV_DATA SET
			STAT_CD = #{statusCd}
		WHERE VSL_CALL_ID = #{vslCallId}
		AND REF_NO1 = #{blSnNo}
		AND REF_NO2 = #{docNo} 
		AND STAT_CD IN ('PC','SM') 
		AND (
		  	SELECT TRF_TP_CD 
		  	FROM TMT_B_TRF_CD TRF 
		  	WHERE TRF.TRF_CD = TMT_B_IV_DATA.TRF_CD 
		  	AND TRF.SUB_TRF_CD = TMT_B_IV_DATA.SUB_TRF_CD  
		) = #{trfTpCd}
	</update>
	
	<update id="updateInvoiceStatus"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateInvoiceStatus */ 
		TMT_B_IV SET
			STAT_CD = #{statusCd}
			,UPDATE_TIME = SYSDATE
        	,STAFF_CD = #{userId}
        	,VERSION = #{newVersion}
		WHERE IV_NO = #{ivNo}
		AND VSL_CALL_ID = #{vslCallId}
	</update>
	
	<update id="updateProformaInvoiceData" parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.insertProformaInvoice */ 
		TMT_B_IV_DATA SET 
			UNIT1_VAL = #{unit1Val},
			UNIT2_VAL = #{unit2Val},
			UNIT3_VAL = #{unit3Val},
			STD_RATE = #{stdRate},
			REF_NO1 = #{blSnNo},
			REF_NO2 = #{docNo},
			REVS_RATE = #{stdRate},
			REVS_AMT = #{ivAmt},
			REVS_UNIT1_VAL = #{issuedMT},
			STAFF_CD = #{userId},
			UPDATE_TIME = SYSDATE,
			VERSION = #{version},
			TOTAL_AMT = #{ivAmt},
			GATHER_DT = SYSDATE,
			APLY_RATE = #{applyRate},
			APLY_AMT = #{ivAmt},
			ADHOC_YN = #{adhocYn}
		WHERE GATHER_NO = #{gatherNo}
	 </update>
	
</mapper>