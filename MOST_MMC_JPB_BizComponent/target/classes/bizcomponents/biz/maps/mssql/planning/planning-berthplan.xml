<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="berthPlan">

	<resultMap 	id="berthStructureList" type="BerthInfoItem">
		<result property = "terminalCd"		    				column = "AREA"/>
		<result property = "berthTp"		    				column = "BERTHTP"/>
		<result property = "berthNm"		    				column = "BERTHNM"/>
		<result property = "berthCd"		    				column = "BERTHCD"/>
		<result property = "startPos"		    				column = "PSTSTA"/>
		<result property = "endPos"			    				column = "PSTEND"/>
		<result property = "length"			    				column = "LENGTH"/>
		<result property = "drawable"		    				column = "DRAWABLE"/>
		<result property = "displacement"	    				column = "DISPLACEMENT"/>
		<result property = "maxDraft"		    				column = "MAX_DRAFT"/>
		<result property = "equipments"		    				column = "EQUIPMENTS"/>
		<result property = "berthDept"		    				column = "BERTH_DEPT"/>
		<result property = "grpCd"								column = "GRPCD"/>
	</resultMap>

	<resultMap 	id="berthPlanList" type="berthPlanItem">
		<result property = "vslCallId"							column = "VSL_CALL_ID"/>
		<result property = "shipCallNo"		    				column = "SHIP_CALL_NO"/>
		<result property = "inVoy"			    				column = "INB_VOY"/>
		<result property = "outVoy"			    				column = "OUB_VOY"/>
		<result property = "berthCd"		    				column = "BERTH_LOC"/>
		<result property = "berthTp"		    				column = "BERTH_TP"/>
		<result property = "docStatus"		    				column = "SUMMIT_STAT"/>
		<result property = "eta"			    				column = "ETA" 					javaType="java.util.Date"/>
		<result property = "etb"			    				column = "ETB" 					javaType="java.util.Date"/>
		<result property = "etw"			    				column = "ETW" 					javaType="java.util.Date"/>
		<result property = "etc"			    				column = "ETC" 					javaType="java.util.Date"/>
		<result property = "etu"			    				column = "ETU" 					javaType="java.util.Date"/>
		<result property = "etd"			    				column = "ETD" 					javaType="java.util.Date"/>
		<result property = "ata"			    				column = "ATA" 					javaType="java.util.Date"/>
		<result property = "atb"			    				column = "ATB" 					javaType="java.util.Date"/>
		<result property = "atw"			    				column = "ATW" 					javaType="java.util.Date"/>
		<result property = "atc"			    				column = "ATC" 					javaType="java.util.Date"/>
		<result property = "atu"			    				column = "ATU" 					javaType="java.util.Date"/>
		<result property = "atd"			    				column = "ATD" 					javaType="java.util.Date"/>
		<result property = "shfAtb"			    				column = "SHF_ATB"				javaType="java.util.Date"/>
		<result property = "shfAtu"			    				column = "SHF_ATU"				javaType="java.util.Date"/>
		<result property = "inLane"			    				column = "INB_SERV_LANE"/>
		<result property = "outLane"		    				column = "OUTB_SERV_LANE"/>
		<result property = "arrvSaId"		    				column = "ARRV_SA_ID"/>
		<result property = "pilotOnboard"	    				column = "PILOT_ON_BOARD"/>
		<result property = "pilotDisembark"	    				column = "PILOT_DISEMBARK"/>
		<result property = "berthAlongside"	    				column = "BERTH_ALONGSIDE"/>
		<result property = "berthDiv"		    				column = "BERTH_DIV"/>
		<result property = "startPos"		    				column = "WHARF_MARK_FROM"/>
		<result property = "endPos"			    				column = "WHARF_MARK_TO"/>
		<result property = "vesselName"		    				column = "VSL_NM"/>
		<result property = "callSign"		    				column = "CALL_SIGN"/>
		<result property = "loa"			    				column = "LOA"/>
		<result property = "width"			    				column = "VSL_WIDTH"/>
		<result property = "length"			    				column = "LENGTH"/>
		<result property = "planYn"			    				column = "BERTH_PLAN_YN"/>
		<result property = "pstSta"			    				column = "PST_STA"/>
		<result property = "remarks"		    				column = "RMK"/>
		<result property = "vslStat"		    				column = "VSL_STAT"/>
		<result property = "colColor"		    				column = "COLCOLOR"/>
		<result property = "planType"		    				column = "PLAN_TYPE"/>
		<result property = "loading"		    				column = "LOADING"/>
		<result property = "discharging"	    				column = "DISCHARGING"/>
		<result property = "loadingCmdt"	    				column = "LOADING_CMDT"/>
		<result property = "dischargingCmdt"					column = "DISCHARGING_CMDT"/>
		<result property = "shipgNoteNo"	    				column = "SHIPG_NOTE_NO"/>
		<result property = "shpr"	    						column = "SHPR"/>
		<result property = "cgWgt"	    						column = "CG_WGT"/>
		<result property = "cnsneecd"	    					column = "CNSNEECD"/>
		<result property = "eqTpCd"	    						column = "EQTPCD"/>
		<result property = "megaNo"	    						column = "MEGANO"/>
		<result property = "stvdComp"	    					column = "STVDCOMP"/>
		<result property = "trmgComp"	    					column = "TRMGCOMP"/>
		<result property = "jobNo"	    						column = "JOBNO"/>
		<result property = "blNo"	    						column = "BLNO"/>
		<result property = "wgt"	    						column = "WGT"/>
		<result property = "snComodityCode"	    				column = "SNCMDTCD"/>
		<result property = "snComodityName"	    				column = "SNCMDTCDNM"/>
		<result property = "fnComodityCode"	    				column = "FNCMDTCD"/>
		<result property = "fnComodityName"	    				column = "FNCMDTCDNM"/>
		<result property = "hatchNo"	    					column = "HATCHNO"/>
		<result property = "D_Bloading"	    					column = "D_BLOADING"/>
		<result property = "D_Bdischarging"	    				column = "D_BDISCHARGING"/>
		<result property = "berthLabel"	    					column = "BERTH_LABEL"/>
		<result property = "arrvFwdDrf"	    					column = "ARRV_FWD_DRF"/>
		<result property = "arrvAfterDrf"	    				column = "ARRV_AFTER_DRF"/>
		<result property = "depFwdDrf"	    					column = "DEPT_FWD_DRF"/>
		<result property = "depAfterDrf"	    				column = "DEPT_AFTER_DRF"/>
		<result property = "vslDlRsn"	    					column = "DELAY_RSN_CD"/>
	</resultMap>

	<resultMap 	id="bittStructureList" type="berthPlanItem">
		<result property = "terminalCd"		    				column = "TMNL_CD"/>
		<result property = "berthTp"		    				column = "BERTH_TP"/>
		<result property = "berthCd"		    				column = "BERTH_CD"/>
		<result property = "bittCd"			    				column = "BITT_CD"/>
		<result property = "xPos"			    				column = "XPOS"/>
		<result property = "yPos"			    				column = "YPOS"/>
	</resultMap>

	<resultMap id="PartnerInformationMap" 						type="berthPlanItem">
		<result property="engSnm"         						column="engSnm"/> 				<!-- Partner Name -->
		<result property="agencyCode"       					column="agencyCode"/> 			<!-- Partner Code -->
		<result property="companyStatus"    					column="companyStatus"/> 		<!--  Company Status -->
		<result property="contactPerson"    					column="contactPerson"/> 		<!-- Contact Person -->
		<result property="addr"         						column="addr"/>					<!-- Office Address -->
		<result property="telNo"         						column="telNo"/> 				<!-- Telephone No -->
		<result property="faxNo"         						column="faxNo"/> 				<!-- Fax No -->
		<result property="homepage"         					column="homepage"/> 			<!-- Homepage -->
		<result property="email"         						column="email"/> 				<!-- E-mail -->
		<result property="licNo"         						column="licNo"/> 				<!-- NRIC No. -->
		<result property="paymentType"      					column="paymentType"/> 			<!-- Payment Type -->
		<result property="creditLimit"      					column="creditLimit"/> 			<!-- Credit Limit -->
		<result property="outstanding"      					column="outstanding"/> 			<!-- Outstanding -->
		<result property="balance"         						column="balance"/> 				<!-- Balance -->
		<result property="bankName"         					column="bankName"/> 			<!-- Bank Name -->
		<result property="accNo"         						column="accNo"/> 				<!-- Account No -->
		<result property="remark"         						column="remark"/> 				<!-- Remark -->
		<collection 
			property="collection"
			javaType="ArrayList" 						
			select="berthPlan.selectPartnerType"
			column="{agencyCode=agencyCode}"
		/>
	</resultMap>
	
	<resultMap 	id="berthMaintenanceList" type="BerthPlanItem">
	    <result property = "berthCd"			column = "berth"/>
	    <result property = "berthTp"			column = "berth_tp"/>
	    <result property = "repFromBitt"		column = "from_bitt"/>
	    <result property = "repToBitt"			column = "to_bitt"/>
		<result property = "repFromMeter"		column = "from_meter"/>
		<result property = "repToMeter"			column = "to_meter"/>
		<result property = "repStopStime"		column = "stop_stime"/>
		<result property = "repStopEtime"		column = "stop_etime"/>		
		<result property = "repStopRsn"			column = "stop_rsn"/>
		<result property = "repRemark"			column = "remark"/>
		<result property = "repStopRsnNm"		column = "repStopRsnNm"/>
		<result property = "drawType"			column = "drawType"/>
	</resultMap>

	<!--  ############################## Query Statement Define ############################## -->
	<sql id="berthSql">
		(CASE
			WHEN (ATB IS NOT NULL AND ATB <![CDATA[<>]]> '') THEN ATB
			WHEN (ETB IS NOT NULL AND ETB <![CDATA[<>]]> '') THEN ETB
			ELSE ISNULL(ETA, SYSDATETIME())
		END)
	</sql>

	<sql id="unBerthSql">
		(CASE
			WHEN (ATU IS NOT NULL AND ATU <![CDATA[<>]]> '') THEN ATU
			WHEN (ETU IS NOT NULL AND ETU <![CDATA[<>]]> '') THEN ETU
			ELSE ISNULL(ETD, SYSDATETIME())
		END)
	</sql>

	<sql id="berthStatusSql">
		(CASE
			WHEN( ISNULL((
						SELECT
							'Y'
						FROM
							TMT_CONFM_SLP
						WHERE
							VSL_CALL_ID = A.VSL_CALL_ID
							AND (SUMIT_DT IS NOT NULL AND SUMIT_DT <![CDATA[<>]]> '')), 'N') = 'N'
							AND (A.ATB IS NULL OR A.ATB = '')
							AND (A.ATU IS NULL OR A.ATU = ''))
				THEN 'BBN'
			WHEN( ISNULL((
						SELECT
							'Y'
						FROM
							TMT_CONFM_SLP
						WHERE
							VSL_CALL_ID = A.VSL_CALL_ID
							AND (SUMIT_DT IS NOT NULL AND SUMIT_DT <![CDATA[<>]]> '')), 'N') = 'Y'
							AND (A.ATB IS NULL OR A.ATB = '')
							AND (A.ATU IS NULL OR A.ATU = ''))
				THEN 'BBY'
			WHEN ((A.ATB IS NOT NULL AND A.ATB <![CDATA[<>]]> '') AND (A.ATU IS NULL OR A.ATU = ''))
				THEN 'ONB'
			WHEN (A.ATU IS NOT NULL AND A.ATU <![CDATA[<>]]> '')
				THEN 'DPV'
		END)
	</sql>

	<select id="selectBerthPlanList"  parameterType="berthPlanParm" resultMap="berthPlanList">
		SELECT /*berthPlan.selectBerthPlanList*/
			A.VSL_CALL_ID           							AS VSL_CALL_ID,
			A.SHIP_CALL_NO          							AS SHIP_CALL_NO,
			A.INB_VOY               							AS INB_VOY,
			A.OUTB_VOY              							AS OUTB_VOY,
			A.BERTH_LOC             							AS BERTH_LOC,
			C.BERTH_TP											AS BERTH_TP,
			A.SUMMIT_STAT           							AS SUMMIT_STAT,
			A.ETA 												AS ETA,
			A.ETD 												AS ETD,
			A.ETW 												AS ETW,
			A.ETC 												AS ETC,
			A.ETB 												AS ETB,
			A.ETU 												AS ETU,
			A.ATW 												AS ATW,
			A.ATC 												AS ATC,
			A.ATB 												AS ATB,
			A.ATU 												AS ATU,
			A.ATD 												AS ATD,
			A.ATA 												AS ATA,
			A.INB_SERV_LANE         							AS INB_SERV_LANE,
			A.OUTB_SERV_LANE        							AS OUTB_SERV_LANE,
			A.ARRV_SA_ID            							AS ARRV_SA_ID,
			FORMAT(A.PILOT_ONBOARD,'dd/MM/yyyy') 				AS PILOT_ON_BOARD,
			FORMAT(A.PILOT_DISEMBARK,'dd/MM/yyyy') 				AS PILOT_DISEMBARK,
			ISNULL(A.BERTH_ALONGSIDE, 'P') 						AS BERTH_ALONGSIDE,
			ISNULL(A.WHARF_MARK_FROM, 0) 						AS WHARF_MARK_FROM,
			ISNULL(A.WHARF_MARK_TO, 0)   						AS WHARF_MARK_TO,
			B.VSL_NM                							AS VSL_NM,
			B.CALL_SIGN             							AS CALL_SIGN,
			B.LOA                   							AS LOA,
			A.BERTH_DIV             							AS BERTH_DIV,
			C.PST_STA               							AS PST_STA,
			C.LENGTH                							AS LENGTH,
			ISNULL(A.BERTH_PLAN_YN,'N')  						AS BERTH_PLAN_YN,
			ISNULL(A.PLAN_RMK, ' ')    							AS PLAN_RMK,
			''													AS PLAN_TYPE,
			A.BERTH_LABEL,
			A.ARRV_FWD_DRF										AS ARRV_FWD_DRF,
			A.ARRV_AFTER_DRF									AS ARRV_AFTER_DRF,
			A.DEPT_FWD_DRF										AS DEPT_FWD_DRF,
			A.DEPT_AFTER_DRF									AS DEPT_AFTER_DRF,
			A.RMK 												AS RMK,
			A.DELAY_RSN_CD										AS DELAY_RSN_CD
		<if test="berthStatus == null or berthStatus == ''">
			,<include refid="berthStatusSql"/>  				AS VSL_STAT
		</if>
		<if test="berthStatus != null and berthStatus != ''">
			,#{berthStatus} 									AS VSL_STAT
		</if>
		FROM (
			SELECT
				*
			FROM
				TMT_VSL_SCH
			WHERE (
		<include refid="berthSql"/>
				BETWEEN #{etaFrom} AND DATEADD(DAY, 1, CONVERT(DATE, #{etaTo}))
			<if test="viewMode != null and viewMode == 'auto'">
				OR (((ATB IS NOT NULL AND ATB <![CDATA[<>]]> '')
						AND
					(ATU IS NULL OR ATU = ''))
						AND
					SYSDATETIME() BETWEEN #{etaFrom} AND AND DATEADD(DAY, 1, CONVERT(DATE, #{etaTo})))
			</if>
				)
				AND SUMMIT_STAT 								= 'AP'
			<if test=" (berthStatus != null and berthStatus != '' and berthStatus != 'DPV')  and (vslCallId == null or vslCallId == '')">
				AND	(ATU IS NULL OR ATU = '')
			</if>
				AND BERTH_LOC IN (SELECT
										BERTH_CD
									FROM
										TMT_BERTH_LOC
									WHERE
										LOC_CD ='BBT')
				UNION
				SELECT
					*
				FROM
					TMT_VSL_SCH
				WHERE (
				<include refid="unBerthSql"/>
					BETWEEN #{etaFrom} AND DATEADD(DAY, 1, CONVERT(DATE, #{etaTo}))
				<if test="viewMode != null and viewMode == 'auto'">
					OR (((ATB IS NOT NULL AND ATB <![CDATA[<>]]> '')
							AND
						(ATU IS NULL OR ATU = ''))
							AND
						SYSDATETIME() BETWEEN #{etaFrom} AND DATEADD(DAY, 1, CONVERT(DATE, #{etaTo})))
		</if>
		)
			AND SUMMIT_STAT 									= 'AP'
		<if test="berthStatus != null and berthStatus != '' and berthStatus != 'DPV' ">
			AND	(ATU IS NULL OR ATU = '')
		</if>
			AND BERTH_LOC IN (
							SELECT
								BERTH_CD
							FROM
								TMT_BERTH_LOC
							WHERE
								LOC_CD ='BBT')
		) 														A,
		TMT_VSL_PART 											B,
		(SELECT
			BERTH_TP,
			BERTH_CD,
			PST_STA,
			LENGTH
		FROM
			TMT_BERTH_LOC
		WHERE (BERTH_TP IS NOT NULL AND BERTH_TP <![CDATA[<>]]> '')
		) 														C
		WHERE
			A.VSL_CD 											= B.VSL_CD
			AND A.BERTH_LOC 									= C.BERTH_CD
		<if test="berthStatus != null and berthStatus != '' and (vslCallId == null or vslCallId == '')">
			AND	<include refid="berthStatusSql"/> 				= #{berthStatus}
		</if>
		<if test='plan != null and plan == "Y"'>
			AND ISNULL(A.BERTH_PLAN_YN,'N') 					= #{plan}
		</if>
		<if test="vslCallId == null or vslCallId == ''">
			<if test='searchType == null'>
				AND C.BERTH_TP 									= #{viewType}
			</if>
			<if test='searchType != null and searchType == "B"'>
				AND C.BERTH_TP 									= 'WRF'
			</if>
			<if test='searchType != null and searchType == "L"'>
				AND (C.BERTH_TP = 'EDJ' OR C.BERTH_TP = 'NDJ')
			</if>
		</if>
		<if test="vslCallId != null and vslCallId != ''">
			AND A.VSL_CALL_ID 									= #{vslCallId}
		</if>
		<if test="scn != null and scn != ''">
			AND A.SHIP_CALL_NO 									= #{scn}
		</if>
		ORDER BY
				A.ETA DESC
	</select>

	<select id="selectBerthInfoList" parameterType="berthPlanParm" resultMap="berthStructureList">
		SELECT 	/*berthPlan.selectBerthInfoList*/
				'MMC'						AS AREA,
				BERTH_TP 					AS BERTHTP,
				BERTH_CD 					AS BERTHCD,
				PST_STA 					AS PSTSTA,
				PST_END 					AS PSTEND,
				LENGTH						AS LENGTH,
				0							AS DRAWABLE,
				ISNULL(DISPLACEMENT, 0)	AS DISPLACEMENT,
				MAX_DRAFT					AS MAX_DRAFT,
				ISNULL(BERTH_DEPT, 0)		AS BERTH_DEPT,
				ISNULL((SELECT STRING_AGG(EQ_FAC_NM,',') FROM TMT_EQ_FAC WHERE LOC = B.LOC_CD), '')	 AS EQUIPMENTS
		FROM 	TMT_BERTH_LOC B
		WHERE	LOC_CD IN ('BBT')
				AND BERTH_TP IN (SELECT S_CD FROM TMT_CD_MSTD WHERE L_CD = 'CM' AND M_CD = 'BERTHTP' AND S_CD_USE = 'Y')
		ORDER BY
				BERTH_TP,
				PST_END,
				BERTH_CD
	</select>
	
	<select id="selectBerthMaintenanceList" parameterType="berthPlanParm" resultMap="berthMaintenanceList">
		SELECT 	/*berthPlan.selectBerthMaintenanceList*/
				berth,
			   berth_tp,
		       from_bitt,
		       to_bitt,
		       from_meter,
		       to_meter,
		       stop_stime,
		       stop_etime,
		       stop_rsn,
		       remark,
		       dbo.F_CM_CODE_NM('MT', 'STOPPGRSN',STOP_RSN) AS repStopRsnNm,
		       'R' AS drawType
		  FROM TMT_REP_BERTH
		  WHERE (stop_stime BETWEEN #{etaFrom} AND DATEADD(SECOND, -1, DATEADD(DAY, 1, #{etaTo})))
   			OR (stop_etime BETWEEN #{etaFrom} AND DATEADD(SECOND, -1, DATEADD(DAY, 1, #{etaTo})))
		 ORDER BY stop_stime
	</select>

	<sql id="shftStatusSql">
		(CASE
			WHEN( ISNULL((
							SELECT
								'Y'
							FROM
								TMT_CONFM_SLP
							WHERE
								VSL_CALL_ID = A.VSL_CALL_ID
								AND (SUMIT_DT IS NOT NULL AND SUMIT_DT <![CDATA[<>]]> '')),'N') = 'N'
								AND (A.ATB IS NULL OR A.ATB = '')
								AND (A.ATU IS NULL OR A.ATU = ''))
				THEN 'BBN'
			WHEN( ISNULL((
							SELECT
								'Y'
							FROM
								TMT_CONFM_SLP
							WHERE
								VSL_CALL_ID = A.VSL_CALL_ID
								AND (SUMIT_DT IS NOT NULL AND SUMIT_DT <![CDATA[<>]]> '')),'N') = 'Y'
								AND (A.ATB IS NULL OR A.ATB = '')
								AND (A.ATU IS NULL OR A.ATU = ''))
				THEN 'BBY'
			WHEN ((A.ATB IS NOT NULL AND A.ATB <![CDATA[<>]]> '') AND (A.ATU IS NULL OR A.ATU = ''))
				THEN 'ONB'
			WHEN (A.ATU IS NOT NULL AND A.ATU <![CDATA[<>]]> '')
				THEN 'DPA'
			END)
	</sql>

	<select id="selectShftPlanList"  parameterType="berthPlanParm" resultMap="berthPlanList">
		SELECT /*berthPlan.selectShftPlanList*/
			A.VSL_CALL_ID                       				AS VSL_CALL_ID,
			A.BERTH_LOC                     					AS BERTH_LOC,
			ISNULL((
				SELECT
					PST_STA
				FROM
					TMT_BERTH_LOC
				WHERE
					BERTH_TP IS NOT NULL AND BERTH_TP <![CDATA[<>]]> ''
					AND BERTH_CD 								= A.BERTH_LOC
					AND BERTH_TP 								= #{viewType}
			), 0) 												AS PST_STA,
			A.ETA,
			A.ETD,
			A.ETB,
			A.ETU,
			A.ATB,
			A.ATU,
			CONVERT(DATE, A.SHFATB, 103) 											AS SHF_ATB,
			A.SHFATU 											AS SHF_ATU,
			A.BERTH_ALONGSIDE                   				AS BERTH_ALONGSIDE,
			A.PLAN_YN                           				AS PLAN_YN,
			CONVERT(NVARCHAR, ISNULL(A.WHARF_MARK_FROM, 0))   	AS WHARF_MARK_FROM,
			CONVERT(NVARCHAR, ISNULL(A.WHARF_MARK_TO, 0))     	AS WHARF_MARK_TO,
			A.VSL_NM                            				AS VSL_NM,
			A.CALL_SIGN                         				AS CALL_SIGN,
			A.LOA                               				AS LOA,
			ISNULL(A.RMK, ' ')                     				AS PLAN_RMK,
			CASE
				WHEN A.ATB IS NOT NULL AND A.ATB <![CDATA[<>]]> '' THEN 'B0B0B0'
				ELSE ' '
			END													AS COLCOLOR,
			'SHFTPLAN'											AS PLAN_TYPE
			<if test="berthStatus == null or berthStatus == ''">
				, <include refid="shftStatusSql"/>  			AS VSL_STAT
			</if>
			<if test="berthStatus != null and berthStatus != ''">
				, #{berthStatus} 								AS VSL_STAT
			</if>
		FROM (
				SELECT
					B.VSL_CALL_ID AS VSL_CALL_ID,
					CASE B.BERTH_PLAN_YN
						WHEN 'Y' THEN B.ETB_DT
						ELSE B.REQ_DT
					END											AS ETB,
					CASE B.BERTH_PLAN_YN
						WHEN 'Y' THEN B.ETU_DT
						ELSE DATEADD(DAY, 1, B.REQ_DT)
					END 										AS ETU,
					'' 											AS SHFATB,
					B.ATU_DT 									AS SHFATU,
					B.ATB_DT 									AS ATB,
					B.PREV_ATB_DT 								AS PREV_ATB,
					B.ATU_DT 									AS ATU,
					B.PREV_ATU_DT 								AS PREV_ATU,
					B.BERTH_ALONGSIDE,
					B.BERTH_PLAN_YN 							AS PLAN_YN,
					CASE B.BERTH_PLAN_YN
						WHEN 'Y' THEN B.PLAN_WHARF_MARK_FM
						ELSE ISNULL((
									SELECT
										PST_STA
									FROM
										TMT_BERTH_LOC
									WHERE
										BERTH_CD = B.NX_BERTH_NO), 0)
					END 										AS WHARF_MARK_FROM,
					CASE B.BERTH_PLAN_YN
						WHEN 'Y' THEN B.PLAN_WHARF_MARK_TO
						ELSE ISNULL((
									SELECT
										PST_END
									FROM
										TMT_BERTH_LOC
									WHERE
										BERTH_CD = B.NX_BERTH_NO), 0)
					END 										AS WHARF_MARK_TO,
					CASE B.BERTH_PLAN_YN
						WHEN 'Y' THEN B.PLAN_BERTH_NO
						ELSE B.NX_BERTH_NO
					END 										AS BERTH_LOC,
					B.REQ_DT,
					B.RMK,
					D.ETA,
					D.ETD,
					E.VSL_NM,
					E.CALL_SIGN,
					E.LOA
				FROM
					TMT_VSL_SHFT 									B,
				(SELECT
					VSL_CALL_ID,
					MAX(SEQ) 										SEQ
				FROM
					TMT_VSL_SHFT
				WHERE
					(REQ_DT IS NOT NULL AND REQ_DT <![CDATA[<>]]> '')
					AND (APPRV_DT IS NOT NULL AND APPRV_DT <![CDATA[<>]]> '')
				GROUP BY
					VSL_CALL_ID
				) 													C,
				TMT_VSL_SCH 										D,
				TMT_VSL_PART 										E
		WHERE
			B.VSL_CALL_ID 											= C.VSL_CALL_ID
			AND B.SEQ 												= C.SEQ
			AND C.VSL_CALL_ID 										= D.VSL_CALL_ID
			AND D.VSL_CD 											= E.VSL_CD
		<if test="berthStatus == null or berthStatus == ''  and (vslCallId != null and vslCallId != '')">
			AND (B.ATU_DT IS NULL OR B.ATU_DT = '')
		</if>
			AND ((CASE
					WHEN (B.ATB_DT IS NOT NULL AND B.ATB_DT <![CDATA[<>]]> '') THEN B.ATB_DT
					WHEN (CASE B.BERTH_PLAN_YN
								WHEN 'Y' THEN B.ETB_DT
								ELSE B.REQ_DT
							END)
						IS NOT NULL AND (CASE B.BERTH_PLAN_YN
											WHEN 'Y' THEN B.ETB_DT
											ELSE B.REQ_DT
										END) <![CDATA[<>]]> '' THEN (CASE B.BERTH_PLAN_YN
																		WHEN 'Y' THEN B.ETB_DT
																		ELSE B.REQ_DT
																	END)
				END
				BETWEEN #{etaFrom} AND DATEADD(HOUR, 23, DATEADD(MINUTE, 59, CONVERT(DATETIME, #{etaTo}))))
				OR
				(CASE
					WHEN (B.ATU_DT IS NOT NULL AND B.ATB_DT <![CDATA[<>]]> '') THEN B.ATU_DT
					WHEN ((CASE B.BERTH_PLAN_YN
								WHEN 'Y' THEN B.ETU_DT
								ELSE B.REQ_DT
							END) IS NOT NULL AND (CASE B.BERTH_PLAN_YN
														WHEN 'Y' THEN B.ETU_DT
														ELSE B.REQ_DT
													END) <![CDATA[<>]]> '') THEN (CASE B.BERTH_PLAN_YN
																						WHEN 'Y' THEN B.ETU_DT
																						ELSE B.REQ_DT
																					END)
					WHEN (D.ETU IS NOT NULL AND D.ETU <![CDATA[<>]]> '') THEN D.ETU
				END
				BETWEEN #{etaFrom} AND DATEADD(HOUR, 23, DATEADD(MINUTE, 59, CONVERT(DATETIME, #{etaTo}))))
				)
		<if test="viewMode != null and viewMode == 'auto'">
			OR ((
				(ATB_DT IS NOT NULL AND ATB_DT <![CDATA[<>]]> '')
					AND
				(ATU_DT IS NULL OR ATU_DT = ''))
					AND
				SYSDATETIME()
				BETWEEN #{etaFrom} AND DATEADD(HOUR, 23, DATEADD(MINUTE, 59, CONVERT(DATETIME, #{etaTo}))))
		</if>
		) A
		WHERE
			(A.VSL_CALL_ID IS NOT NULL AND A.VSL_CALL_ID <![CDATA[<>]]> '')
		<if test="berthStatus != null and berthStatus != '' and (vslCallId == null or vslCallId == '')">
			AND	<include refid="shftStatusSql"/> 					= #{berthStatus}
		</if>
			AND EXISTS (
					SELECT
						BERTH_TP
					FROM
						TMT_BERTH_LOC
					WHERE
						(BERTH_TP IS NOT NULL AND BERTH_TP <![CDATA[<>]]> '')
						AND BERTH_CD 			= A.BERTH_LOC
						AND BERTH_TP 			= #{viewType})
		ORDER BY
			A.REQ_DT DESC
	</select>

	<update id="updateItemsBerthPlan"  parameterType="berthPlanItem">
		<if test="planType == 'SHFTPLAN'">
			UPDATE /*berthPlan.updateItemsBerthPlan*/
				TMT_VSL_SHFT
			SET
				ETB_DT 											= CONVERT(DATETIME, #{etb}, 103),
				ETU_DT 											= CONVERT(DATETIME, #{etu}, 103),
				PLAN_WHARF_MARK_FM 								= CONVERT(INT, #{startPos}),
				PLAN_WHARF_MARK_TO 								= CONVERT(INT, #{endPos}),
				BERTH_ALONGSIDE    								= #{berthAlongside},
				BERTH_PLAN_YN      								= 'Y',
				PLAN_BERTH_NO      								= #{berthCd},
				RMK                								= #{remarks},
				UPD_DT             								= SYSDATETIME(),	-- NOT FOUND
				UPD_USER_ID        								= #{userId},		-- NOT FOUND
				VERSION           								= #{newVersion}
			WHERE
				VSL_CALL_ID 									= #{vslCallId}
				AND SEQ =
						(SELECT
							MAX(SEQ) 							AS SEQ
						FROM
							TMT_VSL_SHFT
						WHERE
							VSL_CALL_ID 						= #{vslCallId}
							AND (REQ_DT IS NOT NULL AND REQ_DT <![CDATA[<>]]> '')
							AND (SVC_ID IS NOT NULL AND SVC_ID <![CDATA[<>]]> '')		-- COLUMN NOT FOUND FOR BOTH
							AND (APPRV_DT IS NOT NULL AND APPRV_DT <![CDATA[<>]]> ''))
		</if>
		<if test="planType != 'SHFTPLAN'">
			UPDATE /*berthPlan.updateItemsBerthPlan*/
				TMT_VSL_SCH
			SET
				ETB 											= #{etb},
				ETU 											= #{etu},
				ATB 											= #{atb},
				ATU 											= #{atu},
				ETD 											= #{etd},
				ETW 											= #{etw},
				ETC 											= #{etc},
				ATW 											= #{atw},
				ATC 											= #{atc},
				WHARF_MARK_FROM 								= #{startPos},
				WHARF_MARK_TO									= #{endPos},
				BERTH_ALONGSIDE 								= #{berthAlongside},
				BERTH_PLAN_YN   								= 'Y',
				BERTH_LOC       								= #{berthCd},
				PLAN_RMK        								= #{remarks},
				ARRV_AFTER_DRF 									= #{arrvAfterDrf},
				ARRV_FWD_DRF 									= #{arrvFwdDrf},
				DEPT_AFTER_DRF 									= #{depAfterDrf},
				DEPT_FWD_DRF 									= #{depFwdDrf},
				UPDATE_TIME 									= SYSDATETIME()
			WHERE
				VSL_CALL_ID 									= #{vslCallId}
		</if>
	</update>

	<select id="selectDrawBittList"  parameterType="berthPlanParm" resultMap="bittStructureList">
		SELECT /*berthPlan.selectDrawBittList*/
			A.TMNL 												AS tmnl_cd,
			A.BERTH_TP 											AS berth_tp,
			B.BERTH_CD 											AS berth_cd,
			B.BITT_CD 											AS bitt_cd,
			B.X 												AS xpos,
			B.Y 												AS ypos
		FROM
			TMT_BERTH_LOC 										A,
			TMT_BITT_LOC 										B
		WHERE
			A.BERTH_CD 											= B.BERTH_CD
		<if test="berthLoc != null and berthLoc != ''">
			AND B.BERTH_CD 										= #{berthLoc}
		</if>
		ORDER BY
			xpos
	</select>

	<select id="selectPartnerInformationList"  parameterType="berthPlanParm" resultMap="PartnerInformationMap">
		SELECT /*berthPlan.selectPartnerInformationList*/
			A.ENG_SNM 											AS engSnm,
			A.AGENCY_CODE 										AS agencyCode,
			CASE A.C_STATUS
				WHEN 'Y' THEN 'Active'
				ELSE 'Inactive'
			END 	 											AS companyStatus,
			REPRESENTATIVE 										AS contactPerson,
			A.ADDR 												AS addr,
			A.TEL_NO 											AS telNo,
			A.FAX_NO 											AS faxNo,
			'' 													AS homepage,
			A.EMAIL 											AS email,
			A.CUSTOM_REF 										AS licNo,	
			A.PAYMENT_TYPE 										AS paymentType,
			ISNULL(A.CREDIT_LIMIT, 0)							AS creditLimit,
			ISNULL(A.BAL,0)										AS outstanding,
			ISNULL(A.CREDIT_LIMIT, 0) - ISNULL(A.BAL, 0)		AS balance,
			'' 													AS bankName,
			A.ACC_NO 											AS accNo,
			A.RMK	 											AS remark
		FROM
			TMT_AGENCY_INFO 									A
		WHERE
			A.AGENCY_CODE 										= #{agencyCode}
	</select>

	<select id="selectBusinessHistoryList"  parameterType="berthPlanParm" resultType="berthPlanItem">
		SELECT /*berthPlan.selectBusinessHistoryList*/
			*
		FROM
			(SELECT
				'VV'  											AS BILLTPCD,
				DBO.F_CM_CODE_NM('MT', 'BILLINGTP', 'VV')   	AS BILLTP,
				A.VSL_CALL_ID                                  	AS VSLCALLID,
				MAX(B.VSL_NM)                                 	AS VSLNM,
				MAX(A.ATU)     									AS ATU,
				MAX(A.ATC)     									AS ATC,
				MAX(A.ATB)     									AS ATB,
				MAX(A.ATW)    									AS ATW,
				MAX(C.OPE_TP_CD)                              	AS HANDLINGTYPE,
				MAX(A.CARGO_TP_MPTS) 							AS CARGOTYPECD,
				DBO.F_CM_CODE_NM(
					'MT',
					'CGTP',
					MAX(A.CARGO_TP)
				)												AS CARGOTYPE,
				SUM(IV.IV_AMT)                                	AS AMOUNT,
				(CASE ISNULL(SUM(IV.IV_AMT), 0)
					WHEN 0 THEN 'PAID'
					ELSE 'HOLD'
				END)											AS STATUS,
				ISNULL(SUM(IV.IV_AMT), 0)    					AS BALANCE,
				0                               				AS PAMENTDT
			FROM
				TMT_VSL_SCH                     				A
			INNER JOIN
				TMT_VSL_PART                     				B
					ON A.VSL_CD                					= B.VSL_CD
			INNER JOIN
				TMT_B_IV										IV
					ON A.VSL_CALL_ID                			= IV.VSL_CALL_ID
			LEFT OUTER JOIN 
				TMT_CONFM_SLP 									C
			ON 
				A.VSL_CALL_ID                					= C.VSL_CALL_ID
			WHERE
				IV.PAYER                     					= #{agencyCode}
			GROUP BY
				A.VSL_CALL_ID
			UNION
			SELECT
				'NV'  											AS BILLTPCD,
				DBO.F_CM_CODE_NM('MT', 'BILLINGTP', 'NV')		AS BILLTP,
				MAX(DT.TRF_DESCR)            					AS VSLCALLID,
				NULL                                 			AS VSLNM,
				NULL      										AS ATU,
				NULL      										AS ATC,
				NULL      										AS ATB,
				NULL      										AS ATW,
				NULL 											AS HANDLINGTYPE,
				NULL 											AS CARGOTYPECD,
				NULL 											AS CARGOTYPE,
				SUM(IV.IV_AMT)                             		AS AMOUNT,
				CASE ISNULL(SUM(IV.IV_AMT), 0)
					WHEN 0 THEN 'PAID'
					ELSE 'HOLD'
				END 											AS STATUS,
				ISNULL(SUM(IV.IV_AMT), 0) 						AS BALANCE,
				0                               				AS PAMENTDT
			FROM
				TMT_B_IV                       					IV
			INNER JOIN
				TMT_B_IV_DATA                       			DT
					ON IV.IV_NO                       			= DT.IV_NO
			WHERE
				IV.PAYER                       					= #{agencyCode}
				AND (IV.VSL_CALL_ID IS NULL OR IV.VSL_CALL_ID = #{vslCallId})
			GROUP BY
				IV.IV_NO
		) 														AS BH
		WHERE
			1 = 1
		<if test="vslNm != null and vslNm != ''">
			AND	BH.VSLNM 										LIKE '%' + #{vslNm} + '%'
		</if>
		<if test="vslCallId != null and vslCallId != ''">
			AND BH.VSLCALLID 									= #{vslCallId}
		</if>
		<if test="billingType != null and billingType != ''">
			AND BH.BILLTPCD 									= #{billingType}
		</if>
		<if test="cargoType != null and cargoType != ''">
			AND BH.CARGOTYPECD 									= #{cargoType}
		</if>
		<if test="fromDt != null and fromDt != ''">
			AND CONVERT(DATETIME, ATB, 103) <![CDATA[ >= ]]> CONVERT(DATETIME, #{fromDt}, 103)
		</if>
		<if test="toDt != null and toDt != ''">
			AND CONVERT(DATETIME, ATB, 103) <![CDATA[ < ]]> DATEADD(DAY, 1, CONVERT(DATETIME, #{toDt}, 103))
		</if>
	</select>

	<select id="selectVesselInformation"  parameterType="berthPlanParm" resultType="berthPlanItem">
		SELECT /*berthPlan.selectVesselInformation*/
			B.VSL_NM 	   										AS vslNm,
			DBO.F_GET_OPE_TP(A.VSL_CALL_ID) 					AS opeTp,
			A.VSL_CALL_ID 	   									AS vslCallId,
			B.LOA 		   										AS loa,
			DBO.F_CM_CODE_NM('MT', 'CGTP', A.CARGO_TP_MPTS)		AS cgTp,
			A.LOAD_CARGO 		   								AS loadCargo,
			A.ETW 												AS etw,
			A.ETA 												AS eta,
			A.ETC												AS etc,
			A.ETD 												AS etd,
			A.DISCH_CARGO 					   			 		AS dischargeCargo
		FROM
			TMT_VSL_SCH 										A,		
			TMT_VSL_PART 										B		
		WHERE
			A.VSL_CD 											= #{vslCd}
		  	AND A.CALL_YEAR 									= #{callYear}
		  	AND A.CALL_SEQ  									= #{callSeq}
		  	AND A.VSL_CD  										= B.VSL_CD
	</select>
	
	<select id="selectPartnerType"   							resultType="berthPlanItem">
		SELECT /* berthPlan.selectPartnerType */
			PTNR_TYPE 											AS ptnrType
		FROM 
			TMT_AGENCY_INFO
		WHERE  
			AGENCY_CODE 										= #{agencyCode}
			
		UNION
		
		SELECT 
			PTNR_TYPE 											AS ptnrType
		FROM 
			TMT_PTNR
		WHERE 
			PTNR_CODE 											= #{agencyCode}
	</select>
	
	<select id="selectNextBerthPlan"  parameterType="BerthPlanParm" resultMap="berthPlanList">
		/* selectNextBerthPlan */
		SELECT 
		    M.BERTH_LOC AS BERTH_LOC, 
		    CONVERT(DATETIME, M.ETA, 120) AS ETA, 
		    M.VSL_CALL_ID AS JPVC_NO,
		    TRIM(P.VSL_NM) AS VSL_NM,
		    (
		        SELECT ISNULL(SUM(CG_WGT), 0) 
		        FROM TMT_BL B 
		        WHERE M.VSL_CALL_ID = B.VSL_CALL_ID
		    ) AS DISCHARGING,
		    (
		        SELECT TOP 1 C.CMDT_CD 
		        FROM TMT_BL B 
		        INNER JOIN TMT_CMDT C ON B.CMDT_CD = C.CMDT_CD 
		        WHERE M.VSL_CALL_ID = B.VSL_CALL_ID
		    ) AS DISCHARGING_CMDT,  
		    (
		        SELECT ISNULL(SUM(CG_WGT), 0) 
		        FROM TMT_SHIPG_NOTE SN 
		        WHERE M.VSL_CALL_ID = SN.VSL_CALL_ID
		    ) AS LOADING,
		    (
		        SELECT TOP 1 C.CMDT_CD 
		        FROM TMT_SHIPG_NOTE B 
		        INNER JOIN TMT_CMDT C ON B.CMDT_CD = C.CMDT_CD 
		        WHERE M.VSL_CALL_ID = B.VSL_CALL_ID
		    ) AS LOADING_CMDT                            
		FROM
		(
		    SELECT  
		        BERTH_LOC, 
		        LEFT(ETA_JPVC, 14) AS ETA, 
		        RIGHT(ETA_JPVC, LEN(ETA_JPVC) - 15) AS VSL_CALL_ID 
		    FROM (
		        SELECT 
		            SCH.BERTH_LOC,  
		            MIN(CONVERT(VARCHAR, ETA, 112) + 
		                CONVERT(VARCHAR, ETA, 108) + '-' + VSL_CALL_ID) AS ETA_JPVC
		        FROM TMT_VSL_SCH SCH 
		        INNER JOIN TMT_BERTH_LOC LOC ON SCH.BERTH_LOC = LOC.BERTH_CD 
		        WHERE ETA > DATEADD(SECOND, 86399, #{etaTo}) AND LOC.LOC_CD = 'BBT'
		        GROUP BY SCH.BERTH_LOC
		    ) AS Subquery
		) AS M 
		INNER JOIN TMT_VSL_SCH S ON M.VSL_CALL_ID = S.VSL_CALL_ID
		INNER JOIN TMT_VSL_PART P ON S.VSL_CD = P.VSL_CD
	</select>
	
	<select  id="selectVesselScheduleData"  parameterType="VesselScheduleParm" resultMap="berthPlanList">
           /* selectVesselScheduleData */
		SELECT 'SN' AS TYPE, 
		       SHIPG_NOTE_NO AS SHIPG_NOTE_NO,
		       ISNULL(A.SHPR, '') AS SHPR,
		       CG_WGT AS CG_WGT,
		       A.CMDT_CD AS SNCMDTCD,
		       (SELECT TOP 1 CMDT_DESC FROM TMT_CMDT WHERE CMDT_CD = A.CMDT_CD) AS SNCMDTCDNM,
		       '' AS CNSNEECD,
		       '' AS CNSNORCD,
		       '' AS FNCMDTCD,
		       '' AS FNCMDTCDNM,
		       '' AS eqTpCd,
		       '' AS MEGANO,
		       '' AS STVDCOMP,
		       '' AS TRMGCOMP,
		       '' AS BLNO,
		       0 AS WGT,
		       '' AS HATCHNO,
		       0 AS D_BLOADING,
		       0 AS D_BDISCHARGING
		FROM TMT_SHIPG_NOTE A
		WHERE A.VSL_CALL_ID IS NOT NULL
		    AND A.VSL_CALL_ID = #{vslCallId}
		UNION ALL
		SELECT 'BL' AS TYPE,
		       '' AS SHIPG_NOTE_NO,
		       '' AS SHPR,
		       0 AS CG_WGT,
		       '' AS SNCMDTCD,
		       '' AS SNCMDTCDNM,
		       ISNULL(BL.CNSNE, '') AS CNSNEECD,
		       ISNULL(BL.SHPR, '') AS CNSNORCD,
		       BL.CMDT_CD AS FNCMDTCD,
		       (SELECT TOP 1 CMDT_DESC FROM TMT_CMDT WHERE CMDT_CD = BL.CMDT_CD) AS FNCMDTCDNM,
		       '' AS eqTpCd,
		       '' AS MEGANO,
		       '' AS STVDCOMP,
		       '' AS TRMGCOMP,
		       '' AS BLNO,
		       0 AS WGT,
		       '' AS HATCHNO,
		       0 AS D_BLOADING,
		       0 AS D_BDISCHARGING
		FROM TMT_BL BL
		WHERE BL.VSL_CALL_ID = #{vslCallId}
		UNION ALL
		SELECT 'EQTP' AS TYPE,
		       '' AS SHIPG_NOTE_NO,
		       '' AS SHPR,
		       0 AS CG_WGT,
		       '' AS SNCMDTCD,
		       '' AS SNCMDTCDNM,
		       '' AS CNSNEECD,
		       '' AS CNSNORCD,
		       '' AS FNCMDTCD,
		       '' AS FNCMDTCDNM,
		       ISNULL(C.EQ_TP_CD, ' ') AS eqTpCd,
		       '' AS MEGANO,
		       '' AS STVDCOMP,
		       '' AS TRMGCOMP,
		       '' AS BLNO,
		       0 AS WGT,
		       '' AS HATCHNO,
		       0 AS D_BLOADING,
		       0 AS D_BDISCHARGING
		FROM TMT_VSL_OPE_RPT O
		LEFT JOIN TMT_VSL_OPE_RPT_DTL ORD ON O.VSL_CALL_ID = ORD.VSL_CALL_ID
		LEFT JOIN TMT_EQ_FAC C ON ORD.EQ_FAC_NO = C.EQ_FAC_NO
		LEFT JOIN TMT_EQ_FAC D ON ORD.EQ_FAC_NO2 = D.EQ_FAC_NO
		WHERE (ORD.CG_TP_CD = 'BBK' OR ORD.CG_TP_CD = 'DBK')
		      AND ORD.VSL_CALL_ID = #{vslCallId}
		UNION ALL
		SELECT 'MEGA' AS TYPE,
		       '' AS SHIPG_NOTE_NO,
		       '' AS SHPR,
		       0 AS CG_WGT,
		       '' AS SNCMDTCD,
		       '' AS SNCMDTCDNM,
		       '' AS CNSNEECD,
		       '' AS CNSNORCD,
		       '' AS FNCMDTCD,
		       '' AS FNCMDTCDNM,
		       '' AS eqTpCd,
		       A.MEGA_NO AS MEGANO,
		       (SELECT TOP 1 STVD_COMP 
		        FROM TMT_MEGA_DTL 
		        WHERE MEGA_NO = B.MEGA_NO
		              AND DIV_CD = 'SD'
		              AND STVD_COMP IS NOT NULL
		             -- AND ISNULL(TALLY_YN, 'N') = 'N'
		             -- AND ISNULL(LASHING_YN, 'N') = 'N'
		              ) AS STVDCOMP,
		       (SELECT TOP 1 TRMG_COMP 
		        FROM TMT_MEGA_DTL 
		        WHERE MEGA_NO = B.MEGA_NO
		              AND DIV_CD = 'SD'
		              AND TRMG_COMP IS NOT NULL) AS TRMGCOMP,
		       '' AS BLNO,
		       0 AS WGT,
		       '' AS HATCHNO,
		       0 AS D_BLOADING,
		       0 AS D_BDISCHARGING
		FROM TMT_MEGA A
		JOIN TMT_MEGA_DTL B ON A.MEGA_NO = B.MEGA_NO
		WHERE B.DIV_CD = 'VO'
		      AND A.VSL_CALL_ID = #{vslCallId}
		UNION ALL
		SELECT 'LDWEIGHT' AS TYPE,
		       '' AS SHIPG_NOTE_NO,
		       '' AS SHPR,
		       0 AS CG_WGT,
		       '' AS SNCMDTCD,
		       '' AS SNCMDTCDNM,
		       '' AS CNSNEECD,
		       '' AS CNSNORCD,
		       '' AS FNCMDTCD,
		       '' AS FNCMDTCDNM,
		       '' AS eqTpCd,
		       '' AS MEGANO,
		       '' AS STVDCOMP,
		       '' AS TRMGCOMP,
		       BL.BL_NO AS BLNO,
		       FORMAT(CAST(30000 / 1000.0 AS NUMERIC(19, 3)), '0.###') AS WGT,
		       '' AS HATCHNO,
		       0 AS D_BLOADING,
		       0 AS D_BDISCHARGING
		FROM TMT_VSL_SCH SCH
		JOIN TMT_BL BL ON SCH.VSL_CD = BL.VSL_CD 
		               AND SCH.CALL_YEAR = BL.CALL_YEAR 
		               AND SCH.CALL_SEQ = BL.CALL_SEQ
		WHERE SCH.VSL_CALL_ID = #{vslCallId}
		UNION ALL
		SELECT 'JOB' AS TYPE,
		       '' AS SHIPG_NOTE_NO,
		       '' AS SHPR,
		       0 AS CG_WGT,
		       '' AS SNCMDTCD,
		       '' AS SNCMDTCDNM,
		       '' AS CNSNEECD,
		       '' AS CNSNORCD,
		       '' AS FNCMDTCD,
		       '' AS FNCMDTCDNM,
		       '' AS eqTpCd,
		       '' AS MEGANO,
		       '' AS STVDCOMP,
		       '' AS TRMGCOMP,
		       '' AS BLNO,
		       0 AS WGT,
		       A.HATCH_NO AS HATCHNO,
		       SUM(B.CG_WGT) AS D_BLOADING,
		       SUM(C.CG_WGT) AS D_BDISCHARGING
		FROM TMT_JOB A
		LEFT JOIN (SELECT JOB_NO, CG_WGT, HATCH_NO FROM TMT_JOB WHERE VSL_CALL_ID = #{vslCallId} AND JOB_TP_CD = 'LD' AND JOB_PURP_CD IN ('WV', 'GV', 'AV')) B 
		    ON A.HATCH_NO = B.HATCH_NO AND A.JOB_NO = B.JOB_NO
		LEFT JOIN (SELECT JOB_NO, CG_WGT, HATCH_NO FROM TMT_JOB WHERE VSL_CALL_ID = #{vslCallId} AND JOB_TP_CD = 'DS' AND JOB_PURP_CD IN ('VA', 'VG')) C
		    ON A.HATCH_NO = C.HATCH_NO AND A.JOB_NO = C.JOB_NO
		WHERE A.VSL_CALL_ID = #{vslCallId} AND A.HATCH_NO IS NOT NULL
		GROUP BY A.HATCH_NO, A.VSL_CALL_ID
	</select>

	<select id="selectSteveDorecompany" parameterType="BerthPlanParm" resultType="string">
		SELECT stvd_comp
		FROM TMT_VSL_SVC_RPT
		WHERE VSL_CALL_ID = #{vslCallId}
	</select>
	
	<select id="selectBerthInfoReport"  parameterType="BerthPlanParm" resultMap="berthStructureList">
		/* selectBerthInfoReport */
		SELECT 	'MMC'						AS AREA,
				BERTH_TP 					AS BERTHTP,
				BERTH_NM        			AS BERTHNM,
			   	BERTH_CD 					AS BERTHCD,
			   	LOC_CD 						AS LOCCD, 
		       	CAST(PST_STA AS INT) 		AS PSTSTA, 
		       	CAST(PST_END AS INT) 		AS PSTEND, 
		       	CAST(LENGTH AS INT)			AS LENGTH,
		       	0							AS DRAWABLE ,
		       	CAST(DISPLACEMENT AS INT)	AS DISPLACEMENT,
		       	CAST(MAX_DRAFT AS INT)		AS MAX_DRAFT,
		       	GRP_CD						AS GRPCD
		  FROM TMT_BERTH_LOC
		 WHERE BERTH_TP IN ( SELECT S_CD FROM TMT_CD_MSTD 
							  WHERE L_CD = 'CM' 
								AND M_CD = 'BERTHTP' 
								AND S_CD_USE = 'Y' )
		 AND LOC_CD != 'ANT'
	     <if test="viewType != null and viewType != ''">
			AND BERTH_TP = #{viewType}
		</if>
		 ORDER BY BERTH_CD
    </select>
    
    <select id="selectBittListReport" resultType="berthMaintenanceItem" parameterType="BerthPlanParm">
		/* selectBittListReport */
	 	SELECT  BERTH_CD AS berthCd,
            	BITT_CD AS bittCd,
                CAST(X AS INT) AS fromPos
        FROM TMT_BITT_LOC 
        WHERE BERTH_CD IN ( SELECT BERTH_CD
                            FROM TMT_BERTH_LOC
                            WHERE BERTH_TP IN ( SELECT S_CD FROM TMT_CD_MSTD 
                              	WHERE L_CD = 'CM' 
                                AND M_CD = 'BERTHTP' 
                                AND S_CD_USE = 'Y' )
                             AND LOC_CD != 'ANT'
                             <if test="viewType != null and viewType != ''">
								AND BERTH_TP = #{viewType}
							</if>
                          )
        ORDER BY BERTH_CD,LEN(BITT_CD),BITT_CD
	</select>
	
	<select id="selectBerthPlanReport"  parameterType="BerthPlanParm" resultMap="berthPlanList">
	/*  selectBerthPlanReport */
	WITH VSL_SCH AS
	(
		SELECT *
		FROM TMT_VSL_SCH
		WHERE (
					(
						CASE
							WHEN ATB IS NOT NULL THEN ATB
							WHEN ETB IS NOT NULL THEN ETB
							ELSE ISNULL (ETA, GETDATE())
						END
					) BETWEEN   #{etaFrom} AND   #{etaTo}
		)
		AND SUMMIT_STAT = 'AP'
		AND BERTH_LOC IN (			SELECT BERTH_CD FROM TMT_BERTH_LOC WHERE LOC_CD IN ('BBT', 'ANT', 'CRT') )
	UNION
		SELECT *
		FROM TMT_VSL_SCH
		WHERE (
					(
						CASE
							WHEN ATU IS NOT NULL THEN ATU
							WHEN ETU IS NOT NULL THEN ETU
							ELSE ISNULL (ETD, ETA + 2)
						END
					) BETWEEN  #{etaFrom} AND    #{etaTo}
		)
		AND SUMMIT_STAT = 'AP'
		AND BERTH_LOC IN (		SELECT BERTH_CD FROM TMT_BERTH_LOC WHERE LOC_CD IN ('BBT', 'ANT', 'CRT') )
	)
	SELECT
				A.VSL_CALL_ID			VSL_CALL_ID,
				A.SHIP_CALL_NO          SHIP_CALL_NO,
				A.INB_VOY               INB_VOY,
				A.OUTB_VOY              OUTB_VOY,
				A.BERTH_LOC             BERTH_LOC,
				C.BERTH_TP				BERTH_TP,
				A.SUMMIT_STAT           SUMMIT_STAT,
				A.ETA ETA,
				ISNULL (A.ETD, A.ETA + 2) ETD,
				A.ETW ETW,
				A.ETC ETC,
				A.ETB ETB,
				A.ETU ETU,
				A.ATW ATW,
				A.ATC ATC,
				A.ATB ATB,
				A.ATU ATU,
				A.ATD ATD,
				A.ATA ATA,
				A.INB_SERV_LANE         INB_SERV_LANE,
				A.OUTB_SERV_LANE        OUTB_SERV_LANE,
				A.ARRV_SA_ID            ARRV_SA_ID,
				FORMAT(A.PILOT_ONBOARD,'DD/MM/YYYY') PILOT_ON_BOARD,
				FORMAT(A.PILOT_DISEMBARK,'DD/MM/YYYY') PILOT_DISEMBARK,
				A.BERTH_ALONGSIDE       BERTH_ALONGSIDE,
				ISNULL(A.WHARF_MARK_FROM,0) WHARF_MARK_FROM,
				ISNULL(A.WHARF_MARK_TO,0)   WHARF_MARK_TO,
				B.VSL_NM                VSL_NM,
				B.CALL_SIGN             CALL_SIGN,
				B.LOA                   LOA,
<!-- 				ISNULL(A.PRIORITY_YN, 'N') PRIORITY_YN, -->
				A.BERTH_DIV             BERTH_DIV,
				C.PST_STA               PST_STA,
				C.LENGTH                LENGTH,
				ISNULL(A.BERTH_PLAN_YN,'N')  BERTH_PLAN_YN,
<!-- 				ISNULL(A.DBL_BNK_YN, 'N')  DBL_BNK_YN, -->
<!-- 				ISNULL(A.VS_RMK, ' ')    PLAN_RMK, -->
				''						PLAN_TYPE
				<if test="berthStatus == null or berthStatus == ''">
					,<include refid="berthStatusSql"/>  VSL_STAT
				</if>
				<if test="berthStatus != null and berthStatus != ''">
					,#{berthStatus} VSL_STAT
				</if>
		FROM 
			VSL_SCH A,
			TMT_VSL_PART B,
			(
				SELECT BERTH_TP, BERTH_CD, PST_STA, LENGTH,GRP_CD 
				FROM TMT_BERTH_LOC
				WHERE BERTH_TP IS NOT NULL
<!-- 				AND FREEZONE_YN = 'Y' -->
			) C 
			WHERE A.VSL_CD = B.VSL_CD
			<if test="vslCallId != null and vslCallId != ''">
				AND A.VSL_CALL_ID = #{vslCallId}
			</if>
			<if test='plan != null and plan == "Y"'>
					AND ISNULL( A.BERTH_PLAN_YN, 'N') = #{plan}
			</if>
			<if test="berthStatus != null and berthStatus != ''">
				AND	<include refid="berthStatusSql"/> = #{berthStatus}
			</if>
			AND A.BERTH_LOC = C.BERTH_CD
		  
			<if test='searchType == null'>
			<choose>
				<when test=' berthTp != null  '>
					AND C.BERTH_TP = #{berthTp}
				</when>
				<otherwise>
					 AND C.GRP_CD = #{viewType}
				</otherwise> 
			</choose>
			</if>
		 
			<if test='searchType != null and searchType == "L"'>
				AND (C.GRP_CD = 'EDJ' OR C.GRP_CD = 'NDJ')
			</if>
			<if test="viewType != null and viewType != ''">
				AND C.BERTH_TP = #{viewType}
			</if>
			
			ORDER BY A.ETA DESC
    </select>
		
	<select id ="selectVesselShiftingList" parameterType="berthPlanParm" resultType="berthPlanItem">
		WITH CombinedData AS (
	    SELECT /* berthPlan.selectVesselShiftingList */
	        A.VSL_CALL_ID                           AS VSLCALLID,
	        A.SHIP_CALL_NO                          AS SHIPCALLNO,
	        A.Call_SEQ,
	        'Call ' + CAST(CAST(A.Call_SEQ AS int) 
	        	AS varchar(10)) 					AS CALLSEQ,
	        A.BERTH_LOC								AS BERTHCD,
	        A.READINESS_ATA                         AS READINESS_ATA,
	        A.ETA                                   AS ETA,
	        A.ETB                                   AS ETB,
	        A.ETW                                   AS ETW,
	        A.ETC                                   AS ETC,
	        A.ETU                                   AS ETU,
	        A.ATB                                   AS ATB,
	        A.ATW                                   AS ATW,
	        A.ATC                                   AS ATC,
	        A.ATU                                   AS ATU
	    FROM TMT_VSL_SCH A
	    JOIN TMT_VSL_SHFT B 
	    					ON 		A.VSL_CALL_ID	= B.VSL_CALL_ID 
							AND		A.SHIP_CALL_NO	= B.SHIP_CALL_NO
							AND		A.VSL_CD		= B.VSL_CD
							AND		A.CALL_YEAR		= B.CALL_YEAR
	    WHERE 
	    	<include refid="berthSql"/>
				BETWEEN #{etaFrom} AND DATEADD(DAY, 1, CONVERT(DATE, #{etaTo}))
	       
            AND B.STAT_CD 				= 'AP'
            AND A.SUMMIT_STAT 			= 'AP'
            AND A.BERTH_LOC IN (
                SELECT
                    BERTH_CD
                FROM
                    TMT_BERTH_LOC
                WHERE
                    LOC_CD 				= 'BBT'
            )
	      <if test="scn != null and scn !=''">
	     		AND A.SHIP_CALL_NO 		= #{scn}
	      </if>
	      <if test="vslCallId != null and vslCallId !=''">
	      	AND A.VSL_CALL_ID			= #{vslCallId}
	      </if>

	<if test="scn != null and scn != ''">
		UNION ALL
		
		SELECT 
	        A.VSL_CALL_ID                           AS VSLCALLID,
	        A.SHIP_CALL_NO                          AS SHIPCALLNO,
	        A.Call_SEQ,
	        'Call ' + 
	        	CAST(CAST(A.Call_SEQ AS int) 
	        	AS varchar(10)) 					AS CALLSEQ,
	        A.BERTH_LOC								AS BERTHCD,
	        A.READINESS_ATA                         AS READINESS_ATA,
	        A.ETA                                   AS ETA,
	        A.ETB                                   AS ETB,
	        A.ETW                                   AS ETW,
	        A.ETC                                   AS ETC,
	        A.ETU                                   AS ETU,
	        A.ATB                                   AS ATB,
	        A.ATW                                   AS ATW,
	        A.ATC                                   AS ATC,
	        A.ATU                                   AS ATU
	    FROM TMT_VSL_SCH A
	    WHERE
            A.SUMMIT_STAT				= 'AP'
            AND A.BERTH_LOC IN (
                    SELECT
                        BERTH_CD
                    FROM
                        TMT_BERTH_LOC
                    WHERE
                        LOC_CD 			= 'BBT'
                )
            AND A.SHIP_CALL_NO = #{scn}
			AND EXISTS (
				SELECT 1
				FROM TMT_VSL_SCH X
				WHERE X.SHIP_CALL_NO	= A.SHIP_CALL_NO
				  AND X.VSL_CD			= A.VSL_CD
				  AND X.CALL_YEAR		= A.CALL_YEAR
				GROUP BY X.SHIP_CALL_NO, X.VSL_CD, X.CALL_YEAR
				HAVING COUNT(*) > 1
			)
	</if>
	    )
	SELECT *
	FROM CombinedData
	ORDER BY SHIPCALLNO, CAST(Call_SEQ AS int);

	</select>
</mapper>