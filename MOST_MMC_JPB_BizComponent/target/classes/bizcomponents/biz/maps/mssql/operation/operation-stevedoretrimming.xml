<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="StevedoreTrimmingMap">

	<select id="selectVORDryBreakBulk"  parameterType="stevedoreTrimmingParm" resultType="stevedoreTrimmingItem">
			SELECT  
			    B.VSL_CALL_ID AS vslCallId,
			    B.VSL_CD AS vslCd,
			    B.CALL_YEAR AS callYear,
			    B.CALL_SEQ AS callSeq,
			    B.SHIP_CALL_NO AS scn,
			    B.SHFT_ID AS shftId,
			    B.GANG_NO AS gangNo,
			    (SELECT F.SHFT_NM 
			     FROM TMT_SHFT F 
			     WHERE F.SHFT_METH_CD = 'Standard'
			     AND F.VLD_YN = 'Y'
			     AND B.SHFT_ID = F.SHFT_ID) AS shftNm,
			    B.CG_TP_CD AS cgTpCd,
			    CONVERT(VARCHAR, B.SEQ) AS seq,
			    ISNULL(B.RS_DIV_CD, '') AS rsDivCd,
			    ISNULL(B.HATCH_DRT_CD, '') AS hatchDrtCd,
			    ISNULL(B.ROLE_CD, '') AS roleCd,
			    ISNULL((SELECT E.S_CD_NM
			            FROM TMT_CD_MSTD E
			            WHERE E.M_CD = 'ROLECD' 
			            AND E.S_CD_LGV = 'E'
			            AND E.S_CD = B.ROLE_CD), '') AS roleCdNm,
			    ISNULL(B.COMP_TP_CD, '') AS compTpCd,
			    ISNULL(B.COMP_CD, '') AS workComp,
			    ISNULL(C.EQ_TP_CD, '') AS eqTpCd,
			    ISNULL(B.HATCH_NO, '') AS hatchNo,    
			    ISNULL(CONVERT(VARCHAR, CONVERT(DATE, B.WORK_YMD, 103), 103), '') AS workYmdStr,
			    ISNULL(CONVERT(DATE, B.WORK_YMD, 103), '') AS workYmd,
			    ISNULL(CASE WHEN B.WKER_QTY IS NULL THEN '' ELSE CONVERT(VARCHAR, B.WKER_QTY) END, '') AS wkerQty,
			    ISNULL(B.EQ_FAC_NO, '') AS eqFacNo,
			    ISNULL(C.EQ_FAC_NM, '') AS eqFacNm,
			    ISNULL(B.EQ_FAC_NO2, '') AS facility,
			    (SELECT S_CD_NM 
			     FROM TMT_CD_MSTD 
			     WHERE S_CD = B.EQ_FAC_NO2 AND M_CD = 'EQFCTPCD' AND S_CD_LGV = 'FC') AS facilityName,
			    ISNULL(B.WORK_ST_DT, '') AS workStDt,
			    ISNULL(B.WORK_END_DT, '') AS workEndDt,
			    ISNULL(CONVERT(VARCHAR, B.WORK_ST_DT, 103) + ' ' + CONVERT(VARCHAR, B.WORK_ST_DT, 108), '') AS workStDtStr,
			    ISNULL(CONVERT(VARCHAR, B.WORK_END_DT, 103) + ' ' + CONVERT(VARCHAR, B.WORK_END_DT, 108), '') AS workEndDtStr,
			    (CASE WHEN ISNULL(CLN_CD, '') = 'Y' THEN 'CLEAN'
			          WHEN ISNULL(TOP_CG_CD, '') = 'Y' THEN 'TOP'
			          ELSE '' END) AS topClean,
			    B.RMK AS remark,
			    B.DPT_AGENT AS dptAgent,
			    B.VSL_SHFT_SEQ AS vslShiftingSeq,
			    (CASE WHEN B.VSL_SHFT_SEQ IS NULL
			          THEN (SELECT CONVERT(VARCHAR, E.ATB, 103) + ' ' + CONVERT(VARCHAR, E.ATB, 108) FROM TMT_VSL_SCH E WHERE E.VSL_CALL_ID = B.VSL_CALL_ID)
			          ELSE (SELECT CONVERT(VARCHAR, E.ATB_DT, 103) + ' ' + CONVERT(VARCHAR, E.ATB_DT, 108) FROM TMT_VSL_SHFT E WHERE E.VSL_CALL_ID = B.VSL_CALL_ID AND E.SEQ = B.VSL_SHFT_SEQ) END) AS atb,
			    (CASE WHEN B.VSL_SHFT_SEQ IS NULL
			          THEN (SELECT CONVERT(VARCHAR, E.ATU, 103) + ' ' + CONVERT(VARCHAR, E.ATU, 108) FROM TMT_VSL_SCH E WHERE E.VSL_CALL_ID = B.VSL_CALL_ID)
			          ELSE (SELECT CONVERT(VARCHAR, E.ATU_DT, 103) + ' ' + CONVERT(VARCHAR, E.ATU_DT, 108) FROM TMT_VSL_SHFT E WHERE E.VSL_CALL_ID = B.VSL_CALL_ID AND E.SEQ = B.VSL_SHFT_SEQ) END) AS atu,
			    CASE WHEN ISNULL(B.VSL_SHFT_SEQ, 0) = 0 THEN 'N' ELSE 'Y' END AS vslShiftingYN
			FROM TMT_VSL_OPE_RPT A
			LEFT JOIN TMT_VSL_OPE_RPT_DTL B ON A.VSL_CALL_ID = B.VSL_CALL_ID 
			                                 AND A.SHFT_ID = B.SHFT_ID 
			                                 AND A.WORK_YMD = B.WORK_YMD
			LEFT JOIN TMT_EQ_FAC C ON B.EQ_FAC_NO = C.EQ_FAC_NO
			LEFT JOIN TMT_EQ_FAC D ON B.EQ_FAC_NO2 = D.EQ_FAC_NO
	WHERE 1 = 1

	  			  <if test="rsDivCd != null and rsDivCd != ''">
        AND
					B.RS_DIV_CD = #{rsDivCd}
				  </if>
	  			  AND (B.CG_TP_CD ='BBK' OR B.CG_TP_CD='DBK')
				<if test="vslCallId != null and vslCallId != ''">
    AND
					B.VSL_CALL_ID = #{vslCallId}
				</if>
				<if test="cgTpCd != null and cgTpCd != ''">
    AND
					B.CG_TP_CD = #{cgTpCd}
				</if>	
				
				<if test="shift != null and shift != ''">
    AND
					A.SHFT_ID = #{shift}
				</if>
				<if test="workYmd != null and workYmd != ''">
    AND
					A.WORK_YMD = CONVERT(VARCHAR, CONVERT(DATE, #{workYmd}, 103), 112)
				</if>
				
			ORDER BY B.WORK_YMD , B.SHFT_ID , B.CG_TP_CD
		</select>

	<select id="selectVORDryBreakBulkForStevAndTrim"  parameterType="stevedoreTrimmingParm" resultType="stevedoreTrimmingItem">
		SELECT 
		    F.vslCallId AS vslCallId,
		    F.vslCd AS vslCd,
		    F.callYear AS callYear,
		    F.callSeq AS callSeq,
		    F.scn AS scn,
		    F.shftId AS shftId,
		    (SELECT G.SHFT_NM 
		     FROM TMT_SHFT G 
		     WHERE G.SHFT_METH_CD = 'Standard'
		     AND G.VLD_YN = 'Y'
		     AND F.shftId = G.SHFT_ID) AS shftNm,
		    F.workYmd AS workYmd,
		    F.hatchDrtCd AS hatchDrtCd,
		    F.cgTpCd AS cgTpCd,
		    F.hatchNo AS hatchNo,
		    CASE WHEN F.cwDiv = 'Y' THEN 'Y' ELSE 'N' END AS shipsCrewYn,
		    CASE WHEN F.cwDiv = 'Y' THEN 'Ship''s Crew' ELSE E.workComp END AS workComp,
		    F.gearsYn AS withGears,
		    E.hatchNo AS hatchNo,
		    E.rsDivCd AS rsDivCd,
		    E.general AS general,
		    E.winch AS winch,
		    E.hoper AS hoper,
		    E.signal AS signal,
		    E.deck AS deck,
		    E.supervisor AS supervisor,
		    E.spr AS spr,
		    E.nonworker AS nonworker,
		    E.tallyWorker AS tallyWorker,
		    E.general AS general,
		    F.cwDiv AS cwDiv,
		    CASE WHEN F.cwDiv = 'Y' THEN F.lashingCompCd ELSE E.lashingCompCd END AS lashingCompCd,
		    CASE WHEN F.cwDiv = 'Y' THEN F.lashingGangNos ELSE E.lashingGangNos END AS lashingGangNos
		FROM 
		    (SELECT DISTINCT B.VSL_CALL_ID AS vslCallId,
						     B.VSL_CD AS vslCd,
						     B.CALL_YEAR AS callYear,
						     B.CALL_SEQ AS callSeq,
						     B.SHIP_CALL_NO AS scn,
		                     B.SHFT_ID AS shftId,
		                     ISNULL(B.HATCH_DRT_CD, ' ') AS hatchDrtCd,
		                     ISNULL(CASE WHEN B.WORK_YMD IS NOT NULL THEN CONVERT(VARCHAR, CONVERT(DATE, B.WORK_YMD, 103), 103) ELSE '' END, '') AS workYmd,
		                     B.WORK_YMD,
		                     ISNULL(B.HATCH_NO, ' ') AS hatchNo,
		                     B.CG_TP_CD AS cgTpCd,
		                     B.CW_DIV AS cwDiv,
		                     B.GEARS_YN AS gearsYn,
		                     CASE WHEN B.LASHING_COMP_CD = '0' THEN '' ELSE B.LASHING_COMP_CD END AS lashingCompCd,
		                     CASE WHEN B.LASHING_GANG_NO = '0' THEN '' ELSE B.LASHING_GANG_NO END AS lashingGangNos
		     FROM TMT_VSL_OPE_RPT A
		     LEFT JOIN TMT_VSL_OPE_RPT_DTL B ON A.VSL_CALL_ID = B.VSL_CALL_ID 
		                                       AND A.SHFT_ID = B.SHFT_ID 
		                                       AND A.WORK_YMD = B.WORK_YMD
			WHERE 1 = 1
		  			       AND (B.CG_TP_CD ='BBK' OR B.CG_TP_CD='DBK')
		  			        <if test="vslCallId != null and vslCallId != ''">
               AND
								B.VSL_CALL_ID = #{vslCallId}
							</if>
							<if test="cgTpCd != null and cgTpCd != ''">
       AND
								B.CG_TP_CD = #{cgTpCd}
							</if>	
							<if test="shift != null and shift != ''">
       AND
								B.SHFT_ID = #{shift}
							</if>
							<if test="workYmd != null and workYmd != ''">
       AND
								B.WORK_YMD = CONVERT(VARCHAR, CONVERT(DATE, #{workYmd}, 103), 112)
							</if>
		  			       AND B.RS_DIV_CD = 'EQ') F
					LEFT JOIN 
					    (SELECT D.VSL_CALL_ID AS vslCallId,
					            D.SHFT_ID AS shftId,
					            D.CG_TP_CD AS cgTpCd,
					            ISNULL(D.HATCH_NO, ' ') AS hatchNo,
					            ISNULL(D.HATCH_DRT_CD, ' ') AS hatchDrtCd,
					            ISNULL(D.COMP_CD, ' ') AS workComp,
					            ISNULL(CASE WHEN D.WORK_YMD IS NOT NULL THEN CONVERT(VARCHAR, CONVERT(DATE, D.WORK_YMD, 103), 103) ELSE '' END, '') AS workYmd,
					            D.RS_DIV_CD AS rsDivCd,
					            SUM(CASE WHEN D.ROLE_CD = 'GW' THEN D.WKER_QTY ELSE 0 END) AS general,
					            SUM(CASE WHEN D.ROLE_CD = 'WM' THEN D.WKER_QTY ELSE 0 END) AS winch,
					            SUM(CASE WHEN D.ROLE_CD = 'HM' THEN D.WKER_QTY ELSE 0 END) AS hoper,
					            SUM(CASE WHEN D.ROLE_CD = 'SM' THEN D.WKER_QTY ELSE 0 END) AS signal,
					            SUM(CASE WHEN D.ROLE_CD = 'DM' THEN D.WKER_QTY ELSE 0 END) AS deck,
					            SUM(CASE WHEN D.ROLE_CD = 'AS' THEN D.WKER_QTY ELSE 0 END) AS supervisor,
					            SUM(CASE WHEN D.ROLE_CD = 'MS' THEN D.WKER_QTY ELSE 0 END) AS spr,
					            SUM(CASE WHEN D.ROLE_CD = 'TW' THEN D.WKER_QTY ELSE 0 END) AS nonworker,
					            SUM(CASE WHEN D.ROLE_CD = 'TW' THEN D.WKER_QTY ELSE 0 END) AS tallyWorker,
					            CASE WHEN D.LASHING_COMP_CD = '0' THEN '' ELSE D.LASHING_COMP_CD END AS lashingCompCd,
					            CASE WHEN D.LASHING_GANG_NO = '0' THEN '' ELSE D.LASHING_GANG_NO END AS lashingGangNos
					     FROM TMT_VSL_OPE_RPT C
					     LEFT JOIN TMT_VSL_OPE_RPT_DTL D ON C.VSL_CALL_ID = D.VSL_CALL_ID
					                                       AND C.SHFT_ID = D.SHFT_ID 
					                                       AND C.WORK_YMD = D.WORK_YMD
					     WHERE D.RS_DIV_CD = 'WC'
					           AND (D.CG_TP_CD = 'BBK' OR D.CG_TP_CD = 'DBK')
					           AND D.USE_YN = 'Y'
				<if test="vslCallId != null and vslCallId != ''">
    AND
					D.VSL_CALL_ID = #{vslCallId}
				</if>
				<if test="cgTpCd != null and cgTpCd != ''">
    AND
					D.CG_TP_CD = #{cgTpCd}
				</if>	
				<if test="shift != null and shift != ''">
    AND
					C.SHFT_ID = #{shift}
				</if>
				<if test="workYmd != null and workYmd != ''">
    AND
					 C.WORK_YMD = CONVERT(VARCHAR, CONVERT(DATE, #{workYmd}, 103), 112)
				</if>
				GROUP BY D.VSL_CALL_ID, D.WORK_YMD, D.SHFT_ID, D.CG_TP_CD, ISNULL(D.HATCH_DRT_CD, ' '), 
              ISNULL(D.HATCH_NO, ' '), D.RS_DIV_CD, ISNULL(D.COMP_CD, ' '), D.LASHING_COMP_CD, D.LASHING_GANG_NO
				    ) E 
				ON F.vslCallId = E.vslCallId
				   AND F.shftId = E.shftId
				   AND F.hatchDrtCd = E.hatchDrtCd
				   AND F.workYmd = E.workYmd
				   AND F.hatchNo = E.hatchNo
				   AND F.cgTpCd = E.cgTpCd
				ORDER BY F.WORK_YMD, SHFTNM, F.HATCHNO;
		</select>
		
		<select id="selectShift" parameterType="stevedoreTrimmingParm" resultType="stevedoreTrimmingItem">
			SELECT DISTINCT SHFT_NM AS SHFTNM,
				   SHFT_ID AS SHFTID,
				   FM_HHMM AS FMHHMM,
				   TO_HHMM AS TOHHMM
			FROM TMT_SHFT
			WHERE SHFT_METH_CD = 'Standard'
			AND VLD_YN = 'Y'
			ORDER BY SHFT_NM
		</select>
		<select id="selectEquipment" parameterType="stevedoreTrimmingParm" resultType="stevedoreTrimmingItem">	
			<if test="eqTpCd == 'FC'">
			SELECT 
			    S_CD        eqFacNo,
			    S_CD_NM     eqFacNm
			FROM TMT_CD_MSTD WHERE M_CD = 'EQFCTPCD' AND S_CD_LGV = 'FC'					
			ORDER BY S_CD_NM	
			</if>	
			<if test="eqTpCd == 'EQ'">
			SELECT DISTINCT	 
			   A.EQ_NO         				eqFacNo,
			   (SELECT B.EQ_FAC_NM
			   FROM TMT_EQ_FAC B 
			   WHERE B.EQ_FAC_NO = A.EQ_NO) eqFacNm
			 FROM TMT_DEPY A
			WHERE
				<![CDATA[A.EQ_TP_CD <> 'FC' ]]>	 
				AND	 A.RS_DIV_CD = 'EQ'
				AND (A.EQ_NO IS NOT NULL) 
				AND  A.EQ_NO IN (SELECT C.EQ_FAC_NO FROM TMT_EQ_FAC C
                         		WHERE C.VLD_YN = 'Y' AND C.EQ_TP_CD != 'FL')
			 ORDER BY  A.EQ_NO
			</if>			
		</select>
		<select id="selectEquipmentList" parameterType="stevedoreTrimmingParm" resultType="stevedoreTrimmingItem">
			  SELECT /*VORDryBreakBulk."selectEquipmentList"*/ 
			  		EQ_FAC_NO AS eqFacNo, EQ_FAC_NM AS eqFacNm
			    FROM TMT_EQ_FAC
			   WHERE EQ_FAC_NO IN ('BG0001',
			                       'BG0002',
			                       'LL0001',
			                       'LL0002',
			                       'LL0003',
			                       'CU0001',
			                       'TX0001',
			                       'SHIPCR1',
			                       'SHIPCR2',
			                       'SHIPCR3',
			                       'SHIPCR4',
			                       'CVPIP02',
			                       'CVPIP01',
			                       'SCRANE1',
			                       'SCRANE2',
			                       'SCRANE3',
			                       'LL0004',
			                       'LL0005')
			ORDER BY EQ_FAC_NO ASC
		</select>
		<select id="selectRole" parameterType="stevedoreTrimmingParm" resultType="stevedoreTrimmingItem">
			SELECT A.S_CD AS roleCd ,
		           A.S_CD_NM AS roleCdNm
			FROM TMT_CD_MSTD	A
		      WHERE A.M_CD = 'ROLECD' 
		      AND A.S_CD_LGV = 'E'	      
		</select>
		
		<update id="updateVORDryBreakBulkItemsForStevAndTrim" parameterType="stevedoreTrimmingItem">
			MERGE INTO TMT_VSL_OPE_RPT_DTL A
	 		USING (SELECT '00000' as costCd )B  
	 				ON (A.VSL_CALL_ID=#{vslCallId} 
						AND	A.WORK_YMD = CONVERT(VARCHAR(8), CONVERT(DATE, #{workYmd}, 103), 112)
						AND A.SHFT_ID = #{shftId}						
						AND A.RS_DIV_CD = 'WC'
						AND A.ROLE_CD = #{roleCd}						
						<if test="hatchDrtCd != null and hatchDrtCd != ''">
							AND A.HATCH_DRT_CD = #{hatchDrtCd}
						</if>
						<if test="hatchDrtCd == null or hatchDrtCd == ''">
							AND (A.HATCH_DRT_CD IS NULL)	
						</if>
						<if test="hatchNo != null and hatchNo != ''">
							AND A.HATCH_NO = #{hatchNo}
						</if>
						<if test="hatchNo == null or hatchNo == ''">
							AND (A.HATCH_NO IS NULL)
						</if>
						AND A.CG_TP_CD = #{cgTpCd}						
						AND B.costCd = '00000')
	     	WHEN MATCHED THEN	  
			UPDATE 
				SET 
					A.UPDATE_TIME = GETDATE(),
					A.WKER_QTY = CASE WHEN #{wkerQty} IS NOT NULL THEN #{wkerQty} ELSE NULL END,
					A.COMP_CD = #{workComp} ,
					<if test="workComp == null or workComp == ''">
						A.COMP_TP_CD = NULL ,
					</if>
					<if test="workComp != null and workComp != ''">
						A.COMP_TP_CD = #{compTpCd} ,	
					</if>
					A.USE_YN= 'Y' ,		
					A.STAFF_CD =ISNULL(#{userId},'SYSTEM')
					
					, LASHING_COMP_CD = #{lashingCompCd}
                	, LASHING_GANG_NO = #{lashingGangNos}
			WHEN NOT MATCHED THEN			
				INSERT (VSL_CALL_ID, 
								VSL_CD,
								CALL_YEAR,
								CALL_SEQ,
								SHIP_CALL_NO,
								WORK_YMD,
								SHFT_ID, 
								CG_TP_CD,
								SEQ, 
								RS_DIV_CD, 
								LOC_DIV_CD, 
								ROLE_CD, 
								EMP_ID, 
								EQ_TP_CD,
								COMP_TP_CD,				
								WKER_QTY,
								HATCH_NO,
								UPDATE_TIME,
				                STAFF_CD,
				                USE_YN,
				                COMP_CD,
				                HATCH_DRT_CD
				                , LASHING_COMP_CD
                				, LASHING_GANG_NO
							) VALUES ( 
							#{vslCallId} ,
							#{vslCd} ,
							#{callYear} ,
							#{callSeq} ,
							#{scn} ,
							 CONVERT(VARCHAR(8), CONVERT(DATE, #{workYmd}, 103), 112),
							#{shftId},
							#{cgTpCd},
							(SELECT CASE 
								        WHEN MAX(C.SEQ) IS NULL THEN 1
								        ELSE MAX(C.SEQ) + 1
								    END FROM TMT_VSL_OPE_RPT_DTL C WHERE C.VSL_CALL_ID =#{vslCallId} 
																				AND C.WORK_YMD =  CONVERT(VARCHAR(8), CONVERT(DATE, #{workYmd}, 103), 112)
																				AND C.SHFT_ID =#{shftId}),
							'WC',
							NULL,
							#{roleCd},
							NULL,
							NULL,
							#{compTpCd},	
							CASE WHEN #{wkerQty} IS NOT NULL THEN #{wkerQty} ELSE NULL END,			
							#{hatchNo},
							GETDATE(),
							ISNULL(#{userId},'SYSTEM2008'),
							'Y',	
							#{workComp},
							#{hatchDrtCd}
							, #{lashingCompCd}
							, #{lashingGangNos}
					);
		</update>
		
		<update id="deleteVORDryBreakBulkItems"  parameterType="stevedoreTrimmingItem">
		BEGIN
			DELETE FROM TMT_VSL_OPE_RPT_DTL
			 WHERE VSL_CALL_ID = #{vslCallId}
			  AND WORK_YMD = CONVERT(VARCHAR(8), CONVERT(DATE, #{workYmd}, 103), 112)
			  AND SHFT_ID = #{shftId}	
			 <if test='rsDivCd == "WC"'>	
				    AND ROLE_CD = #{roleCd}
				  	AND RS_DIV_CD = #{rsDivCd}
				  	AND CG_TP_CD = #{cgTpCd}			
				  	<if test="hatchDrtCd != null and hatchDrtCd != ''">				  	
				  		AND HATCH_DRT_CD=#{hatchDrtCd}
				  	</if>	
				  	AND HATCH_NO = #{hatchNo}  ;
			  </if>		
			  <if test='rsDivCd != "WC"'>				  
				AND SEQ = TRY_CAST(#{seq} AS INT) ;
			  </if>			 
		 	DELETE FROM TMT_VSL_OPE_RPT 
		 	WHERE VSL_CALL_ID = #{vslCallId}
			  AND WORK_YMD =  CONVERT(VARCHAR(8), CONVERT(DATE, #{workYmd}, 103), 112)
			  AND SHFT_ID = #{shftId}
			  AND ((SELECT COUNT(*) FROM TMT_VSL_OPE_RPT  WHERE 
			  		VSL_CALL_ID = #{vslCallId}
			  		AND WORK_YMD =  CONVERT(VARCHAR(8), CONVERT(DATE, #{workYmd}, 103), 112)
			  		AND SHFT_ID = #{shftId}
			  		) = 0) ;
		END;
		</update>	
		<update id="updateDblBankingActualTime"  parameterType="stevedoreTrimmingItem">
		UPDATE TMT_DBL_BNK 
			SET ATW = (SELECT MIN(WORK_ST_DT) 
			           FROM TMT_VSL_OPE_RPT_DTL 
			           WHERE VSL_CALL_ID = #{vslCallId}),
			    ATC = (SELECT MAX(WORK_END_DT) 
			           FROM TMT_VSL_OPE_RPT_DTL 
			           WHERE VSL_CALL_ID = #{vslCallId})
			WHERE VSL_CALL_ID = #{vslCallId};

		</update>
		<update id="updateDblBankingActualTime1"  parameterType="stevedoreTrimmingItem">
		UPDATE TMT_DBL_BNK 
		SET SHIP1_ATW = (SELECT MIN(WORK_ST_DT) 
		                 FROM TMT_VSL_OPE_RPT_DTL 
		                 WHERE VSL_CALL_ID = #{vslCallId}),
		    SHIP1_ATC = (SELECT MAX(WORK_END_DT) 
		                 FROM TMT_VSL_OPE_RPT_DTL 
		                 WHERE VSL_CALL_ID = #{vslCallId})
		WHERE DBL_BNK_SHIP1 = #{vslCallId};

				  
		</update>
		<update id="updateDblBankingActualTime2"  parameterType="stevedoreTrimmingItem">
		UPDATE TMT_DBL_BNK 
		SET SHIP2_ATW = (SELECT MIN(WORK_ST_DT) 
		                 FROM TMT_VSL_OPE_RPT_DTL 
		                 WHERE VSL_CALL_ID = #{vslCallId}),
		    SHIP2_ATC = (SELECT MAX(WORK_END_DT) 
		                 FROM TMT_VSL_OPE_RPT_DTL 
		                 WHERE VSL_CALL_ID = #{vslCallId})
		WHERE DBL_BNK_SHIP2 = #{vslCallId};

		</update>
		<update id="updateVORDryBreakBulkItemsWithShipCrew" parameterType="stevedoreTrimmingItem">
			UPDATE TMT_VSL_OPE_RPT_DTL
				SET 
					<if test='cwDiv == "Y"'>	  
					CW_DIV = #{cwDiv},
			  		</if>				
					<if test='cwDiv != "Y"'>				  
					CW_DIV = 'N',
			  		</if>		
					GEARS_YN = #{withGears},
					UPDATE_TIME = GETDATE(),					
					STAFF_CD = ISNULL(#{userId},'SYSTEM'),
					LASHING_COMP_CD = #{lashingCompCd},
                	LASHING_GANG_NO = #{lashingGangNos}
			WHERE VSL_CALL_ID=#{vslCallId} 
				AND	WORK_YMD =  CONVERT(VARCHAR(8), CONVERT(DATE, #{workYmd}, 103), 112)
				AND SHFT_ID = #{shftId}
				<if test="hatchDrtCd != null and hatchDrtCd != ''">
				  	AND HATCH_DRT_CD=#{hatchDrtCd}
				</if>
				AND HATCH_NO = #{hatchNo} 
				AND RS_DIV_CD = #{rsDivCd} 
		</update>
		
</mapper>


