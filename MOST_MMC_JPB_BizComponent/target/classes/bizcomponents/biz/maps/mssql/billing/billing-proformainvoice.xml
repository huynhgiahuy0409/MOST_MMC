<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="proformaInvoice">

	<resultMap id="resultProformaMap" 			type="proformaInvoiceItem">
		<result property = "vslCallId" 			column = "VSL_CALL_ID"/>
		<result property = "payerCd" 			column = "PAYER_CD"/>
		<result property = "payerNm" 			column = "PAYER_NM"/>
		<result property = "payerAddr" 			column = "PAYER_ADDR"/>
		<result property = "payerTp" 			column = "PAYER_TP"/>
		<result property = "cmdtCd"			 	column = "CMDT_CD"/>
		<result property = "wgt"				column = "WGT"/>
		<result property = "msrmt" 				column = "MSRMT"/>
		<result property = "pkgQty"	 			column = "PKG_QTY"/>
		<result property = "trfTpCd" 			column = "TRF_TP_CD"/>
		<result property = "trfTpNm" 			column = "TRF_TP_NM"/>
		<result property = "trfCd"				column = "TRF_CD"/>
		<result property = "subTrf" 			column = "SUB_TRF_CD"/>
		<result property = "trfDesc"			column = "DESCR"/>
		<result property = "unitPrc"			column = "UNIT_PRC"/>
		<result property = "totalAmt"			column = "TOTAL_AMOUNT"/>
		<result property = "ivAmt"				column = "NET_AMOUNT"/>
		<result property = "billTpCd"			column = "BILL_TP_CD"/>
		<result property = "stdRate"			column = "STD_RATE"/>
		<result property = "applyRate"			column = "UNIT_PRC"/>
		<result property = "blSnNo"				column = "CG_NO"/>
		<result property = "cgTpCd"				column = "CG_TP_CD"/>
		<result property = "opClassCd"			column = "CATG_CD"/>
		<result property = "delvTpCd"			column = "DELV_TP_CD"/>
		<result property = "gatherTpCd"			column = "GATHER_TP_CD"/>
		<result property = "ivPrfx"				column = "IV_PRFX"/>
		<result property = "ivTp"				column = "IV_TP"/>
		<result property = "costCenter"			column = "COST_CENT_CD"/>
		<result property = "issuedMT"			column = "ISSUED_MT"/>
 	</resultMap>
 	
 	<resultMap type="proformaInvoiceItem" id="comboMap">
    	<result property="cd"               	column="CD"/>
		<result property="cdNm"                 column="CD_NM"/>
		<result property="delvTpCd"             column="DELV_TP_CD"/>
		<result property="docNo"             	column="MF_DOC_ID"/>
    </resultMap>
    
    <resultMap type="proformaInvoiceItem" id="payerComboMap">
    	<result property="cd"               	column="CD"/>
		<result property="cdNm"                 column="CD_NM"/>
		<result property="payerTp"             	column="PAYER_TP"/>
    </resultMap>
    
    <resultMap id="gatheringDataMap" 							type="proformaInvoiceItem">
		<result property = "vslCallId" 							column = "VSL_CALL_ID"/>
		<result property = "payerCd" 							column = "PAYER"/>
		<result property = "payerNm" 							column = "PAYER_NM"/>
		<result property = "payerAddr" 							column = "PAYER_ADDR"/>
		<result property = "payerTp" 							column = "PAYER_TP"/>
		<result property = "gatherNo"							column = "GATHER_NO"/>
		<result property = "ivUnit1" 							column = "IV_UNIT1"/>
		<result property = "ivUnit2" 							column = "IV_UNIT2"/>
		<result property = "ivUnit3" 							column = "IV_UNIT3"/>
		
		<result property = "unit1Val"							column = "UNIT1_VAL"/>
		<result property = "unit2Val" 							column = "UNIT2_VAL"/>
		<result property = "unit3Val" 							column = "UNIT3_VAL"/>
		
		<result property = "trfTpCd" 							column = "TRF_TP_CD"/>
		<result property = "trfTpNm" 							column = "TRF_TP_NM"/>
		<result property = "trfCd"								column = "TRF_CD"/>
		<result property = "subTrf" 							column = "SUB_TRF_CD"/>
		<result property = "trfDesc"							column = "TRF_DESCR"/>
		<result property = "applyRate"							column = "APLY_RATE"/>
		<result property = "stdRate"							column = "STD_RATE"/>
		<result property = "ivAmt"								column = "APLY_AMT"/>
		<result property = "taxAmt"								column = "TAX_AMT"/>
		
		<result property = "totalAmt"							column = "TOTAL_AMT"/>
		<result property = "blSnNo"								column = "BL_NO"/>
		<result property = "opClassCd"							column = "CATG_CD"/>
		<result property = "ivPrfx"								column = "IV_PRFX"/>
		<result property = "ivTp"								column = "IV_TP"/>
		<result property = "costCenter"							column = "COST_CENT_CD"/>
		<result property = "financialCode"						column = "ERP_COST_CENT"/>
		
		<result property = "paymentType"						column = "PAYMENT_TP"/>
		<result property = "svcDtFrom"							column = "SVC_ST_DT"/>
		<result property = "svcDtTo"							column = "SVC_END_DT"/>
		<result property = "delvTpCd"							column = "DELV_TP_CD"/>
		<result property = "delvTpNm"							column = "DELV_TP_NM"/>
		<result property = "statusCd"							column = "STAT_CD"/>
		<result property = "paidYn"								column = "PAID_YN"/>
		<result property = "ivNo"								column = "IV_NO"/>
		
		<result property = "docNo"								column = "MF_DOC_ID"/>
		<result property = "proformaInvoiceNo"					column = "IV_NO"/>
		<result property = "adhocYn"							column = "ADHOC_YN"/>
		<result property = "groupingField"						column = "GROUPING_FIELD"/>
		<!-- MMC -->
		<result property = "refNo4"								column = "REF_NO4"/>
		<result property = "svcId"								column = "SVC_ID"/>
		<result property = "svcSeq"								column = "SVC_SEQ"/>
		<result property = "gstTpCd"							column = "GST_TYPE"/>
		<result property = "gstAmt"								column = "GST_AMT"/>
		<result property = "applyFreeDays"						column = "FREE_DAYS"/>
		<result property = "estDt"								column = "EXP_DT"/>
		<result property = "gstPercent"							column = "GST_PERCENT"/>
		<result property = "itemStatus"							column = "ITEM_STATUS"/>
		<result property = "taxValue"							column = "TAX_VALUE"/>
 	</resultMap>
 	
 	 <resultMap id="receiptMap" 								type="proformaInvoiceItem">
 	 	<result property = "crcyCd" 							column = "CRCY_CD"/>
		<result property = "gatherNo" 							column = "GATHER_NO"/>
		<result property = "trfCd" 								column = "TRF_CD"/>
		<result property = "subTrf" 							column = "SUB_TRF_CD"/>
		<result property = "trfDescr" 							column = "TRF_DESCR"/>
		<result property = "trfTpCd" 							column = "TRF_TP_CD"/>
		<result property = "trfTpNm" 							column = "TRF_TP_NM"/>
		<result property = "costCenter" 						column = "COST_CENT_CD"/>
		<result property = "payer" 								column = "PAYER"/>
		<result property = "payerNm" 							column = "PAYER_NM"/>
		<result property = "payerTp" 							column = "PAYER_TP_CD"/>
		<result property = "payerAddr" 							column = "PAYER_ADDR"/>
		<result property = "payerTel" 							column = "PAYER_TEL"/>
		<result property = "payerTaxNo" 						column = "PAYER_TAX_NO"/>
		<result property = "unit1Val" 							column = "UNIT1_VAL"/>
		<result property = "unit2Val" 							column = "UNIT2_VAL"/>
		<result property = "unit3Val" 							column = "UNIT3_VAL"/>
		<result property = "aplyRate" 							column = "APLY_RATE"/>
		<result property = "aplyAmt"							column = "APLY_AMT"/>
		<result property = "taxCd" 								column = "TAX_TYPE"/>
		<result property = "taxValue"							column = "TAX_VALUE"/>
		<result property = "taxAmt" 							column = "TAX_AMT"/>
		<result property = "totalAmt" 							column = "TOTAL_AMT"/>
		<result property = "vslNm" 								column = "VSL_NM"/>
		<result property = "vslCallId" 							column = "VSL_CALL_ID"/>
		<result property = "docNo" 								column = "MF_DOC_ID"/>
		<result property = "blSnNo" 							column = "BL_NO"/>
		<result property = "ivDt" 								column = "IV_DT"/>
		<result property = "paymentType" 						column = "PAY_TP_CD"/>
		<result property = "ivTp" 								column = "IV_TP"/>
		<result property = "statusCd" 							column = "STAT_CD"/>
		<result property = "paidYn" 							column = "PAID_YN"/>
		<result property = "ivNo" 								column = "IV_NO"/>
		<result property = "tmnlNm" 							column = "TMNL_NM"/>
		<result property = "tmnlTaxNo" 							column = "COMP_REG_NO"/>
		<result property = "tmnlTel" 							column = "TEL_NO"/>
		<result property = "tmnlFax" 							column = "FAX_NO"/>
		<result property = "userId" 							column = "STAFF_CD"/>
		<result property = "accNm" 								column = "ACCNM"/>
		<result property = "eta" 								column = "ETA"/>
		<result property = "etd" 								column = "ETD"/>
		<result property = "etw" 								column = "ETW"/>
		<result property = "etc" 								column = "ETC"/>
		<result property = "grt" 								column = "GRT"/>
		<result property = "loa" 								column = "LOA"/>
		<result property = "payerTaxCd"							column = "PAYER_TAX_CD"/>
		<result property = "applyRate"							column = "APLY_RATE"/>
		<result property = "ivAmt" 								column = "APLY_AMT"/>
		<result property = "lastChargeDate" 					column = "lastChargeDate"/>
		<result property = "firstChargeDate" 					column = "firstChargeDate"/>
		<result property = "paymentStorageDate" 				column = "EXP_DT"/>
		<result property = "freeStorageEndDate" 				column = "FREE_OS_END_DT"/>
		<result property = "consignee" 							column = "CNSNE_NM"/>
 	</resultMap>
	 
 	<sql id="getTrfInfoForProformaIvOfImportHG">
 		WITH CG_INFO
		     AS (
		     	SELECT 
					*
				FROM 
					TMT_BL
				WHERE 
					BL_NO	 		= #{blNo} 
					AND VSL_CALL_ID = #{vslCallId}
			 ),
			 TRF_FILTER
		     AS (
		     	SELECT 
					C.TRF_CD,
					C.SUB_TRF_CD,
					S.UNIT_PRC,
					S.APLY_YMD,
					S.EXPR_YMD,
					ISNULL(COUNT (*), 0) AS CNT
				FROM 
					TMT_B_TRF_CD T 
				INNER JOIN 
					TMT_B_TRF_COND C
				ON 
					T.TRF_CD 			= C.TRF_CD 
					AND T.SUB_TRF_CD 	= C.SUB_TRF_CD
				LEFT OUTER JOIN 
					TMT_B_TRF S
				ON 
					T.TRF_CD 			= S.TRF_CD 
					AND T.SUB_TRF_CD 	= S.SUB_TRF_CD 
					AND S.PRC_TP_CD 	= 'S',
					CG_INFO G
				WHERE 
					T.TRF_TP_CD = 'HG'
				AND ( (C.PRPT_CD = 'C1'  AND C.CHR_VAL = G.CATG_CD)
					OR (C.PRPT_CD = 'C3' AND C.CHR_VAL = G.DELV_TP_CD)
					OR (C.PRPT_CD = 'C7' AND C.CHR_VAL = G.CG_TP_CD)
					OR (C.PRPT_CD = 'C8' AND C.CHR_VAL = G.CMDT_CD))
				GROUP BY 
					C.TRF_CD,
					C.SUB_TRF_CD,
					S.UNIT_PRC,
					S.APLY_YMD,
					S.EXPR_YMD
			 ),
			 TRF_INFO
		     AS (
		     	SELECT TOP(1) *
				FROM 
					TRF_FILTER
				ORDER BY 
					CNT DESC
			 )
		SELECT TOP 1
		   T.TRF_CD,
		   T.SUB_TRF_CD,
		   T.DESCR,
		   T.TRF_TP_CD,
		   dbo.F_CM_CODE_NM ('MT', 'TRFTP', T.TRF_TP_CD) 	AS TRF_TP_NM,
		   T.BILL_TP_CD,
		   S.UNIT_PRC,
		   S.UNIT_PRC 										AS STD_RATE,
		   T.PAYER 											AS PAYER_TP,
			CASE T.PAYER
				WHEN  'FWD' THEN  G.FWRD 
				ELSE ''
			END 											AS PAYER_CD,
		   DBO.F_GET_PARTNER_INFO (
			  DECODE (T.PAYER,  'FWD', G.FWRD,  'SHA', '',  ''),
			  'ENG_SNM') 									AS PAYER_NM,
		   DBO.F_GET_PARTNER_INFO (
			  DECODE (T.PAYER,  'FWD', G.FWRD,  'SHA', '',  ''),
			  'ADDR') 										AS PAYER_ADDR,
		   CAST (ROUND ( (ISNULL(S.UNIT_PRC, 1) * G.CG_WGT), 2) AS NUMERIC (15, 3))
															AS NET_AMOUNT,
		   G.VSL_CALL_ID,
		   G.BL_NO AS CG_NO,
		   G.CMDT_CD,
		   dbo.F_GET_CMDT_DESC (G.CMDT_CD) 					AS CMDT_DESC,
		   G.CG_TP_CD,
		   G.CATG_CD,
		   G.DELV_TP_CD,
		   G.CG_WGT,
		   'PRF' 											AS GATHER_TP_CD,
		   'PRF' 											AS IV_PRFX,
		   'P'												AS IV_TP,
		   T.COST_CENT_CD,
		   G.CG_WGT 										AS ISSUED_MT
		FROM 
			TMT_B_TRF_CD T
		INNER JOIN 
			TMT_B_TRF_COND C
		ON 
			T.TRF_CD 			= C.TRF_CD 
			AND T.SUB_TRF_CD 	= C.SUB_TRF_CD
		INNER JOIN 
			TRF_INFO F
		ON 
			T.TRF_CD 			= F.TRF_CD 
			AND T.SUB_TRF_CD 	= F.SUB_TRF_CD
		LEFT OUTER JOIN 
			TMT_B_TRF S
		ON    
			T.TRF_CD 			= S.TRF_CD
			AND T.SUB_TRF_CD 	= S.SUB_TRF_CD
			AND S.PRC_TP_CD 	= 'S',
			CG_INFO G
 	</sql>
 	
 	<sql id="getTrfInfoForProformaIvOfExportHG">
		WITH CG_INFO
		     AS (
		     	SELECT *
		        FROM TMT_SHIPG_NOTE
		        WHERE SHIPG_NOTE_NO = #{shipgNoteNo} 
		        AND VSL_CALL_ID = #{vslCallId}
			 ),
		     TRF_FILTER
		     AS (
		     	SELECT 
					C.TRF_CD,
					C.SUB_TRF_CD,
					S.UNIT_PRC,
					S.APLY_YMD,
					S.EXPR_YMD,
					ISNULL(COUNT (*), 0) AS CNT
				FROM 
					TMT_B_TRF_CD T 
				INNER JOIN 
					TMT_B_TRF_COND C
				ON
					T.TRF_CD 			= C.TRF_CD
					AND T.SUB_TRF_CD 	= C.SUB_TRF_CD
				LEFT OUTER JOIN 
					TMT_B_TRF S
				ON 
					T.TRF_CD 			= S.TRF_CD 
					AND T.SUB_TRF_CD 	= S.SUB_TRF_CD 
					AND S.PRC_TP_CD 	= 'S',
					CG_INFO G
				WHERE 
					T.TRF_TP_CD = 'HG'
				AND (  (C.PRPT_CD = 'C1' AND C.CHR_VAL = G.CATG_CD) --CATG_CD
					OR (C.PRPT_CD = 'C3' AND C.CHR_VAL = G.DELV_TP_CD) --DELV_TP_CD
					OR (C.PRPT_CD = 'C7' AND C.CHR_VAL = G.CG_TP_CD) --CG_TP_CD
					OR (C.PRPT_CD = 'C8' AND C.CHR_VAL = G.CMDT_CD))
				GROUP BY 
					C.TRF_CD,
					C.SUB_TRF_CD,
					S.UNIT_PRC,
					S.APLY_YMD,
					S.EXPR_YMD
				<!-- ORDER BY CNT DESC --> <!-- CANNOT USE -->
			),
		    TRF_INFO
		    AS (
		    	SELECT TOP(1) *
				FROM 
					TRF_FILTER
				ORDER BY 
					CNT DESC
			)
		SELECT TOP 1
			T.TRF_CD,
			T.SUB_TRF_CD,
			T.DESCR,
			T.TRF_TP_CD,
			dbo.F_CM_CODE_NM ('MT', 'TRFTP', T.TRF_TP_CD) 			AS TRF_TP_NM,
			T.BILL_TP_CD,
			S.UNIT_PRC,
			S.UNIT_PRC 												AS STD_RATE,
			T.PAYER 												AS PAYER_TP,
			CASE T.PAYER WHEN 'FWD' THEN G.FWRD WHEN 'SHA' THEN G.SHIPG_AGNCY ELSE  '' END
																	AS PAYER_CD,
			DBO.F_GET_PARTNER_INFO (
			  CASE T.PAYER WHEN 'FWD' THEN G.FWRD WHEN 'SHA' THEN G.SHIPG_AGNCY ELSE  '' END,
			  'ENG_SNM')
																	AS PAYER_NM,
			DBO.F_GET_PARTNER_INFO (
			  CASE T.PAYER WHEN 'FWD' THEN G.FWRD WHEN 'SHA' THEN G.SHIPG_AGNCY ELSE  '' END,
			  'ADDR')
																	AS PAYER_ADDR,
			CAST (ROUND ( (ISNULL(S.UNIT_PRC, 1) * G.CG_WGT), 2) 	AS NUMERIC (15, 3))
																	AS NET_AMOUNT,
			G.VSL_CALL_ID,
			G.SHIPG_NOTE_NO 										AS CG_NO,
			G.CMDT_CD,
			dbo.F_GET_CMDT_DESC (G.CMDT_CD) 						AS CMDT_DESC,
			G.CG_TP_CD,
			G.CATG_CD,
			G.DELV_TP_CD,
			G.CG_WGT 												AS WGT,
			'PRF' 													AS GATHER_TP_CD,
			'PRF' 													AS IV_PRFX,
			'P'														AS IV_TP,
			T.COST_CENT_CD,
			G.CG_WGT 												AS ISSUED_MT
		FROM 
			TMT_B_TRF_CD T
		INNER JOIN 
			TMT_B_TRF_COND C
		ON 
			T.TRF_CD 			= C.TRF_CD 
			AND T.SUB_TRF_CD 	= C.SUB_TRF_CD
		INNER JOIN TRF_INFO F
		ON 
			T.TRF_CD 			= F.TRF_CD 
			AND T.SUB_TRF_CD 	= F.SUB_TRF_CD
		LEFT OUTER JOIN TMT_B_TRF S
		ON    
			T.TRF_CD 			= S.TRF_CD
			AND T.SUB_TRF_CD 	= S.SUB_TRF_CD
			AND S.PRC_TP_CD 	= 'S',
			CG_INFO G
 	</sql>
 	
 	<select id="selectTrfInfoForProformaIv" resultMap="resultProformaMap" parameterType="proformaInvoiceParm">	
		<choose>
			<when test="searchTp == 'BL'">
				<include refid="getTrfInfoForProformaIvOfImportHG"/>
			</when>
			<otherwise>
				<include refid="getTrfInfoForProformaIvOfExportHG"/>
			</otherwise>
		</choose>
	</select>
	
	<select id="selectIsExistedPorthandlingInvoiced"   parameterType="proformaInvoiceParm" resultType="java.lang.String">
		SELECT
			COUNT(1) AS strResult 
		FROM 
			TMT_B_IV_DATA I 
		INNER JOIN 
			TMT_B_TRF_CD T 
		ON 
			I.TRF_CD 			= T.TRF_CD
			AND I.SUB_TRF_CD 	= T.SUB_TRF_CD
		WHERE   
			SCR_ID 				= 'PRF' 
			AND T.TRF_TP_CD IN ('HG')
			AND STAT_CD NOT IN ('GT')
			AND VSL_CALL_ID 	= #{vslCallId}
			AND REF_NO1 		= #{blNo}
	</select>
	
	<select id="selectReceiptReport" parameterType="proformaInvoiceParm" resultMap="receiptMap">
		WITH FREE_STRG_DATE AS (
			SELECT	
				MIN(
					CASE     
						WHEN ISNULL(I.FREE_DAYS, 0) = 0
		                     THEN I.SVC_ST_DT
						ELSE 
							DATEADD(DAY, ISNULL(I.FREE_DAYS, 0) - 1, I.SVC_ST_DT)
					END
				) 												AS FREE_OS_END_DT
			FROM    
				TMT_B_IV_DATA 									I 
			INNER JOIN 
				TMT_B_TRF_CD 									T 
					ON I.TRF_CD 								= T.TRF_CD 
					AND I.SUB_TRF_CD 							= T.SUB_TRF_CD
			WHERE   
				T.TRF_TP_CD 									= 'OS'
				AND I.VSL_CALL_ID 								= #{vslCallId}
				AND I.IV_NO 									= #{ivNo}
				AND I.STAT_CD 									NOT IN ('IC')
		)
		SELECT /*proformaInvoice.selectReceiptReport*/
			#{curr} 												AS CRCY_CD,
			I.GATHER_NO,
			I.TRF_CD,
			I.SUB_TRF_CD,
			I.TRF_DESCR,
			T.TRF_TP_CD,
			dbo.F_CM_CODE_NM ('MT', 'TRFTP', T.TRF_TP_CD) 			AS TRF_TP_NM,
			ISNULL(I.COST_CENT_CD, T.COST_CENT_CD) 					AS COST_CENT_CD,
			A.PAYER,
			A.PAYER_TP_CD,
			DBO.F_GET_PARTNER_INFO (I.PAYER, 'ENG_SNM') 			AS PAYER_NM,
			DBO.F_GET_PARTNER_INFO (I.PAYER, 'ADDR')				AS PAYER_ADDR,
			CASE
				WHEN A.PAYER_TP_CD = 'SHA'
				THEN
					(SELECT TOP 1 
						A1.TEL_NO
					FROM 
						TMT_AGENCY_INFO 	A1
					WHERE 
						A1.AGENCY_CODE 		= A.PAYER
					)
			ELSE
				(SELECT TOP 1  
					A1.TEL_NO
				FROM 
					TMT_PTNR A1
				WHERE     
					A1.PTNR_CODE 			= A.PAYER
					AND A1.PTNR_TYPE 		= A.PAYER_TP_CD
				)
			END 													AS PAYER_TEL,
			CASE
				WHEN A.PAYER_TP_CD = 'SHA'
				THEN
					(SELECT TOP 1  
						A1.REG_NO
					FROM 
						TMT_AGENCY_INFO 	A1
					WHERE 
						A1.AGENCY_CODE 		= A.PAYER
					)
			ELSE
				(SELECT  TOP 1 
					A1.REG_NO
				FROM 
					TMT_PTNR 				A1
				WHERE     
					A1.PTNR_CODE 			= A.PAYER
					AND A1.PTNR_TYPE 		= A.PAYER_TP_CD
				)
			END 													AS PAYER_TAX_NO,
			I.UNIT1_VAL,
			I.UNIT2_VAL,
			I.UNIT3_VAL,
			I.APLY_RATE,
			I.APLY_AMT,
			I.TOTAL_AMT,
			P.VSL_NM,
			I.VSL_CALL_ID,
			DOC.MF_DOC_ID,
			DOC.BL_NO,
			FORMAT (A.UPDATE_TIME, 'dd-MMMM-yyyy') 					AS IV_DT,
			A.PAY_TP_CD,
			A.IV_TP,
			I.STAT_CD,
			ISNULL(A.PAID_ST, 'N') 									AS PAID_YN,
			A.IV_NO,
			D.TMNL_NM,
			D.COMP_REG_NO,
			D.TEL_NO,
			D.FAX_NO,
			A.STAFF_CD,
			ISNULL(I.REF_NO1, I.REF_NO2) 							AS refNo,
			(SELECT TOP 1 
				CUST_CD
			FROM 
				TMT_PTNR PTNR
			WHERE 
				PTNR_CODE 					= I.PAYER
			UNION
			SELECT TOP 1 
				CUST_CD
			FROM 
				TMT_AGENCY_INFO 			PTNR
			WHERE 
				PTNR.AGENCY_CODE 			= I.PAYER
			) 														AS accNo,
			DBO.F_GET_PARTNER_INFO (I.PAYER, 'ADDR') 				AS accNm,
			I.TAX_TYPE,
			ISNULL(I.TAX_AMT, 0) 									AS TAX_AMT,
			ISNULL(I.TAX_VALUE, 0) 									AS TAX_VALUE,
			S.ETA 													AS ETA,
			S.ETD 													AS ETD,
			S.ETW 													AS ETW,
			S.ETC 													AS ETC,
			P.GRT,
			P.LOA,
			(
			SELECT TOP 1 
				TAX_CD
			FROM (
				SELECT 
					TAX_CD 
				FROM 
					TMT_PTNR 
				WHERE 
					PTNR_CODE = A.PAYER
				UNION
				SELECT 
					TAX_CD
				FROM 
					TMT_AGENCY_INFO
				WHERE 
					AGENCY_CODE = A.PAYER
				) A
			) 														AS PAYER_TAX_CD,
			CASE
				WHEN T.TRF_TP_CD IN ('OS','CSO')
					THEN  
						FORMAT(
							DATEADD(
								DAY, 
								ISNULL(I.FREE_DAYS, 0), 
								I.SVC_ST_DT
							), 
							'dd-MMMM-yyyy'
						)
				ELSE NULL
			END 													AS firstChargeDate,
			CASE
				WHEN T.TRF_TP_CD IN ('OS','CSO')
					THEN FORMAT(I.SVC_END_DT, 'dd-MMMM-yyyy')
				ELSE NULL
			END 													AS lastChargeDate,
			CASE 
				WHEN P.VSL_CD = 'STRG' OR P.VSL_CD = 'CSTO' 
					THEN '' 
				ELSE FORMAT(S.ATB, 'dd-MMMM-yyyy HH:mm') 
			END 													AS ATB, 
			CASE 
				WHEN P.VSL_CD = 'STRG' OR P.VSL_CD = 'CSTO' 
					THEN '' 
				ELSE FORMAT(S.ATD, 'dd-MMMM-yyyy HH:mm') 
			END 													AS ATD,
		CASE 
			 	WHEN P.VSL_CD = 'STRG' OR P.VSL_CD = 'CSTO' 
					THEN '' 
	         	ELSE
					CASE 	
						WHEN (
							STRG.FREE_OS_END_DT IS NOT NULL
							AND STRG.FREE_OS_END_DT <![CDATA[<>]]> ''
						)
							THEN 
								CASE 	
									WHEN STRG.FREE_OS_END_DT <![CDATA[>]]> I.EXP_DT 
										THEN FORMAT(STRG.FREE_OS_END_DT, 'dd-MMMM-yyyy')
									ELSE FORMAT(I.EXP_DT, 'dd-MMMM-yyyy')
								END
						
						ELSE 
							CASE 	
								WHEN (
									(
										S.ATC IS NOT NULL 
										AND S.ATC <![CDATA[<>]]> ''
									)
									AND (
										S.ATB IS NOT NULL 
										AND S.ATB <![CDATA[<>]]> ''
									)
									AND S.ATC-S.ATB <![CDATA[<]]> ISNULL(#{osFreeDays}, 3)
								)
									THEN 
										CASE ISNULL(I.FREE_DAYS, 0)
											WHEN 0 
												THEN 
													FORMAT(
														DATEADD(
															DAY,
															ISNULL(I.FREE_DAYS, 0),
															S.ATC
														), 
														'dd-MMMM-yyyy'
													)
											ELSE 
												FORMAT(
													DATEADD(
														DAY, 
														ISNULL(I.FREE_DAYS, 0) - 1, 
														S.ATC
													), 
													'dd-MMMM-yyyy'
												)
										END
								WHEN (
									(
										S.ATC IS NOT NULL 
										AND S.ATC <![CDATA[<>]]> ''
									)
									AND (
										S.ATB IS NOT NULL 
										AND S.ATB <![CDATA[<>]]> ''
									)
									AND S.ATC-S.ATB <![CDATA[>=]]> ISNULL(#{osFreeDays}, 3)
								)
									THEN 
										CASE ISNULL(I.FREE_DAYS, 0)
											WHEN 0
												THEN 
													FORMAT(
														DATEADD(
															DAY, 
															ISNULL(I.FREE_DAYS, 0) + ISNULL(#{osFreeDays}, 3),
															S.ATB
														), 
														'dd-MMMM-yyyy'
													)
											ELSE 
												FORMAT( 
													DATEADD(
														DAY, 
														(ISNULL(I.FREE_DAYS, 0)-1) + ISNULL(#{osFreeDays}, 3),
														S.ATB
													), 
													'dd-MMMM-yyyy'
												)
										END
									WHEN (
										(
											S.ATC IS NULL 
											OR S.ATC = ''
										)
										AND (
											S.ATB IS NOT NULL 
											AND S.ATB <![CDATA[<>]]> ''
										)
									)
									THEN 
										CASE ISNULL(I.FREE_DAYS, 0)
											WHEN 0 
												THEN 
													FORMAT(
														DATEADD(DAY, ISNULL(I.FREE_DAYS, 0), S.ATB), 
														'dd-MMMM-yyyy'
													)
											ELSE 
												FORMAT(
													DATEADD(DAY, ISNULL(I.FREE_DAYS, 0) - 1, S.ATB), 
													'dd-MMMM-yyyy'
												)
										END
								ELSE NULL
							END		
	
					END
			END  												AS EXP_DT,
			CASE 
				WHEN P.VSL_CD = 'STRG' OR P.VSL_CD = 'CSTO' THEN '' 
				ELSE
					CASE 	
						WHEN (
							STRG.FREE_OS_END_DT IS NOT NULL
							AND STRG.FREE_OS_END_DT <![CDATA[<>]]> ''
						)
							THEN FORMAT(STRG.FREE_OS_END_DT, 'dd-MMMM-yyyy')
						ELSE 
							CASE 	
								WHEN (
									S.ATC IS NOT NULL 
									AND S.ATB IS NOT NULL 
									AND S.ATC-S.ATB <![CDATA[<]]> ISNULL(#{osFreeDays}, 3)
								)
									THEN 
										CASE ISNULL(I.FREE_DAYS, 0)
											WHEN 0 THEN
												FORMAT(
													DATEADD(
														DAY, 
														ISNULL(I.FREE_DAYS, 0), 
														S.ATC), 
														'dd-MMMM-yyyy'
												)
											ELSE 
												FORMAT(
													DATEADD(
														DAY, 
														ISNULL(I.FREE_DAYS, 0)-1, 
														S.ATC
													), 
													'dd-MMMM-yyyy'
												)
										END 
								WHEN (
									(
										S.ATC IS NOT NULL 
										AND S.ATC <![CDATA[<>]]> ''
									)
									AND (
										S.ATB IS NOT NULL 
										AND S.ATB <![CDATA[<>]]> ''
									)
									AND S.ATC-S.ATB <![CDATA[>=]]> ISNULL(#{osFreeDays}, 3)
								)
									THEN 
										CASE ISNULL(I.FREE_DAYS, 0)
											WHEN 0 THEN
												FORMAT(
													DATEADD(
														DAY, 
														ISNULL(I.FREE_DAYS, 0) + ISNULL(#{osFreeDays}, 3), 
														S.ATB
													), 
													'dd-MMMM-yyyy'
												)
											ELSE 
												FORMAT(
													DATEADD(
														DAY, 
														(ISNULL(I.FREE_DAYS, 0)-1) + ISNULL(#{osFreeDays}, 3), 
														S.ATB
													), 
													'dd-MMMM-yyyy'
												)
										END
								WHEN (
									(
										S.ATC IS NULL 
										OR S.ATC = ''
									)
									AND (
										S.ATB IS NOT NULL
										AND S.ATB <![CDATA[<>]]> ''
									)
								) 
									THEN 
										CASE ISNULL(I.FREE_DAYS, 0)
											WHEN 0 THEN 
												FORMAT(
													DATEADD(
														DAY, 
														ISNULL(I.FREE_DAYS, 0), S.ATB
													), 
													'dd-MMMM-yyyy'
												)
											ELSE 
												FORMAT(
													DATEADD(DAY, ISNULL(I.FREE_DAYS, 0) - 1, S.ATB),
													'dd-MMMM-yyyy'
												)
										END 
								ELSE NULL
							END				
					END 
			END 													AS FREE_OS_END_DT,
			dbo.F_GET_PARTNER_INFO(
				CASE 
					WHEN (
						DOC.CNSNE 			IS NOT NULL
						AND DOC.CNSNE 		<![CDATA[<>]]> ''
					)
						THEN
						DOC.CNSNE
		            ELSE
		               (SELECT TOP(1) 
					   		CNSNE
						FROM 
							TMT_BL B1
						WHERE     
							B1.VSL_CALL_ID 	= F.VSL_CALL_ID
							AND B1.MF_DOC_ID= F.MF_DOC_ID
		                UNION
		                SELECT TOP(1) 
							CNSNE
						FROM 
							TMT_SHIPG_NOTE 	S1
						WHERE     
							S1.VSL_CALL_ID 	= F.VSL_CALL_ID
							AND S1.MF_DOC_ID= F.MF_DOC_ID
						)
		        END, 
				'ENG_SNM'
			) 														AS CNSNE_NM			
		FROM 
			TMT_B_IV_DATA 											I
		INNER JOIN
			TMT_B_IV 												A
				ON  I.VSL_CALL_ID 									= A.VSL_CALL_ID 
				AND I.IV_NO 										= A.IV_NO
		INNER JOIN 
			TMT_B_TRF_CD 											T
				ON  I.TRF_CD 										= T.TRF_CD 
				AND I.SUB_TRF_CD 									= T.SUB_TRF_CD
		LEFT JOIN (
	        SELECT 
				SN.VSL_CALL_ID,                                                                            
				'E'                                           	AS OPE_CLASS_CD,
				SN.MF_DOC_ID,
				NULL                                 			AS BL_NO,
				SN.SHIPG_NOTE_NO,
				SN.SHIPG_NOTE_NO                   				AS CG_NO,
				SN.PKG_NO,
				SN.GDS_RMK                         				AS PKG_MARK,
				SN.CATG_CD,
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 		MSTD 
				WHERE L_CD 				= 'MT' 
				AND M_CD 				= 'CATGTP' 
				AND SN.CATG_CD 			= MSTD.S_CD 
				)									         	AS CATG_NM,
				SN.CG_TP_CD,
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CGTP' 
					AND S_CD_USE 		= 'Y' 
					AND  S_CD 			= SN.CG_TP_CD
				)									       		AS CGTPNM,
				SN.CMDT_GRP_CD,
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CMDTGRP' 
					AND S_CD_USE 		= 'Y' 
					AND  S_CD 			= SN.CMDT_GRP_CD
				)									 			AS CMDTGRPNM,
				SN.CMDT_CD,
				(SELECT 
					CMDT_DESC 
				FROM 
					TMT_CMDT CMDT 
				WHERE 
					CMDT.CMDT_CD 		= SN.CMDT_CD 
					AND CMDT.CMDT_GRP_CD= SN.CMDT_GRP_CD
				)									                AS CMDTNM,
				SN.PKG_TP_CD,
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'PKGTP' 
					AND S_CD_USE 		= 'Y' 
					AND  S_CD 			= SN.PKG_TP_CD
				)									     		AS PKGTPNM,
				SN.IMDG                            				AS IMDGCLASS,
				SN.UNNO                                      	AS UNNO,
				SN.CG_WGT                 						AS WGT,
				SN.CG_VOL                						AS VOL,
				SN.PKG_QTY,
				SN.DELV_TP_CD,
				SN.TSPT_TP_CD,
				SN.FWRD,                                                                                 
				SN.SHIPG_AGNCY                            		AS SHIPG_AGENT,
				SN.CNSNE,
				SN.SHPR,                                                                              
				SN.POR                                      	AS POR,
				SN.POD                                       	AS POD, 
				SN.POL                                      	AS POL,
				SN.FDEST,
				SN.DOMESTIC_CHK
			FROM 
				TMT_SHIPG_NOTE 									SN
			
			UNION

			SELECT 
				BL.VSL_CALL_ID,                                                                            
				'I'                                             AS OPE_CLASS_CD,
				BL.MF_DOC_ID,                                                                           
				BL.BL_NO,                                                                                
				NULL,                                                                                     
				BL.BL_NO                             			AS CG_NO,
				'BL.PKG_NO'										AS PKG_NO,                                                                                 
				'BL.PKG_MARK'									AS PKG_MARK,                                                                           
				BL.CATG_CD,                                                                             
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 		MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CATGTP' 
					AND BL.CATG_CD 		= MSTD.S_CD 
				) 							                   	AS CATGNM,
				BL.CG_TP_CD,                                                                         
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CGTP' 
					AND S_CD_USE 		= 'Y' 
					AND S_CD 			= BL.CG_TP_CD
				) 												AS CGTPNM,
				BL.CMDT_GRP_CD,                                                                         
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CMDTGRP' 
					AND S_CD_USE 		= 'Y' 
					AND S_CD 			= BL.CMDT_GRP_CD
				) 												AS CMDTGRPNM,
				BL.CMDT_CD,                                                                         
				(SELECT 
					CMDT_DESC 
				FROM 
					TMT_CMDT CMDT 
				WHERE 
					CMDT.CMDT_CD 		= BL.CMDT_CD 
					AND CMDT.CMDT_GRP_CD= BL.CMDT_GRP_CD
				) 							               		AS CMDTNM,
				BL.PKG_TP_CD,                                                                         
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'PKGTP' 
					AND S_CD_USE 		= 'Y' 
					AND  S_CD 			= BL.PKG_TP_CD
				) 							    				AS PKGTPNM,
				BL.IMDG_CLASS                                	AS IMDGCLASS,
				BL.UNNO                                       	AS UNNO,
				BL.CG_WGT,
				BL.CG_VOL,
				BL.PKG_QTY,
				BL.DELV_TP_CD,
				BL.TSPT_TP_CD,
				BL.FWRD,                                                                                 
				'BL.SHIPG_AGENT'								AS SHIPG_AGENT,                                                                         
				BL.CNSNE,                                                                               
				BL.SHPR,
				NULL                                         	AS POR,
				BL.POD,
				BL.POL,
				BL.FDEST,
				BL.DOMESTIC_CHK
			FROM 
				TMT_BL 											BL 
			) 													DOC
	            ON I.VSL_CALL_ID 								= DOC.VSL_CALL_ID 
				AND I.REF_NO1 									= DOC.CG_NO
		LEFT OUTER JOIN
			TMT_VSL_SCH S 
				ON  DOC.VSL_CALL_ID 									= S.VSL_CALL_ID
		LEFT OUTER JOIN
			TMT_VSL_PART 											P 
				ON  S.VSL_CD 										= P.VSL_CD
		LEFT OUTER JOIN 
			TMT_TMNL_DEF 											D 
				ON 1 = 1
		LEFT OUTER JOIN 
			FREE_STRG_DATE 											STRG 
				ON 1=1
		LEFT OUTER JOIN 
			TMT_MF 													F 
				ON F.VSL_CALL_ID 									= I.VSL_CALL_ID 
				AND F.MF_DOC_ID 									= I.REF_NO2
		WHERE 	
			I.VSL_CALL_ID 											= #{vslCallId}
			AND A.IV_NO 											= #{ivNo}
		ORDER BY 
			DOC.BL_NO,
			T.TRF_TP_CD,
			T.TRF_CD,
			I.UPDATE_TIME
	</select>
	
	<select id="selectTrfInfoForCreditAdditionalIv" resultMap="resultProformaMap" parameterType="proformaInvoiceParm">	
		SELECT  /* proformaInvoice.selectTrfInfoForCreditAdditionalIv */
			I.TRF_CD
			,I.SUB_TRF_CD
			,T.DESCR
			,T.TRF_TP_CD
			,T.COST_CENT_CD
			,T.BILL_TP_CD
			,I.PAYER AS PAYER_CD
			,B.PAYER_TP_CD AS PAYER_TP
			,S.UNIT_PRC
			,I.VSL_CALL_ID
			,C.CATG_CD
			,C.DELV_TP_CD
			,C.CG_TP_CD
			,C.CMDT_CD
			,C.PKG_QTY
			<choose>
				<when test="category == 'Import'">
					,C.BL_NO AS CG_NO
					,C.WGT AS WGT
					,C.VOL AS MSRMT
				</when>
				<otherwise>
					,C.SHIPG_NOTE_NO AS CG_NO
					,C.CG_WGT AS WGT
					,C.CG_MSRMT AS MSRMT
				</otherwise>
			</choose>
		        
		FROM    
			TMT_B_IV_DATA I
		INNER JOIN 
			TMT_B_IV_DATA_DTL D 
		ON 
			I.VSL_CALL_ID 			= D.VSL_CALL_ID
			AND I.GATHER_NO 		= D.GATHER_NO
		INNER JOIN 
			TMT_B_IV B 
		ON
			I.VSL_CALL_ID 			= B.VSL_CALL_ID 
			AND I.IV_NO 			= B.IV_NO
		INNER JOIN 
			TMT_B_TRF_CD T
		ON
			I.TRF_CD 				= T.TRF_CD 
			AND I.SUB_TRF_CD 		= T.SUB_TRF_CD
		<choose>
			<when test="category == 'Import'">
				INNER JOIN 
					TMT_BL C 
				ON
					I.VSL_CALL_ID 	= C.VSL_CALL_ID
					AND I.REF_NO1 	=	 C.BL_NO
			</when>
			<otherwise>
				INNER JOIN 
					TMT_SHIPG_NOTE C 
				ON
					I.VSL_CALL_ID 	= C.VSL_CALL_ID 
					AND I.REF_NO1 	= C.SHIPG_NOTE_NO
			</otherwise>
		</choose>

		LEFT OUTER JOIN
			TMT_B_TRF S
		ON    
			T.TRF_CD 				= S.TRF_CD
			AND T.SUB_TRF_CD 		= S.SUB_TRF_CD
			AND S.PRC_TP_CD 		= 'S'
		                     
		WHERE   
			I.IV_NO 				= #{ivNo}
			AND I.VSL_CALL_ID 		= #{vslCallId}
			AND T.TRF_TP_CD 		= 'HG'
	</select>
	
	<select id="selectInvoiceNo"   parameterType="proformaInvoiceParm"  resultType="java.lang.String">
		SELECT ( #{ivPrfx}
					+ FORMAT(GETDATE(), 'yyMM') 
					+ (ISNULL(TRIM(FORMAT(MAX(RIGHT(IV_NO, 6))+1, '000000')),'000001')) )  AS IVNO  
		FROM
			TMT_B_IV 
		WHERE
			IV_NO LIKE #{ivPrfx} +FORMAT(GETDATE(), 'yyMM') +'%'
	</select>
	
	<sql id="sqlProformaInvoice">
	/* proformaInvoice.sqlProformaInvoice */
		WITH IMPORT_OPE_DATA AS (  
					SELECT VSL_CALL_ID,
		                  CG_NO,
		                  SUM (CG_WGT) 	AS WGT,
		                  SUM (CG_VOL) 	AS MSRMT,
		                  SUM (PKG_QTY) AS PKG_QTY
		             FROM 
						(SELECT 
							M.VSL_CALL_ID,
		                          M.BL_NO 							AS CG_NO,
		                          M.CG_TP_CD,
		                          M.SHIPG_AGNT,
		                          M.FWR_AGNT,
		                          M.CNSNE,
		                          M.ACTL_DELV_TP_CD,
		                          CAST (J.JOB_NO AS NVARCHAR (20)) 	AS JOB_NO,
		                          CASE WHEN J.FNL_OPE_YN = 'Y' THEN 1 ELSE 0 END
		                             AS FNL_OPE_YN,
		                          J.CG_WGT,
		                          J.CG_VOL,
		                          J.PKG_QTY,
		                          J.WORK_END_DT
						FROM 
							TMT_CG_MST M
						INNER JOIN
							TMT_BL B
						ON     
							M.VSL_CALL_ID 	= B.VSL_CALL_ID
							AND M.BL_NO 	= B.BL_NO
						INNER JOIN 
							TMT_JOB J
						ON   
							M.VSL_CALL_ID 	= J.VSL_CALL_ID
							AND M.CG_NO 	= J.CG_NO
		                    WHERE     
								J.JOB_PURP_CD IN ('WG', 'VG', 'AG')
								<if test="vslCallId != '' and vslCallId != null ">
									AND M.VSL_CALL_ID = #{vslCallId}
								</if>
								<if test="scn != '' and scn != null ">
									AND M.SHIP_CALL_NO = #{scn}
								</if>
		                          
						UNION ALL
						
						SELECT 
							R.VSL_CALL_ID,
							R.CG_NO,
							R.CG_TP_CD,
							'' 							AS SHIPG_AGNT,
							B.FWRD 						AS FWR_AGNT,
							B.CNSNE,
							R.DELV_TP_CD 				AS ACTL_DELV_TP_CD,
							<!--  CAST (R.RORO_SEQ AS NVARCHAR (20)) AS JOB_NO, -->
							NULL 						AS JOB_NO, 
							CASE MIN (
								  CASE
									 WHEN R.GATE_OUT_DTM IS NULL THEN 'N'
									 ELSE 'Y'
								  END)
							   OVER (PARTITION BY R.CG_NO)
							 WHEN 'N' THEN 0
							 ELSE 1
							END 						AS FNL_OPE_YN,
							R.CG_WGT 					AS WGT,
							R.CBM 						AS MSRMT,
							1 							AS PKG_QTY,
							R.GATE_OUT_DTM 				AS WORK_END_DT
						FROM 
							TMT_RORO_MST R
						INNER JOIN
							TMT_BL B
						 ON     
							R.CG_NO 			= B.BL_NO
							AND R.VSL_CALL_ID 	= B.VSL_CALL_ID
						WHERE     
							R.CG_TP_CD 			= 'RCV'
							AND IX_CD 			= 'I'
							<if test="vslCallId != '' and vslCallId != null ">
								AND R.VSL_CALL_ID = #{vslCallId}
							</if>
							<if test="scn != '' and scn != null ">
								AND R.SHIP_CALL_NO = #{scn}
							</if>
		                          
						) A
		         GROUP BY
					VSL_CALL_ID, CG_NO),
		         
		     EXPORT_OPE_DATA AS (  	
		     		SELECT 
						VSL_CALL_ID,
						CG_NO,
						SUM (CG_WGT) 			AS WGT,
						SUM (CG_VOL) 			AS MSRMT,
						SUM (PKG_QTY)	 		AS PKG_QTY
					FROM 
						(SELECT 
							M.VSL_CALL_ID,
							M.SHIPG_NOTE_NO 	AS CG_NO,
							M.CG_TP_CD,
							M.SHIPG_AGNT,
							M.FWR_AGNT,
							M.CNSNE,
							M.ACTL_DELV_TP_CD,
							CAST(J.JOB_NO AS NVARCHAR (20)) AS JOB_NO,
							CASE 
								WHEN J.FNL_OPE_YN = 'Y' THEN 1 
								ELSE 0 
							END  				AS FNL_OPE_YN,
							J.CG_WGT,
							J.CG_VOL,
							J.PKG_QTY,
							J.WORK_END_DT
						FROM 
							TMT_CG_MST M
						INNER JOIN 
							TMT_SHIPG_NOTE S
						ON    
							M.VSL_CALL_ID		= S.VSL_CALL_ID
							AND M.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
						INNER JOIN 
							TMT_JOB J
						ON     
							M.VSL_CALL_ID 		= J.VSL_CALL_ID
							AND M.CG_NO 		= J.CG_NO
		                    WHERE    
								J.JOB_PURP_CD IN ('AV', 'GV')
								<if test="vslCallId != '' and vslCallId != null ">
									AND M.VSL_CALL_ID = #{vslCallId}
								</if>
								<if test="scn != '' and scn != null ">
									AND M.SHIP_CALL_NO = #{scn}
								</if>
								
						UNION ALL
						
						SELECT 
							R.VSL_CALL_ID,
							R.CG_NO,
							R.CG_TP_CD,
							S.SHIPG_AGNCY AS SHIPG_AGNT,
							S.FWRD AS FWR_AGNT,
							S.CNSNE,
							R.DELV_TP_CD AS ACTL_DELV_TP_CD,
							<!--  CAST (R.RORO_SEQ AS NVARCHAR (20)) AS JOB_NO, --><!--RORO_SEQ DONT EXIST  -->
							'1' AS JOB_NO, <!-- test -->
							CASE MIN (
								  CASE
									 WHEN R.GATE_OUT_DTM IS NULL THEN 'N'
									 ELSE 'Y'
								  END)
							   OVER (PARTITION BY R.CG_NO)
							WHEN 'N'
							THEN
								0
							 ELSE
								1
						  END							AS FNL_OPE_YN,
							R.CG_WGT 					AS WGT,
							R.CBM 						AS MSRMT,
							1 							AS PKG_QTY,
							R.GATE_OUT_DTM 				AS WORK_END_DT
						FROM 
							TMT_RORO_MST R
						INNER JOIN 
							TMT_SHIPG_NOTE S
						 ON    
							R.CG_NO 			= S.SHIPG_NOTE_NO
							AND R.VSL_CALL_ID 	= S.VSL_CALL_ID
						WHERE     
							R.CG_TP_CD 	= 'RCV'
							AND IX_CD 	= 'X'
							<if test="vslCallId != '' and vslCallId != null ">
								AND R.VSL_CALL_ID = #{vslCallId}
							</if>
							<if test="scn != '' and scn != null ">
								AND R.SHIP_CALL_NO = #{scn}
							</if>
						) A
		         GROUP BY 
					VSL_CALL_ID, CG_NO),
		         
	sqlProformaInvoice AS (         
		SELECT
			   I.VSL_CALL_ID 									AS vslCallId,
		       B.MF_DOC_ID 										AS docNo,
		       B.BL_NO 											AS blSnNo,
		       'Import' 										AS category,
		       B.CG_WGT 										AS docMT,
		       D.UNIT1_VAL 										AS issuedMT,
		       I.PAYER 											AS payerCd,
		       DBO.F_GET_PARTNER_INFO (I.PAYER, 'ENG_SNM') 		AS payerNm,
		       I.IV_NO 											AS ivNo,
		       I.IV_NO 											AS finalInvoiceNo,
		       I.IV_AMT 										AS ivAmt,
		       I.TOTAL_AMT 										AS totalAmt,
		       I.STAT_CD										AS statusCd,
		       dbo.F_CM_CODE_NM ('MT', 'IVSTAT', I.STAT_CD) 	AS issuedStatus,
       		   I.IV_TP 											AS ivTp,
       		   dbo.F_CM_CODE_NM ('MT', 'IVTP', I.IV_TP) 		AS ivTpNm,
       		   I.REF_IV_NO 										AS refInvNo,
       		   '' 												AS addCreditIvNo,
				CASE 
					WHEN (
						SELECT COUNT(1) 
						FROM 
							TMT_B_IV I1 
						WHERE 
							I1.VSL_CALL_ID 	= I.VSL_CALL_ID 
							AND I1.IV_TP 	IN ('C', 'A') 
							AND I1.REF_IV_NO = I.IV_NO
					) = 0
						THEN 'Y'
		            ELSE 'N'
				END 											AS allowCreateAddCredit,
       		   ISNULL(I.PAID_ST, 'N') 							AS paidYn,
			   FORMAT(I.IV_DT, 'dd/MM/yyyy HH:mm') 				AS ivDt,
			   I.TAX_AMT 										AS TAXAMT
		FROM 
			TMT_B_IV 											I
		INNER JOIN (
                SELECT 
                    VSL_CALL_ID,
                    SUM(UNIT1_VAL) 								AS UNIT1_VAL,
                    IV_NO,
                    REF_NO1
                FROM 
					TMT_B_IV_DATA
                GROUP BY 
					VSL_CALL_ID, 
					IV_NO, 
					REF_NO1
            ) 													D
		ON 
			I.VSL_CALL_ID 										= D.VSL_CALL_ID 
			AND I.IV_NO 										= D.IV_NO
		INNER JOIN 
			TMT_BL 												B
		ON 
			I.VSL_CALL_ID 										= B.VSL_CALL_ID 
			AND D.REF_NO1 										= B.BL_NO
		WHERE 
			I.IV_PRFX 											= 'PFI' 
			<if test="invoiceType != '' and invoiceType != null ">
				AND I.IV_TP 									= #{invoiceType}
			</if>
			<if test="vslCallId != '' and vslCallId != null ">
				AND I.VSL_CALL_ID 								= #{vslCallId}
			</if>
			<if test="scn != '' and scn != null ">
				AND I.SHIP_CALL_NO 								= #{scn}
			</if>
			<if test="ivNo != '' and ivNo != null ">
				AND I.IV_NO 									LIKE '%' + #{ivNo} + '%'
			</if>
			<if test="fromDate != '' and fromDate != null ">
				AND I.IV_DT &gt;= 								CONVERT (DATETIME, #{fromDate} + ' 00:00:00', 103)
			</if>
			<if test="toDate != '' and toDate != null ">
				AND I.IV_DT &lt;= 								CONVERT (DATETIME, #{toDate} + ' 23:59:59', 103)
			</if>  
			
		UNION ALL
		
		SELECT 
			I.VSL_CALL_ID 										AS vslCallId,
			S.MF_DOC_ID 										AS docNo,
			S.SHIPG_NOTE_NO 									AS blSnNo,
			'Export' 											AS category,
			S.CG_WGT 											AS docMT,
			D.UNIT1_VAL 										AS issuedMT,
			I.PAYER 											AS payerCd,
			DBO.F_GET_PARTNER_INFO (I.PAYER, 'ENG_SNM') 		AS payerNm,
			I.IV_NO 											AS ivNo,
			I.IV_NO 											AS finalInvoiceNo,
			I.IV_AMT 											AS ivAmt,
			I.TOTAL_AMT 										AS totalAmt,
			I.STAT_CD 											AS statusCd,
			dbo.F_CM_CODE_NM ('MT', 'IVSTAT', I.STAT_CD) 		AS issuedStatus,
			I.IV_TP 											AS ivTp,
			dbo.F_CM_CODE_NM ('MT', 'IVTP', I.IV_TP) 			AS ivTpNm,
			I.REF_IV_NO 										AS refInvNo,
			'' 													AS addCreditIvNo,
			CASE 
				WHEN (
					SELECT COUNT(1) 
					FROM 
						TMT_B_IV I1 
					WHERE 
						I1.VSL_CALL_ID 	= I.VSL_CALL_ID 
						AND I1.IV_TP 	IN ('C', 'A') 
						AND I1.REF_IV_NO = I.IV_NO
				) = 0
					THEN 'Y'
				ELSE 'N' END 									AS allowCreateAddCredit,
			ISNULL(I.PAID_ST, 'N') 								AS paidYn,
			FORMAT(I.IV_DT, 'dd/MM/yyyy HH:mm') 				AS ivDt,
			I.TAX_AMT 											AS TAXAMT
		FROM
			TMT_B_IV 											I
		INNER JOIN (
			SELECT 
				VSL_CALL_ID,
				SUM(UNIT1_VAL)									UNIT1_VAL,
				IV_NO,
				REF_NO1
			FROM 
				TMT_B_IV_DATA
			WHERE 
				SCR_ID = 'PFI'
          	GROUP BY 
	          	VSL_CALL_ID, 
	          	IV_NO, 
	          	REF_NO1
		)														D
		ON
			I.VSL_CALL_ID 										= D.VSL_CALL_ID
			AND I.IV_NO 										= D.IV_NO
		INNER JOIN 
			TMT_SHIPG_NOTE 										S
		ON 
			I.VSL_CALL_ID 										= S.VSL_CALL_ID 
			AND D.REF_NO1 										= S.SHIPG_NOTE_NO
		WHERE  
			I.IV_PRFX 											= 'PFI' 
			<if test="invoiceType != '' and invoiceType != null ">
				AND I.IV_TP 									= #{invoiceType}
			</if>
			<if test="vslCallId != '' and vslCallId != null ">
				AND I.VSL_CALL_ID 								= #{vslCallId}
			</if>
			<if test="scn != '' and scn != null ">
				AND I.SHIP_CALL_NO 								= #{scn}
			</if>
			<if test="ivNo != '' and ivNo != null ">
				AND I.IV_NO 									LIKE '%' + #{ivNo} + '%'
			</if> 
			<if test="fromDate != '' and fromDate != null ">
				AND I.IV_DT &gt;= 								CONVERT (DATETIME, #{fromDate} + ' 00:00:00', 103)
			</if>
			<if test="toDate != '' and toDate != null ">
				AND I.IV_DT 									&lt;=  CONVERT (DATETIME, #{toDate} + ' 23:59:29', 103)
			</if>
		)
	</sql>
 	
	<select id="selectProformaInvoiceCount" parameterType="proformaInvoiceParm" resultType="java.lang.String" >
        <include refid="sqlProformaInvoice"/>
        SELECT /*proformaInvoice.selectProformaInvoiceCount*/
        	 COUNT(*)
        FROM 
			sqlProformaInvoice
	</select>
	
	<select id="selectProformaInvoice" resultType="proformaInvoiceItem" parameterType="proformaInvoiceParm">	
		<include refid="sqlProformaInvoice"/>
		<choose>
			<when test="pageNo != 0"> 
				SELECT * FROM /*proformaInvoice.selectProformaInvoice*/
	             	(SELECT 
						*, 
						ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) row_num
					FROM 
	             		sqlProformaInvoice
					)inner_query 
				WHERE 
					inner_query.row_num <![CDATA[>]]> (CAST(CASE WHEN #{pageNo} = '0' THEN '1'ELSE #{pageNo} END AS INT) -1)* CAST(#{sizePerPage} AS INT)
			  		AND inner_query.row_num <![CDATA[<=]]> CAST(CASE WHEN #{pageNo} = '0' THEN '1'ELSE #{pageNo} END AS INT) * CAST(#{sizePerPage} AS INT)
			</when>
					
			<otherwise> 
				SELECT /*proformaInvoice.selectProformaInvoice*/
					*
				FROM
					sqlProformaInvoice
			</otherwise>
		</choose>
		ORDER BY 
			vslCallId, docNo, ivDt
	</select>

	<!-- End Proforma Invoice Screen -->
	
	<!-- Proforma Detail Screen -->
	<insert id="insertProformaInvoice" parameterType="proformaInvoiceItem">
		INSERT /* proformaInvoice.insertProformaInvoice */ 
		INTO TMT_B_IV (
			VSL_CALL_ID, 
 			IV_NO, 
			IV_PRFX,
			STAT_CD,
			IV_DT,
			IV_DUE_DT,
			PAYER,
			IV_AMT,
			STAFF_CD,
			UPDATE_TIME,
			VERSION,
			TOTAL_AMT,
			PAY_TP_CD,
			IV_TP,
			PAYER_TP_CD,
			REF_IV_NO,
			PAID_ST,
			TAX_AMT
		) VALUES (
			#{vslCallId},
			#{ivNo},
			#{ivPrfx},
			#{statusCd},
			GETDATE(), 
			GETDATE(), 
			#{payerCd},
			TRY_CONVERT(NUMERIC(15,3), #{ivAmt}),
			#{userId},					
			GETDATE(),
			#{version},
			TRY_CONVERT(NUMERIC(15,3), #{totalAmt}),
			#{paymentType},
			#{ivTp},
			#{payerTp},
			#{refInvNo},
			#{paidYn},
			#{taxAmt}
		)
	 </insert>
	 
	<insert id="insertProformaInvoiceData" parameterType="proformaInvoiceItem">
		<selectKey order="BEFORE" resultType="String" keyProperty="gatherNo" >
		 	(SELECT 
				'MOST'+'_'+ REPLACE(FORMAT (CAST (ISNULL(MAX (SUBSTRING (GATHER_NO, 6, 6)), '0') AS NUMERIC(15,0)) + 1, '000000'),' ','') 
				+ '_'+FORMAT (GETDATE(), 'yyyyMMdd') AS gatherNo 
			FROM  
				TMT_B_IV_DATA 
			WHERE
				GATHER_NO LIKE 'MOST%' + FORMAT (GETDATE(), 'yyyyMMdd'))
		</selectKey> 
		INSERT /* proformaInvoice.insertProformaInvoiceData */ 
		INTO TMT_B_IV_DATA (
			GATHER_NO,
			TRF_CD,
			SUB_TRF_CD,
			TRF_DESCR,
			PAYER,
			BILL_TP_CD,
			VSL_CALL_ID,
			STAT_CD,
			UNIT1_VAL,
			UNIT2_VAL,
			UNIT3_VAL,
			STD_RATE,
			IV_PRFX,
			IV_NO,
			REF_NO1,
			REF_NO2,
			REVS_RATE,
			REVS_AMT,
			REVS_UNIT1_VAL,
			STAFF_CD,
			UPDATE_TIME,
			VERSION,
			SCR_ID,
			TOTAL_AMT,
			GATHER_DT,
			APLY_RATE,
			APLY_AMT,
			COST_CENT_CD,
			ADHOC_YN,
			TAX_TYPE,
			TAX_VALUE,
			TAX_AMT
		) VALUES (
			#{gatherNo},
			#{trfCd},
			#{subTrf},
			#{trfDesc},
			#{payerCd},
			'VV',
			#{vslCallId},
			#{statusCd},
			TRY_CONVERT(NUMERIC(15,3), #{unit1Val}),
			TRY_CONVERT(NUMERIC(15,3), #{unit2Val}),
			TRY_CONVERT(NUMERIC(15,3), #{unit3Val}),
			TRY_CONVERT(NUMERIC(15,3), #{stdRate}),
			#{ivPrfx},
			#{ivNo},
			#{blSnNo},
			#{docNo},
			TRY_CONVERT(NUMERIC(15,3), #{stdRate}),
			TRY_CONVERT(NUMERIC(15,3), #{ivAmt}),
			TRY_CONVERT(NUMERIC(15,3), #{issuedMT}),
			#{userId},
			GETDATE(),
			#{version},
			'PFI',
			TRY_CONVERT(NUMERIC(15,3), #{totalAmt}),
			GETDATE(),
			TRY_CONVERT(NUMERIC(15,3), #{applyRate}),
			TRY_CONVERT(NUMERIC(15,3), #{ivAmt}),
			#{costCenter},
			#{adhocYn},
			#{taxCd},
			#{taxValue},
			TRY_CONVERT(NUMERIC(15,3), #{taxAmt})
		)
	</insert> 
	
	<insert id="insertProformaInvoiceDataDetail" parameterType="proformaInvoiceItem">
		<selectKey keyProperty="gatherSeq" resultType="proformaInvoiceItem" order="BEFORE">
			SELECT /* proformaInvoice.generateGatherSeq*/
				(SELECT ISNULL(MAX(GATHER_SEQ), 0) + 1 
					FROM 
				TMT_B_IV_DATA_DTL
					WHERE GATHER_NO = #{gatherNo}) AS gatherSeq
		</selectKey>
		INSERT /* proformaInvoice.insertProformaInvoiceDataDetail */
		INTO TMT_B_IV_DATA_DTL (
			GATHER_NO,
			GATHER_SEQ,
			BILL_TP_CD,
			GATHER_TP_CD,
			TRF_CD,
			SUB_TRF_CD,
			TRF_DESCR,
			PAYER,
			VSL_CALL_ID,
			ADHOC_YN,
			IV_PRFX,
			IV_NO,
			UNIT1_VAL,
			CG_TP_CD,
			WGT,
			MSRMT,
			BL_NO,
			SHIPG_NOTE_NO,
			SHIPG_AGNT,
			FWR_AGNT,
			SHPR,
			CNSNE,
			STAFF_CD,
			UPDATE_TIME,
			VERSION,
			SYTM_ID,
			GATHER_DT,
			OPE_CLASS_CD,
			DELV_TP_CD,
			PKG_TP_CD,
			CMDT_CD,
			DG_CLASS,
			TSPT_TP_CD
		) VALUES (
			#{gatherNo},
			#{gatherSeq},
			'VV',
			#{gatherTpCd},
			#{trfCd},
			#{subTrf},
			#{trfDesc},
			#{payerCd},
			#{vslCallId},
			'N',
			#{ivPrfx},
			#{ivNo},
			#{issuedMT},
			#{cgTpCd},
			#{wgt},
			#{msrmt},
			<choose>
				<when test="opClassCd == 'I'.toString()">
					#{blSnNo},
					NULL,
				</when>
				<otherwise>
					NULL,
					#{blSnNo},
				</otherwise>
			</choose>
			#{shaCd},
			#{fwdCd},
			#{shpCd},
			#{cnsCd},
			#{userId},
			GETDATE(),
			GETDATE(),
			'MT',
			GETDATE(),
			#{opClassCd},
			#{delvTpCd},
			#{pkgTpCd},
			#{cmdtCd},
			#{imdgClass},
			#{transportTpCd}
		)
	</insert>
	
	<update id="updateInvoiceNoToProformaIvData"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateInvoiceInfoToIvData */ 
			TMT_B_IV_DATA
		SET 	
			IV_NO 												= #{ivNo},
			STAT_CD 											= #{statusCd},
			IV_PRFX 											= #{ivPrfx},
			UPDATE_TIME 										= GETDATE(),
			STAFF_CD 											= #{userId},
			VERSION 											= #{newVersion},
			PAYER 												= #{payerCd}
		WHERE 	
			GATHER_NO 											= #{gatherNo}
			AND VSL_CALL_ID 									= #{vslCallId}
	</update>
	
	<update id="updateOriginalHandlingGoodsIvData"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateOriginalHandlingGoodsIvData */ 
			TMT_B_IV_DATA
		SET 	 
			REF_NO3 		= #{refNo3}
			,UPDATE_TIME 	= GETDATE()
			,STAFF_CD 		= #{userId}
			,VERSION 		= #{newVersion}
		WHERE 	
			GATHER_NO 		= #{gatherNo}
			AND VSL_CALL_ID = #{vslCallId}
	</update>
	
	<update id="updateRefIvNo"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateRefIvNo */ 
			TMT_B_IV 
		SET 	
			REF_IV_NO		= #{ivNo}
			,UPDATE_TIME 	= GETDATE()
			,STAFF_CD 		= #{userId}
			,VERSION 		= #{newVersion}
		WHERE 	
			IV_NO 			= #{proformaInvoiceNo}
			AND VSL_CALL_ID = #{vslCallId}
	</update>
	
	<update id="updateBillWgtCargoMaster"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateBillWgtCargoMaster */ 
			TMT_CG_MST
		SET 	
			BILL_WGT  		= ISNULL(BILL_WGT, 0) + CONVERT(#{wgt} AS NUMERIC(15,3))
			,BILL_MSRMT 	= ISNULL(BILL_MSRMT, 0) + CONVERT(#{msrmt} AS NUMERIC(15,3))
			,UPDATE_TIME 	= GETDATE()
			,STAFF_CD 		= #{userId}
			,VERSION 		= #{newVersion}
		WHERE 
			VSL_CALL_ID 	= #{vslCallId}
			AND CG_NO 		= #{blSnNo}
			AND BL_NO 		= #{blSnNo}
	</update>
	
	<update id="updateInvoiceDataStatus" parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateInvoiceDataStatus */ 
			TMT_B_IV_DATA
		SET
			STAT_CD 											= #{statusCd}
		WHERE 
			VSL_CALL_ID 										= #{vslCallId}
			AND REF_NO1 										= #{blSnNo}
			AND REF_NO2 										= #{docNo} 
			AND STAT_CD 										IN ('PC','SM') 
			AND (
				SELECT 
					TRF_TP_CD 
				FROM 
					TMT_B_TRF_CD 								TRF 
				WHERE 
					TRF.TRF_CD 									= TMT_B_IV_DATA.TRF_CD 
					AND TRF.SUB_TRF_CD 							= TMT_B_IV_DATA.SUB_TRF_CD  
			) 													= #{trfTpCd}
	</update>
	
	<update id="updateInvoiceStatus"  parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateInvoiceStatus */ 
			TMT_B_IV 
		SET
			STAT_CD 											= #{statusCd},
			UPDATE_TIME 										= GETDATE(),
        	STAFF_CD 											= #{userId},
        	VERSION 											= #{newVersion}
		WHERE 
			IV_NO 												= #{ivNo}
			AND VSL_CALL_ID 									= #{vslCallId}
	</update>
	
	<update id="updateProformaInvoiceData" parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateProformaInvoiceData */ 
			TMT_B_IV_DATA 
		SET 
			UNIT1_VAL 											= TRY_CONVERT(NUMERIC(15,3), #{unit1Val}),
			UNIT2_VAL 											= TRY_CONVERT(NUMERIC(15,3), #{unit2Val}),
			UNIT3_VAL 											= TRY_CONVERT(NUMERIC(15,3), #{unit3Val}),
			STD_RATE 											= TRY_CONVERT(NUMERIC(15,3), #{stdRate}),
			REF_NO1 											= #{blSnNo},
			REF_NO2 											= #{docNo},
			REVS_RATE 											= TRY_CONVERT(NUMERIC(15,3), #{stdRate}),
			REVS_AMT 											= TRY_CONVERT(NUMERIC(15,3), #{ivAmt}),
			REVS_UNIT1_VAL 										= TRY_CONVERT(NUMERIC(15,3), #{issuedMT}),
			STAFF_CD 											= #{userId},
			UPDATE_TIME 										= GETDATE(),
			VERSION 											= #{version},
			TOTAL_AMT 											= TRY_CONVERT(NUMERIC(15,3), #{totalAmt}),
			GATHER_DT 											= GETDATE(),
			APLY_RATE 											= TRY_CONVERT(NUMERIC(15,3), #{applyRate}),
			APLY_AMT 											= TRY_CONVERT(NUMERIC(15,3), #{ivAmt}),
			ADHOC_YN 											= #{adhocYn},
			<!-- MMC -->
			STAT_CD												= #{statusCd},
			IV_NO 												= #{ivNo}
		WHERE 
			GATHER_NO 	= #{gatherNo}
	 </update>
	 
	 <!-- MMC - Settlement -->
	 <select id="selectBlComboItems" parameterType="proformaInvoiceParm" resultMap="comboMap">
		<!-- 	 	
		WITH 
			IV_DATA AS (
				SELECT 
					VSL_CALL_ID, 
					REF_NO1 
				FROM 
					TMT_B_IV_DATA 
				WHERE 
					VSL_CALL_ID 								= #{vslCallId} 
					AND SCR_ID 									= 'PFI' 
					AND IV_NO IS NOT NULL						AND IV_NO <![CDATA[<>]]> ''
				) 
	 	
 	 	SELECT DISTINCT	/* proformaInvoice.selectBlComboItems */  
			B.BL_NO CD, 
			B.BL_NO CD_NM, 
			B.DELV_TP_CD, 
			B.MF_DOC_ID 
		FROM    
			TMT_BL 												B 
		LEFT OUTER JOIN 
			IV_DATA 											I 
				ON B.VSL_CALL_ID 								= I.VSL_CALL_ID 
				AND B.BL_NO 									= I.REF_NO1 
		WHERE    
			B.VSL_CALL_ID 										= #{vslCallId} 
			AND B.STAT_CD 										= 'AP' 
			AND I.REF_NO1 IS NULL 								AND I.REF_NO1 <![CDATA[<>]]> ''
		-->
                
		SELECT DISTINCT	/* proformaInvoice.selectBlComboItems */
			B.BL_NO CD,
			B.BL_NO CD_NM,
			B.DELV_TP_CD,
			B.MF_DOC_ID,
			B.CG_TP_CD
		FROM    
			TMT_BL B
		WHERE    
			B.VSL_CALL_ID 										= #{vslCallId}
			AND B.STAT_CD 										= 'AP'
	</select>
	
	<select id="selectSnComboItems" parameterType="proformaInvoiceParm" resultMap="comboMap">
	 	SELECT	DISTINCT /* proformaInvoice.selectSnComboItems */
			S.SHIPG_NOTE_NO 									AS CD,
			S.SHIPG_NOTE_NO 									AS CD_NM,
			S.DELV_TP_CD,
			S.MF_DOC_ID,
			S.CG_TP_CD
        FROM    
			TMT_SHIPG_NOTE 										AS S
        WHERE    
			S.VSL_CALL_ID 										= #{vslCallId}
			AND S.STAT_CD										= 'AP'
	</select>
	
		<select id="selectManifestDocIdComboItems" parameterType="proformaInvoiceParm" resultMap="comboMap">
        WITH 
            IV_DATA AS (
                SELECT 
                    VSL_CALL_ID, 
                    REF_NO2 
                FROM 
                    TMT_B_IV_DATA 
                WHERE 
                    VSL_CALL_ID 								= #{vslCallId} 
                    AND SCR_ID 									= 'PFI' 
                    AND (IV_NO IS NOT NULL						AND IV_NO <![CDATA[<>]]> '')
            )
            
        SELECT DISTINCT /* proformaInvoice.selectManifestDocIdComboItems */
            B.MF_DOC_ID 										AS CD,
            B.MF_DOC_ID 										AS CD_NM,
            B.CG_TP_CD
        FROM    
            TMT_BL 												B 
        LEFT OUTER JOIN 
            IV_DATA 											I 
                ON B.VSL_CALL_ID 								= I.VSL_CALL_ID 
                AND B.MF_DOC_ID 								= I.REF_NO2
        WHERE   
            B.VSL_CALL_ID 										= #{vslCallId}
            AND B.STAT_CD 										= 'AP'
        <!--                 
            AND I.REF_NO2 IS NULL 
        -->
	</select>
	
	<select id="selectBookingNoComboItems" parameterType="proformaInvoiceParm" resultMap="comboMap">
        SELECT DISTINCT /* proformaInvoice.selectBookingNoComboItems */
            B.MF_DOC_ID	 										AS CD,
            B.MF_DOC_ID  										AS CD_NM, 
            B.CG_TP_CD
        FROM    
            TMT_SHIPG_NOTE  									B
        WHERE   
            B.VSL_CALL_ID  										= #{vslCallId}
            AND B.STAT_CD  										= 'AP'
	</select>
	
	<select id="selectPayerComboItems" parameterType="proformaInvoiceParm" resultMap="payerComboMap">
	 	WITH 
			PAYER_INFO AS (
				SELECT
					PAYER_TP,
					CG.CD,
					CD_NM,
					PAYMENT_TYPE
				FROM (
					<choose>
						<when test=' category == "I" '>
							SELECT 
								'SHA' 							AS PAYER_TP,
								SHIPG_AGENT 					AS CD,
								'[SHA][' 
								+ SHIPG_AGENT 
								+ '] ' 
								+ dbo.F_PTNR_SNM (
									SHIPG_AGENT, 
									'SHA'
								) 								AS CD_NM
							FROM 
								TMT_BL
							WHERE 
								VSL_CALL_ID 					= #{vslCallId} 
								AND MF_DOC_ID 					= #{docNo} 
								AND SHIPG_AGENT IS NOT NULL	AND SHIPG_AGENT <![CDATA[<>]]> ''
						</when>
						<otherwise>
							SELECT 'SHA' AS PAYER_TP,
								SHIPG_AGNCY AS CD,
								'[SHA][' 
								+ SHIPG_AGNCY 
								+ '] ' 
								+ dbo.F_PTNR_SNM (
									SHIPG_AGNCY, 
									'SHA'
								) 								AS CD_NM
							FROM 
								TMT_SHIPG_NOTE
							WHERE 
								VSL_CALL_ID 					= #{vslCallId} 
								AND MF_DOC_ID 					= #{docNo} 
								AND SHIPG_AGNCY IS NOT NULL		AND SHIPG_AGNCY <![CDATA[<>]]> ''
						</otherwise>
					</choose>
						UNION
						SELECT 
							'FWD' 								AS PAYER_TP,
							FWRD 								AS CD,
							'[FWD][' 
							+ FWRD 
							+ '] ' 
							+ dbo.F_PTNR_SNM (FWRD, 'FWD') 		AS CD_NM
					<choose>
						<when test=' category == "I" '>
							FROM 
								TMT_BL
						</when>
						<otherwise>
							FROM 
								TMT_SHIPG_NOTE
						</otherwise>
					</choose>
							WHERE 
								VSL_CALL_ID 					= #{vslCallId} 
								AND MF_DOC_ID 					= #{docNo} 
								AND FWRD IS NOT NULL			AND FWRD <![CDATA[<>]]> ''
						UNION
						SELECT 
							'CNS' 								AS PAYER_TP,
							CNSNE 								AS CD,
							'[CNS][' 
							+ CNSNE 
							+ '] ' 
							+ dbo.F_PTNR_SNM (CNSNE, 'CNS') 	AS CD_NM
					<choose>
						<when test=' category == "I" '>
							FROM 
								TMT_BL
						</when>
						<otherwise>
							FROM 
								TMT_SHIPG_NOTE
						</otherwise>
					</choose>
						WHERE 
							VSL_CALL_ID 						= #{vslCallId} 
							AND MF_DOC_ID 						= #{docNo} 
							AND CNSNE IS NOT NULL				AND CNSNE <![CDATA[<>]]> ''
				) 												CG
				INNER JOIN (
					SELECT 
						PTNR_CODE 								AS CD, 
						PTNR_TYPE, 
						ENG_SNM, 
						ACC_NO, 
						ADDR,
						TEL_NO,
						<!-- Invalid Column
						GST_REF_ID, 
						-->
						PAYMENT_TYPE
					FROM 
						TMT_PTNR
					UNION
					SELECT 
						AGENCY_CODE 							AS CD, 
						PTNR_TYPE, 
						ENG_SNM, 
						ACC_NO, 
						ADDR,
						TEL_NO,
						<!-- Invalid Column
						GST_REF_ID, 
						 -->
						PAYMENT_TYPE
					FROM 
						TMT_AGENCY_INFO
				) 												PTNR 
					ON CG.CD 									= PTNR.CD 
					AND CG.PAYER_TP 							= PTNR.PTNR_TYPE
	 		)
	 	
	 	SELECT DISTINCT /* proformaInvoice.selectPayerComboItems */
			PAYER_TP,
			CD,
			CD_NM,
			PAYMENT_TYPE
	 	FROM	
			PAYER_INFO
		WHERE 
			PAYMENT_TYPE 										= 'M'
	</select>
	
	<update id="updateApplyFreeDays" parameterType="proformaInvoiceItem">
		UPDATE /* proformaInvoice.updateApplyFreeDays */ 
			TMT_MF
		SET 
			FREE_DAYS 											= TRY_CONVERT(NUMERIC(3, 0), #{applyFreeDays})
		WHERE 
			VSL_CALL_ID 										= #{vslCallId}
			AND MF_DOC_ID 										= #{refNo2}
			AND OP_CLASS_CD 									= #{opClassCd}
	</update>
	
	<select id="selectGatheringDataForProformaIv" resultMap="gatheringDataMap" parameterType="proformaInvoiceParm">
		<if test="searchTp == 'BL'">
			SELECT  /*proformaInvoice.selectGatheringDataForProformaIv*/
				I.GATHER_NO,
				I.TRF_CD,
				I.SUB_TRF_CD,
				I.TRF_DESCR,
				T.TRF_TP_CD,
				dbo.F_CM_CODE_NM ('MT', 'TRFTP', T.TRF_TP_CD) 	AS TRF_TP_NM,
				ISNULL(I.COST_CENT_CD, T.COST_CENT_CD) 			AS COST_CENT_CD,
				I.PAYER,
				ISNULL(I.PAYER_TP_CD, A.PAYER_TP_CD) 			AS PAYER_TP,
				T.IV_UNIT1,
				T.IV_UNIT2,
				T.IV_UNIT3,
				I.UNIT1_VAL,
				I.UNIT2_VAL,
				I.UNIT3_VAL,
				I.STD_RATE,
				I.APLY_RATE,
				I.APLY_AMT,
				I.TAX_AMT,
				I.TOTAL_AMT,
				B.CATG_CD,
				dbo.F_CM_CODE_NM ('MT', 'CATGTP', B.CATG_CD) 	AS CATG_NM,
				I.VSL_CALL_ID,
				B.MF_DOC_ID,
				B.BL_NO,
				'PFI' 											AS IV_PRFX,
				'M' 											AS PAYMENT_TP,
				'P' 											AS IV_TP,
				B.DELV_TP_CD,
				dbo.F_CM_CODE_NM('MT', 'DELVTP', B.DELV_TP_CD)  AS DELV_TP_NM,
				I.STAT_CD,
				dbo.F_CM_CODE_NM('MT', 'IVSTAT', I.STAT_CD) 	AS ITEM_STATUS,
				ISNULL(A.PAID_ST, 'N') 							AS PAID_YN,
				I.ADHOC_YN 										AS ADHOC_YN,
				A.IV_NO,
				B.BL_NO 
				+ '/' 
				+  dbo.F_CM_CODE_NM(
					'MT', 
					'DELVTP', 
					B.DELV_TP_CD
				) 												AS GROUPING_FIELD,
				CASE 
					WHEN (
						I.EXP_DT IS NOT NULL 
						AND I.EXP_DT <![CDATA[<>]]> ''
					) 
						THEN FORMAT(I.EXP_DT, 'dd/MM/yyyy')
					ELSE ''
				END												AS EXP_DT,
				I.TAX_VALUE									
			FROM    
				TMT_B_IV_DATA 									I
			LEFT OUTER JOIN
				TMT_B_IV 										A 
			ON 
				I.VSL_CALL_ID 									= A.VSL_CALL_ID 
				AND I.IV_NO 									= A.IV_NO
			INNER JOIN 
				TMT_B_TRF_CD T 
			ON 
				I.TRF_CD 										= T.TRF_CD 
				AND I.SUB_TRF_CD 								= T.SUB_TRF_CD
			INNER JOIN 
				TMT_BL B 
			ON 
				I.VSL_CALL_ID 									= B.VSL_CALL_ID 
				AND I.REF_NO1 									= B.BL_NO 
			WHERE   
				I.VSL_CALL_ID 									= #{vslCallId} 
				AND I.REF_NO1 IN (
					SELECT 
						BL_NO 
					FROM 
						TMT_BL 
					WHERE 
						VSL_CALL_ID 							= #{vslCallId}
						<if test = "masterBL != null and masterBL != ''">
							AND MF_DOC_ID 						= #{masterBL}
						</if>
						<if test = "blNoSnNo != null and blNoSnNo != ''">
							AND BL_NO 							= #{blNoSnNo}
						</if>
						<if test = "blNo != null and blNo != ''">
							AND BL_NO 							= #{blNo}
						</if>
				)
				AND I.SCR_ID 									= 'PFI'
				AND I.STAT_CD 									NOT IN ('IC')
		</if>
		<if test="searchTp == 'SN'">
			SELECT  /*proformaInvoice.selectGatheringDataForProformaIv*/
				I.GATHER_NO,
				I.TRF_CD,
				I.SUB_TRF_CD,
				I.TRF_DESCR,
				T.TRF_TP_CD,
				dbo.F_CM_CODE_NM ('MT', 'TRFTP', T.TRF_TP_CD) 	AS TRF_TP_NM,
				ISNULL(I.COST_CENT_CD, T.COST_CENT_CD) 			AS COST_CENT_CD,
				I.PAYER,
				ISNULL(I.PAYER_TP_CD, A.PAYER_TP_CD) 			AS PAYER_TP,
				T.IV_UNIT1,
				T.IV_UNIT2,
				T.IV_UNIT3,
				I.UNIT1_VAL,
				I.UNIT2_VAL,
				I.UNIT3_VAL,
				I.STD_RATE,
				I.APLY_RATE,
				I.APLY_AMT,
				I.TAX_AMT,
				I.TOTAL_AMT,
				S.CATG_CD,
				dbo.F_CM_CODE_NM ('MT', 'CATGTP', S.CATG_CD) 	AS CATG_NM,
				I.VSL_CALL_ID,
				S.MF_DOC_ID,
				S.SHIPG_NOTE_NO 								AS BLSNNO,
				'PFI' 											AS IV_PRFX,
				'M' 											AS PAYMENT_TP,
				'P' 											AS IV_TP,
				S.DELV_TP_CD,
				dbo.F_CM_CODE_NM('MT', 'DELVTP', S.DELV_TP_CD)  AS DELV_TP_NM,
				I.STAT_CD,
				dbo.F_CM_CODE_NM('MT', 'IVSTAT', I.STAT_CD) 	AS ITEM_STATUS,
				ISNULL(A.PAID_ST, 'N') 							AS PAID_YN,
				I.ADHOC_YN 										AS ADHOC_YN,
				A.IV_NO,
				S.SHIPG_NOTE_NO 
				+ '/' 
				+  dbo.F_CM_CODE_NM(
					'MT', 
					'DELVTP', 
					S.DELV_TP_CD
				) 												AS GROUPING_FIELD,
				CASE 
					WHEN (
						I.EXP_DT IS NOT NULL 
						AND I.EXP_DT <![CDATA[<>]]> ''
					) 
						THEN FORMAT(I.EXP_DT, 'dd/MM/yyyy')
					ELSE ''
				END												AS EXP_DT,
				I.TAX_VALUE	
			FROM   
				TMT_B_IV_DATA 									I
			LEFT OUTER JOIN
				TMT_B_IV 										A 
			ON 
				I.VSL_CALL_ID 									= A.VSL_CALL_ID 
				AND I.IV_NO 									= A.IV_NO
			INNER JOIN 
				TMT_B_TRF_CD 									T 
			ON 
				I.TRF_CD 										= T.TRF_CD 
				AND I.SUB_TRF_CD 								= T.SUB_TRF_CD
			INNER JOIN
				TMT_SHIPG_NOTE 									S 
			ON
				I.VSL_CALL_ID 									= S.VSL_CALL_ID 
				AND I.REF_NO1 									= S.SHIPG_NOTE_NO 
			WHERE   
				I.VSL_CALL_ID 									= #{vslCallId} 
				AND I.REF_NO1 IN (
					SELECT 
						SHIPG_NOTE_NO 
					FROM 
						TMT_SHIPG_NOTE 
					WHERE 
						VSL_CALL_ID 							= #{vslCallId}
						<if test = "bookingNo != null and bookingNo != ''">
							AND MF_DOC_ID 						= #{bookingNo}
						</if>
						<if test = "blNoSnNo != null and blNoSnNo != ''">
							AND SHIPG_NOTE_NO 					= #{blNoSnNo}
						</if>
						<if test = "shipgNoteNo != null and shipgNoteNo != ''">
							AND SHIPG_NOTE_NO 					= #{shipgNoteNo}
						</if>
				)
				AND I.SCR_ID 									= 'PFI'
				AND I.STAT_CD 									NOT IN ('IC')	
		</if>
		UNION
		SELECT
			I.GATHER_NO,
			I.TRF_CD,
			I.SUB_TRF_CD,
			I.TRF_DESCR,
			T.TRF_TP_CD,
			dbo.F_CM_CODE_NM ('MT', 'TRFTP', T.TRF_TP_CD) 		AS TRF_TP_NM,
			ISNULL(I.COST_CENT_CD, T.COST_CENT_CD) 				AS COST_CENT_CD,
			I.PAYER,
			ISNULL(I.PAYER_TP_CD, A.PAYER_TP_CD) 				AS PAYER_TP,
			T.IV_UNIT1,
	        T.IV_UNIT2,
	        T.IV_UNIT3,
			I.UNIT1_VAL,
			I.UNIT2_VAL,
			I.UNIT3_VAL,
			I.STD_RATE,
			I.APLY_RATE,
			I.APLY_AMT,
			I.TAX_AMT,
			I.TOTAL_AMT,
			'' 													AS  CATG_CD,
			'' 													AS  CATG_NM,
			I.VSL_CALL_ID,
			'' 													AS  MF_DOC_ID,
			'' 													AS BL_NO,
			'PFI' 												AS IV_PRFX,
			'M' 												AS PAYMENT_TP,
			'P' 												AS IV_TP,
			'' 													AS DELV_TP_CD,
			'' 													AS  DELV_TP_NM,
			I.STAT_CD,
			dbo.F_CM_CODE_NM(
				'MT', 
				'IVSTAT', 
				I.STAT_CD
			) 													AS ITEM_STATUS,
			ISNULL(A.PAID_ST, 'N') 								AS PAID_YN,
			I.ADHOC_YN 											AS ADHOC_YN,
			A.IV_NO,
			I.VSL_CALL_ID 										AS GROUPING_FIELD,
			CASE 
				WHEN (
					I.EXP_DT IS NOT NULL 
					AND I.EXP_DT <![CDATA[<>]]> ''
				) 
					THEN FORMAT(I.EXP_DT, 'dd/MM/yyyy')
				ELSE ''
			END													AS EXP_DT,
			I.TAX_VALUE	
		FROM 	
			TMT_B_IV_DATA 										I
		LEFT OUTER JOIN 
			TMT_B_IV 											A
		ON
			I.VSL_CALL_ID 										= A.VSL_CALL_ID 
			AND I.IV_NO 										= A.IV_NO
		INNER JOIN 
			TMT_B_TRF_CD T
		ON
			I.TRF_CD 											= T.TRF_CD 
			AND I.SUB_TRF_CD 									= T.SUB_TRF_CD
		        
		WHERE    
			I.VSL_CALL_ID 										= #{vslCallId} 
			AND I.REF_NO1 IS NULL								OR I.REF_NO1 = ''
			AND I.SCR_ID 										= 'PFI'
			AND I.STAT_CD 										NOT IN ('IC')
	</select>
	
	<select id="selectGatheringDataForProformaIvTest" resultMap="gatheringDataMap" parameterType="proformaInvoiceParm">
		SELECT /* proformaInvoice.selectGatheringDataForProformaIv */  
			I.GATHER_NO,
			I.TRF_CD,
			I.SUB_TRF_CD,
			I.TRF_DESCR,
			T.TRF_TP_CD,
			dbo.F_CM_CODE_NM ('MT', 'TRFTP', T.TRF_TP_CD) 		AS TRF_TP_NM,
			ISNULL(I.COST_CENT_CD, T.COST_CENT_CD) 				AS COST_CENT_CD,
			<!-- 
			ISNULL(I.ERP_COST_CENT, T.ERP_COST_CENT) 			AS ERP_COST_CENT,
			 -->
			I.PAYER,
			ISNULL(I.PAYER_TP_CD, A.PAYER_TP_CD) 				AS PAYER_TP,
			dbo.F_PTNR_SNM(I.PAYER, I.PAYER_TP_CD) 				AS payerNm,
			T.IV_UNIT1,
			T.IV_UNIT2,
			T.IV_UNIT3,
			I.UNIT1_VAL,
			I.UNIT2_VAL,
			I.UNIT3_VAL,
			I.STD_RATE,
			I.APLY_RATE,
			I.APLY_AMT,
			B.CATG_CD,
			dbo.F_CM_CODE_NM ('MT', 'CATGTP', B.CATG_CD) 		AS CATG_NM,
			I.VSL_CALL_ID,
			M.MF_DOC_ID,
			B.CG_NO 											AS BL_NO,
			<!-- Invalid Column
			FORMAT(I.SVC_ST_DT, 'dd/MM/yyyy') 					AS SVC_ST_DT,
			FORMAT(I.SVC_END_DT, 'dd/MM/yyyy') 					AS SVC_END_DT,
			 -->
			'CSH' 												AS IV_PRFX,
			'M' 												AS PAYMENT_TP,
			'P' 												AS IV_TP,
			B.DELV_TP_CD,
			dbo.F_CM_CODE_NM('MT', 'DELVTP', B.DELV_TP_CD)  	AS DELV_TP_NM,
			I.STAT_CD,
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 
			WHERE 
				M_CD 					= 'IVSTAT' 
				AND S_CD 				= I.STAT_CD
			) 													AS ITEM_STATUS,
			ISNULL(A.PAID_ST, 'N') 								AS PAID_YN,
			A.IV_NO,
			<!--  
			I.SVC_ID,
			I.SVC_SEQ,		
			CASE I.REF_NO4
				WHEN 'PFI' THEN NULL
				ELSE I.REF_NO4
			END 												AS REF_NO4,
			I.GST_TYPE,
			I.GST_AMT,
			ISNULL(I.TOTAL_AMT, I.APLY_AMT + I.GST_AMT) 		AS TOTAL_AMT,
			I.FREE_DAYS,
			FORMAT(I.EXP_DT, 'dd/MM/yyyy') 						AS EXP_DT,
			I.GST_PERCENT,
			-->
			M.MF_DOC_ID 
				+ ' / ' 
				+ B.CG_NO 
				+ ' / ' 
				+ dbo.F_CM_CODE_NM('MT','DELVTP',B.DELV_TP_CD)	AS GROUPING_FIELDS
		FROM    
			TMT_B_IV_DATA 										I
		LEFT OUTER JOIN 
			TMT_B_IV 											A 
				ON I.VSL_CALL_ID 								= A.VSL_CALL_ID 
				AND I.IV_NO 									= A.IV_NO
		INNER JOIN 
			TMT_B_TRF_CD 										T 
				ON I.TRF_CD 									= T.TRF_CD 
				AND I.SUB_TRF_CD 								= T.SUB_TRF_CD
		LEFT JOIN (
			SELECT 
				SN.VSL_CALL_ID,                                                                            
				'E'                                         	AS OPE_CLASS_CD,
				SN.MF_DOC_ID,
				NULL                                          	AS BL_NO,
				SN.SHIPG_NOTE_NO,
				SN.SHIPG_NOTE_NO                              	AS CG_NO,
				SN.PKG_NO,
				SN.GDS_RMK                                   	AS PKG_MARK,
				SN.CATG_CD,
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 		MSTD
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CATGTP' 
					AND SN.CATG_CD 		= MSTD.S_CD
				)         										AS CATG_NM,
				SN.CG_TP_CD,
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CGTP' 
					AND S_CD_USE 		= 'Y' 
					AND  S_CD 			= SN.CG_TP_CD
				)       										AS CGTPNM,
				SN.CMDT_GRP_CD,
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CMDTGRP' 
					AND S_CD_USE 		= 'Y' 
					AND  S_CD 			= SN.CMDT_GRP_CD
				) 												AS CMDTGRPNM,
				SN.CMDT_CD,
				(SELECT 
					CMDT_DESC 
				FROM 
					TMT_CMDT 			CMDT
				WHERE 
					CMDT.CMDT_CD 		= SN.CMDT_CD 
					AND CMDT.CMDT_GRP_CD= SN.CMDT_GRP_CD
				)                								AS CMDTNM,
				SN.PKG_TP_CD,
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'PKGTP' 
					AND S_CD_USE 		= 'Y' 
					AND  S_CD 			= SN.PKG_TP_CD
				)     											AS PKGTPNM,
				SN.IMDG                               			AS IMDGCLASS,
				SN.UNNO                              			AS UNNO,
				SN.CG_WGT                  						AS WGT,
				SN.CG_VOL                						AS VOL,
				SN.PKG_QTY,
				SN.DELV_TP_CD,
				SN.TSPT_TP_CD,
				SN.FWRD,
				SN.SHIPG_AGNCY                               	AS SHIPG_AGENT,
				SN.CNSNE,
				SN.SHPR,
				SN.POR			                              	AS POR,
				SN.POD			                               	AS PO,
				SN.POL			                              	AS POL,
				SN.FDEST,
				SN.DOMESTIC_CHK
			FROM 
				TMT_SHIPG_NOTE 									SN

			UNION

			SELECT 
				BL.VSL_CALL_ID,                                                                           
				'I'                                   			AS OPE_CLASS_CD,
				BL.MF_DOC_ID,                                                                           
				BL.BL_NO,                                                                                
				NULL,                                                                                     
				BL.BL_NO                               			AS CG_NO,
				BL.LOT_NO, 										                                                                                
				BL.MARK_NO,  									                                                                        
				BL.CATG_CD,                                                                             
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 		MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CATGTP' 
					AND BL.CATG_CD 		= MSTD.S_CD 
				)                    							AS CATGNM,
				BL.CG_TP_CD,                                                                            
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CGTP' 
					AND S_CD_USE 		= 'Y' 
					AND	S_CD 			= BL.CG_TP_CD
				) 												AS CGTPNM,
				BL.CMDT_GRP_CD,                                                                         
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CMDTGRP' 
					AND S_CD_USE 		= 'Y' 
					AND S_CD 			= BL.CMDT_GRP_CD
				) 												AS CMDTGRPNM,
				BL.CMDT_CD,                                                                             
				(SELECT 
					CMDT_DESC 
				FROM 
					TMT_CMDT CMDT 
				WHERE 
					CMDT.CMDT_CD 		= BL.CMDT_CD 
					AND CMDT.CMDT_GRP_CD= BL.CMDT_GRP_CD
				)                								AS CMDTNM,
				BL.PKG_TP_CD,                                                                           
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD = 'MT' 
					AND M_CD = 'PKGTP' 
					AND S_CD_USE = 'Y' 
					AND  S_CD = BL.PKG_TP_CD
				)    											AS PKGTPNM,
				BL.IMDG_CLASS          							AS IMDGCLASS,
				BL.UNNO                                 		AS UNNO,
				BL.CG_WGT,
				BL.CG_VOL,
				BL.PKG_QTY,
				BL.DELV_TP_CD,
				BL.TSPT_TP_CD,
				BL.FWRD,                                                                            
				'BL.SHIPG_AGENT'								AS SHIPG_AGENT,                                                                         
				BL.CNSNE,                                                                               
				BL.SHPR,
				NULL                                 			AS POR,
				BL.POD,
				BL.POL,
				BL.FDEST,
				BL.DOMESTIC_CHK
			FROM 
				TMT_BL 											BL 
		) 														B 
			ON I.VSL_CALL_ID 									= B.VSL_CALL_ID 
			AND I.REF_NO1 										= B.CG_NO 
		LEFT OUTER JOIN 
			TMT_MF M 
			ON I.VSL_CALL_ID 									= M.VSL_CALL_ID 
			AND I.REF_NO2 										= M.MF_DOC_ID 
		WHERE   
			I.VSL_CALL_ID 										= #{vslCallId} 
			AND (
				(B.MF_DOC_ID 									= #{docNo} 
					AND B.OPE_CLASS_CD 							= #{category} 
					AND I.REF_NO1 								= B.CG_NO
				)  
				OR (
					<!-- Invalid Column
					(I.SVC_ID IS NOT NULL						AND I.SVC_ID <![CDATA[<>]]> '') 
					 -->
					(I.REF_NO2 IS NOT NULL						AND I.REF_NO2 <![CDATA[<>]]> '')
					AND I.REF_NO2 								= #{docNo}
				)
				OR (
					<!-- Invalid Column
					(I.SVC_ID IS NOT NULL 						AND I.SVC_ID <![CDATA[<>]]> '')
					 -->
					(I.REF_NO2 IS NULL							OR I.REF_NO2 <![CDATA[<>]]> '')
				)
			)
			AND I.SCR_ID 										= 'PFI'
			<!-- Invalid Column
			AND I.REF_NO3 IS NULL								OR I.REF_NO3 = ''	
			 -->							<!-- prevent org handling goods invoice (calculate) -->
			AND I.STAT_CD NOT 									IN ('IC')
			<!-- 			 	
			AND T.VLD_YN = 'Y' 
			-->
		ORDER BY 
			B.CG_NO, 
			T.TRF_TP_CD, 
			T.TRF_CD, 
			I.UPDATE_TIME
	</select>
	
	<update id="updateSettleStorageAmt" parameterType="ProformaInvoiceItem">
		UPDATE 	/* proformaInvoice.updateSettleStorageAmt */ 
			TMT_B_IV_DATA
		SET		
			APLY_AMT 											= ISNULL(CONVERT(NUMERIC(15,3), #{applyAmt}), 0),
			UNIT2_VAL 											= ISNULL(CONVERT(NUMERIC(15,3), #{unit2Val}), 0),
			TAX_AMT 											= ISNULL(CONVERT(NUMERIC(15,3), #{taxAmt}), 0),
			TOTAL_AMT 											= ISNULL(CONVERT(NUMERIC(15,3), #{totalAmt}), 0),
			SVC_ST_DT 											= TRY_CONVERT(DATE, LEFT(#{svcDtFrom}, 8), 112),
			SVC_END_DT 											= TRY_CONVERT(DATE, LEFT(#{svcDtTo}, 8), 112),
			EXP_DT 												= TRY_CONVERT(DATE, LEFT(#{expectedDeliveryDay}, 8), 112),
			UPDATE_TIME 										= SYSDATETIME(),
			STAFF_CD 											= #{userId}
		WHERE 	
			VSL_CALL_ID 										= #{vslCallId}
			AND GATHER_NO 										= #{gatherNo}
	</update>
	
</mapper>