<?xml version = "1.0" encoding = "UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shippingNote">
	<resultMap 	id="resultUnitItem" 	type="shippingNoteItem">
   		<result property = "vslCd"				column = "VSL_CD"/>
   		<result property = "callYear"			column = "CALL_YEAR"/>
   		<result property = "callSeq"			column = "CALL_SEQ"/>
   		<result property = "vslCallId"			column = "VSL_CALL_ID"/>
   		<result property = "mfDocId"			column = "MF_DOC_ID"/>
   		<result property = "shipgNoteNo"		column = "CG_NO"/>
   		<result property = "seq"				column = "SEQ"/>
   		<result property = "unitNo"				column = "CHAS_NO"/>
   		<result property = "brandCd"			column = "BRAND_CD"/>
   		<result property = "brandNm"			column = "BRAND_NM"/>
   		<result property = "modelCd"			column = "MODEL_CD"/>
   		<result property = "modelNm" 			column = "MODEL_NM"/>
   		<result property = "roroMt"				column = "DOC_WGT"/>
   		<result property = "cbm"				column = "CBM"/>
   		<result property = "newYn" 				column = "NEW_YN"/>
   		<result property = "action" 			column = "ACTION"/>
 	</resultMap>
 	
 	<resultMap 	id="resultPackageItem" 	type="shippingNoteItem">
   		<result property = "callYear"			column = "CALL_YEAR"/>
   		<result property = "callSeq"			column = "CALL_SEQ"/>
   		<result property = "vslCallId"			column = "VSL_CALL_ID"/>
   		<result property = "mfDocId"			column = "MF_DOC_ID"/>
   		<result property = "shipgNoteNo"		column = "REF_NO"/>
   		<result property = "pkgNo"				column = "PKG_NO"/>
   		<result property = "pkgDesc"			column = "PKG_DESC"/>
   		<result property = "pkgMt"				column = "CG_WGT"/>
   		<result property = "pkgM3"				column = "CG_VOL"/>
   		<result property = "weight" 			column = "WEIGHT"/>
   		<result property = "height"				column = "HEIGHT"/>
   		<result property = "length"				column = "LENGTH"/>
   		<result property = "pkgRmk"				column = "RMK"/>
   		<result property = "action" 			column = "ACTION"/>
 	</resultMap>
	
	<sql id="sqlShippingNote">
		SELECT DISTINCT
			NVL(A.VSL_CALL_ID, ' ') AS VSLCALLID
			,NVL(A.VSL_CD, ' ') AS VSLCD
			,NVL(A.CALL_YEAR, ' ') AS CALLYEAR
			,NVL(A.CALL_SEQ, ' ') AS CALLSEQ
			,NVL(A.SHIPG_NOTE_NO, ' ') AS SHIPGNOTENO 
			,NVL(A.SHIPG_NOTE_NO, ' ') AS NEWSHIPGNOTENO 
			,A.CBR_NO AS CBRNO
			,DECODE(A.DOMESTIC_CHK, 'Y', 'Domestic Cargo', '') AS domesticChk
			,A.WGT_CHK AS WGTCHK
			,A.PROJECT_CARGO         AS projectCargo
			,DECODE(
				(SELECT DG_CHK FROM TMT_DG WHERE SEQ = A.DG_SEQ)
				,'Y','Confirmed'
				,'N','Not Confirmed'
				,'R','Reject'
				,'C','Cancel'
				,''
			) AS DGSTATNM
			,TO_CHAR((SELECT CONFM_DT FROM TMT_DG WHERE SEQ = A.DG_SEQ), 'DD/MM/YYYY HH24:MI') AS DGAPRVDT
			,(
				SELECT 
					CASE
						WHEN CUS.DOC_NO IS NULL THEN 'HOLD'
						WHEN CUS.DOC_NO IS NOT NULL AND CUS.RELEASE_MT IS NULL THEN 'RELEASE'
						ELSE 'RELEASE'
					END AS status
				FROM TMT_SHIPG_NOTE SN
				LEFT OUTER JOIN (
					SELECT DOC_NO, REF_NO,  VSL_CALL_ID, SUM (RELEASE_MT) AS RELEASE_MT, SUM (RELEASE_QTY) AS RELEASE_QTY
					FROM TMT_CUSTOMS_RELEASE
					GROUP BY DOC_NO, REF_NO, VSL_CALL_ID
				) CUS
				ON CUS.VSL_CALL_ID = SN.VSL_CALL_ID
				AND (
					(CUS.REF_NO IS NULL AND CUS.DOC_NO = SN.MF_DOC_ID)
					OR 
					(CUS.REF_NO IS NOT NULL AND CUS.REF_NO = SN.SHIPG_NOTE_NO)
				)
				WHERE SN.VSL_CALL_ID = A.VSL_CALL_ID 
				AND SN.SHIPG_NOTE_NO = A.SHIPG_NOTE_NO AND ROWNUM = 1
			) AS CUSTOMSAPRVSTAT
            ,(
             	SELECT CUSTOMS_RELEASE_DT
				FROM TMT_SHIPG_NOTE SN
     			LEFT OUTER JOIN TMT_CUSTOMS_RELEASE CUS
        		ON CUS.VSL_CALL_ID = SN.VSL_CALL_ID
           		AND (
           			(CUS.REF_NO IS NULL AND CUS.DOC_NO = SN.MF_DOC_ID)
                	OR 
                	(CUS.REF_NO IS NOT NULL AND CUS.REF_NO = SN.SHIPG_NOTE_NO)
                )
				WHERE SN.VSL_CALL_ID = A.VSL_CALL_ID 
				AND SN.SHIPG_NOTE_NO = A.SHIPG_NOTE_NO AND ROWNUM = 1
			)  AS CUSTOMSAPRVDT
			,A.SHPR_NM AS SHPRNM 
			,A.CNSNE_NM AS CNSNENM 
			,NVL(A.CG_WGT, 0.00) AS CGWGT 
			,A.TSPT_TP_CD AS TSPTTPCD 
			,A.DELV_TP_CD AS DELVTPCD 
			,NVL(A.STAT_CD, ' ') AS STATCD 
			,DECODE(A.STAT_CD, 'AP', 'Approved', 'ST', 'Submitted', '') AS STATCDNM
			,A.POD AS PORTOFDIS 
			,F_CM_001 ('MT', 'PORT', A.POD) AS PORTOFDISNM
			,A.POR AS CNTRYOFORG
			,F_CM_001 ('MT', 'PORT', A.POR) AS CNTRYOFORGNM
			,NVL(A.PKG_QTY,0) AS PKGQTY 
			,A.PKG_TP_CD AS PKGTPCD 
			,F_CM_001('MT', 'PKGTP', A.PKG_TP_CD) AS PKGTPCDNM
			,F_CM_001('MT', 'DELVTP', A.DELV_TP_CD) AS DELVTPCDNM
			,F_CM_001('MT', 'TSPTTP', A.TSPT_TP_CD) AS TSPTTPCDNM
			,TO_CHAR(A.ACK_DT, 'DD/MM/YYYY HH24:MI:SS') AS ACKDT
			,NVL(A.ACK_BY, ' ') AS ACKBY
			,NVL(A.CG_VOL, 0.00) AS CGMSRMT
			,A.TSPT_COMP AS TSPTCOMP
			,(SELECT ENG_SNM FROM TMT_PTNR WHERE PTNR_TYPE = 'TRK' AND PTNR_CODE = A.TSPT_COMP)AS TSPTCOMPNM
			,A.IMDG AS IMDG
			,A.UNNO AS UNNO
			,A.FDEST AS FNLDEST
			,F_CM_001 ('MT', 'PORT', A.FDEST) AS FNLDESTNM
			,TO_CHAR(A.EST_ARRV_DT, 'DD/MM/YYYY HH24:MI') AS ESTARRVDT
			,NVL(TO_CHAR(A.EST_ARRV_DT, 'DD/MM/YYYY HH24:MI'),'') AS ESTARRVDT1
			,NVL(A.MARK_NO, ' ') AS MARKNO
			,A.RMK AS RMK
			,A.SHPR AS SHPR 
			,A.SHPR_ADDR AS SHPRADDR
			,A.CNSNE AS CNSNE
			,A.CNSNE_ADDR AS CNSNEADDR
			,F_CM_001('MT', 'CATGTP', A.CATG_CD) AS CATGCDNM
			,A.CATG_CD AS CATGCD
			,F_GET_SN_LINKED(A.VSL_CALL_ID, A.SHIPG_NOTE_NO) AS LINKED
			,A.FWRD AS FWRD 
			,(SELECT ENG_SNM FROM TMT_PTNR WHERE PTNR_TYPE = 'FWD' AND PTNR_CODE = A.FWRD)AS FWRDNM
			,(SELECT ADDR FROM TMT_PTNR WHERE PTNR_TYPE = 'FWD' AND PTNR_CODE = A.FWRD)AS FWRDADDR
			,A.CG_TP_CD AS CGTPCD
			,F_CM_001('MT','CGTP',A.CG_TP_CD) AS CGTPCDNM 
			,A.CMDT_CD AS CMDTCD
			,(SELECT CMDT_DESC FROM TMT_CMDT WHERE CMDT_CD = A.CMDT_CD) AS CMDTCDNM
			, ' ' AS CHK 
			,DECODE(
				(SELECT COUNT(*) FROM TMT_GR B 
				WHERE B.VSL_CALL_ID = A.VSL_CALL_ID 
				AND B.SHIPG_NOTE_NO = A.SHIPG_NOTE_NO), 0, 'false', 'true'
			) AS GRYN
			,(SELECT VSL_NM FROM TMT_VSL_PART WHERE VSL_CD = B.VSL_CD AND ROWNUM=1) AS VSLNM
			,B.INB_VOY AS INBVOYAGE
			,B.OUTB_VOY AS OUTBVOYAGE
			,B.SHIP_CALL_NO AS SHIPCALLNO
			,B.BERTH_LOC AS BERTHLOC
			,F_GET_SN_LOC(A.VSL_CALL_ID, A.SHIPG_NOTE_NO) AS WHLOC 
			,TO_CHAR(B.ETA,'DD/MM/YYYY') AS ETA
	     	,A.SHIPG_AGNCY SACD
			,(SELECT ENG_SNM FROM TMT_AGENCY_INFO WHERE AGENCY_CODE = B.ARRV_SA_ID) AS SA
			,(SELECT ADDR FROM TMT_AGENCY_INFO WHERE AGENCY_CODE = B.ARRV_SA_ID) AS SAADDR1
			,F_CM_001('MT', 'CGTP', A.CG_TP_CD) AS CGTPNM
			,A.DG_SEQ AS DGSEQ
			,(SELECT STAT_CD FROM TMT_DG WHERE A.DG_SEQ = SEQ) AS DGSTATCD
			,A.VERSION AS VERSION
			,A.MF_DOC_ID AS MFDOCID
			,A.MF_DOC_ID AS NEWMFDOCID
			,GDS_RMK AS GOODSDESCR
			,CMDT_GRP_CD AS CMDTGROUPCD
			,(
				SELECT CMDT_GRP_DESC
				FROM TMT_CMDT CMDT
				WHERE CMDT.CMDT_GRP_CD = A.CMDT_GRP_CD AND ROWNUM = 1
			) AS CMDTGROUPCDNM
			,PKG_NO AS PKGNUMBER
			,EACH_WGT AS EACHWGT
			,EACH_VOL AS EACHMSRMT
			,WIDTH AS CGWTH
			,HEIGHT AS CGHGT
			,LENGTH AS CGLEN
			,FREIGHT_TON AS FREIGHTTON
			,C.VSL_TP AS VSLTP
			,DECODE(A.BONDED_WH_YN, 'Y', 'Y', '') BONDEDWHYN
			,ADDITIONAL_CHK ADDITIONALCHK
			,LOT_NO LOTNO
			,(
				SELECT LISTAGG(DBL.HATCH_NO, ',') WITHIN GROUP 
             	(ORDER BY DBL.VSL_CD, DBL.CALL_YEAR, DBL.CALL_SEQ, DBL.VSL_CALL_ID) 
                FROM TMT_SHIPG_NOTE_DTL DBL
                WHERE 1 = 1
				AND DBL.VSL_CD = A.VSL_CD
				AND DBL.CALL_YEAR = A.CALL_YEAR
				AND DBL.CALL_SEQ = A.CALL_SEQ
				AND DBL.VSL_CALL_ID = A.VSL_CALL_ID 
				AND DBL.SHIPG_NOTE_NO = A.SHIPG_NOTE_NO
			)  hatchNo,
			A.STAFF_CD UPDUSERID,
			A.UPDATE_TIME UPDDT
			,NVL(D.D_MT, 0) AS DMT	 
			,NVL(D.D_M3, 0) AS DM3
			,NVL(D.D_QTY, 0) AS DQTY
			,NVL(D.I_MT, 0) AS IMT 
			,NVL(D.I_M3, 0) AS IM3	 
			,NVL(D.I_QTY, 0) AS IQTY
			,NVL(D.D_LR_MT, 0) AS DLRMT
			,NVL(D.D_LR_M3, 0) AS DLRM3 
			,NVL(D.D_LR_QTY, 0) AS DLRQTY	 
			,NVL(D.D_VSL_MT, 0) AS DVSLMT
			,NVL(D.D_VSL_M3, 0) AS DVSLM3
			,NVL(D.D_VSL_QTY, 0) AS DVSLQTY 
		FROM TMT_SHIPG_NOTE A, TMT_VSL_SCH B, TMT_VSL_PART C, TMT_SHIPG_NOTE_AMT D
		WHERE A.VSL_CALL_ID IS NOT NULL AND D.VSL_CALL_ID = A.VSL_CALL_ID AND D.SHIPG_NOTE_NO = A.SHIPG_NOTE_NO
		AND B.VSL_CD = C.VSL_CD
		<if test="vslCallId != null and vslCallId != ''">
			AND A.VSL_CALL_ID = #{vslCallId} 
		</if>
		<if test="lotNo != null and lotNo != ''">
			AND A.LOT_NO = #{lotNo}
		</if>
		<if test="mfDocId != null and mfDocId != ''">
			AND A.MF_DOC_ID LIKE '%' || #{mfDocId} || '%'
		</if>
		<if test="vslNm != null and vslNm != ''">
			AND C.VSL_NM LIKE '%' || #{vslNm} || '%'
		</if>
	</sql>
	
	<select id="selectShippingNoteList" parameterType="shippingNoteParm" resultType="shippingNoteItem">
	 	<if test="pageNo != 0"> 
             SELECT /*shippingNote.selectShippingNoteList*/
             	* FROM (SELECT inner.*, rownum row_num FROM ( 
		</if>
				<include refid="getItems"/>
		<if test="pageNo != 0"> 
				)inner 
			)inner 
			WHERE inner.row_num <![CDATA[>]]> (TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo}))-1)* TO_NUMBER(#{sizePerPage}) 
		  	AND inner.row_num <![CDATA[<=]]> TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo})) * TO_NUMBER(#{sizePerPage})
		</if>
	</select>
	
	<select id="selectShippingNoteListCount" parameterType="shippingNoteParm" resultType="java.lang.String">
		SELECT COUNT(*)
        	FROM (<include refid="getItems"/>)
	</select>
  	
  	<sql id="getItems">
		<include refid="sqlShippingNote"/>
			AND A.VSL_CALL_ID = B.VSL_CALL_ID
		<if test="delvTpCd != null and delvTpCd != ''">
  			AND	A.DELV_TP_CD = #{delvTpCd}
		</if>
		<if test="statCd != null and statCd != ''">
  			AND	A.STAT_CD = #{statCd}
		</if>
		<if test="shipgNoteNo != null and shipgNoteNo != ''">
  			AND	A.SHIPG_NOTE_NO LIKE '%' || #{shipgNoteNo} || '%'
		</if>
		<if test='authority == "FWD"'>
			<if test="ptnrCd != null and ptnrCd != ''">
    			AND	A.FWRD = #{ptnrCd}
			</if>
		</if>
		<if test="ptnrCd != null and ptnrCd != ''">
			<if test='authority == "SHA"'>
				AND B.ARRV_SA_ID  = #{ptnrCd}
			</if>
			<if test='authority == "BH"'>
				AND (B.ARRV_SA_ID = #{ptnrCd} OR A.FWRD = #{ptnrCd})
			</if>
			<if test='authority == "SHAFWD"'>
				AND (B.ARRV_SA_ID = #{ptnrCd} OR A.FWRD = #{ptnrCd})
			</if>
			<if test='authority == "CNS"'>
				AND A.CNSNE = #{ptnrCd} OR A.SHPR = #{ptnrCd}
			</if>
		</if>
		<if test="fwrd != null and fwrd != ''">
  			AND	A.FWRD = #{fwrd}
		</if>
		<if test="arrvDtFm != null and arrvDtFm != ''">
  			AND	B.ETA <![CDATA[ >=]]> TO_DATE(#{arrvDtFm},'DD/MM/YYYY')
		</if>
		<if test="arrvDtTo != null and arrvDtTo != ''">
  			AND	B.ETA <![CDATA[ <=]]> TO_DATE(#{arrvDtTo},'DD/MM/YYYY') + 1
		</if>
    </sql>
    
	<select id="selectShippingNoteDtlList" parameterType="shippingNoteParm" resultType="shippingNoteItem">
		SELECT DISTINCT /*shippingNote.selectShippingNoteDtlList*/
			NVL(B.VSL_CALL_ID, ' ') AS VSLCALLID
			,B.VSL_CD AS VSLCD
			,B.CALL_YEAR AS CALLYEAR
			,B.CALL_SEQ AS CALLSEQ
			,NVL(B.SHIPG_NOTE_NO, ' ') AS SHIPGNOTENO
			,B.CMDT_CD AS CMDTCDDTL
			,(SELECT CMDT_DESC FROM TMT_CMDT WHERE CMDT_CD = A.CMDT_CD) AS CMDTCDNM
			,NVL(A.CG_WGT, 0.00) AS CGWGT
			,NVL(A.PKG_QTY, 0.00) AS PKGQTY
			,A.ACK_DT
			,NVL(B.PKG_QTY,0) AS PKGQTYDTL
			,NVL(B.CG_WGT,0) AS WGTDTL
			,NVL(B.PKG_TP_CD, ' ')   AS PKGTPCDDTL	
			,NVL(B.SEQ, 0 )             AS SEQ	
			,B.PKG_QTY ||'/'|| (SELECT S_CD_NM FROM TMT_CD_MSTD WHERE L_CD = 'MT' AND M_CD ='PKGTP' AND S_CD = B.PKG_TP_CD) AS PKG 
			,B.DIV_CD           AS DIVCD
			,B.TSPT_TP_CD       AS TSPTTPCDDTL	
			,(SELECT S_CD_NM FROM TMT_CD_MSTD WHERE L_CD = 'MT' AND M_CD ='PKGTP' AND S_CD = B.PKG_TP_CD) AS PKGTPCDNM	
			,B.HATCH_NO AS HATCHNO
			                                   
		FROM TMT_SHIPG_NOTE A, TMT_SHIPG_NOTE_DTL B               
		WHERE A.VSL_CALL_ID = B.VSL_CALL_ID
		AND A.SHIPG_NOTE_NO = B.SHIPG_NOTE_NO 			 
		AND B.VSL_CALL_ID=#{vslCallId}		
		AND B.SHIPG_NOTE_NO = #{shipgNoteNo}
		<if test="divCd != null and divCd != ''">
			AND	B.DIV_CD = #{divCd}
		</if>	   	
		<if test='tsptTpCd == "LC"'>
			AND	(B.TSPT_TP_CD = 'LR' OR B.TSPT_TP_CD = 'CV')
		</if>
		<if test='tsptTpCd == "LW"'>
			AND	(B.TSPT_TP_CD = 'LR' OR B.TSPT_TP_CD = 'WG')
		</if>
		 <if test='tsptTpCd == "LR"'>
	 		AND	B.TSPT_TP_CD = 'LR' 
		</if>
		<if test='tsptTpCd == "CV"'>
			AND	B.TSPT_TP_CD = 'CV' 
		</if>
		<if test='tsptTpCd == "WG"'>
			AND	B.TSPT_TP_CD = 'WG' 
		</if>	
		<if test='tsptTpCd == "SE"'>
			AND	 B.TSPT_TP_CD = 'SE' 
		</if>	
		 ORDER BY B.TSPT_TP_CD ASC	     	
    </select>    
    
	<select id="selectShippingNoteNoItems" parameterType="shippingNoteParm" resultType="shippingNoteItem">
		SELECT 'SN' || #{vslCd} ||TO_CHAR (SYSDATE, 'YYYYMMDD') || REPLACE(LPAD(TO_NUMBER(NVL(MAX(SUBSTR (SHIPG_NOTE_NO, 15, 5)), '0'))+1, 5, '0'),' ','') AS SHIPGNOTENO
		FROM TMT_SHIPG_NOTE 
		WHERE SHIPG_NOTE_NO LIKE 'SN' || #{vslCd} || TO_CHAR (SYSDATE, 'YYYYMMDD') || '%'
    </select>
    
	<select id="selectDetailSumItems" parameterType="shippingNoteParm" resultType="shippingNoteItem">
		SELECT /*shippingNote.selectDetailSumItems*/
			MAX(DECODE(TSPT_TP_CD, 'LR', CG_WGT, NVL(0.00,'')))   AS WGTLORRY,     			 
			MAX(DECODE(TSPT_TP_CD, 'CV', CG_WGT, NVL(0.00,'')))  AS WGTCONVEYOR,
			MAX(DECODE(TSPT_TP_CD, 'WG', CG_WGT, NVL(0.00,'')))  AS WGTWEGON      
		FROM TMT_SHIPG_NOTE_DTL            
		WHERE VSL_CALL_ID=#{vslCallId}
		AND SHIPG_NOTE_NO =#{shipgNoteNo}
		AND DIV_CD = 'W'  
		GROUP BY VSL_CALL_ID, SHIPG_NOTE_NO         
	</select>
 
	<select id="selectShippingNoteComboList"  parameterType="shippingNoteParm" resultType="shippingNoteItem">
		SELECT /*shippingNote.selectShippingNoteComboList*/
			SHIPG_NOTE_NO    AS SHIPGNOTENO
		FROM TMT_SHIPG_NOTE S
		WHERE S.CG_TP_CD <![CDATA[<>]]> 'RCV'
		<if test="vslCallId != null and vslCallId != ''">
			AND VSL_CALL_ID = #{vslCallId} 
		</if>			
		<if test="ptnrCd != null and ptnrCd != ''">
			AND FWRD = #{ptnrCd} 
		</if>
		<if test="vslCallId == null or vslCallId == ''">
			AND VSL_CALL_ID &lt;&gt; 'NonCallId'
		</if>
		<if test='opType == "cgMst"'>
			AND CATG_CD IN ('E','S')
			AND EXISTS(SELECT GR_NO FROM TMT_GR R WHERE R.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO)
		</if>
		<if test='opType == "popUpGr"'>
			 AND CATG_CD IN ('E')
		</if>
		<if test='opType == "whCgMstGr"'>
			AND CATG_CD IN ('E','S')
		</if>
		<if test='opType == "cgRh"'>
			AND CATG_CD IN ('S')
		</if>
		 GROUP BY SHIPG_NOTE_NO
		 ORDER BY SHIPG_NOTE_NO
	</select>
	
	<select id="selectShippingNoteComboList2"  parameterType="shippingNoteParm" resultType="shippingNoteItem">
		<if test='searchTypeCboSN == "B"'>
			SELECT DISTINCT /*shippingNote.selectShippingNoteComboList2*/
				A.SHIPG_NOTE_NO AS SHIPGNOTENO
			FROM TMT_SHIPG_NOTE A, TMT_ASGN_LORRY B
			WHERE A.VSL_CALL_ID = B.VSL_CALL_ID
		 	AND A.CG_TP_CD <![CDATA[<>]]> 'RCV'
			<if test="lorryNo != null and lorryNo != ''">
				AND B.LORRY_NO = #{lorryNo}
			</if>      
			UNION
			SELECT DISTINCT A.SHIPG_NOTE_NO AS SHIPGNOTENO
			FROM TMT_SHIPG_NOTE A, TMT_LORRY_PL B
			WHERE A.TSPT_COMP = B.PTNR_CD
		 	AND A.CG_TP_CD <![CDATA[<>]]> 'RCV'
			<if test="lorryNo != null and lorryNo != ''">
				AND B.PTNR_CD IN ( SELECT PTNR_CD FROM TMT_LORRY_PL WHERE LORRY_NO = #{lorryNo})
			</if>
		</if>
		<if test='searchTypeCboSN == "N"'>
			SELECT DISTINCT /*shippingNote.selectShippingNoteComboList2*/
				A.SHIPG_NOTE_NO  AS SHIPGNOTENO
			FROM TMT_SHIPG_NOTE A, TMT_LORRY_PL B
			WHERE A.VSL_CALL_ID = 'NonCallId'
			AND A.TSPT_COMP = B.PTNR_CD
			AND A.CG_TP_CD <![CDATA[<>]]> 'RCV'
			<if test="lorryNo != null and lorryNo != ''">
				AND B.PTNR_CD IN ( SELECT PTNR_CD FROM TMT_LORRY_PL WHERE LORRY_NO =#{lorryNo})
			</if>
		</if>
		<if test='searchTypeCboSN == "J"'>
			SELECT DISTINCT /*shippingNote.selectShippingNoteComboList2*/
				A.SHIPG_NOTE_NO  AS SHIPGNOTENO
			FROM TMT_SHIPG_NOTE A, TMT_ASGN_LORRY B
			WHERE A.VSL_CALL_ID = B.VSL_CALL_ID
			AND A.CG_TP_CD <![CDATA[<>]]> 'RCV'
			<if test="vslCallId != null and vslCallId != ''">
				AND B.VSL_CALL_ID = #{vslCallId}
			</if> 
			<if test="lorryNo != null and lorryNo != ''">
				AND B.LORRY_NO = #{lorryNo}
			</if>
		</if>	
	</select>
			
	<select id="selectBlNoItems" parameterType="shippingNoteParm" resultType="shippingNoteItem">
	 	SELECT /*shippingNote.selectBlNoItems*/
	 		ORG_REF_NO AS BLNO
		FROM TMT_RHDL_CG
		WHERE VSL_CALL_ID = #{vslCallId} 
		AND OPE_CLASS_CD = #{catgCd}
    </select>   
       
	<select id="selectCbrNoList" parameterType="shippingNoteParm" resultType="shippingNoteItem">
		SELECT /*shippingNote.selectCbrNoList*/
			CBR_NO 
		FROM TMT_SHIPG_NOTE
		WHERE  VSL_CALL_ID = #{vslCallId} 
		<if test="catgCd != null and catgCd != ''">
			<if test="catgCd != 'E'">
				AND CATG_CD = 'E' 
			</if>
		</if>
		<if test="shipgNoteNo != null and shipgNoteNo != ''">
	 		AND SHIPG_NOTE_NO != #{shipgNoteNo}
		</if>
		<if test="cbrNo != null and cbrNo != ''">
	 		AND CBR_NO = UPPER(#{cbrNo})
		</if>
	</select>
	
	<select id="selectGateInList" parameterType="shippingNoteParm" resultType="GoodsReceiptItem">
		SELECT /*shippingNote.selectGateInList*/
			GR.GR_NO AS GDSRECVNO
	       ,DELV.GATE_IN_DT AS GATEINDT
		FROM TMT_GR GR, TMT_CG_ARRV_DELV DELV
		WHERE GR.GR_NO = DELV.GR_NO (+)
		AND GR.VSL_CALL_ID       = #{vslCallId}
		AND GR.SHIPG_NOTE_NO IN (${shipgNoteNo})
	</select>
	
	<select id="selectDgSeq" parameterType="shippingNoteParm" resultType="shippingNoteItem">
		SELECT /*shippingNote.selectDgSeq*/
			A.DG_SEQ as dgSeq  
		FROM (
			SELECT * 
			FROM TMT_SHIPG_NOTE
			WHERE 1 =1 
			<if test='vslCallId == "NonCallId"'>
		  		AND FWRD = #{ptnrCd}  AND DG_SEQ IS NOT NULL   
				ORDER BY UPDATE_TIME DESC 
			</if>
			<if test="vslCallId != 'NonCallId'">
				AND SHIPG_NOTE_NO = #{shipgNoteNo}
			</if>
		 ) A  
		 WHERE ROWNUM = 1 
	</select>
	
	<select id="selectManifestList" parameterType="shippingNoteParm" resultType="shippingNoteItem">
		SELECT /*shippingNote.selectManifestList*/
			MF.VSL_CALL_ID 	AS VSLCALLID
			,MF.VSL_CD 		AS VSLCD
			,MF.CALL_YEAR 	AS CALLYEAR
			,MF.CALL_SEQ 	AS CALLSEQ
			,MF.MF_DOC_ID 	AS MFDOCID
		FROM TMT_MF MF
		WHERE MF.VSL_CALL_ID = #{vslCallId}
		AND MF.MF_DOC_ID = #{docId}
	</select>
	
	<select id="selectDGDeclarationReport" parameterType="dgDeclarationParm" resultType="dgDeclarationItem">
		SELECT /*shippingNote.selectDGDeclarationReport*/
			DG_DIV 					AS dgDiv	
			,VSL_CALL_ID 			AS vslCallId 
			,F_GET_LST_PORT_NM(VSL_CALL_ID) AS lstPortNm
			, VSL_TP				AS vslTp
			,VSL_NM					AS vslNm    
			,CG_NO 					AS cgNo  	
			,SEQ 					AS refNo  		
			,IMDG 					AS imdg  		
			,UNNO 					AS unno  		
			,CG_TP_CD 				AS cgTpCd  	
			,CMDT_CD 				AS cmdtCd  
			,F_GET_CMDT_DESC(CMDT_CD) AS cmdtDesc
			,DECODE (DG_CHK,
                 'S', 'Save',
                 'N', 'Submit',
                 'Y', 'Confirm',
                 'C', 'Cancel'
            ) AS dgChk
			,TO_CHAR(UPD_DT, 'DD/MM/YYYY HH24:MI') AS dclrDt
			,UPD_DT
			,CONFM_BY 				AS confmBy
			,TO_CHAR(CONFM_DT, 'DD/MM/YYYY HH24:MI') AS confmDt
			,NVL(F_GET_PTNR_SNM(SHIPG_AGNCY), ' ')   AS shipgAgncy
	        ,FWRD 					AS fwrd
	        ,NVL(F_GET_PTNR_SNM(SHPR), ' ') AS shpr
	        ,NVL(F_GET_PTNR_SNM(CNSNE), ' ') AS cnsne
			,PRI_GRP 				AS priGrp  
			,PKG 					AS pkg  
			,PKG_QTY 				AS pkgQty  		
			,VSL_CD 				AS vslCd  		
			,CALL_YEAR 				AS callYear  	
			,CALL_SEQ 				AS callSeq  	
			,SEQ 					AS dgSeq  	
			,TRANSHIPMENT			AS transhipment	
			,CONTACT_PERSON 		AS contactNm
			,CONTACT_NUMBER 		AS contactNo
			,PROP_SNM  				AS propSnm
			,FREE_ZONE_DIV 			AS freeZoneDiv
			,RMK1 					AS rmk1
	        ,ETA  					AS eta
	        ,BERTH_LOC 				AS berthLoc
	        ,FLASH_PNT 				AS flashPnt
	        ,TEL_NO 				AS telNo
	        ,MOBILE_NO 				AS mobileNo
	        ,ENG_NM 				AS engNm
	        ,EMPCD 					AS empCd
	        ,ID_NO 					AS idNo
	        ,DESIGNATION 			AS desgination
	        ,RMK2  					AS rmk2
		FROM (
			SELECT 
				'EX' DG_DIV
                ,C.VSL_CALL_ID VSL_CALL_ID
                ,VSLP.VSL_TP
                ,VSLP.VSL_NM
				,A.CG_NO
				,A.REF_NO
				,A.IMDG
				,A.UNNO
				,B.CG_TP_CD
				,B.CMDT_CD 
				,A.DG_CHK
				,A.UPD_DT
				,A.CONFM_BY
				,A.CONFM_DT
				,B.SHIPG_AGNCY
				,B.FWRD
				,B.SHPR
				,B.CNSNE
				,A.PRI_GRP
				,A.PKG
				,A.PKG_QTY
				,A.VSL_CD
				,A.CALL_YEAR
				,A.CALL_SEQ
				,A.SEQ
				,'EXPORT' AS transhipment
				,A.CONTACT_PERSON
				,A.CONTACT_NUMBER
				,A.PROP_SNM
				,A.FREE_ZONE_DIV
				,A.RMK1
				,TO_CHAR (C.ETA, 'DD/MM/YYYY HH24:MI') ETA
				,C.BERTH_LOC AS BERTH_LOC,
	            ,A.FLASH_PNT,
	            ,(select TEL_NO FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 		AS tel_no
	            ,(select MOBILE_NO FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 	AS mobile_no
	            ,(select ENG_NM FROM TMT_USER_INFO userInfo WHERE A.CONFM_BY = USERINFO.USER_ID) 	AS eng_nm
	            ,(select ENG_NM FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 		AS empCd
	            ,(select ID_NO FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 		AS ID_NO
	            ,(select DESIGNATION FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) AS DESIGNATION
	            ,A.RMK2 RMK2
			FROM TMT_DG A,TMT_SHIPG_NOTE B, TMT_VSL_SCH C, TMT_VSL_PART VSLP
			WHERE A.VSL_CD = C.VSL_CD
            AND A.CALL_YEAR = C.CALL_YEAR
            AND A.CALL_SEQ = C.CALL_SEQ	
			AND A.SEQ = B.DG_SEQ
			AND B.VSL_CALL_ID = C.VSL_CALL_ID
			AND C.VSL_CD = VSLP.VSL_CD
            AND A.SEQ = #{seq}
			UNION ALL
			SELECT 
				TMP.DG_DIV
				,TMP.VSL_CALL_ID
				,TMP.VSL_TP
				,TMP.VSL_NM
				,C.CG_NO
				,C.REF_NO
				,C.IMDG
				,C.UNNO
				,TMP.CG_TP_CD
				,TMP.CMDT_CD
				,C.DG_CHK
				,C.UPD_DT
				,C.CONFM_BY
				,C.CONFM_DT
				,TMP.SHIPG_AGNCY
				,TMP.FWRD
				,TMP.CNSNE
				,TMP.SHPR
				,C.PRI_GRP
				,C.PKG
				,C.PKG_QTY
				,C.VSL_CD
				,C.CALL_YEAR
				,C.CALL_SEQ
				,C.SEQ
				,'IMPORT' AS TRANSHIPMENT
				,C.CONTACT_PERSON
				,C.CONTACT_NUMBER
				,C.PROP_SNM
				,C.FREE_ZONE_DIV
				,C.RMK1
				,TMP.ETA
				,TMP.BERTH_LOC
				,C.FLASH_PNT
				,(SELECT TEL_NO FROM TMT_USER_INFO userInfo WHERE C.EMP_CD = USERINFO.USER_ID) 		AS tel_no
				,(SELECT MOBILE_NO FROM TMT_USER_INFO userInfo where C.EMP_CD = USERINFO.USER_ID) 	AS mobile_no
				,(SELECT ENG_NM FROM TMT_USER_INFO userInfo WHERE C.CONFM_BY = USERINFO.USER_ID) 	AS eng_nm
				,(SELECT ENG_NM FROM TMT_USER_INFO userInfo WHERE C.EMP_CD = USERINFO.USER_ID) 		AS empCd
				,(SELECT ID_NO FROM TMT_USER_INFO userInfo WHERE C.EMP_CD = USERINFO.USER_ID) 		AS ID_NO
				,(SELECT DESIGNATION FROM TMT_USER_INFO userInfo WHERE C.EMP_CD = USERINFO.USER_ID) AS DESIGNATION
				,C.RMK2 RMK2
			FROM (
				SELECT 
					A.BL_NO AS BLNO
					,A.VSL_CALL_ID
					,A.DG_SEQ AS DGSEQ
					,A.CG_TP_CD
					,A.CMDT_CD
					,DECODE(A.DOC_ID, 'K4BL','IM', 'TS') AS DG_DIV
					,NVL(A.FWRD, ' ') AS FWRD
					,A.SHPR AS CNSNE
					,A.CNSNE AS SHPR
					,B.ARRV_SA_ID AS SHIPG_AGNCY
					,P.VSL_TP
					,P.VSL_NM
					,TO_CHAR (B.ETA, 'DD/MM/YYYY HH24:MI') ETA,
					B.BERTH_LOC AS BERTH_LOC
				FROM TMT_BL A, TMT_VSL_SCH B, TMT_VSL_PART P
				WHERE A.CATG_CD IN ('I','T')
				AND A.VSL_CD = B.VSL_CD
				AND A.CALL_SEQ = B.CALL_SEQ
				AND A.CALL_YEAR = B.CALL_YEAR
				AND B.VSL_CD = P.VSL_CD
			) TMP, TMT_DG C
			WHERE TMP.DGSEQ = C.SEQ
			AND  C.SEQ = #{seq}
			UNION ALL
			SELECT DISTINCT 
				'EX' DG_DIV
				,B.VSL_CALL_ID
				,NULL VSL_TP
				,NULL VSL_NM
				,A.CG_NO
				,A.REF_NO
				,A.IMDG
				,A.UNNO
				,B.CG_TP_CD
				,B.CMDT_CD 
				,A.DG_CHK
				,A.UPD_DT
				,A.CONFM_BY
				,A.CONFM_DT
				,NVL(B.SHIPG_AGNCY,B.FWRD)
				,B.FWRD
				,B.SHPR
				,B.CNSNE
				,A.PRI_GRP
				,A.PKG
				,A.PKG_QTY
				,A.VSL_CD
				,A.CALL_YEAR
				,A.CALL_SEQ
				,A.SEQ
				,'EXPORT' AS transhipment
				,A.CONTACT_PERSON
				,A.CONTACT_NUMBER
				,A.PROP_SNM
				,A.FREE_ZONE_DIV
				,A.RMK1
				,'' ETA
				,'' AS BERTH_LOC
				,A.FLASH_PNT
				,(SELECT TEL_NO FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 		AS tel_no
				,(SELECT MOBILE_NO FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 	AS mobile_no
				,(SELECT ENG_NM FROM TMT_USER_INFO userInfo WHERE A.CONFM_BY = USERINFO.USER_ID) 	AS eng_nm
				,(SELECT ENG_NM FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 		AS empCd
				,(SELECT ID_NO FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 		AS ID_NO
				,(SELECT DESIGNATION FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) AS DESIGNATION
		 		,A.RMK2 RMK2
			FROM TMT_DG A,TMT_SHIPG_NOTE B
			WHERE A.SEQ = B.DG_SEQ
			AND B.VSL_CALL_ID ='NonCallId' 
			AND A.SEQ = #{seq}		
			UNION ALL			
			SELECT 
				DECODE(B.CG_OPT_TP_CD
					,'DS', 'IM'
					,'LD', 'EX'
					,'TD', 'TS'
					,'TL', 'TS'
					,'SD', 'ST'
					,'SL', 'ST'
				) DG_DIV
				,C.VSL_CALL_ID VSL_CALL_ID
				,VSLP.VSL_TP
				,VSLP.VSL_NM
				,A.CG_NO
				,A.REF_NO
				,A.IMDG
				,A.UNNO
				,B.CG_TP_CD
				,B.CMDT_CD 
				,A.DG_CHK
				,A.UPD_DT
				,A.CONFM_BY
				,A.CONFM_DT
				,C.ARRV_SA_ID AS SHIPG_AGNCY
				,F_GET_FWRD_BL(B.VSL_CALL_ID, BL.BL_NO) FWRD
				,B.SHPR_CNSNE AS SHPR
				,B.CNSNE AS CNSNE
				,A.PRI_GRP
				,A.PKG
				,A.PKG_QTY
				,A.VSL_CD
				,A.CALL_YEAR
				,A.CALL_SEQ
				,A.SEQ
				,DECODE (B.CG_OPT_TP_CD,
					'DS', 'IMPORT',
					'LD', 'EXPORT',
					'TD', 'TRANSHIPMENT',
					'TL', 'TRANSHIPMENT',
					'SD', 'TRANSHIPMENT',
					'SL', 'TRANSHIPMENT'
				) AS transhipment
				,A.CONTACT_PERSON
				,A.CONTACT_NUMBER
				,A.PROP_SNM
				,A.FREE_ZONE_DIV
				,A.RMK1
				,TO_CHAR (C.ETA, 'DD/MM/YYYY HH24:MI') ETA
				,C.BERTH_LOC AS BERTH_LOC
				,A.FLASH_PNT
				,(SELECT TEL_NO FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 		AS tel_no
				,(SELECT MOBILE_NO FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 	AS mobile_no
				,(SELECT ENG_NM FROM TMT_USER_INFO userInfo WHERE A.CONFM_BY = USERINFO.USER_ID) 	AS eng_nm
				,(SELECT ENG_NM FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 		AS empCd
				,(SELECT ID_NO FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) 		AS ID_NO
				,(SELECT DESIGNATION FROM TMT_USER_INFO userInfo WHERE A.EMP_CD = USERINFO.USER_ID) AS DESIGNATION
				,A.RMK2 RMK2
			FROM TMT_DG A, TMT_CONFM_SLP_DTL B, TMT_VSL_SCH C, TMT_BL BL, TMT_VSL_PART VSLP
			WHERE A.VSL_CD = C.VSL_CD
            AND A.CALL_YEAR = C.CALL_YEAR
            AND A.CALL_SEQ = C.CALL_SEQ
            AND A.SEQ = B.DG_SEQ
            AND B.VSL_CALL_ID = BL.VSL_CALL_ID (+)
            AND B.BL_NO = BL.BL_NO (+)                                  
			AND C.VSL_CD = VSLP.VSL_CD
            AND A.SEQ = #{seq}
		)
	</select>
	
	<select id="selectRoRoItems" parameterType="shippingNoteParm" resultMap="resultUnitItem">
	<if test="grNo !=null and grNo !=''">
		SELECT /*shippingNote.selectRoRoItems*/
			R.VSL_CD
			,R.CALL_YEAR
			,R.CALL_SEQ
			,R.VSL_CALL_ID
			,R.MF_DOC_ID
			,R.CG_NO
			,R.CHAS_NO
			,R.RORO_SEQ as SEQ
			,R.BRAND_CD
			,R.MODEL_CD
			,B.BRAND_NM
			,M.MODEL_NM
			,R.DOC_WGT
			,R.CBM
			,R.NEW_YN
			,'R' as ACTION
		FROM TMT_RORO_MST R
		LEFT OUTER JOIN TMT_BRAND B
			ON R.BRAND_CD = B.BRAND_CD
		LEFT OUTER JOIN TMT_BRAND_DTL M
			ON R.MODEL_CD = M.MODEL_CD
    	AND R.BRAND_CD = M.BRAND_CD
		WHERE 1=1
		<if test="vslCallId !=null and vslCallId !=''">
			AND R.VSL_CALL_ID = #{vslCallId}
		</if>
		<if test="mfDocId !=null and mfDocId !=''">
			AND R.MF_DOC_ID = #{mfDocId}
		</if>
		<if test="shipgNoteNo !=null and shipgNoteNo !=''">
			AND R.CG_NO = #{shipgNoteNo}
		</if>
		AND R.GR_NO = #{grNo}
		ORDER BY R.CHAS_NO ASC
	</if>
	<if test="grNo ==null or grNo ==''">
		SELECT /*shippingNote.selectRoRoItems*/
				R.VSL_CD
				,R.CALL_YEAR
				,R.CALL_SEQ
				,R.VSL_CALL_ID
				,R.MF_DOC_ID
				,R.CG_NO
				,R.CHAS_NO
				,R.SEQ
				,R.BRAND_CD
				,R.MODEL_CD
				,B.BRAND_NM
				,M.MODEL_NM
				,R.DOC_WGT
				,R.CBM
				,R.NEW_YN
				,'R' as ACTION
			FROM TMT_SHIPG_NOTE_DTL R
			LEFT OUTER JOIN TMT_BRAND B
				ON R.BRAND_CD = B.BRAND_CD
			LEFT OUTER JOIN TMT_BRAND_DTL M
				ON R.MODEL_CD = M.MODEL_CD
	    	AND R.BRAND_CD = M.BRAND_CD
			WHERE 1=1
			<if test="vslCallId !=null and vslCallId !=''">
				AND R.VSL_CALL_ID = #{vslCallId}
			</if>
			<if test="mfDocId !=null and mfDocId !=''">
				AND R.MF_DOC_ID = #{mfDocId}
			</if>
			<if test="shipgNoteNo !=null and shipgNoteNo !=''">
				AND R.CG_NO = #{shipgNoteNo}
			</if>
			<if test="searchFlag !=null and searchFlag !=''">
				AND R.CHAS_NO NOT IN (SELECT CHAS_NO FROM TMT_RORO_MST RM WHERE RM.CHAS_NO = R.CHAS_NO
                                      AND RM.CG_NO = R.SHIPG_NOTE_NO)
			</if>
			ORDER BY R.CHAS_NO ASC
	</if>
	</select>
	
	<select id="selectValidationCode" parameterType="shippingNoteParm" resultType="shippingNoteItem">
		<if test='tyCd == "validationSN"'>
			SELECT DECODE(COUNT(*), 0, 'N', 'Y') AS isValidated 
			FROM TMT_SHIPG_NOTE
            WHERE SHIPG_NOTE_NO = #{shipgNoteNo}
		</if>
		<if test='tyCd == "checkSNEmptyGR"'>
			SELECT DECODE (COUNT (*), 0, 'Y', 'N') AS isValidated
			FROM TMT_SHIPG_NOTE SN
			INNER JOIN TMT_GR GR 
			ON SN.VSL_CALL_ID = GR.VSL_CALL_ID
			AND SN.SHIPG_NOTE_NO = GR.SHIPG_NOTE_NO
            WHERE SN.SHIPG_NOTE_NO = #{shipgNoteNo}
		</if>
		<if test='tyCd == "checkSNTruckAssign"'>
			SELECT DECODE (COUNT (*), 0, 'Y', 'N') AS isValidated
			FROM TMT_SHIPG_NOTE SN
			INNER JOIN TMT_ASSIGN_TRANSPORT AG
			ON SN.VSL_CALL_ID = AG.VSL_CALL_ID
			AND SN.SHIPG_NOTE_NO = AG.SHIPG_NOTE_NO
			WHERE SN.SHIPG_NOTE_NO = #{shipgNoteNo}
		</if>
	</select>
	
	<select id="selectPackageItems" parameterType="shippingNoteParm" resultMap="resultPackageItem">
		SELECT /*shippingNote.selectPkgDetail*/
			CALL_YEAR, CALL_SEQ, VSL_CALL_ID, PKG_NO, PKG_DESC, 
			CG_WGT, CG_VOL, WIDTH, LENGTH, HEIGHT,RMK,'R' as ACTION
		FROM TMT_PKG_INFO         
		WHERE VSL_CALL_ID= #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
		AND REF_NO = #{shipgNoteNo}
	</select>
	
	<insert id="insertShippingNoteItem" parameterType="shippingNoteItem">
		INSERT /*shippingNote.insertShippingNoteItem*/
		INTO TMT_SHIPG_NOTE(
			VSL_CALL_ID
			,VSL_CD
			,CALL_YEAR
			,CALL_SEQ
			,MF_DOC_ID
			,SHIPG_NOTE_NO
			,CATG_CD
			,CG_WGT
			,CG_VOL
			,PKG_QTY
			,PKG_TP_CD
			,CG_TP_CD
			,TSPT_TP_CD
			,DELV_TP_CD			
			,ACK_DT
			,POD
			,POL
			,POR
			,FDEST
			,IMDG
			,UNNO
			,RMK			
			,SHIPG_AGNCY
			,FWRD
			,CNSNE
			,CNSNE_NM
			,CNSNE_ADDR
			,SHPR
			,SHPR_NM
			,SHPR_ADDR
			,TSPT_COMP
			,UPDATE_TIME
			,STAFF_CD
			,CMDT_CD
			,STAT_CD
			,DG_SEQ
			,GDS_RMK
			,CMDT_GRP_CD
			,PKG_NO
			,EACH_WGT
			,EACH_VOL
			,WIDTH
			,HEIGHT
			,LENGTH
			,FREIGHT_TON
			,MARK_NO
			,REF_NO
			,VERSION
			,PROJECT_CARGO
			,DOMESTIC_CHK
			,WGT_CHK
			,BONDED_WH_YN
			,ADDITIONAL_CHK
			,LOT_NO
			,EST_ARRV_DT
		) VALUES (
			#{vslCallId},
			#{vslCd},
			#{callYear},
			#{callSeq},
			UPPER(#{mfDocId}),
			#{shipgNoteNo},
			#{catgCd},
			#{cgWgt},			
			#{cgMsrmt},
			#{pkgQty},
			#{pkgTpCd},
			#{cgTpCd},
			#{tsptTpCd},
			#{delvTpCd},			
			#{ackDt},
			#{portOfDis},
			#{portOfLoad},
			#{cntryOfOrg},
			#{fnlDest},
			#{imdg},
			#{unno},		
			#{rmk},			
			#{ptnrCd},
			#{fwrd},						
			#{cnsne},
			#{cnsneNm},
			#{cnsneAddr},			
			#{shpr},
			#{shprNm},
			#{shprAddr},
			UPPER(#{tsptComp}),
			SYSDATE,
			#{userId},
			#{cmdtCd},
			#{statCd},
			#{dgSeq},
			#{goodsDescr},
			#{cmdtGroupCd},
			#{pkgNumber},
			#{eachWgt},
			#{eachMsrmt},
			#{cgWth},
			#{cgHgt},
			#{cgLen},
			#{freightTon},
			#{markNo},
			#{refNo},
			#{newVersion},
			#{projectCargo},
			DECODE(#{domesticChk}, 'Y', 'Y', DECODE(#{domesticChk}, 'Domestic Cargo', 'Y', 'N')),
			#{wgtChk},
			#{bondedWhYn},
			#{additionalChk},
			#{lotNo},
			TO_DATE(#{estArrvDt1}, 'DD/MM/YYYY HH24:MI')
		)
    </insert>
    
    <insert id="insertShippingNoteDtlItem" parameterType="shippingNoteItem">
     	INSERT /*shippingNote.insertShippingNoteDtlItem*/
     	INTO TMT_SHIPG_NOTE_DTL (
     		 VSL_CALL_ID ,
     		 VSL_CD,
			 CALL_YEAR,
			 CALL_SEQ,
			 SHIPG_NOTE_NO,
			 MF_DOC_ID,
			 SEQ,
			 CMDT_CD,
			 PKG_QTY,
			 PKG_TP_CD,
			 DIV_CD,
			 TSPT_TP_CD,
			 CG_WGT,
			 CG_TP_CD,
			 STAFF_CD,
			 UPDATE_TIME,
			 HATCH_NO
		)VALUES(
			 #{vslCallId}, 
			 #{vslCd},
			 #{callYear},
			 #{callSeq},
			 #{shipgNoteNo},
			 UPPER(#{mfDocId}),
			 (SELECT DECODE(MAX(SEQ), NULL, 1, MAX(SEQ)+ 1) FROM TMT_SHIPG_NOTE_DTL),
			 NVL(#{cmdtCdDtl}, ' '), 
			 #{pkgQtyDtl},
			 #{pkgTpCdDtl},
			 #{divCd},
			 #{tsptTpCdDtl},
			 #{wgtDtl},
			 #{cgTpCd},
			 #{userId},
			 SYSDATE,
			 #{hatchNo}
		)
    </insert>
    
    <insert id="insertManifestItem" parameterType="shippingNoteParm">
     	INSERT /*shippingNote.insertManifestItem*/
     	INTO TMT_MF (
     		 VSL_CALL_ID ,
     		 VSL_CD,
			 CALL_YEAR,
			 CALL_SEQ,
			 MF_DOC_ID,
			 OP_CLASS_CD,
			 STAFF_CD,
			 UPDATE_TIME,
			 VERSION
		)VALUES(
			 #{vslCallId}, 
			 #{vslCd},
			 #{callYear},
			 #{callSeq},
			 #{mfDocId},
			 #{opClassCd},
			 #{updUserId},
			 SYSDATE,
			 #{newVersion}
		)
    </insert>
    
    <insert id="insertRoRoItems" parameterType="shippingNoteItem">
		INSERT /*shippingNote.insertRoRoItems*/
		INTO TMT_SHIPG_NOTE_DTL (
			VSL_CD,
			CALL_YEAR,
			CALL_SEQ,
			VSL_CALL_ID,
			SHIPG_NOTE_NO,
			MF_DOC_ID,
			PKG_TP_CD,
			CG_NO,
			CHAS_NO,
			SEQ,
			CMDT_CD,
			BRAND_CD,
			MODEL_CD,
			DOC_WGT,
			CBM,
			CATG_CD,
			CG_TP_CD,
			IX_CD,
			NEW_YN,
			STAT_CD,
			UPDATE_TIME,
			STAFF_CD
		) VALUES (
			#{vslCd}
			,#{callYear}
			,#{callSeq}
			,#{vslCallId}
			,#{shipgNoteNo}
			,UPPER(#{mfDocId})
			,#{pkgTpCd}
			,#{shipgNoteNo}
			,#{unitNo}
			,(SELECT DECODE(MAX(SEQ), NULL, 1, MAX(SEQ)+ 1) FROM TMT_SHIPG_NOTE_DTL)
			,NVL(#{cmdtCd}, ' ')
			,#{brandCd}
			,#{modelCd}
			,#{roroMt}
			,#{cbm}
			,#{catgCd}
			,#{cgTpCd}
			,'X'
			,#{newYn}
			,'RS'
			,SYSDATE
			,#{userId}
		) 
	</insert>
	
	<insert id="insertRoRoMSTItems" parameterType="shippingNoteItem">
		INSERT /*roro.insertRoRoMSTItems*/
		INTO TMT_RORO_MST (
			VSL_CD,
			CALL_YEAR,
			CALL_SEQ,
			VSL_CALL_ID,
			MF_DOC_ID,
			GR_NO,
			CG_NO,
			CHAS_NO,
			RORO_SEQ,
			BRAND_CD,
			MODEL_CD,
			DOC_WGT,
			CBM,
			CATG_CD,
			CG_TP_CD,
			IX_CD,
			NEW_YN,
			STAT_CD,
			STAFF_CD,
			UPDATE_TIME
		) VALUES (     
			#{vslCd}
			,#{callYear}
			,#{callSeq}
			,#{vslCallId}
			,#{mfDocId}
			,#{grNo}
			,#{shipgNoteNo}
			,#{unitNo}
			,(SELECT    RTRIM(LTRIM(TO_CHAR(MAX(A.roroSeq),'0000'))) roroSeq
                        FROM (
                                SELECT    CAST(MAX(RORO_SEQ) AS INT) + 1 as roroSeq
                                FROM    TMT_RORO_MST
                                WHERE   VSL_CALL_ID     =  #{vslCallId}
                                        AND MF_DOC_ID  =  #{mfDocId}
                                        <if test="shipgNoteNo != null and shipgNoteNo != ''">
											AND CG_NO   =  #{shipgNoteNo}
										</if>
                                UNION
                                SELECT 1 roroSeq from dual) A)
			,#{brandCd}
			,#{modelCd}
			,#{roroMt}
			,#{cbm}
			,#{catgCd}
			,#{cgTpCd}
			,'X'
			,#{newYn}
			,'RS'
			,#{userId}
			,SYSDATE
		)
	</insert>
	
	
	<insert id="insertPackageItems" parameterType="shippingNoteItem">
		INSERT /*shippingNote.insertPackageItems*/
		INTO TMT_PKG_INFO (
			VSL_CD,
			CALL_YEAR,
			CALL_SEQ,
			VSL_CALL_ID,
			REF_NO,
			MF_DOC_ID,
			PKG_NO,
			PKG_DESC,
			PKG_TP_CD,
			CG_VOL,
			CG_WGT,
			HEIGHT,
			LENGTH,
			WIDTH,
			OPE_CLASS_CD,
			UPDATE_TIME,
			STAFF_CD,
			RMK
		) VALUES (
			#{vslCd}
			,#{callYear}
			,#{callSeq}
			,#{vslCallId}
			,#{shipgNoteNo}
			,UPPER(#{mfDocId})
			,#{pkgNo}
			,#{pkgDesc}
			,#{pkgTpCd}
			,#{pkgM3}
			,#{pkgMt}
			,#{height}
			,#{length}
			,#{width}
			,#{catgCd}
			,SYSDATE
			,#{userId},
			#{pkgRmk}
		) 
	</insert>
	
	<insert id="insertShippingNoteAmtItems" parameterType="shippingNoteItem">
		INSERT /*shippingNote.insertShippingNoteAmtItems*/
		INTO TMT_SHIPG_NOTE_AMT (
			VSL_CD,
			CALL_YEAR,
			CALL_SEQ,
			VSL_CALL_ID,
			SHIPG_NOTE_NO,
			MF_DOC_ID,
			CG_WGT,
			CG_VOL,
			PKG_QTY,
			D_MT,
			D_M3,
			D_QTY,
			D_LR_MT,
			D_LR_M3,
			D_LR_QTY,
			D_VSL_MT,
			D_VSL_M3,
			D_VSL_QTY,
			I_MT,
			I_M3,
			I_QTY,
			UPDATE_TIME,
			STAFF_CD
		) VALUES (
			#{vslCd}
			,#{callYear}
			,#{callSeq}
			,#{vslCallId}
			,#{shipgNoteNo}
			,UPPER(#{mfDocId})
			,#{cgWgt}		
			,#{cgMsrmt}
			,#{pkgQty}
			,#{dmt}		
			,#{dm3}
			,#{dqty}
			,#{dLrMt}		
			,#{dLrM3}
			,#{dLrQty}
			,#{dVslMt}		
			,#{dVslM3}
			,#{dVslQty}
			,#{imt}		
			,#{im3}
			,#{iqty}
			,SYSDATE
			,#{userId}
		) 
	</insert>
	
	<update id="updateShippingNoteAckItems" parameterType="shippingNoteItem">
    	UPDATE	/*shippingNote.updateShippingNoteAckItems*/
    	TMT_SHIPG_NOTE SET 	
    		ACK_BY = #{ackBy},
			STAT_CD = #{statCd},				
			<if test="ackBy != null and ackBy != ''">
				ACK_DT = SYSDATE,
			</if>				
			TSPT_COMP = #{tsptComp},
			CG_TP_CD = #{cgTpCd},
			UPDATE_TIME = SYSDATE,                                                
			STAFF_CD = #{userId},
			VERSION = #{newVersion}
		WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{shipgNoteNo}	
    </update>
    
    <update id="updateCgTpItems" parameterType="shippingNoteItem">
    	UPDATE  /*shippingNote.updateCgTpItems*/
    	TMT_CG_MST SET     
    		CG_TP_CD = #{cgTpCd},
            UPDATE_TIME = SYSDATE,                                                
            STAFF_CD = #{userId},
            VERSION = #{newVersion}
        WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{shipgNoteNo}
    </update>
    
    <update id="updateShippingNoteItems"  parameterType="shippingNoteItem">
		UPDATE	/*shippingNote.updateShippingNoteItems*/
		TMT_SHIPG_NOTE SET 
			SHIPG_NOTE_NO = #{newShipgNoteNo},
			MF_DOC_ID 	= #{newMfDocId},
			CATG_CD    	= #{catgCd},                                                     
			CG_WGT      = #{cgWgt},			                         
			CG_VOL		= #{cgMsrmt},                                       
			PKG_QTY		= #{pkgQty},
			PKG_TP_CD	= #{pkgTpCd},
			CG_TP_CD	= #{cgTpCd},
			TSPT_TP_CD	= #{tsptTpCd},
			DELV_TP_CD	= #{delvTpCd},
			POD			= #{portOfDis},
			POR			= #{cntryOfOrg},
			FDEST		= #{fnlDest},
			ACK_DT 		= #{ackDt},
			REF_NO		= #{refNo},
			STAT_CD 	= #{statCd},
			IMDG		= #{imdg},
			UNNO		= #{unno},
			RMK			= #{rmk},
			FWRD		= #{fwrd},
			CNSNE		= #{cnsne},
			CNSNE_NM	= #{cnsneNm},                                              
			CNSNE_ADDR	= #{cnsneAddr},			                        
			SHPR		= #{shpr},                                                 
			SHPR_NM		= #{shprNm},                                               
			SHPR_ADDR	= #{shprAddr},                                             
			TSPT_COMP	= #{tsptComp},                                             
			UPDATE_TIME	= SYSDATE,                                                
			STAFF_CD	= #{userId},
			CMDT_CD 	= #{cmdtCd},
			DG_SEQ 		= #{dgSeq},
			VERSION 	= #{newVersion},
			MARK_NO 	= #{markNo},
			GDS_RMK 	= #{goodsDescr},
			CMDT_GRP_CD = #{cmdtGroupCd},		
			PKG_NO 		= #{pkgNumber},		
			EACH_WGT 	= #{eachWgt},			
			EACH_VOL 	= #{eachMsrmt},		
			WIDTH		= #{cgWth},
			HEIGHT		= #{cgHgt},
			LENGTH		= #{cgLen},
			FREIGHT_TON = #{freightTon},
			PROJECT_CARGO = #{projectCargo},
			DOMESTIC_CHK = DECODE(#{domesticChk}, 'Y', 'Y', DECODE(#{domesticChk}, 'Domestic Cargo', 'Y', 'N')),
			WGT_CHK		= #{wgtChk},
			BONDED_WH_YN = #{bondedWhYn},
			ADDITIONAL_CHK = #{additionalChk},
			LOT_NO = #{lotNo},
			EST_ARRV_DT	= TO_DATE(#{estArrvDt1}, 'DD/MM/YYYY HH24:MI')
		WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{shipgNoteNo}	
		<if test="version != null and version != ''">
  			AND VERSION = #{version}
		</if>			
    </update>
    
    <update id="updateShippingNoteAmtItems"  parameterType="shippingNoteItem">
		UPDATE	/*shippingNote.updateShippingNoteAmtItems*/
		TMT_SHIPG_NOTE_AMT SET 
			SHIPG_NOTE_NO = #{newShipgNoteNo},
			MF_DOC_ID 	= #{newMfDocId},                                                    
			CG_WGT      = #{cgWgt},			                         
			CG_VOL		= #{cgMsrmt},                                       
			PKG_QTY		= #{pkgQty},
			D_MT		= #{dmt},
			D_M3		= #{dm3},
			D_QTY		= #{dqty},
			D_LR_MT  	= #{dLrMt},
			D_LR_M3		= #{dLrM3},
			D_LR_QTY	= #{dLrQty},
			D_VSL_MT	= #{dVslMt},
			D_VSL_M3	= #{dVslM3},
			D_VSL_QTY 	= #{dVslQty},
			I_MT		= #{imt},
			I_M3		= #{im3},
			I_QTY  		= #{iqty},                                    
			UPDATE_TIME	= SYSDATE,                                                
			STAFF_CD	= #{userId}
		WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{shipgNoteNo}			
    </update>
    
    <update id="updateShippingNoteDtlItems"  parameterType="shippingNoteItem">
	    UPDATE /*shippingNote.updateShippingNoteDtlItems*/
	    TMT_SHIPG_NOTE_DTL SET CMDT_CD = NVL(#{cmdtCdDtl}, ' '),
		    PKG_QTY 	= #{pkgQtyDtl},
		    PKG_TP_CD	= #{pkgTpCdDtl},
		    DIV_CD 		= #{divCd},
		    TSPT_TP_CD 	= #{tsptTpCdDtl},
		    CG_WGT 		= #{wgtDtl},
		    HATCH_NO 	= #{hatchNo}
		WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{shipgNoteNo}
		AND SEQ = #{seq}
    </update>

	<update id="updateSnNoDtlItems"  parameterType="shippingNoteItem">
	    UPDATE /*shippingNote.updateSnNoDtlItems*/
	    TMT_SHIPG_NOTE_DTL SET 
	    	SHIPG_NOTE_NO = #{newShipgNoteNo}
		WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{shipgNoteNo}
    </update>
    
    <delete id="deleteShippingNoteDtlItems" parameterType="shippingNoteItem">
   		DELETE /*shippingNote.deleteShippingNoteDtlItems*/
		FROM TMT_SHIPG_NOTE_DTL 
		WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{shipgNoteNo}
		AND CHAS_NO IS NULL
		<if test="seq != 0">
   			AND SEQ = #{seq}
		</if>	
	</delete>
	 
    <delete id="deleteManifestItem" parameterType="shippingNoteItem">
    	DELETE /*shippingNote.deleteManifestItem*/
    	FROM TMT_MF 
		WHERE VSL_CALL_ID = #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
		AND (
			SELECT COUNT(SHIPG_NOTE_NO) 
			FROM TMT_SHIPG_NOTE
			WHERE SHIPG_NOTE_NO = #{shipgNoteNo}
			AND VSL_CALL_ID = #{vslCallId}
			AND MF_DOC_ID = #{mfDocId}
		) = 0
	 </delete>
	
	<delete id="deleteDgShippingNoteItem" parameterType="shippingNoteItem">
		DELETE /*shippingNote.deleteDgShippingNoteItem*/
		FROM TMT_DG 
		WHERE SEQ = #{dgSeq}
	</delete>
	
	<delete id="deleteShippingNoteItems" parameterType="shippingNoteItem">
    	DELETE /*shippingNote.deleteShippingNoteItems*/
    	FROM TMT_SHIPG_NOTE
		WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{shipgNoteNo}
		<if test="version != null and version != ''">
  			AND VERSION = #{version}
		</if>			
	</delete>
	
	<delete id="deleteShippingNoteAmtItems" parameterType="shippingNoteItem">
    	DELETE /*shippingNote.deleteShippingNoteAmtItems*/
    	FROM TMT_SHIPG_NOTE_AMT
		WHERE VSL_CALL_ID = #{vslCallId}
		AND SHIPG_NOTE_NO = #{shipgNoteNo}			
	</delete>
	
	<delete id="deleteRoRoItems" parameterType="shippingNoteItem">
		DELETE /*shippingNote.deleteRoRoItems*/
		FROM TMT_SHIPG_NOTE_DTL
		WHERE VSL_CALL_ID =  #{vslCallId}
		AND MF_DOC_ID =  #{mfDocId}
		AND CG_NO =  #{shipgNoteNo}
		AND IX_CD = 'X'
	</delete>
	
	<delete id="deleteRoRoMSTItems" parameterType="shippingNoteItem">
		DELETE /*shippingNote.deleteRoRoMSTItems*/
		FROM TMT_RORO_MST
		WHERE VSL_CALL_ID =  #{vslCallId}
		AND MF_DOC_ID =  #{mfDocId}
		AND CG_NO =  #{shipgNoteNo}
		AND IX_CD = 'X'
	</delete>
	
	
	<delete id="deletePackageItems" parameterType="shippingNoteItem">
		DELETE /*shippingNote.deletePackageItems*/
		FROM TMT_PKG_INFO
		WHERE VSL_CALL_ID = #{vslCallId}
		AND MF_DOC_ID = #{mfDocId}
		AND REF_NO = #{shipgNoteNo}
	</delete>
	
	
	
	<!-- HHT - START -->
	<!-- SELECT FOR MANIFEST COMBOBOX CARGO CMC-->
	<select id="selectManifestComboList" parameterType="shippingNoteItem" resultType="shippingNoteItem">
		SELECT  /*selectManifestComboList*/
				  MF.VSL_CALL_ID 	AS VSLCALLID
				, MF.VSL_CD 		AS VSLCD
				, MF.CALL_YEAR 		AS CALLYEAR
				, MF.CALL_SEQ 		AS CALLSEQ
				, MF.MF_DOC_ID 		AS MFDOCID
		FROM TMT_MF MF 
		       		INNER JOIN  TMT_SHIPG_NOTE SN  
		       			ON SN.VSL_CALL_ID = MF.VSL_CALL_ID 
		       				AND SN.MF_DOC_ID = MF.MF_DOC_ID
		       				AND SN.CG_TP_CD <![CDATA[<>]]> 'RCV'
		       				AND CATG_CD IN ('E','S')
							AND EXISTS(SELECT GR_NO FROM TMT_GR R WHERE R.SHIPG_NOTE_NO = SN.SHIPG_NOTE_NO)
		WHERE 
					MF.VSL_CALL_ID = #{vslCallId}
				<if test="docId !=null and docId !=''">
					AND MF.MF_DOC_ID = #{docId}
				</if>
				<if test="opeClassCd !=null and opeClassCd !=''">
					AND MF.OP_CLASS_CD = #{opeClassCd}
				</if>
	 GROUP BY 
	 			  MF.VSL_CALL_ID
				, MF.VSL_CD
				, MF.CALL_YEAR
				, MF.CALL_SEQ
				, MF.MF_DOC_ID
	</select>
	
	<update id="updateShippingNoteAmountItems" parameterType="shippingNoteItem">
    	UPDATE	TMT_SHIPG_NOTE
		SET 	CG_WGT      = #{cgWgt},			                         
				CG_VOL	= #{cgMsrmt},                                       
				PKG_QTY		= #{pkgQty}, 
				UPDATE_TIME	=  SYSDATE,                                                
				STAFF_CD	= #{userId},
				VERSION 	= #{newVersion}
		WHERE	VSL_CALL_ID       = #{vslCallId}
		 		AND SHIPG_NOTE_NO = #{shipgNoteNo}	
    </update>  
	
	<select id="selectExistsShipgNoteNo" parameterType="shippingNoteParm" resultType="shippingNoteItem">
    	SELECT A.VSL_CALL_ID AS VSLCALLID, A.SHIPG_NOTE_NO AS SHIPGNOTENO
		FROM TMT_SHIPG_NOTE A
		WHERE A.VSL_CALL_ID = #{vslCallId}
		 	AND A.SHIPG_NOTE_NO = #{shipgNoteNo}
	 		 		
    </select>
    
</mapper>
