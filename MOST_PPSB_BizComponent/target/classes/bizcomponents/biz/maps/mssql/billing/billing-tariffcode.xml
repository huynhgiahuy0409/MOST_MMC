<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tariffCode">
	
	<!--  ############################## Result Map Define ############################## -->

	<resultMap type="TariffCodeItem" 							id="CostCenterDataItemMap">
		<result property="costCntCd" 							column="COST_CENT_CD" />
	</resultMap>
	
	<resultMap type="TariffCodeItem" 							id="FinancialDataItemMap">
		<result property="costCntCd" 							column="COST_CENT_CD" />
		<result property="financialCode" 						column="ERP_COST_CENT" />
	</resultMap>

	<!--  ############################## Query Statement Define ############################## -->
	
	<select id="selectTariffCodeCount"  parameterType="TariffCodeParm" resultType="java.lang.String">
		SELECT /* tariffCode.selectTariffCodeCount */
			COUNT(*)
		FROM 
			(<include refid="getTariffCode"/>)					AS TEMPTB
	</select>
	
	
	<select id="selectTariffCode"  parameterType="TariffCodeParm" resultType="TariffCodeItem">
		<if test="pageNo != 0"> 
             SELECT /* tariffCode.selectTariffCode */
             	*
			FROM 
				(SELECT 
					ROW_NUMBER()
						OVER(
							ORDER BY 
								trfTpCd ASC, 
								subTrfCd ASC
								<if test="searchTp == 'INV_TPL'">
									, trfTpCdNm
								</if>
						) 										AS ROW_NUM,
					innerTable.*
				FROM ( 
		</if>
				<include refid="getTariffCode"/>
		<if test="pageNo != 0"> 
				) AS innerTable 
			) AS innerTable
			WHERE 
				innerTable.ROW_NUM 		<![CDATA[>]]> 	(CAST((CASE WHEN #{pageNo} = '0' THEN '1' ELSE #{pageNo} END) AS INT) - 1) 	* CAST(#{sizePerPage} AS INT)  
		  		AND	innerTable.ROW_NUM 	<![CDATA[<=]]> 	CAST((CASE WHEN #{pageNo}  = '0' THEN '1' ELSE #{pageNo} END) AS INT) 		* CAST(#{sizePerPage} AS INT)
		</if>
	</select>
	
	<sql id="getTariffCode">
		SELECT /* tariffCode.getTariffCode */ 	
			TRF_CD 												AS trfCd,
			SUB_TRF_CD 											AS subTrfCd,
			DESCR 												AS descr,
			DESCR_VN 											AS descrVN,
			TRF_TP_CD 											AS trfTpCd,
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 
			WHERE 
				L_CD 					= 'MT' 
				AND M_CD 				= 'TRFTP' 
				AND S_CD 				= TRF_TP_CD
			) 													AS trfTpCdNm, 
			BILL_TP_CD 											AS billTpCd,
			SSR_TP_CD 											AS ssrTpCd,
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 
			WHERE 
				L_CD 					= 'MT' 
				AND M_CD				= 'SSRTP' 
				AND S_CD 				= SSR_TP_CD
			) 													AS sCdNm,
			COST_CENT_CD 										AS costCntCd,
			PAYER 												AS pyrTpCd,
			IV_UNIT1 											AS ivUnit1,
			IV_UNIT2 											AS ivUnit2,
			IV_UNIT3 											AS ivUnit3,
			<!-- (SELECT 
				CASE CHARINDEX('.', CONVERT(VARCHAR, unitPrc))
					WHEN 1 THEN '0' + CONVERT(VARCHAR, unitPrc)
					ELSE CONVERT(VARCHAR, unitPrc)
				END AS unitPrc
			FROM 
				(SELECT TOP(1)
					C.UNIT_PRC 			AS unitPrc,
					C.SUB_TRF_CD 		AS subTrfCd,
					CONVERT(
						DATE, 
						C.APLY_YMD, 
						111
					) 					AS aplyYmd,
					CASE
						WHEN C.EXPR_YMD IS NOT NULL 
							THEN C.EXPR_YMD
						WHEN C.EXPR_YMD <![CDATA[<>]]> ''
							THEN C.EXPR_YMD
						ELSE 'N/A'
					END 				AS exprYmd,
					C.TRF_CD 			AS trfCd 
				FROM 
					TMT_B_TRF 			C 								 MISSING TABLE
				WHERE 
					C.PRC_TP_CD 		= 'S'
				ORDER BY 
					aplyYmd
				) AS TEMPTB
			WHERE 
				TRFCD 					= A.TRF_CD 
				AND SUBTRFCD 			= A.SUB_TRF_CD 
				AND APLYYMD 			<![CDATA[<=]]> SYSDATETIME()
				AND (EXPRYMD = 'N/A' 
					OR (EXPRYMD != 'N/A' 
						AND CONVERT(DATE, EXPRYMD, 111) > SYSDATETIME() ))
			) 													AS STDPRC, -->
			VERSION 											AS version,
			STAFF_CD 											AS userId,
			CONVERT(
				DATETIME, 
				UPDATE_TIME, 
				103
			)													AS updDt,
			ERP_COST_CENT										AS financialCode,
			TAX_TYPE											AS gstTpCd,
			ISNULL(TAX_VALUE, 0)								AS gstRate,
			PRF_YN												AS prfYn
		FROM   
			TMT_B_TRF_CD 										A
		WHERE 
			VLD_YN 												= 'Y'
		<if test="costCntCd != null and costCntCd != ''">
			AND	COST_CENT_CD 									= #{costCntCd}
		</if>
		<if test="trfTpCd != null and trfTpCd != ''">
			AND	TRF_TP_CD 										= #{trfTpCd}
		</if>
		<if test="billTpCd != null and billTpCd != ''">
			AND	BILL_TP_CD 										= #{billTpCd}
		</if>
		<if test="trfCd != null and trfCd != ''">
			AND	TRF_CD 											= #{trfCd}
		</if>
		<if test="subTrfCd != null and subTrfCd != ''">
			AND	SUB_TRF_CD 										= #{subTrfCd}
		</if>
	</sql>
	
	<select id="selectCostCenter" parameterType="TariffCodeParm" resultMap="CostCenterDataItemMap">
		SELECT DISTINCT /* tariffCode.getTariffCode */
			COST_CENT_CD
		FROM 	
			TMT_B_COSTCENT
		WHERE 	
			VLD_YN 												= 'Y' 
			AND SBU_CD 											!= 'PC'  
		ORDER BY 
			COST_CENT_CD
	</select>
	
	<select id="selectFinancialCode" parameterType="TariffCodeParm" resultMap="FinancialDataItemMap">
		SELECT /* tariffCode.selectFinancialCode */ 
			COST_CENT_CD, 
			ERP_COST_CENT
		FROM 
			TMT_B_COSTCENT
		WHERE 
			VLD_YN 												= 'Y' 
			AND SBU_CD 											!= 'PC'  
		ORDER BY 
			COST_CENT_CD, 
			ERP_COST_CENT
	</select>
	
	<select id="checkTariffConditionPropertyList" parameterType="TariffCodeParm" resultType="TariffConditionItem">
		SELECT /* tariffCode.checkTariffConditionPropertyList */ 	
			'R' 												AS CRUD,
			A.TRF_CD 											AS TRFCD,
			A.SUB_TRF_CD 										AS SUBTRFCD,
			A.PRPT_CD 											AS PRPTCD,
			A.PRPT_NM 											AS PRPTNM,
			A.DATA_TP_CD 										AS DATATPCD,
			A.DATA_LEN 											AS DATALEN,
			A.COL_NM 											AS COLNM,
			A.PRI_SEQ 											AS PRISEQ,
			A.STAFF_CD 											AS USERID,
			A.UPDATE_TIME 										AS UPDATETIME,
			A.VERSION 											AS VERSION
            <!--A.SYTM_ID 										AS SYTMID-->
		FROM 
			TMT_B_TRF_COND_PRPT 								A 
		INNER JOIN 
			TMT_B_TRF_COND 										B
				ON A.TRF_CD 									= B.TRF_CD 
				AND A.SUB_TRF_CD 								= B.SUB_TRF_CD
		WHERE 
			A.PRC_TP_CD 										= 'S' 
			<if test="trfCd != null and trfCd != ''">
				AND	B.TRF_CD 									= #{trfCd}
			</if>
			<if test="subTrfCd != null and subTrfCd != ''">
				AND	B.SUB_TRF_CD 								= #{subTrfCd}
			</if>
	</select>
	
	<select id="isItemExisted" parameterType="TariffCodeItem" resultType="java.lang.Integer">
		SELECT /* tariffCode.isItemExisted */ 	
			(
			CASE COUNTER 
				WHEN  1 
					THEN (
						SELECT TOP(1) 
							COUNT(1) 
						FROM 
							TMT_B_TRF_CD
						WHERE 
							1 = 1 
							AND VLD_YN 				= 'Y'
							<if test="trfCd != null and trfCd != ''">
								AND	TRF_CD 			= #{trfCd}
							</if>
							<if test="subTrfCd != null and subTrfCd != ''">
								AND	SUB_TRF_CD 		= #{subTrfCd}
							</if>
							<if test="subTrfCd == null or subTrfCd == ''">
								AND	SUB_TRF_CD 		= 'NIL'
		    				</if>
						)
				ELSE -1 
			END
			) 													AS CNTR
		FROM							
			(SELECT 
				COUNT(1) 										AS COUNTER 
			FROM 
				TMT_B_TRF_CD
			WHERE 
				1 = 1 
				<if test="trfCd != null and trfCd != ''">
					AND	TRF_CD 									= #{trfCd}
				</if>
				<if test="subTrfCd != null and subTrfCd != ''">
					AND	SUB_TRF_CD 								= #{subTrfCd}
				</if>
				<if test="subTrfCd == null or subTrfCd == ''">
					AND	SUB_TRF_CD  							= 'NIL'
				</if>
			) AS TEMPTB
	</select>
	
	<select id="isSubTariffExisted" parameterType="TariffCodeItem" resultType="java.lang.Integer">
		SELECT TOP(1) /* tariffCode.isSubTariffExisted */ 	
			COUNT(1) 
		FROM 
			TMT_B_TRF_CD
		WHERE 
			1 = 1
			AND TRF_CD 											= #{trfCd}
			AND	SUB_TRF_CD 										= #{subTrfCd}
	</select>
	
	<select id="selectMaxConditionSeq" parameterType="TariffCodeItem" resultType="java.lang.String">
		SELECT /* tariffCode.selectMaxConditionSeq */ 	
			MAX(SEQ) 
		FROM 
			TMT_B_TRF_COND 
		WHERE 
			TRF_CD 												= #{trfCd} 
			AND SUB_TRF_CD 										= #{subTrfCd}
	</select>
	
	<select id="selectMaxTrfRegNo" resultType="java.lang.String">
		SELECT /* tariffCode.selectMaxTrfRegNo */ 	
		 	SUBSTRING(MAX(TRF_REG_NO), 10, LEN(MAX(TRF_REG_NO))) 					AS maxTrfRegNo,
			CONCAT('TRF', CONCAT(FORMAT(SYSDATETIME(),'yyyyMM'), '%')) 
		FROM 	
			TMT_B_TRF											--MISSING TABLE
		WHERE 	
		TRF_REG_NO 												LIKE CONCAT('TRF',CONCAT(FORMAT(SYSDATETIME(),'yyyyMM'), '%'))
	</select>
	
	<select id="selectRefChildBeforeDelete" parameterType="TariffCodeParm" resultType="TariffCodeItem">
    	SELECT /* tariffCode.selectRefChildBeforeDelete */ 	
			CASE COUNT(*)
				WHEN 0 THEN 'Y'
				ELSE 'N'
			END 												AS CHK
		FROM 
			TMT_B_IV_DATA
		WHERE 
			STAT_CD 											IN ('IV', 'VF')
			AND TRF_CD 											= #{trfCd}
			AND SUB_TRF_CD 										= #{subTrfCd}
    </select>
    
    <select id="selectCmdtHeredityMultiSelectPopupList"  parameterType="TariffCodeParm" resultType="codeMasterItem">
	    SELECT /* tariffCode.selectCmdtHeredityMultiSelectPopupList */ 	 
	    	*
	    FROM 
			( SELECT DISTINCT
				<if test=" searchTp == 'CGTP' ">
					CG_TP 										AS SCD,
					dbo.F_CM_CODE_NM('MT', 'CGTP', C.CG_TP) 	AS SCDNM
				</if> 
				<if test=" searchTp == 'CMDT_GRP' ">
					CMDT_GRP_CD									AS SCD,
					CMDT_GRP									AS SCDNM
				</if> 
				<if test=" searchTp == 'CMDT' ">
					C.CMDT_CD									AS SCD,
					C.DESCR										AS SCDNM
				</if> 
				<if test=" searchTp == 'PKGTP' ">
					P.PKGTP_CD									AS SCD,
					S_CD_NM										AS SCDNM
				</if> 
			FROM 
				TMT_CMDT C
			<if test=" searchTp != 'PKGTP' ">
				LEFT
			</if> 
				JOIN 
					(SELECT 
						A.CMDT_CD,
						A.PKGTP_CD,
						B.*
					FROM 
						TMT_CMDT_PKGTP 				A
					JOIN 
						TMT_CD_MSTD 				B
							ON S_CD 				= PKGTP_CD 
							AND M_CD 				= 'PKGTP' 
					) 											P 
						ON C.CMDT_CD 							= P.CMDT_CD
			WHERE 
				1 = 1
				<if test=" searchTp != 'CGTP' ">
					<foreach item="item" index="index" collection="cgTpItems" open="AND CG_TP IN (" separator="," close=")" >
						#{item}
					</foreach>
				</if>
				<if test=" searchTp != 'CMDT_GRP' ">
					<foreach item="item" index="index" collection="cmdtGrpItmes" open="AND CMDT_GRP_CD IN (" separator="," close=")" >
						#{item}
					</foreach>
				</if>
				<if test=" searchTp != 'CMDT' ">
					<foreach item="item" index="index" collection="cmdtItmes" open="AND C.CMDT_CD IN (" separator="," close=")" >
						#{item}
					</foreach>
				</if>
				<if test=" searchTp != 'PKGTP' ">
					<foreach item="item" index="index" collection="pkgTpItmes" open="AND P.PKGTP_CD IN (" separator="," close=")" >
						#{item}
					</foreach>
				</if>
			) AS TEMPTB
		WHERE 
			1 = 1
			<if test=" scd != null and scd != '' ">
				AND SCD 										LIKE '%' + #{scd} + '%'
			</if>
			<if test=" scdNm != null and scdNm != '' ">
				AND SCDNM 										LIKE '%' + #{scdNm} + '%'
			</if>
    </select>
    
    <select id="selectTariffConditionPropertyList" parameterType="TariffCodeParm" resultType="TariffConditionPropertyItem">
		SELECT	/*tariffCode.selectTariffConditionPropertyList*/
			'R' 												AS crud,
			A.TRF_CD 											AS trfCd,
			A.SUB_TRF_CD 										AS subTrfCd,
			A.PRPT_CD 											AS prptCd,
			A.PRPT_NM 											AS prptNm,
			A.DATA_TP_CD 										AS dataTpCd,
			A.DATA_LEN 											AS dataLen,
			A.COL_NM 											AS colNm,
			A.PRI_SEQ 											AS priSeq,
			A.STAFF_CD 											AS userId,
			A.UPDATE_TIME 										AS updateTime,
			A.VERSION 											AS version,
			'' 													AS sytmId
		FROM 
			TMT_B_TRF_COND_PRPT 								A 
		LEFT OUTER JOIN 
			TMT_B_TRF_CD 										B
				ON A.TRF_CD 									= B.TRF_CD 
				AND A.SUB_TRF_CD 								= B.SUB_TRF_CD
		WHERE 
			A.PRC_TP_CD 										= 'S' 
			AND B.VLD_YN 										= 'Y'
			<if test="costCntCd != null and costCntCd != ''">
				AND B.COST_CENT_CD 								= #{costCntCd}
			</if>
			<if test="trfTpCd != null and trfTpCd != ''">
				AND B.TRF_TP_CD 								= #{trfTpCd}
			</if>
			<if test="billTpCd != null and billTpCd != ''">
				AND B.BILL_TP_CD 								= #{billTpCd}
			</if>
			<if test="trfCd != null and trfCd != ''">
				AND	B.TRF_CD 									= #{trfCd}
			</if>
			<if test="subTrfCd != null and subTrfCd != ''">
				AND B.SUB_TRF_CD 								= #{subTrfCd}
			</if>
	</select>
	
	<select id="selectTariffConditionList" parameterType="TariffCodeParm" resultType="TariffConditionItem">
		SELECT /* tariffCode.selectTariffConditionList */
			A.SEQ 																	AS SEQ,
			A.TRF_CD 																AS TRFCD,
			A.SUB_TRF_CD 															AS SUBTRFCD,
			A.PRPT_CD 																AS PRPTCD,
			A.OPR_IDT_CD 															AS OPRIDTCD,
			A.CHR_VAL 																AS CHRVAL,
			CASE 
				WHEN 
					(A.NO_VAL IS NOT NULL)
						THEN 
							CASE CHARINDEX('.', CONVERT(VARCHAR, A.NO_VAL))
								WHEN 1 
									THEN '0' + CONVERT(VARCHAR, A.NO_VAL)
								ELSE CONVERT(VARCHAR, A.NO_VAL)
							END
				ELSE A.NO_VAL
			END 																	AS NOVAL,
			A.DT_VAL 																AS DTVAL,
			CASE 
				WHEN 
					(A.TIER_VAL1 IS NOT NULL)
						THEN 
							CASE CHARINDEX('.', CONVERT(VARCHAR, A.TIER_VAL1))
								WHEN 1 THEN '0' + CONVERT(VARCHAR, A.TIER_VAL1)
								ELSE CONVERT(VARCHAR, A.TIER_VAL1)
							END 
				ELSE A.TIER_VAL1
			END																		AS TIERVAL1,
			CASE
				WHEN 
					(A.TIER_VAL2 IS NOT NULL)
						THEN 
							CASE CHARINDEX('.', CONVERT(VARCHAR, A.TIER_VAL2))
								WHEN 1 THEN '0' + CONVERT(VARCHAR, A.TIER_VAL2)
								ELSE CONVERT(VARCHAR, A.TIER_VAL2)
							END 
				ELSE A.TIER_VAL2
			END 																	AS TIERVAL2,
			A.BND_VAL1 																AS BNDVAL1,
			A.BND_VAL2 																AS BNDVAL2,
			A.STAFF_CD 																AS USERID,
			A.UPDATE_TIME 															AS UPDATETIME,
			A.VERSION 																AS VERSION,
			'' 																		AS SYTMID,
			B.PRPT_NM 																AS PRPTNM,
			B.DATA_TP_CD 															AS DATATPCD,
			B.DATA_LEN 																AS DATALEN
		FROM 
			TMT_B_TRF_COND															A 
		LEFT OUTER JOIN 
			TMT_B_TRF_COND_PRPT 													B
				ON A.TRF_CD 														= B.TRF_CD 
				AND A.SUB_TRF_CD 													= B.SUB_TRF_CD 
				AND A.PRPT_CD 														= B.PRPT_CD
		LEFT OUTER JOIN 
			TMT_B_TRF_CD 															C
				ON A.TRF_CD 														= C.TRF_CD 
				AND A.SUB_TRF_CD 													= C.SUB_TRF_CD
		WHERE 
			B.PRC_TP_CD 															= 'S' 
			AND C.VLD_YN 															= 'Y'
			<if test="costCntCd != null and costCntCd != ''">
				AND	C.COST_CENT_CD 													= #{costCntCd}
			</if>
			<if test="trfTpCd != null and trfTpCd != ''">
				AND	C.TRF_TP_CD 													= #{trfTpCd}
			</if>
			<if test="billTpCd != null and billTpCd != ''">
				AND	C.BILL_TP_CD 													= #{billTpCd}
			</if>
			<if test="trfCd != null and trfCd != ''">
				AND	C.TRF_CD 														= #{trfCd}
			</if>
			<if test="subTrfCd != null and subTrfCd != ''">
				AND	C.SUB_TRF_CD 													= #{subTrfCd}
			</if>
	</select>

	<!--  ############################## Insert Statement Define ############################## -->			
	<insert id="insertTariffCode"  parameterType="TariffCodeItem">
		INSERT /* tariffCode.insertTariffCode */
		INTO TMT_B_TRF_CD(
			TRF_CD,
			SUB_TRF_CD,
			DESCR,
			TRF_TP_CD,
			BILL_TP_CD,
			SSR_TP_CD,
			COST_CENT_CD,
			PAYER,
			IV_UNIT1,
			IV_UNIT2,
			IV_UNIT3,
			VLD_YN,
			VERSION,
			STAFF_CD,
			UPDATE_TIME,
            <!-- SYTM_ID, -->
			TAX_TYPE,
			TAX_VALUE,
			ERP_COST_CENT,
			DESCR_VN,
			PRF_YN
		) VALUES (
    		#{trfCd},
   			<if test="subTrfCd != null and subTrfCd != ''">
   				#{subTrfCd},
   			</if>
   			<if test="subTrfCd == null or subTrfCd == ''">
   				'NIL',
   			</if>
			#{descr},
			#{trfTpCd},
			#{billTpCd},
			#{ssrTpCd},
			#{costCntCd},
			#{pyrTpCd},
			#{ivUnit1},
			#{ivUnit2},
			#{ivUnit3},
			'Y',
			#{newVersion},
			#{userId},
			SYSDATETIME(),
            <!-- 'MT', -->
			#{gstTpCd},
			TRY_CONVERT(NUMERIC(3, 1), #{gstRate}),
			#{financialCode},
			#{descrVN},
			#{prfYn}
		)
	</insert>
	
	<insert id="insertTariffConditionProperty" parameterType="TariffConditionPropertyItem">
		INSERT /* tariffCode.insertTariffConditionProperty */
		INTO TMT_B_TRF_COND_PRPT(
			TRF_CD,
			SUB_TRF_CD,
			PRC_TP_CD,
			PRPT_CD,
			PRPT_NM,
			DATA_TP_CD,
			DATA_LEN,
			COL_NM,
			PRI_SEQ,
			STAFF_CD,
			UPDATE_TIME,
			VERSION
        ) VALUES( 
            #{trfCd},
    		<if test="subTrfCd != null and subTrfCd != ''">
    			#{subTrfCd},
    		</if>
    		<if test="subTrfCd == null or subTrfCd == ''">
    			'NIL',
    		</if>
			'S',
			#{prptCd},
			#{prptNm},
			#{dataTpCd},
			#{dataLen},
			#{colNm},
			TRY_CONVERT(NUMERIC(4, 0), #{priSeq}),
			#{userId},
			SYSDATETIME(),
			#{newVersion}
        )
	</insert>
	
	<insert id="insertTariffCondition" parameterType="TariffConditionItem">
		INSERT /* tariffCode.insertTariffCondition */
		INTO TMT_B_TRF_COND (
			SEQ,
			TRF_CD,
			SUB_TRF_CD,
			PRPT_CD,
			OPR_IDT_CD,
			CHR_VAL,
			NO_VAL,
			DT_VAL,
			TIER_VAL1,
			TIER_VAL2,
			BND_VAL1,
			BND_VAL2,
			STAFF_CD,
			VERSION,
			UPDATE_TIME
        ) VALUES (
		    TRY_CONVERT(NUMERIC(4, 0), #{seq}),
			#{trfCd},
    		<if test="subTrfCd != null and subTrfCd != ''">
    			#{subTrfCd},
    		</if>
    		<if test="subTrfCd == null or subTrfCd == ''">
    			'NIL',
    		</if>
			#{prptCd},
			#{oprIdtCd},
			#{chrVal},
			TRY_CONVERT(NUMERIC(4, 0), #{noVal}),
			#{dtVal},
			TRY_CONVERT(NUMERIC(15, 3), #{tierVal1}),
			TRY_CONVERT(NUMERIC(15, 3), #{tierVal2}),
			#{bndVal1},
			#{bndVal2},
			#{userId},
			#{newVersion},
			SYSDATETIME()
        )
	</insert>
	<!--  ################ Update Statement Define ######################################### -->
	<update id="updateTariffCode"  parameterType="TariffCodeItem">
		UPDATE 	/* tariffCode.updateTariffCode */
			TMT_B_TRF_CD 
		SET		
			DESCR 												= #{descr, 		jdbcType=VARCHAR},
			TRF_TP_CD 											= #{trfTpCd,	jdbcType=VARCHAR},
			BILL_TP_CD 											= #{billTpCd,	jdbcType=VARCHAR},
			SSR_TP_CD 											= #{ssrTpCd,	jdbcType=VARCHAR},
			COST_CENT_CD 										= #{costCntCd,	jdbcType=VARCHAR},
			PAYER 												= #{pyrTpCd,	jdbcType=VARCHAR},
			IV_UNIT1 											= #{ivUnit1,	jdbcType=VARCHAR},
			IV_UNIT2 											= #{ivUnit2,	jdbcType=VARCHAR},
			IV_UNIT3 											= #{ivUnit3,	jdbcType=VARCHAR},
			VLD_YN 												= 'Y',
			VERSION 											= #{newVersion,	jdbcType=VARCHAR},
			STAFF_CD 											= #{userId,		jdbcType=VARCHAR},
			UPDATE_TIME 										= SYSDATETIME(),
            TAX_TYPE 											= #{gstTpCd},
			TAX_VALUE 											= #{gstRate},
			DESCR_VN 											= #{descrVN},
			ERP_COST_CENT 										= #{financialCode},
			PRF_YN 												= #{prfYn}
		WHERE 
			TRF_CD 												= #{trfCd} 
       		AND SUB_TRF_CD 										= #{subTrfCd}
        <!--AND SYTM_ID <![CDATA[<>]]> 'MS'-->
		<if test="version != null and version != ''">
  			AND	VERSION 										= #{version}
		</if>
	</update>
	
	<update id="updateTariffConditionProperty"  parameterType="TariffConditionPropertyItem">
		UPDATE /* tariffCode.updateTariffConditionProperty */
			TMT_B_TRF_COND_PRPT 
		SET		
			PRPT_NM 											= #{prptNm},
			DATA_TP_CD 											= #{dataTpCd},
			DATA_LEN 											= #{dataLen},
			STAFF_CD 											= #{userId},
			UPDATE_TIME 										= SYSDATETIME(),
			VERSION 											= #{newVersion}
			<!--SYTM_ID 										= 'MT'-->
		WHERE 
			TRF_CD 												= #{trfCd} 
			AND SUB_TRF_CD 										= #{subTrfCd} 
			AND PRPT_CD 										= #{prptCd} 
			AND PRC_TP_CD 										= 'S'
		<if test="version != null and version != ''">
  			AND	VERSION 										= #{version}
		</if>
	</update>

	<update id="updateTariffCondition" parameterType="TariffConditionItem">
		UPDATE /* tariffCode.updateTariffCondition */
			TMT_B_TRF_COND 
		SET 
			CHR_VAL 											= #{chrVal},
			NO_VAL 												= #{noVal},
			DT_VAL 												= #{dtVal},
			TIER_VAL1 											= #{tierVal1},
			TIER_VAL2 											= #{tierVal2},
			BND_VAL1 											= #{bndVal1},
			BND_VAL2 											= #{bndVal2},
			STAFF_CD 											= #{userId},
			VERSION 											= #{newVersion},
			UPDATE_TIME 										= SYSDATETIME()
		WHERE 
			TRF_CD 												= #{trfCd} 
			AND SUB_TRF_CD 										= #{subTrfCd} 
			AND SEQ 											= #{seq} 
		<if test="version != null and version != ''">
  			AND	VERSION 										= #{version}
		</if>
	</update>

	<!--  ############################## Delete Tariff Code Statement Define ############################## -->

	<delete id="deleteTariffCode"  parameterType="TariffCodeItem">
		DELETE /* tariffCode.deleteTariffCode */ 	 
		FROM 
			TMT_B_TRF_CD
		WHERE 
			TRF_CD 												= #{trfCd} 
			AND SUB_TRF_CD 										= #{subTrfCd} 
	</delete>

	<delete id="deleteTariffConditionProperty"  parameterType="TariffConditionPropertyItem">
		DELETE /* tariffCode.deleteTariffConditionProperty */ 	
		FROM 
			TMT_B_TRF_COND_PRPT
		WHERE 
			TRF_CD 												= #{trfCd} 
			AND SUB_TRF_CD 										= #{subTrfCd} 
			<if test="prptCd != null and prptCd != ''">
				AND PRPT_CD 									= #{prptCd} 
			</if>
			AND PRC_TP_CD 										= 'S' 
	</delete>

	<delete id="deleteTariffCondition" parameterType="TariffConditionItem">
		DELETE  /* tariffCode.getTariffCode */ 	
		FROM 
			TMT_B_TRF_COND 
		WHERE 
			TRF_CD 												= #{trfCd} 
			AND SUB_TRF_CD 										= #{subTrfCd} 
		<if test="seq != null and seq != ''">
			AND SEQ 											= #{seq} 
		</if>
	</delete>

</mapper>
