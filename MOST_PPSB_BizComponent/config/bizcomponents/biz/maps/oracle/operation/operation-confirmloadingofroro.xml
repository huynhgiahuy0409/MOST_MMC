<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="confirmLoadingForRORO">
	<resultMap 	id="resultComboList" 	type="confirmLoadingOfROROItem">
   		<result property = "cd"			column = "CD"/>
   		<result property = "cdNm"		column = "CD_NM"/>
 	</resultMap>
 	
 	<resultMap 	id="resultCargoMap" type="confirmLoadingOfROROItem">
   		<result property = "vslCallId"			column = "VSL_CALL_ID"/>
   		<result property = "vslCd"				column = "VSL_CD"/>
		<result property = "callYear" 			column = "CALL_YEAR"/>
		<result property = "callSeq" 			column = "CALL_SEQ"/>
		<result property = "catgCd" 			column = "CATG_CD"/>
		<result property = "catgNm" 			column = "CATG_NM"/>
		<result property = "bookingNo" 			column = "MF_DOC_ID"/>
		<result property = "shipgNoteNo" 		column = "CG_NO"/>
		<result property = "roroSeq"			column = "RORO_SEQ"/>
		<result property = "unitNo" 			column = "CHAS_NO"/>
		<result property = "brandCd" 			column = "BRAND_CD"/>
		<result property = "brandNm" 			column = "BRAND_NM"/>
		<result property = "modelCd" 			column = "MODEL_CD"/>
		<result property = "modelNm" 			column = "MODEL_NM"/>
		<result property = "delvTpCd" 			column = "DELV_TP_CD"/>
		<result property = "delvTpNm" 			column = "DELV_TP_NM"/>
		<result property = "cgTpCd" 			column = "CG_TP_CD"/>
		<result property = "cgTpNm" 			column = "CG_TP_NM"/>
		<result property = "nosOfUnit" 			column = "NOS_OF_VIN"/>
		<result property = "nosOfGateIn" 		column = "NOS_OF_GI"/>
		<result property = "nosOfHandlingIn" 	column = "NOS_OF_HI"/>
		<result property = "nosOfLC" 			column = "NOS_OF_LC"/>
		<result property = "toDoYC" 			column = "TODO_YC"/>
		<result property = "toDoLC" 			column = "TODO_LC"/>
		<result property = "nosOfRehandle" 		column = "NOS_OF_REHANDLE"/>
		<result property = "truckNo" 			column = "TRUCK_NO"/>
		<result property = "driverId" 			column = "DRIVER_ID"/>
		<result property = "driverNm" 			column = "DRIVER_NM"/>
		<result property = "driverLicense" 		column = "DRIVER_LICENSE"/>
		<result property = "vslLocation" 		column = "VSL_LOCATION"/>
		<result property = "ldRemarks" 			column = "LOADING_RMK"/>
		<result property = "customsBalQty" 		column = "CUSTOMS_BAL_QTY"/>
		<result property = "snQty" 				column = "SNQTY"/>
		<result property = "snMt" 				column = "SNMT"/>
		<result property = "snM3" 				column = "SNM3"/>
		<result property = "docQty" 			column = "DOCQTY"/>
		<result property = "docMt" 				column = "DOCMT"/>
		<result property = "docM3" 				column = "DOCM3"/>
		<result property = "qty" 				column = "QTY"/>
		<result property = "mt" 				column = "MT"/>
		<result property = "m3" 				column = "M3"/>
		<result property = "loadQty" 			column = "LOADQTY"/>
		<result property = "loadMt" 			column = "LOADMT"/>
		<result property = "loadM3" 			column = "LOADM3"/>
		<result property = "balQty" 			column = "BALQTY"/>
		<result property = "balMt" 				column = "BALMT"/>
		<result property = "balM3" 				column = "BALM3"/>
		<result property = "vslNm" 				column = "VSLNM"/>
		<result property = "pkgTpCd" 			column = "PKGTPCD"/>
		<result property = "rePkgTpCd" 			column = "REPKGTYPECD"/>
		<result property = "tsptTpCd" 			column = "TSPT_TP_CD"/>
		<result property = "unitNo" 			column = "UNITNO"/>
		<result property = "vgUnitNo" 			column = "VGUNITNO"/>
		<result property = "custMode" 			column = "CUSTMODE"/>
		<result property = "tsptr" 				column = "TSPTCOMP"/>
 	</resultMap>
 	
 	<resultMap 	id="resultUnitMap" type="confirmLoadingOfROROItem">
   		<result property = "vslCallId"		column = "VSL_CALL_ID"/>
   		<result property = "vslCd"			column = "VSL_CD"/>
		<result property = "callYear" 		column = "CALL_YEAR"/>
		<result property = "callSeq" 		column = "CALL_SEQ"/>
		<result property = "bookingNo" 		column = "MF_DOC_ID"/>
		<result property = "shipgNoteNo" 	column = "CG_NO"/>
		<result property = "unitNo" 		column = "CHAS_NO"/>
		<result property = "roroSeq" 		column = "RORO_SEQ"/>
		<result property = "driverId" 		column = "DRIVER_ID"/>
		<result property = "driverNm" 		column = "DRIVER_NM"/>
		<result property = "driverLicense" 	column = "DRIVER_LICENSE"/>
		<result property = "truckNo" 		column = "TRUCK_NO"/>
		<result property = "yardLoc" 		column = "LOC_ID"/>
		<result property = "gateInDate" 	column = "GATE_IN_DTM"/>
		<result property = "inDate" 		column = "IN_DTM"/>
		<result property = "outDate" 		column = "OUT_DTM"/>
		<result property = "loadingTime" 	column = "LOADING_DTM"/>
		<result property = "delvTpCd" 		column = "DELV_TP_CD"/>
		<result property = "delvTpNm" 		column = "DELV_TP_NM"/>
		<result property = "statCd" 		column = "STAT_CD"/>
		<result property = "statNm" 		column = "STAT_NM"/>
		
		<result property = "stevedoreId" 	column = "STEVEDORE_ID"/>
		<result property = "ycRemarks" 		column = "YARD_RMK"/>
		<result property = "crane" 			column = "CRANE"/>
		<result property = "ldRemarks" 		column = "LOADING_RMK"/>
		<result property = "gateTicketNo" 	column = "GATE_TICKET_NO"/>
		<result property = "brandCd" 		column = "BRAND_CD"/>
		<result property = "brandNm" 		column = "BRAND_NM"/>
		<result property = "modelCd" 		column = "MODEL_CD"/>
		<result property = "modelNm" 		column = "MODEL_NM"/>		
		<result property = "brandDesc" 		column = "BRAND_DESC"/>
		<result property = "cgTpCd" 		column = "CG_TP_CD"/>
		<result property = "cgTpNm" 		column = "CG_TP_NM"/>
		<result property = "vslLocation" 	column = "VSL_LOCATION"/>
		
		<result property = "ixCd" 			column = "IX_CD"/>
		<result property = "catgCd" 		column = "CATG_CD"/>
		<result property = "newYn" 			column = "NEW_YN"/>
		<result property = "docWgt" 		column = "DOC_WGT"/>
		<result property = "cbm" 			column = "CBM"/>
 	</resultMap>

 	
 	<select id="selectBookingNoComboBoxItems" parameterType="confirmLoadingOfROROParm" resultMap="resultComboList">
		SELECT	/* ConfirmLoadingForRORO.getBookingNoComboBoxItems */
				DISTINCT
				BOOKING_NO CD,
				BOOKING_NO CD_NM
		FROM	TMT_SHIPG_NOTE
		WHERE	VSL_CALL_ID = #{vslCallId}
				AND STAT_CD = 'AP'
				AND CG_TP_CD IN ('RCV')
				AND CATG_CD NOT IN ('T', 'R')
	</select>
	
	<select id="selectShipgNoteNoComboBoxItems" parameterType="confirmLoadingOfROROParm" resultMap="resultComboList">
		SELECT	/* ConfirmLoadingForRORO.getShipgNoteNoComboBoxItems */
				DISTINCT
				SHIPG_NOTE_NO CD,
				SHIPG_NOTE_NO CD_NM
		FROM	TMT_SHIPG_NOTE
		WHERE	VSL_CALL_ID = #{vslCallId}
				AND STAT_CD = 'AP'
				AND CG_TP_CD IN ('RCV')
				AND CATG_CD NOT IN ('T', 'R')
		ORDER BY SHIPG_NOTE_NO
	</select>
	<select id="selectCargoItems" parameterType="confirmLoadingOfROROParm" resultMap="resultCargoMap">
	 	<if test="pageNo != 0"> 
             SELECT * FROM (SELECT inner.*, rownum row_num FROM ( 
		</if>
				<include refid="getCargoItems"/>
		<if test="pageNo != 0"> 
				)inner 
			)inner 
			WHERE inner.row_num <![CDATA[>]]> (TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo}))-1)* TO_NUMBER(#{sizePerPage}) 
		  	AND inner.row_num <![CDATA[<=]]> TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo})) * TO_NUMBER(#{sizePerPage})
		</if>
	 </select>
	 <select id="selectCargoItemsCount" parameterType="confirmLoadingOfROROParm" resultType="java.lang.String">
	 	SELECT COUNT(*)
          FROM (<include refid="getCargoItems"/>)
	 </select>
	<sql id="getCargoItems">
		WITH WH_BAL_AMOUNT
		     AS (  SELECT SUM (J.PKG_QTY) AS BALQTY,
                          SUM (J.CG_WGT) AS BALMT,
                          SUM (J.CG_VOL) AS BALM3,
                          J.VSL_CALL_ID AS VSL_CALL_ID,
                          J.CG_NO AS CG_NO,
                          G.SHIPG_NOTE_NO,
                  		  J.DRIVER_ID
                     FROM TMT_JOB J
                          INNER JOIN TMT_GR G
                             ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
		            WHERE     J.VSL_CALL_ID = #{vslCallId}
		                  AND G.SHIPG_NOTE_NO = #{shipgNoteNo}
		                  AND J.JOB_PURP_CD IN ('GW', 'AW')
		         GROUP BY J.VSL_CALL_ID, J.CG_NO, G.SHIPG_NOTE_NO, J.DRIVER_ID),
		VSL_TO_GATE
                     AS (  SELECT SUM (J.PKG_QTY) AS BALQTY,
                                  SUM (J.CG_WGT) AS BALMT,
                                  SUM (J.CG_VOL) AS BALM3,
                                  J.VSL_CALL_ID AS VSL_CALL_ID,
                                  J.CG_NO AS CG_NO,
                                  (SELECT LISTAGG (CHAS_NO, ', ')
			                             WITHIN GROUP (ORDER BY CHAS_NO)
			                     FROM (SELECT DISTINCT CHAS_NO
			                             FROM TMT_JOB
			                            WHERE     VSL_CALL_ID = J.VSL_CALL_ID
			                                  AND CG_NO = J.CG_NO
			                                  AND JOB_PURP_CD IN ('GV','AV'))) AS CHAS_NO
                             FROM TMT_JOB J
                            WHERE     J.VSL_CALL_ID = #{vslCallId}
                                  AND J.JOB_PURP_CD IN ('GV','AV')
                         GROUP BY J.VSL_CALL_ID,
                                  J.CG_NO),
		GATE_IN_AMOUNT
		     AS (  SELECT SUM (J.PKG_QTY) AS BALQTY,
		                  SUM (J.CG_WGT) AS BALMT,
		                  SUM (J.CG_VOL) AS BALM3,
		                  J.VSL_CALL_ID AS VSL_CALL_ID,
		                  J.CG_NO AS CG_NO,
		                  G.SHIPG_NOTE_NO,
		                  J.CHAS_NO,
                  		  J.DRIVER_ID
		             FROM TMT_JOB J
		                  INNER JOIN TMT_GR G
		                     ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
		            WHERE     J.VSL_CALL_ID = #{vslCallId}
		                  AND G.SHIPG_NOTE_NO = #{shipgNoteNo}
		                  AND J.JOB_PURP_CD IN ('OI')
		         GROUP BY J.VSL_CALL_ID, J.CG_NO, G.SHIPG_NOTE_NO, J.CHAS_NO, J.DRIVER_ID),
		APRON_BAL_AMOUNT
		     AS (  SELECT J.VSL_CALL_ID,
		                  G.SHIPG_NOTE_NO,
		                  NVL (SUM (DECODE (J.JOB_PURP_CD, 'WA', J.CG_WGT, -J.CG_WGT)),
		                       0)
		                     AS BALMT,
		                  NVL (
		                     SUM (DECODE (J.JOB_PURP_CD, 'WA', J.PKG_QTY, -J.PKG_QTY)),
		                     0)
		                     AS BALQTY,
		                  NVL (SUM (DECODE (J.JOB_PURP_CD, 'WA', J.CG_VOL, -J.CG_VOL)),
		                       0)
		                     AS BALM3,
                             J.CHAS_NO
		             FROM TMT_JOB J
		                  INNER JOIN TMT_GR G
		                     ON J.VSL_CALL_ID = G.VSL_CALL_ID AND J.CG_NO = G.GR_NO
		            WHERE     J.VSL_CALL_ID = #{vslCallId}
		                  AND G.SHIPG_NOTE_NO = #{shipgNoteNo}
		                  AND J.JOB_PURP_CD IN ('WA', 'AV')
		         GROUP BY J.VSL_CALL_ID, G.SHIPG_NOTE_NO, J.CHAS_NO),
		CUSTOMS_RELEASE 
		       AS (
		            SELECT
		                    CASE
		                          WHEN CUS.DOC_NO IS NULL THEN 'HOLD'
		                          ELSE 'RELEASE'
		                    END AS status
		            FROM     TMT_SHIPG_NOTE SN
		                        LEFT OUTER JOIN TMT_CUSTOMS_RELEASE CUS
		                    ON     CUS.VSL_CALL_ID = SN.VSL_CALL_ID
		                        AND CUS.DOC_NO = SN.MF_DOC_ID
		            WHERE   SN.VSL_CALL_ID = #{vslCallId}
		                    AND SN.SHIPG_NOTE_NO = #{shipgNoteNo}
		                    AND NVL(CUS.BONDED_WH_YN, 'N') = 'N'
		                    AND ROWNUM=1
		        )        
        SELECT    /* ConfirmLoadingForRORO.getCargoItems */
               A.VSL_CD AS VSLCD,
               G.TSPT_COMP TSPTCOMP,
               A.CALL_YEAR AS CALLYEAR,
               A.CALL_SEQ AS CALLSEQ,
               G.GR_NO AS CGNO,
               G.GR_NO AS GRNO,
               G.VSL_CALL_ID AS VSLCALLID,
               G.SHIPG_NOTE_NO AS SHIPGNOTENO,
               A.MF_DOC_ID AS MFDOCID,
               P.VSL_NM AS VSLNM,
               C.STAT_CD AS STAT,
               NVL (TO_NUMBER (A.PKG_QTY), 0) AS SNQTY,
               NVL (TO_NUMBER (REPLACE (NVL (A.CG_WGT, 0), ',', '')), 0) AS SNMT,
               NVL (TO_NUMBER (A.CG_VOL), 0) AS SNM3,
               NVL (TO_NUMBER (G.PKG_QTY), 0) AS DOCQTY,
               NVL (TO_NUMBER (REPLACE (NVL (G.CG_WGT, 0), ',', '')), 0) AS DOCMT,
               NVL (TO_NUMBER (G.CG_VOL), 0) AS DOCM3,

               DECODE (NVL (O.BALQTY, 0), 0, NVL (TO_NUMBER (G.PKG_QTY), 0), O.BALQTY) AS QTY,
               DECODE (NVL (O.BALMT, 0), 0, NVL (TO_NUMBER (REPLACE (NVL (G.CG_WGT, 0), ',', '')), 0), O.BALMT) AS MT,
               DECODE (NVL (O.BALM3, 0), 0, NVL (TO_NUMBER (G.CG_VOL), 0), O.BALM3) AS M3,
               DECODE (NVL (O.BALQTY, 0), 0, NVL (TO_NUMBER (G.PKG_QTY), 0), O.BALQTY) AS LOADQTY,
               DECODE (NVL (O.BALMT, 0), 0, NVL (TO_NUMBER (REPLACE (NVL (G.CG_WGT, 0), ',', '')), 0), O.BALMT) AS LOADMT,
               DECODE (NVL (O.BALM3, 0), 0, NVL (TO_NUMBER (G.CG_VOL), 0), O.BALM3) AS LOADM3,
               <choose>
		       		<when test='delvTpCd == "I"'>
		       			TO_NUMBER (NVL (O.BALQTY, 0)) AS BALQTY,
		       			TO_NUMBER (NVL (O.BALMT, 0)) AS BALMT,
		       			TO_NUMBER (NVL (O.BALM3, 0)) AS BALM3,
		       		</when>
		       		<otherwise>
		       			TO_NUMBER (NVL (G.PKG_QTY, 0)) - TO_NUMBER (NVL (VG.BALQTY, 0))  AS BALQTY,
                        TO_NUMBER (REPLACE (NVL (G.CG_WGT, 0), ',', '')) - TO_NUMBER (REPLACE (NVL (VG.BALMT, 0), ',', '')) AS BALMT,
                        TO_NUMBER (NVL (G.CG_VOL, 0)) - TO_NUMBER (NVL (VG.BALM3, 0)) AS BALM3,
		       		</otherwise>
		       </choose>
				G.TSPT_TP_CD,
               A.TSPT_COMP AS TSPTR,
               (SELECT ENG_SNM
                  FROM TMT_PTNR
                 WHERE PTNR_TYPE = 'TRK' AND PTNR_CODE = A.TSPT_COMP AND ROWNUM=1) AS TSPTRNM,
               A.DELV_TP_CD,
		        F_CM_001 ('MT', 'DELVTP', A.DELV_TP_CD) AS DELV_TP_NM,
               A.CATG_CD,
               G.CMDT_CD AS CMDTCD,
               G.PKG_TP_CD AS PKGTPCD,
               G.PKG_TP_CD AS REPKGTYPECD,
               A.CG_WGT_UNIT AS WGTUNIT,
               A.CG_VOL_UNIT AS MSRMTUNIT,
               A.POD AS PORTOFLOAD,
               A.POD AS PORTOFDIS,
               A.FDEST AS FDEST,
               NVL (C.CG_TP_CD, A.CG_TP_CD) AS CG_TP_CD,
               F_CM_001 ('MT', 'CGTP', A.CG_TP_CD) AS CG_TP_NM,
               A.DELV_TP_CD AS OPDELVTPCD,
               A.FWRD AS FWRAGNT,
               A.SHIPG_AGNCY AS SHPGAGENT,
               (SELECT NVL (SUM (JO.PKG_QTY), 0)
                   FROM TMT_JOB JO
                  WHERE  
                        JO.VSL_CALL_ID = G.VSL_CALL_ID
                        AND JO.CG_NO = G.GR_NO
                        AND JO.JOB_PURP_CD IN ('GV', 'AV'))
                   AS ACCUSUMQTY,
                (SELECT NVL (SUM (JO.CG_WGT), 0)
                   FROM TMT_JOB JO
                  WHERE  
                        JO.VSL_CALL_ID = G.VSL_CALL_ID
                        AND JO.CG_NO = G.GR_NO
                        AND JO.JOB_PURP_CD IN ('GV', 'AV'))
                   AS ACCUSUMWGT,
                (SELECT NVL (SUM (JO.CG_VOL), 0)
                   FROM TMT_JOB JO
                  WHERE  
                        JO.VSL_CALL_ID = G.VSL_CALL_ID
                        AND JO.CG_NO = G.GR_NO
                        AND JO.JOB_PURP_CD IN ('GV', 'AV'))
                   AS ACCUSUMMSRMT,
               A.CNSNE AS CNSNE,
               A.CNSNE_NM AS CNSNENM,
               A.SHPR AS SHPR,
               A.SHPR_NM AS SHPRNM,
               CUS.STATUS AS CUSTMODE,
               DECODE (A.STAT_CD, 'AP', 'Y', 'N') AS SNLDYN,
               A.EACH_WGT AS EACHMT,
               A.EACH_VOL AS EACHM3,
               TO_NUMBER (NVL (A1.BALMT, 0)) AS avBalMt,
               TO_NUMBER (NVL (A1.BALM3, 0)) AS  avBalM3,
               TO_NUMBER (NVL (A1.BALQTY, 0)) AS  avBalQty,
               A.CMDT_GRP_CD CMDTGRPCD,
               NVL (G.ADDITIONAL_CHK, 'N') AS additionalCheckYn,
               NVL(A1.CHAS_NO, GI.CHAS_NO) UNITNO,
               VG.CHAS_NO AS VGUNITNO,
       		   NVL (O.DRIVER_ID, GI.DRIVER_ID) DRIVER_ID
		FROM 	TMT_SHIPG_NOTE A
               LEFT OUTER JOIN TMT_GR G ON A.VSL_CALL_ID = G.VSL_CALL_ID AND A.SHIPG_NOTE_NO = G.SHIPG_NOTE_NO
               LEFT OUTER JOIN TMT_RORO_MST C ON A.VSL_CALL_ID = C.VSL_CALL_ID AND C.GR_NO = G.GR_NO AND C.CG_NO = A.SHIPG_NOTE_NO
               LEFT OUTER JOIN TMT_VSL_PART P ON A.VSL_CD = P.VSL_CD
               LEFT OUTER JOIN WH_BAL_AMOUNT O ON A.VSL_CALL_ID = O.VSL_CALL_ID AND A.SHIPG_NOTE_NO = O.SHIPG_NOTE_NO  AND G.GR_NO = O.CG_NO
               LEFT OUTER JOIN GATE_IN_AMOUNT GI ON A.VSL_CALL_ID = GI.VSL_CALL_ID AND A.SHIPG_NOTE_NO = GI.SHIPG_NOTE_NO  AND G.GR_NO = GI.CG_NO
               LEFT OUTER JOIN VSL_TO_GATE VG ON  A.VSL_CALL_ID = VG.VSL_CALL_ID AND G.GR_NO = VG.CG_NO
               LEFT OUTER JOIN APRON_BAL_AMOUNT A1 ON A.VSL_CALL_ID = A1.VSL_CALL_ID AND A.SHIPG_NOTE_NO = A1.SHIPG_NOTE_NO
               LEFT OUTER JOIN CUSTOMS_RELEASE CUS ON 1=1
        WHERE    A.VSL_CALL_ID = #{vslCallId}
                AND A.STAT_CD = 'AP'
                AND A.CG_TP_CD IN ('RCV')
				<if test="shipgNoteNo != null and shipgNoteNo != ''">
					AND A.SHIPG_NOTE_NO = #{shipgNoteNo}
				</if>
				<if test="grNo != null and grNo != ''">
		 			AND G.GR_NO = #{grNo}
		 		</if>
		 
		       AND ROWNUM = 1
	</sql>
	<select id="selectDirectUnitItems" parameterType="confirmLoadingOfROROParm" resultMap="resultUnitMap">
	 	<if test="pageNo != 0"> 
             SELECT * FROM (SELECT inner.*, rownum row_num FROM ( 
		</if>
				<include refid="getDirectUnitItems"/>
		<if test="pageNo != 0"> 
				)inner 
			)inner 
			WHERE inner.row_num <![CDATA[>]]> (TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo}))-1)* TO_NUMBER(#{sizePerPage}) 
		  	AND inner.row_num <![CDATA[<=]]> TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo})) * TO_NUMBER(#{sizePerPage})
		</if>
	 </select>
	 <select id="selectDirectUnitItemsCount" parameterType="confirmLoadingOfROROParm" resultType="java.lang.String">
	 	SELECT COUNT(*)
          FROM (<include refid="getDirectUnitItems"/>)
	 </select>
	<sql id="getDirectUnitItems">
		SELECT	/* ConfirmLoadingForRORO.getDirectUnitItems */
		    	S.VSL_CALL_ID,
				S.VSL_CD,
				S.CALL_YEAR,
				S.CALL_SEQ,
				S.MF_DOC_ID,
				S.SHIPG_NOTE_NO AS CG_NO,
				S.CATG_CD,
				S.CG_TP_CD,
				D.IX_CD,
				D.NEW_YN,
				D.DOC_WGT,
				D.CBM,
				B.BRAND_CD,
				M.MODEL_CD,
				D.CHAS_NO,
				D.SEQ AS RORO_SEQ,
				R.DRIVER_ID,
				R.DRIVER_NM,
				R.DRIVER_LICENSE,
				NVL (R.TRUCK_NO, '') TRUCK_NO,
				R.LOC_ID,
				TO_CHAR (R.GATE_IN_DTM, 'DD/MM/YYYY HH24:MI') AS GATE_IN_DTM,
				TO_CHAR (R.IN_DTM, 'DD/MM/YYYY HH24:MI') AS IN_DTM,
				TO_CHAR (R.OUT_DTM, 'DD/MM/YYYY HH24:MI') AS OUT_DTM,
				TO_CHAR (R.LOADING_DTM, 'DD/MM/YYYY HH24:MI') AS LOADING_DTM,
				R.DELV_TP_CD,
				F_CM_001 ('MT', 'DELVTP', R.DELV_TP_CD) AS DELV_TP_NM,
				R.STAT_CD,
				F_CM_001 ('MT', 'CGSTATUS', R.STAT_CD) AS STAT_NM,
				R.STEVEDORE_ID,
				R.YARD_RMK,
				R.CRANE,
				R.LOADING_RMK,
				R.VSL_LOCATION
				
		FROM	TMT_SHIPG_NOTE S
				INNER JOIN TMT_SHIPG_NOTE_DTL D
				   	ON	S.VSL_CALL_ID = D.VSL_CALL_ID
				      	AND S.SHIPG_NOTE_NO = D.SHIPG_NOTE_NO
				LEFT OUTER JOIN TMT_RORO_MST R
				   	ON	S.VSL_CALL_ID = R.VSL_CALL_ID
				      	AND S.SHIPG_NOTE_NO = R.CG_NO
				      	AND D.CHAS_NO = R.CHAS_NO
				      	AND D.SEQ = R.RORO_SEQ
				LEFT OUTER JOIN TMT_BRAND B 
					ON D.BRAND_CD = B.BRAND_CD
				LEFT OUTER JOIN TMT_BRAND_DTL M
				   	ON	D.MODEL_CD = M.MODEL_CD AND D.BRAND_CD = M.BRAND_CD

		WHERE	S.VSL_CALL_ID = #{vslCallId}
		        AND S.STAT_CD = 'AP'
				AND S.CG_TP_CD IN ('RCV')
				AND D.IX_CD = 'X'
<!-- Temporary comment for doing CUD without WB system -->				
<!-- 				AND R.GATE_IN_DTM IS NOT NULL -->
				AND R.IN_DTM IS NULL
				<if test="shipgNoteNo != null and shipgNoteNo != ''">
					AND D.SHIPG_NOTE_NO = #{shipgNoteNo}
				</if>
				<if test="unitNo != null and unitNo != ''">
					AND R.CHAS_NO = #{unitNo}
				</if>
				<if test="loadingTime != null and loadingTime != ''">
					AND R.LOADING_DTM = #{loadingTime}
				</if>
		ORDER BY R.GATE_IN_DTM, R.CHAS_NO
	</sql>
	<select id="selectInDirectUnitItems" parameterType="confirmLoadingOfROROParm" resultMap="resultUnitMap">
	 	<if test="pageNo != 0"> 
             SELECT * FROM (SELECT inner.*, rownum row_num FROM ( 
		</if>
				<include refid="getInDirectUnitItems"/>
		<if test="pageNo != 0"> 
				)inner 
			)inner 
			WHERE inner.row_num <![CDATA[>]]> (TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo}))-1)* TO_NUMBER(#{sizePerPage}) 
		  	AND inner.row_num <![CDATA[<=]]> TO_NUMBER(DECODE(#{pageNo},'0', '1', #{pageNo})) * TO_NUMBER(#{sizePerPage})
		</if>
	 </select>
	 <select id="selectInDirectUnitItemsCount" parameterType="confirmLoadingOfROROParm" resultType="java.lang.String">
	 	SELECT COUNT(*)
          FROM (<include refid="getInDirectUnitItems"/>)
	 </select>
	<sql id="getInDirectUnitItems">
		SELECT    /* ConfirmLoadingForRORO.getInDirectUnitItems */
                R.VSL_CALL_ID,
                R.VSL_CD,
        		R.CALL_YEAR,
        		R.CALL_SEQ,
                R.MF_DOC_ID,
                R.CG_NO,
                R.CHAS_NO,
                R.BRAND_CD,
                R.MODEL_CD,
                R.RORO_SEQ,
                R.DRIVER_ID,
                R.DRIVER_NM,
                R.DRIVER_LICENSE,
                NVL(R.TRUCK_NO, '') AS TRUCK_NO,
                R.LOC_ID,
                TO_CHAR(R.GATE_IN_DTM, 'DD/MM/YYYY HH24:MI') AS GATE_IN_DTM,
                TO_CHAR(R.IN_DTM, 'DD/MM/YYYY HH24:MI') AS IN_DTM,
                TO_CHAR(R.OUT_DTM, 'DD/MM/YYYY HH24:MI') AS OUT_DTM,
                TO_CHAR(R.LOADING_DTM, 'DD/MM/YYYY HH24:MI') AS LOADING_DTM,
                R.DELV_TP_CD,
                F_CM_001('MT', 'DELVTP', R.DELV_TP_CD) AS DELV_TP_NM,
                R.STAT_CD,
                F_CM_001('MT', 'CGSTATUS', R.STAT_CD) AS STAT_NM,
                R.STEVEDORE_ID,
                R.YARD_RMK,
                R.CRANE,
                R.LOADING_RMK,
                R.VSL_LOCATION
        FROM    TMT_SHIPG_NOTE S
                INNER JOIN TMT_RORO_MST R
                    ON    S.VSL_CALL_ID = R.VSL_CALL_ID
                        AND S.SHIPG_NOTE_NO = R.CG_NO

        WHERE    S.VSL_CALL_ID = #{vslCallId}
                AND S.STAT_CD = 'AP'
                AND S.CG_TP_CD IN ('RCV')
                AND R.IX_CD = 'X'
                AND R.IN_DTM IS NOT NULL
                AND (R.RHDL_NO IS NULL OR R.RHDL_NO = '')
				<if test="shipgNoteNo != null and shipgNoteNo != ''">
					AND R.CG_NO = #{shipgNoteNo}
				</if>
				<if test="unitNo != null and unitNo != ''">
					AND R.CHAS_NO = #{unitNo}
				</if>
		ORDER BY R.IN_DTM, R.CHAS_NO
	</sql>
	
	<select id="selectIsROROMst"   parameterType="cargoMasterParm" resultType="java.lang.String">
		SELECT	'1' FROM TMT_RORO_MST
		WHERE 	ROWNUM = 1 AND CG_NO = #{cgNo} AND	VSL_CALL_ID = #{vslCallId}
	</select>
	
	<update id="updateConfirmYardAndLoadingCheckForRoRo" parameterType="confirmLoadingOfROROItem">
		UPDATE  TMT_RORO_MST
		SET     
				STAFF_CD =  #{userId}
		        ,UPDATE_TIME = SYSDATE
		        ,STAT_CD = #{statCd}
				,OUT_DTM = TO_DATE(#{outDate},'DD/MM/YYYY HH24:MI')
				,LOADING_DTM = TO_DATE(#{endDtStr},'DD/MM/YYYY HH24:MI')
				,DELV_TP_CD = #{delvTpCd}
		WHERE   VSL_CALL_ID = #{vslCallId}
			        AND CG_NO = #{cgNo}
			        AND CHAS_NO IN ${unitNo}
	</update>
	
	<insert id="insertJobItems" parameterType="confirmLoadingOfROROItem">
		<selectKey order="BEFORE" resultType="confirmLoadingOfROROItem" keyProperty="jobNo" >
			SELECT 
				('J' || TO_CHAR(SYSDATE, 'YYMMDD') 
					 || (SELECT NVL(TRIM(To_CHAR(SUBSTR(MAX(JOB_NO) ,-9,9)+1, '000000000')),'000000000') 
					  FROM  TMT_JOB)) AS jobNo
			 FROM DUAL
		</selectKey>
		INSERT INTO TMT_JOB(
			JOB_NO,
			JOB_TP_CD,
			WORK_ST_DT,
			WORK_END_DT,
			SHFT_ID,
			PKG_TP_CD,
			PKG_QTY,
			CG_VOL,
			CG_WGT,
			EQ_NO,
			TO_LOC_ID,
			STAT_CD,
			CG_NO,
			VSL_CALL_ID,
			JOB_PURP_CD,
			DELV_TP_CD,
			FNL_OPE_YN,
			FNL_DELV_YN,
			HATCH_NO,
			HATCH_DRT,
			GANG_NO,
			OPE_CLASS_CD,
			DMG_YN,
			SHU_YN,
			SHFT_DT,
			JOB_GROUP,
			UPDATE_TIME,
			STAFF_CD,
			VERSION,
			TSPT_TP_CD,
			JOB_CO_CD,
			SP_CA_CO_CD,
			LORRY_NO,
			DRIVER_ID,
			STEVEDORE_ID,
			GATE_TXN_NO,
			CHAS_NO
		) VALUES (
			 #{jobNo},
			 #{jobTpCd}, 
			 TO_DATE(#{startDtStr}, 'DD/MM/YYYY HH24:MI'),
			 TO_DATE(#{endDtStr}, 'DD/MM/YYYY HH24:MI'),
			 F_GET_SHIFT_CD(TO_DATE(#{endDtStr}, 'DD/MM/YYYY HH24:MI'), 'CD'),
			 #{pkgTpCd}, 
			 #{loadQty}, 
			 #{loadM3}, 
			 #{loadMt}, 
			 #{eqNo}, 
			 #{toLocId}, 
			 #{statCd}, 
			 #{cgNo}, 
			 #{vslCallId}, 
			 #{jobPurpCd}, 
			 #{delvTpCd}, 
			 DECODE(#{fnlOpeYn},'true','Y','Y','Y','N'),
			 #{fnlDelvYn}, 
			 #{hatchNo}, 
			 #{hatchDrt}, 
			 #{gangNo},
			 #{catgCd},
			 DECODE(#{dmgYn},NULL,'N','true','Y','false','N','Y','Y','N','N'), 
			 DECODE(#{shuYn},NULL,'N','true','Y','false','N','Y','Y','N','N'),
			 TO_DATE(#{shftDt}, 'YYYYMMDD'),
			 #{jobGroup},
			 SYSDATE,
			 #{userId},
			 #{newVersion},
			 #{tsptTpCd},
			 #{jobCoCd},
			 #{spCaCoCd},
			#{lorryNo},
			#{driverId},
			#{stevedoreId},
			#{gateTxnNo},
			#{unitNo}
		)
	</insert>
	
	<update id="updateNextJobNoForWAJob"  parameterType="confirmLoadingOfROROItem">
		UPDATE 	TMT_JOB
			SET NEXT_JOB_NO = #{jobNo}
		WHERE 
				VSL_CALL_ID = #{vslCallId}
				AND JOB_NO = #{prevJobNo}
	</update>
	
	<select id="selectGateInTimeSeq" parameterType="cargoLoadingParm" resultType="java.lang.String">
		SELECT	MIN(AD.SEQ) as SEQ
		  FROM 	TMT_CG_ARRV_DELV AD
		 WHERE 	AD.CG_NO = #{cgNo}
				AND AD.VSL_CALL_ID = #{vslCallId}
				AND AD.GATE_OUT_DT IS NULL
				AND AD.LORRY_NO = #{lorryNo}
				AND AD.GATE_TXN_NO = #{gateTxnNo}
	</select>
	
	<select id = "selectCargoItemsHHT" parameterType = "confirmLoadingOfROROParm" resultMap = "resultCargoMap">
		WITH GI_INFO AS
        (
            SELECT    VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
                    ,COUNT(CHAS_NO) AS NO_OF_GI
            FROM    TMT_RORO_MST
            WHERE    VSL_CALL_ID = #{vslCallId}
                    AND GATE_IN_DTM IS NOT NULL
            GROUP BY VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
        )
        , HI_INFO AS
        (
            SELECT    VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
                    ,COUNT(CHAS_NO) AS NO_OF_HI
            FROM    TMT_RORO_MST
            WHERE    VSL_CALL_ID = #{vslCallId}
                    AND IN_DTM IS NOT NULL
            GROUP BY VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
        )
        , YC_INFO AS
        (
            SELECT    VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
                    ,COUNT(CHAS_NO) AS NO_OF_YC
            FROM    TMT_RORO_MST
            WHERE    VSL_CALL_ID = #{vslCallId}
                    AND OUT_DTM IS NOT NULL
            GROUP BY VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
        )
        , D_LC_INFO AS
        (
            SELECT    VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
                    ,COUNT(CHAS_NO) AS NO_OF_D_LC
            FROM    TMT_RORO_MST
            WHERE    VSL_CALL_ID = #{vslCallId}
                    AND LOADING_DTM IS NOT NULL
                    AND IN_DTM IS NULL
            GROUP BY VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
        )
        , LC_INFO AS
        (
            SELECT    VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
                    ,COUNT(CHAS_NO) AS NO_OF_LC
            FROM    TMT_RORO_MST
            WHERE    VSL_CALL_ID = #{vslCallId}
                    AND LOADING_DTM IS NOT NULL
            GROUP BY VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
        )
        , REHANDLE_INFO AS
        (
            SELECT    VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
                    ,COUNT(CHAS_NO) AS NO_OF_REHANDLE
            FROM    TMT_RORO_MST
            WHERE    VSL_CALL_ID = #{vslCallId}
                    AND NVL(RHDL_NO,'') != ''
                    AND STAT_CD  = 'RH'
            GROUP BY VSL_CALL_ID
                    ,MF_DOC_ID
                    ,CG_NO
                    ,IX_CD
        )
        
                
        SELECT    /* ConfirmLoadingForRORO.getCargoItems */
                DISTINCT
                S.VSL_CALL_ID,
                S.VSL_CD,
				S.CALL_SEQ,
				S.CALL_YEAR,
                R.MF_DOC_ID,
                R.CG_NO,
                S.CATG_CD,
                F_CM_001('MT', 'CATGTP', S.CATG_CD) AS CATG_NM,
                S.DELV_TP_CD,
                F_CM_001('MT', 'DELVTP', S.DELV_TP_CD) AS DELV_TP_NM,
                S.CG_TP_CD,
                F_CM_001('MT', 'CGTP', S.CG_TP_CD) AS CG_TP_NM,
                B.BRAND_CD,
                B.BRAND_NM,
                M.MODEL_CD,
                M.MODEL_NM,
                <!-- R.TRUCK_NO,
				R.DRIVER_ID,
				R.DRIVER_NM,
				R.DRIVER_LICENSE, -->
                NVL(RM.REMAIN_VIN, 0) AS VIN_REMAIN,
                COUNT(R.CHAS_NO) OVER (PARTITION BY R.CG_NO, R.MF_DOC_ID, R.VSL_CALL_ID, R.IX_CD) AS NOS_OF_VIN,
                NVL(G.NO_OF_GI, 0) AS NOS_OF_GI,
                NVL(H.NO_OF_HI, 0) AS NOS_OF_HI,
                NVL(L.NO_OF_LC, 0) AS NOS_OF_LC,
                NVL(H.NO_OF_HI, 0) - NVL(Y.NO_OF_YC, 0) - NVL(A.NO_OF_REHANDLE, 0) AS TODO_YC,
                NVL(Y.NO_OF_YC, 0) - (NVL(L.NO_OF_LC, 0) - NVL(D.NO_OF_D_LC, 0)) AS TODO_LC,
                NVL(A.NO_OF_REHANDLE, 0) AS NOS_OF_REHANDLE
                
                
        FROM    TMT_SHIPG_NOTE S
                INNER JOIN TMT_RORO_MST R
                    ON    S.VSL_CALL_ID = R.VSL_CALL_ID
                        AND S.SHIPG_NOTE_NO = R.CG_NO
                        
                
        
                LEFT OUTER JOIN GI_INFO G
                    ON    R.VSL_CALL_ID = G.VSL_CALL_ID
                        AND R.MF_DOC_ID = G.MF_DOC_ID
                        AND R.CG_NO = G.CG_NO
                        AND R.IX_CD = G.IX_CD
                LEFT OUTER JOIN HI_INFO H
                    ON    R.VSL_CALL_ID = H.VSL_CALL_ID
                        AND R.MF_DOC_ID = H.MF_DOC_ID
                        AND R.CG_NO = H.CG_NO
                        AND R.IX_CD = H.IX_CD
                LEFT OUTER JOIN YC_INFO Y
                    ON    R.VSL_CALL_ID = Y.VSL_CALL_ID
                        AND R.MF_DOC_ID = Y.MF_DOC_ID
                        AND R.CG_NO = Y.CG_NO
                        AND R.IX_CD = Y.IX_CD
                LEFT OUTER JOIN D_LC_INFO D
                    ON    R.VSL_CALL_ID = D.VSL_CALL_ID
                        AND R.MF_DOC_ID = D.MF_DOC_ID
                        AND R.CG_NO = D.CG_NO
                        AND R.IX_CD = D.IX_CD
                LEFT OUTER JOIN LC_INFO L
                    ON    R.VSL_CALL_ID = L.VSL_CALL_ID
                        AND R.MF_DOC_ID = L.MF_DOC_ID
                        AND R.CG_NO = L.CG_NO
                        AND R.IX_CD = L.IX_CD
                
                LEFT OUTER JOIN REHANDLE_INFO A
                    ON    R.VSL_CALL_ID = A.VSL_CALL_ID
                        AND R.MF_DOC_ID = A.MF_DOC_ID
                        AND R.CG_NO = A.CG_NO
                        AND R.IX_CD = A.IX_CD
                    
                LEFT OUTER JOIN TMT_BRAND B
                    ON    R.BRAND_CD = B.BRAND_CD
                LEFT OUTER JOIN TMT_BRAND_DTL M
                    ON    R.MODEL_CD = M.MODEL_CD
                        AND R.BRAND_CD = M.BRAND_CD
        		LEFT OUTER JOIN
			         (  SELECT COUNT (R1.CHAS_NO) REMAIN_VIN,
			                   R1.VSL_CALL_ID,
			                   R1.MF_DOC_ID,
			                   R1.CG_NO
			            FROM TMT_RORO_MST R1
			           	WHERE     R1.VSL_CALL_ID = #{vslCallId}
			                   AND R1.IN_DTM IS NOT NULL
			                   AND R1.OUT_DTM IS NOT NULL
			                   AND R1.LOADING_DTM IS NULL
			                   AND R1.CG_TP_CD IN ('RCV', 'RMC', 'RMA')
			          	GROUP BY R1.VSL_CALL_ID, R1.MF_DOC_ID, R1.CG_NO) RM
				ON S.VSL_CALL_ID = RM.VSL_CALL_ID AND S.SHIPG_NOTE_NO = RM.CG_NO
        WHERE    S.VSL_CALL_ID = #{vslCallId}
                AND S.STAT_CD = 'AP'
                AND R.IX_CD = 'X'
                <!-- AND S.CATG_CD NOT IN ('T', 'R') -->
				<if test="bookingNo != null and bookingNo != ''">
					AND R.MF_DOC_ID = #{bookingNo}
				</if>
				<if test="shipgNoteNo != null and shipgNoteNo != ''">
					AND R.CG_NO = #{shipgNoteNo}
				</if>
				<if test="unitNo != null and unitNo != ''">
					AND R.CHAS_NO LIKE CONCAT(#{unitNo}, '%')
				</if>
				<if test="brandCd != null and brandCd != ''">
					AND R.BRAND_CD = #{brandCd}
				</if>
				<choose>
					<when test="cgTpCd != null and cgTpCd != ''">AND S.CG_TP_CD = #{cgTpCd}</when>
					<otherwise>AND S.CG_TP_CD IN ('RCV')</otherwise>
				</choose>
		 
		ORDER BY R.MF_DOC_ID, R.CG_NO
	</select>
	
	<select id = "selectInDirectUnitItemsHHT" parameterType="confirmLoadingOfROROParm" resultMap="resultCargoMap">
		/* ================ ConfirmLoadingForRORO.selectInDirectUnitItemsHHT ================ */
		SELECT  R.VSL_CALL_ID,
				R.VSL_CD,
        		R.CALL_YEAR,
        		R.CALL_SEQ,
                R.MF_DOC_ID,
                R.CG_NO,
                R.CHAS_NO AS unitNo,
                R.BRAND_CD AS brandcd,
                R.MODEL_CD,
                R.RORO_SEQ AS roroSeq,
                R.DRIVER_ID,
                R.DRIVER_NM,
                R.DRIVER_LICENSE,
                NVL(R.TRUCK_NO, '') AS truckNo,
                R.LOC_ID AS yardLoc,
                TO_CHAR(R.GATE_IN_DTM, 'DD/MM/YYYY HH24:MI') AS gateInDate,
                TO_CHAR(R.IN_DTM, 'DD/MM/YYYY HH24:MI') AS inDate,
                TO_CHAR(R.OUT_DTM, 'DD/MM/YYYY HH24:MI') AS outDate,
                TO_CHAR(R.LOADING_DTM, 'DD/MM/YYYY HH24:MI') AS loadingTime,
                R.DELV_TP_CD,
                F_CM_001('MT', 'DELVTP', R.DELV_TP_CD) AS DELV_TP_NM,
                R.STAT_CD as statCd,
                F_CM_001('MT', 'CGSTATUS', R.STAT_CD) AS statNm,
                R.STEVEDORE_ID,
                R.YARD_RMK,
                R.CRANE,
                R.VSL_LOCATION,
                R.LOADING_RMK
        FROM    TMT_SHIPG_NOTE S
                INNER JOIN TMT_RORO_MST R
                    ON    S.VSL_CALL_ID = R.VSL_CALL_ID
                        AND S.SHIPG_NOTE_NO = R.CG_NO

        WHERE    S.VSL_CALL_ID = #{vslCallId}
        		AND S.STAT_CD = 'AP'
                AND R.STAT_CD = #{statCd}
                AND S.CG_TP_CD IN ('RCV')
                AND R.IX_CD = 'X'
                AND R.DELV_TP_CD = 'I'
                AND R.IN_DTM IS NOT NULL
                <if test="rhdlNo == null and rhdlNo == ''">
					AND (R.RHDL_NO IS NULL OR R.RHDL_NO = '')
				</if>
				<if test="shipgNoteNo != null and shipgNoteNo != ''">
					AND R.CG_NO = #{shipgNoteNo}
				</if>
				<if test="brandCd != null and brandCd != ''">
					AND (SELECT BRAND_NM FROM TMT_BRAND WHERE R.BRAND_CD = BRAND_CD ) = #{brandCd}
				</if>
				<if test="unitNo != null and unitNo != ''">
					AND R.CHAS_NO = #{unitNo}
				</if>
				<if test="loadingTime != null and loadingTime != ''">
					AND R.LOADING_DTM = #{loadingTime}
				</if>
		ORDER BY R.IN_DTM, R.CHAS_NO
	</select>
	<select id = "selectDirectUnitItemsHHT" parameterType = "confirmLoadingOfROROParm" resultMap="resultCargoMap">
		/* ================ ConfirmLoadingForRORO.getDirectUnitItemsHHT ================  */
		SELECT	R.VSL_CALL_ID,
				R.VSL_CD,
		    	R.CALL_YEAR,
		    	R.CALL_SEQ,
				R.MF_DOC_ID,
				R.CG_NO,
				R.BRAND_CD AS brandCd,
				R.MODEL_CD AS modelCd,
				
				D.CHAS_NO AS unitNo,
				D.SEQ AS roroSeq,
				
				R.DRIVER_ID AS driverId,
		        R.DRIVER_NM AS driverNm,
		        R.DRIVER_LICENSE AS driverLicense,
		        NVL(R.TRUCK_NO, '') truckNo,
				R.LOC_ID,
				TO_CHAR(R.GATE_IN_DTM, 'DD/MM/YYYY HH24:MI') AS gateInDate,
				TO_CHAR(R.IN_DTM, 'DD/MM/YYYY HH24:MI') AS inDate,
				TO_CHAR(R.OUT_DTM, 'DD/MM/YYYY HH24:MI') AS outDate,
				TO_CHAR(R.LOADING_DTM, 'DD/MM/YYYY HH24:MI') AS loadingTime,
				R.DELV_TP_CD AS delvTpCd,
				F_CM_001('MT', 'DELVTP', R.DELV_TP_CD) AS delvTpNm,
				R.STAT_CD AS statCd,
				F_CM_001('MT', 'CGSTATUS', R.STAT_CD) AS statNm,
				R.STEVEDORE_ID,
				R.YARD_RMK,
				R.CRANE,
				R.VSL_LOCATION,
				R.LOADING_RMK,
				D.IX_CD,
		        D.NEW_YN,
		        D.DOC_WGT,
		        D.CBM
		FROM	TMT_SHIPG_NOTE S
				INNER JOIN TMT_SHIPG_NOTE_DTL D ON S.VSL_CALL_ID = D.VSL_CALL_ID AND S.SHIPG_NOTE_NO = D.SHIPG_NOTE_NO
				LEFT OUTER JOIN TMT_RORO_MST R
            ON     S.VSL_CALL_ID = R.VSL_CALL_ID
               AND S.SHIPG_NOTE_NO = R.CG_NO
               AND D.CHAS_NO = R.CHAS_NO
               AND D.SEQ = R.RORO_SEQ

		WHERE	S.VSL_CALL_ID = #{vslCallId}
				AND S.STAT_CD = 'AP'
		        AND R.STAT_CD = #{statCd}
				AND S.CG_TP_CD IN ('RCV','RMA')
				AND D.IX_CD = 'X'
				<!-- AND R.DELV_TP_CD = 'D' -->
<!-- Temporary comment for doing CUD without WB system -->				
<!-- 				AND R.GATE_IN_DTM IS NOT NULL -->
				<!-- AND R.GATE_IN_DTM IS NOT NULL  -->
				AND R.IN_DTM IS NULL
				<if test="shipgNoteNo != null and shipgNoteNo != ''">
					AND R.CG_NO = #{shipgNoteNo}
				</if>
				<if test="brandCd != null and brandCd != ''">
					AND (SELECT BRAND_NM FROM TMT_BRAND WHERE R.BRAND_CD = BRAND_CD ) = #{brandCd}
				</if>
				<if test="unitNo != null and unitNo != ''">
					AND R.CHAS_NO = #{unitNo}
				</if>
				<if test="loadingTime != null and loadingTime != ''">
					AND R.LOADING_DTM = #{loadingTime}
				</if>
		ORDER BY R.GATE_IN_DTM, R.CHAS_NO
	</select>
	
</mapper>