<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="unclosedOperationList">
	<!--  ################ Query Statement Define ######################################### -->
	<select id="selectUnclosedOperationList" parameterType="unclosedOperationListParm" resultType="unclosedOperationListItem">
	 	<if test="pageNo != 0"> 
			SELECT /*unclosedOperationList.selectUnclosedOperationList*/
				*
			FROM 
				(SELECT 
					inner_querry.*, ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) row_num
				FROM ( 
		</if>
				<include refid="getUnclosedOperationList"/>
		<if test="pageNo != 0"> 
				)inner_querry 
			)inner_querry 
			WHERE 
				inner_querry.row_num <![CDATA[>]]> (CASE WHEN #{pageNo} = '0' THEN 1 ELSE CAST(#{pageNo} AS INT) END - 1) * CAST(#{sizePerPage} AS INT)
				AND inner_querry.row_num <![CDATA[<=]]> CASE WHEN #{pageNo} = '0' THEN 1 ELSE CAST(#{pageNo} AS INT) END * CAST(#{sizePerPage} AS INT)
		</if>
	</select>
		
	<select id="selectUnclosedOperationListCount" parameterType="unclosedOperationListParm" resultType="java.lang.String" >
        SELECT /*unclosedOperationList.selectUnclosedOperationListCount*/
			COUNT(*)
		FROM 
			(<include refid="getUnclosedOperationList"/>) AS getUnclosedOperationList
	</select>
		
	<sql id="getUnclosedOperationList">
        <if test="pageType != null and pageType != ''">
			<if test="pageType == 'UOL'">
			SELECT /*unclosedOperationList.getUnclosedOperationList*/
				* 
			FROM
				(
		    		SELECT 
						a.*
						, ROW_NUMBER() OVER (ORDER BY ATB, vslCallId, CGOPTP, BLSN) AS rownum
		    		FROM
				(
			</if>
		</if>

	    /* LOAD END DATE IS NOT NULL : NO FINAL*/
	    SELECT * 
			FROM (
				SELECT
					'Loading' 										AS CGOPTP,
					M.VSL_CALL_ID 									AS vslCallId,
					(SELECT 
						VSL_NM 
					FROM 
						TMT_VSL_PART PART 
					WHERE 
						SC.VSL_CALL_ID 	= M.VSL_CALL_ID 
						AND SC.VSL_CD 	= PART.VSL_CD) 				AS VSLNM,
					FORMAT(SC.ATB, 'dd/MM/yyyy HH:mm:ss')  			AS ATB,
					FORMAT(SC.ATU, 'dd/MM/yyyy HH:mm:ss')  			AS ATU,
					M.SHIPG_NOTE_NO 								AS BLSN,
					ISNULL(BL.CG_WGT, 0) 							AS DOCMT,
					ISNULL(BL.CG_VOL, 0) 							AS DOCM3,
					ISNULL(BL.PKG_QTY, 0) 							AS DOCQTY,
					DBO.F_CM_CODE_NM('MT', 'CGCOCD', C.JOB_CO_CD)  	AS CGCOND,
					C.TO_LOC_ID 									AS WHLOC,
					'' RSN,
					(
						SELECT 
							COUNT(JOB_GROUP) 
						FROM (
							SELECT DISTINCT 
								JOB_GROUP , CG_NO , JOB_CO_CD 
							FROM 
								TMT_JOB 
							WHERE
								VSL_CALL_ID = M.VSL_CALL_ID 
							) AS job_count
						WHERE 
							CG_NO 			= M.CG_NO 
							AND JOB_CO_CD 	= C.JOB_CO_CD
					) 												AS JOBSTRIP,
					ACT.ACTMT 										AS ACTMT,
					ACT.ACTM3 										AS ACTM3,
					ACT.ACTQTY 										AS ACTQTYY
				FROM 
					TMT_CG_MST M
				INNER JOIN 
					TMT_VSL_SCH SC
				ON
					SC.VSL_CALL_ID = M.VSL_CALL_ID
				INNER JOIN
					 (
						SELECT 
							AA.VSL_CALL_ID, AA.CG_NO, AA.JOB_CO_CD, AA.TO_LOC_ID 
						FROM 
							TMT_JOB AA 
						WHERE
							(JOB_CO_CD IS NOT NULL AND JOB_CO_CD <![CDATA[<>]]>'')
							AND ( AA.SP_CA_CO_CD <![CDATA[<>]]> 'S' OR (AA.SP_CA_CO_CD IS NULL OR AA.SP_CA_CO_CD='') ) 
						GROUP BY 
							VSL_CALL_ID, CG_NO, JOB_CO_CD, TO_LOC_ID
				) C 
				ON 
					M.VSL_CALL_ID 		= C.VSL_CALL_ID 
					AND M.CG_NO 		= C.CG_NO
				INNER JOIN
					TMT_BL BL 
				ON 
					M.VSL_CALL_ID 		= BL.VSL_CALL_ID 
					AND M.CG_NO 		= BL.BL_NO

				INNER JOIN
				(
					SELECT 
					   IL.VSL_CALL_ID 	AS VSLCALLID,
					   IL.CG_NO			AS CGNO,
					   SUM(IL.CG_WGT)   AS ACTMT,
					   SUM(IL.CG_VOL)   AS ACTM3,
					   SUM(IL.PKG_QTY)  AS ACTQTY,
					   IL.VSL_CALL_ID   AS VSL_CALL_ID,
					   IL.CG_NO         AS CG_NO
					FROM 
						TMT_INV_LOC IL
					LEFT JOIN
						 TMT_JOB JO
					ON 	
						IL.VSL_CALL_ID 	= JO.VSL_CALL_ID 
						AND IL.CG_NO 	= JO.CG_NO 
						AND IL.JOB_NO 	= JO.JOB_NO
					WHERE
						IL.VSL_CALL_ID 		= #{vslCallId}
						AND JO.JOB_PURP_CD  = 'AW'
						AND ((JO.RHDL_MODE IS NULL OR JO.RHDL_MODE='') OR JO.RHDL_MODE = 'N')
					GROUP BY
						IL.VSL_CALL_ID, IL.CG_NO
				) ACT
				ON 
					ACT.CGNO 					= BL.BL_NO
					AND ACT.VSL_CALL_ID 		= SC.VSL_CALL_ID
				WHERE 
					1=1 
				<if test="vslCallId == null or vslCallId == ''">
					AND FORMAT(SC.ATB, 'yyyyMMdd') BETWEEN FORMAT(CONVERT(DATE, #{fromATB},103), 'yyyyMMdd') AND FORMAT(CONVERT(DATE, #{toATB},103), 'yyyyMMdd')
					<if test="fromATU != null and fromATU != '' and toATU != null and toATU != ''">
						AND FORMAT(SC.ATU, 'yyyyMMdd') BETWEEN FORMAT(CONVERT(DATE, #{fromATU},103), 'yyyyMMdd') AND FORMAT(CONVERT(DATE, #{toATU},103), 'yyyyMMdd')
					</if>
				</if>
				<if test="vslCallId != null and vslCallId != ''">
					AND M.VSL_CALL_ID = #{vslCallId}
				</if>
				<if test="statCd != null and statCd != ''">
					AND M.STAT_CD = #{statCd}
				</if>
				<if test="whLoc != null and whLoc != ''">
					AND SUBSTRING(
						C.TO_LOC_ID,
						PATINDEX('%[^() ]%', C.TO_LOC_ID),
						CHARINDEX('(', C.TO_LOC_ID + '(', PATINDEX('%[^() ]%', C.TO_LOC_ID)) - PATINDEX('%[^() ]%', C.TO_LOC_ID)
					) = #{whLoc}
				</if>     
				UNION
				SELECT
					'Discharging' 							AS CGOPTP,
					M.VSL_CALL_ID 							AS vslCallId,
					(SELECT 
						VSL_NM
					FROM 
						TMT_VSL_PART PART 
					WHERE
						SC.VSL_CALL_ID 	= M.VSL_CALL_ID 
						AND SC.VSL_CD 	= PART.VSL_CD) 		AS VSLNM,
					FORMAT(SC.ATB, 'dd/MM/yyyy HH:mm:ss') 	AS ATB,
					FORMAT(SC.ATU, 'dd/MM/yyyy HH:mm:ss') 	AS ATU,
					M.CG_NO 								AS BLSN,
					SN.CG_WGT 								AS DOCMT,
					SN.CG_VOL 								AS DOCM3,
					SN.PKG_QTY 								AS DOCQTY,
					DBO.F_CM_CODE_NM('MT', 'CGCOCD', C.JOB_CO_CD)  CGCOND,
					C.TO_LOC_ID 							AS WHLOC,
					'' RSN,
					(
						SELECT 
							COUNT(JOB_GROUP) 
						FROM ( 
							SELECT DISTINCT 
								JOB_GROUP , CG_NO , JOB_CO_CD 
							FROM 
								TMT_JOB 
							WHERE
								VSL_CALL_ID = M.VSL_CALL_ID 
						) AS job_count
						WHERE 
							CG_NO 			= M.CG_NO 
							AND JOB_CO_CD 	= C.JOB_CO_CD
					) 										AS JOBSTRIP,
					ACT.ACTMT 								AS ACTMT,
					ACT.ACTM3 								AS ACTM3,
					ACT.ACTQTY 								AS ACTQTYY
				FROM 
					TMT_CG_MST M
				INNER JOIN 
					TMT_VSL_SCH SC 
				ON
					M.VSL_CALL_ID 	= SC.VSL_CALL_ID
				INNER JOIN 
					TMT_SHIPG_NOTE SN 
				ON
					M.CG_NO 		= SN.SHIPG_NOTE_NO
				INNER JOIN (
					SELECT 
						AA.VSL_CALL_ID, AA.CG_NO, AA.JOB_CO_CD, AA.TO_LOC_ID
					FROM
						TMT_JOB AA 
					WHERE
						JOB_CO_CD IS NOT NULL AND JOB_CO_CD<![CDATA[<>]]> ''
					GROUP BY
						VSL_CALL_ID, CG_NO, JOB_CO_CD, TO_LOC_ID
				) C
				ON 
					M.VSL_CALL_ID 		= C.VSL_CALL_ID
					AND M.CG_NO 		= C.CG_NO
				INNER JOIN
				(
					SELECT
						IL.VSL_CALL_ID 	AS VSLCALLID,
					   IL.CG_NO			AS CGNO,
					   SUM(IL.CG_WGT)   AS ACTMT,
					   SUM(IL.CG_VOL)   AS ACTM3,
					   SUM(IL.PKG_QTY)  AS ACTQTY,
					   IL.VSL_CALL_ID   AS VSL_CALL_ID,
					   IL.CG_NO         AS CG_NO
					FROM 
						TMT_INV_LOC IL
					LEFT JOIN 
						TMT_JOB JO
					ON 	
						IL.VSL_CALL_ID 	= JO.VSL_CALL_ID 
						AND IL.CG_NO 	= JO.CG_NO 
						AND IL.JOB_NO 	= JO.JOB_NO
					WHERE
						IL.VSL_CALL_ID 		= #{vslCallId}
						AND JO.JOB_PURP_CD  = 'AW'
						AND ((JO.RHDL_MODE IS NULL OR JO.RHDL_MODE='') OR JO.RHDL_MODE = 'N')
					GROUP BY
						IL.VSL_CALL_ID, IL.CG_NO
				) ACT
				ON 
					ACT.CGNO 				= SN.SHIPG_NOTE_NO
					AND ACT.VSL_CALL_ID 	= SC.VSL_CALL_ID
				WHERE 
					M.SHIPG_NOTE_NO IS NULL OR M.SHIPG_NOTE_NO=''
					
				<if test="vslCallId == null or vslCallId == ''">
					AND FORMAT(SC.ATB, 'yyyyMMdd') BETWEEN FORMAT(CONVERT(DATE, #{fromATB},103), 'yyyyMMdd') AND FORMAT(CONVERT(DATE, #{toATB},103), 'yyyyMMdd')
					<if test="fromATU != null and fromATU != '' and toATU != null and toATU != ''">
						AND FORMAT(SC.ATU, 'yyyyMMdd') BETWEEN FORMAT(CONVERT(DATE, #{fromATU},103), 'yyyyMMdd') AND FORMAT(CONVERT(DATE, #{toATU},103), 'yyyyMMdd')
					</if>
				</if>
				<if test="vslCallId != null and vslCallId != ''">
					AND	M.VSL_CALL_ID 	= #{vslCallId}
				</if>
				<if test="statCd != null and statCd != ''">
					AND M.STAT_CD 		= #{statCd}
				</if>
				<if test="whLoc != null and whLoc != ''">
					AND SUBSTRING(
						C.TO_LOC_ID,
						PATINDEX('%[^() ]%', C.TO_LOC_ID),
						CHARINDEX('(', C.TO_LOC_ID + '(', PATINDEX('%[^() ]%', C.TO_LOC_ID)) - PATINDEX('%[^() ]%', C.TO_LOC_ID)
					) = #{whLoc}
				</if> 
			) AS sub
			
			<if test="pageType != null and pageType != ''">
				<if test="pageType == 'UOL'">
					) a ) AS sub_query
	        	<if test="fromRow != null and fromRow != ''">
		       		<if test="toRow != null and toRow != ''">
		        		WHERE 
							rownum BETWEEN #{fromRow} AND #{toRow}
		       		</if>
	       		</if>
	        </if>
        </if>
	</sql>
</mapper>
