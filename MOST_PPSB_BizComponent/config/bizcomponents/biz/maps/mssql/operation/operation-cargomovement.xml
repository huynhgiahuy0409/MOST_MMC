<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cargoMovement">
	
	<!--  ################ Query Statement Define ######################################### -->
	<sql id="sqlMovementAuth">
		<if test='userType == "E"'>
  			AND
				(
					EXISTS (SELECT
								'1'
							FROM
								TMT_SHIPG_NOTE 					SN,
								TMT_PTNR 						PTNR
							 WHERE
								SN.VSL_CALL_ID 					= C.VSL_CALL_ID
								AND SN.SHIPG_NOTE_NO 			= C.SHIPG_NOTE_NO
								AND SN.FWRD 					= #{ptnrCode}
								AND PTNR.PTNR_CODE 				= #{ptnrCode}
								AND PTNR.PTNR_TYPE 				= 'FWD')
				 OR EXISTS (SELECT
								'1'
							FROM
								TMT_SHIPG_NOTE 					SN,
								TMT_PTNR 						PTNR
							WHERE
								SN.VSL_CALL_ID 					= C.VSL_CALL_ID
								AND SN.SHIPG_NOTE_NO 			= C.SHIPG_NOTE_NO
								AND SN.SHIPG_AGNCY 				= #{ptnrCode}
								AND PTNR.PTNR_CODE 				= #{ptnrCode}
								AND PTNR.PTNR_CODE 				= 'SHA')
				 OR EXISTS (SELECT
								'1'
							FROM
								TMT_BL 							BL
							WHERE
								BL.VSL_CALL_ID 					= C.VSL_CALL_ID
								AND BL.BL_NO 					= C.CG_NO
								AND BL.TSPTR 					= #{ptnrCode})
				 OR EXISTS (SELECT
								'1'
							FROM
								TMT_SHIPG_NOTE 					SN,
								TMT_GR 							GR
							WHERE
								SN.TSPT_COMP 					= #{ptnrCode}
								AND SN.VSL_CALL_ID 				= GR.VSL_CALL_ID
								AND SN.SHIPG_NOTE_NO 			= GR.SHIPG_NOTE_NO
								AND GR.VSL_CALL_ID 				= C.VSL_CALL_ID
								AND GR.GR_NO 					= C.CG_NO)
				)
		</if>
	</sql>
	
	<sql id="sqlCargoMovement" >
		SELECT /*cargoMovement.sqlCargoMovement*/
			J.CG_NO                						CGNO,
			J.VSL_CALL_ID          						VSLCALLID,
			(CASE C.OPE_CLASS_CD
				WHEN 'I' THEN (SELECT TOP 1
									B.MF_DOC_ID
								FROM
									TMT_BL 				B
								WHERE
									B.VSL_CALL_ID 		= J.VSL_CALL_ID
									AND B.BL_NO 		= C.BL_NO)
				ELSE (SELECT TOP 1
							B.MF_DOC_ID
						FROM
							TMT_SHIPG_NOTE 				B
						WHERE
							B.VSL_CALL_ID 				= J.VSL_CALL_ID
							AND B.SHIPG_NOTE_NO 		= C.SHIPG_NOTE_NO)
			END
			) 											AS MFDOCID,
			J.JOB_NO               						JOBNO,
			J.JOB_TP_CD            						JOBTPCD,
			J.WORK_ST_DT                				STDT,
			J.WORK_END_DT           					ENDDT,
			J.SHFT_ID              						SHFTID,
			J.PKG_QTY              						PKGQTY,
			J.CG_VOL                					MSRMT,
			J.CG_WGT                  					WGT,
			J.CNTR_QTY             						CNTRQTY,
			J.FM_LOC_ID            						FMLOCID,
			J.TO_LOC_ID            						TOLOCID,
			J.STAT_CD              						STATCD,
			J.ODR_NO               						ODRNO,
			J.JOB_PURP_CD          						JOBPURPCD,
			J.DELV_TP_CD           						DELVTPCD,
			J.FNL_OPE_YN           						FNLOPEYN,
			J.FNL_DELV_YN          						FNLDELVYN,
			J.OPE_CLASS_CD         						OPECLASSCD,
			(SELECT TOP 1
				TCM.S_CD_NM
			FROM
				TMT_CD_MSTD 							TCM
			WHERE
				TCM.L_CD 								= 'MT'
				AND TCM.M_CD 							= 'CATGTP'
				AND TCM.S_CD 							= J.OPE_CLASS_CD
			)											AS CATGNM,
			J.DMG_YN               						DMGYN,
			J.STS_YN               						STSYN,
			C.SHIPG_AGNT           						SHIPGAGNT,
			C.FWR_AGNT             						FWRAGNT,
			C.SHPR                 						SHPR,
			C.SHPR_NM              						SHPRNM,
			C.SHPR_ADDR            						SHPRADDR,
			C.CNSNE                						CNSNE,
			C.CNSNE_NM             						CNSNENM,
			(CASE
				(SELECT
					COUNT(*)
				FROM
					TMT_GR 								G
				WHERE
					G.GR_NO 							= C.CG_NO
					AND G.VSL_CALL_ID =					C.VSL_CALL_ID)
				WHEN 0 THEN C.BL_NO
				ELSE C.SHIPG_NOTE_NO
			END)										AS BLSN,
			(CASE
				(SELECT
					COUNT(*)
				FROM
					TMT_GR 								G
				WHERE
					G.GR_NO 							= C.CG_NO
					AND G.VSL_CALL_ID 					= C.VSL_CALL_ID)
				WHEN 0 THEN C.CNSNE_NM
				ELSE C.SHPR_NM
			END)										AS SHPCNG,
			(CASE
				(SELECT
					COUNT(*)
				FROM
					TMT_GR 								G
				WHERE
					G.GR_NO 							= C.CG_NO
					AND G.VSL_CALL_ID 					= C.VSL_CALL_ID)
				WHEN 0 THEN L.LOC_ID
				ELSE C.CG_NO
			END)										AS GRITEM,
			(SELECT
				M.CMDT_DESC
			FROM
				TMT_CMDT 								M
			WHERE
				M.CMDT_CD 								= C.CMDT_CD
			)											AS CARGO,
			FORMAT(
				ISNULL(J.WORK_END_DT, J.WORK_ST_DT),
				'dd/MM/yyyy HH:mm') 					AS MVDT,
			(CASE
				WHEN
					(SELECT
						COUNT(*)
					FROM
						TMT_JOB 						JO
					WHERE
						JO.JOB_NO 						= J.JOB_NO
						AND JO.JOB_TP_CD IN ('MV')
			  			AND	JO.JOB_PURP_CD = 'WW'
	 					AND SUBSTRING(JO.FM_LOC_ID, 1, CHARINDEX('(', JO.FM_LOC_ID) - 1)
								= SUBSTRING(JO.TO_LOC_ID, 1, CHARINDEX('(', JO.TO_LOC_ID) - 1))
							<![CDATA[ <> ]]> 0
					THEN 'INTRA'
				ELSE 'INTER'
			END) 										AS MVTP,
			(CASE
				(SELECT
					COUNT(*)
				FROM
					TMT_GR 								G
				WHERE
					G.GR_NO 							= C.CG_NO
					AND G.VSL_CALL_ID 					= C.VSL_CALL_ID)
				WHEN 0 THEN C.BL_NO
				ELSE ''
			END)										AS BLNO,
			(CASE
				(SELECT
					COUNT(*)
				FROM
					TMT_GR 								G
				WHERE
					G.GR_NO 							= C.CG_NO
					AND G.VSL_CALL_ID 					= C.VSL_CALL_ID)
				WHEN 0 THEN ''
				ELSE C.SHIPG_NOTE_NO
			END)										AS SHIPGNOTENO
		  FROM
			TMT_JOB 									J,
			TMT_CG_MST 									C,
			TMT_INV_LOC 								L
		  WHERE
			J.CG_NO 									= C.CG_NO
			AND	J.VSL_CALL_ID 							= C.VSL_CALL_ID
			AND J.VSL_CALL_ID 							= L.VSL_CALL_ID
			AND	J.CG_NO 								= L.CG_NO
			AND J.JOB_NO 								= L.JOB_NO
			AND J.JOB_NO 								= L.JOB_NO
			AND J.JOB_PURP_CD 							= 'WW'
			AND (L.CG_WGT > 0 OR L.PKG_QTY > 0)
			AND J.JOB_TP_CD IN ('MV')
		<if test="vslCallId != null and vslCallId != ''">
    		AND C.VSL_CALL_ID 							= #{vslCallId}
		</if>
		<if test="opeClassCd != null and opeClassCd != ''">
    		AND J.OPE_CLASS_CD 							= #{opeClassCd}
		</if>
		<if test="shipgAgnt != null and shipgAgnt != ''">
    		AND C.SHIPG_AGNT 							= #{shipgAgnt}
		</if>
		<if test="fwrAgnt != null and fwrAgnt != ''">
    		AND C.FWR_AGNT	 							= #{fwrAgnt}
		</if>
		<if test="jobTpCd != null and jobTpCd != ''">
    		AND J.JOB_TP_CD 							= #{jobTpCd}
		</if>
		<if test="stDt != null and stDt != ''">
  			AND
		 	<![CDATA[
				CONVERT(DATE, FORMAT(ISNULL(J.WORK_END_DT, J.WORK_ST_DT),'yyyyMMdd'),112) >=  CONVERT(DATE, #{stDt},103)
		 	]]>
		</if>
		<if test="endDt != null and endDt != ''">
   			AND
	 		<![CDATA[
				CONVERT(DATE, FORMAT(ISNULL(J.WORK_END_DT, J.WORK_ST_DT),'yyyyMMdd'),112) <= CONVERT(DATE, #{endDt},103)
	 		]]>
		</if>
		<if test="toLocId != null and toLocId != ''">
			AND SUBSTRING(
					J.TO_LOC_ID,
						1,
					CHARINDEX('(', J.TO_LOC_ID) - 1) 	= #{toLocId}
		</if>
		<if test="mvTpCd != null and mvTpCd != ''">
			<if test='mvTpCd == "IA"'>
					<![CDATA[
				AND SUBSTRING(J.FM_LOC_ID,1,CHARINDEX('(', J.FM_LOC_ID) - 1) = SUBSTRING(J.TO_LOC_ID, 1, CHARINDEX('(', J.TO_LOC_ID) - 1)
				AND (J.FM_LOC_ID IS NOT NULL AND J.FM_LOC_ID <> '')
					]]>
			</if>
			<if test='mvTpCd == "IE"'>
					<![CDATA[
				AND SUBSTRING(J.FM_LOC_ID, 1, CHARINDEX('(', J.FM_LOC_ID) - 1) <> SUBSTRING(J.TO_LOC_ID, 1, CHARINDEX('(', J.TO_LOC_ID) - 1)
				AND (J.FM_LOC_ID IS NOT NULL AND J.FM_LOC_ID <> '')
					]]>
			</if>
		</if>
		   <include refid="sqlMovementAuth"/>
	</sql>
	
	<select id="selectCargoMovementList"  parameterType="cargoMovementParm" resultType="cargoMovementItem">
		<if test="pageNo != 0"> 
             SELECT /*cargoMovement.selectCargoMovementList*/
				*
				FROM (SELECT
						inner_query.*, ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) row_num
					FROM (
		</if>
				<include refid="sqlCargoMovement"/>
		<if test="pageNo != 0"> 
				) inner_query
			) inner_query
			WHERE
				inner_query.row_num <![CDATA[>]]> (CAST(CASE WHEN #{pageNo} = '0' THEN '1' ELSE #{pageNo} END AS INT) - 1) * CAST(#{sizePerPage} AS INT)
		  		AND inner_query.row_num <![CDATA[<=]]> (CAST(CASE WHEN #{pageNo} = '0' THEN '1' ELSE #{pageNo} END AS INT)) * CAST(#{sizePerPage} AS INT)
		</if>
	</select>
	
	<select id="selectMVWHComboList"  parameterType="cargoMovementParm" resultType="cargoMovementItem">
		SELECT /*cargoMovement.selectMVWHComboList*/
			LOC_ID 						AS LOCID,
			LOC_NM 						AS LOCNM
		FROM
			TMT_LOC_DEF
		WHERE
			1 = 1
			<if test="locDivCd != null and locDivCd != ''">
     			AND LOC_DIV_CD 			= #{locDivCd}
			</if>
	</select>
	
	<select id="selectCargoMVLoc"  parameterType="cargoMovementParm" resultType="cargoMovementItem">
		SELECT TOP 1 /*cargoMovement.selectCargoMVLoc*/
			C.CG_NO                			CGNO,
			C.VSL_CALL_ID          			VSLCALLID,
			C.STAT_CD              			STATCD,
			C.DELV_TP_CD           			DELVTPCD,
			C.OPE_CLASS_CD         			OPECLASSCD,
			C.SHIPG_AGNT           			SHIPGAGNT,
			C.FWR_AGNT             			FWRAGNT,
			C.SHPR                 			SHPR,
			C.SHPR_NM              			SHPRNM,
			C.SHPR_ADDR            			SHPRADDR,
			C.CNSNE                			CNSNE,
			C.CNSNE_NM             			CNSNENM,
			(CASE C.OPE_CLASS_CD
				WHEN 'I' THEN C.CNSNE_NM
				WHEN 'E' THEN C.SHPR_NM
				ELSE ISNULL(C.SHPR_NM, C.CNSNE_NM)
			END)							AS SHPCNG,
			(SELECT
				M.CMDT_DESC
			FROM
				TMT_CMDT 					M
			WHERE
				M.CMDT_CD 					= C.CMDT_CD),
			(CASE
				(SELECT TOP 1
					'1'
				FROM
					TMT_SPC_REQ 			S,
					TMT_JOB 				J
				WHERE
					S.VSL_CALL_ID 			= J.VSL_CALL_ID
					AND S.CG_REF_NO 		= J.CG_NO
					AND S.PREV_LOC_ID 		= J.FM_LOC_ID
					AND S.PLAN_LOC_ID 		= J.TO_LOC_ID
					AND J.VSL_CALL_ID 		= #{vslCallId}
					AND J.CG_NO 			= #{cgNo})
				WHEN '1' THEN 'Y'
				ELSE 'N'
			END)							AS ALLOCATEYN,
			(SELECT
				MAX(I.WH_LOC_ID)
			FROM
				TMT_INV_LOC 				I
			WHERE
				I.VSL_CALL_ID 				= C.VSL_CALL_ID
				AND I.CG_NO  				= C.CG_NO
			) 								AS WHID,
			(CASE
				WHEN (
					(SELECT TOP 1
						G.SHIPG_NOTE_NO
					FROM
						TMT_GR 				G
					WHERE
						G.VSL_CALL_ID 		= C.VSL_CALL_ID
						AND G.GR_NO  		= C.CG_NO
					) IS NULL
					OR
					(SELECT TOP 1
						G.SHIPG_NOTE_NO
					FROM
						TMT_GR 				G
					WHERE
						G.VSL_CALL_ID 		= C.VSL_CALL_ID
						AND G.GR_NO  		= C.CG_NO
					) = '') THEN C.CG_NO
				ELSE
					(SELECT TOP 1
						G.SHIPG_NOTE_NO
					FROM
						TMT_GR 				G
					WHERE
						G.VSL_CALL_ID 		= C.VSL_CALL_ID
						AND G.GR_NO  		= C.CG_NO)
			END)							AS BLSN,
			C.BL_NO 						AS BLNO,
            C.SHIPG_NOTE_NO 				AS SHIPGNOTENO
		FROM
			TMT_SPC_REQ 					R
				RIGHT OUTER JOIN TMT_CG_MST C
					ON R.VSL_CALL_ID 		= C.VSL_CALL_ID
					AND	R.CG_REF_NO 		= C.CG_NO
	  	WHERE
			1 = 1
			<if test='searchType == "IM"'>
				AND C.VSL_CALL_ID 			= #{vslCallId}
				AND C.CG_NO 				= #{cgNo}
			</if>
			<if test='searchType == "EX"'>
				AND C.VSL_CALL_ID 			= #{vslCallId}
				AND C.CG_NO 				= #{cgNo}
			</if>
	</select>
	
	<select id="selectInvLocList"  parameterType="cargoMovementParm" resultType="cargoMovementItem">
		 SELECT /*cargoMovement.selectInvLocList*/
			L.VSL_CALL_ID       		AS VSLCALLID,
		    L.CG_NO             		AS CGNO,
		    L.WH_TP_CD			 		AS WHTPCD,
		    L.WH_LOC_TP		 			AS WHLOCTP,
		    L.WH_LOC_ID         		AS WHID,
		    L.LOC_ID            		AS WHLOCIDS,
		    SUM (L.PKG_QTY) 			AS PKGQTY,
         	SUM (L.CG_WGT) 				AS WGT,
         	SUM (L.CG_VOL) 				AS MSRMT
			<if test="blNo != null and blNo != ''">
     			, L.CG_NO
			</if>
			<if test="shipgNoteNo != null and shipgNoteNo != ''">
     			, GR.SHIPG_NOTE_NO
			</if>
		FROM
			TMT_INV_LOC					L
			<if test="shipgNoteNo != null and shipgNoteNo != ''">
				INNER JOIN TMT_GR 		GR
					ON GR.VSL_CALL_ID 	= L.VSL_CALL_ID
					AND GR.GR_NO 		= L.CG_NO
			</if>
		WHERE
			L.VSL_CALL_ID 				= #{vslCallId}
			<if test="blNo != null and blNo != ''">
     			AND L.CG_NO 			= #{blNo}
			</if>
			<if test="shipgNoteNo != null and shipgNoteNo != ''">
     			AND GR.SHIPG_NOTE_NO 	= #{shipgNoteNo}
			</if>
		  	AND WH_TP_CD 				= 'G'
		  	AND L.LOC_ID LIKE (SELECT
								SUBSTRING(#{locId},
								1,
								CHARINDEX ('(', #{locId}) - 1)) + '%'
		  	AND L.CG_NO NOT LIKE 'RTS' + '%'
		GROUP BY
			L.VSL_CALL_ID,
			<if test="blNo != null and blNo != ''">
     			 	L.CG_NO, 
			</if>
			<if test="shipgNoteNo != null and shipgNoteNo != ''">
     				GR.SHIPG_NOTE_NO,
			</if>
		    L.CG_NO,
		    L.WH_TP_CD,
		    L.WH_LOC_TP,
		    L.WH_LOC_ID,
		    L.LOC_ID
	    HAVING
			SUM (L.CG_WGT) <![CDATA[ > ]]> 0
		ORDER BY
			L.VSL_CALL_ID,
			L.CG_NO,
			L.LOC_ID ASC
	</select>
	
	<insert id="insertCargoMovementJobItems"  parameterType="cargoMovementItem">
		INSERT INTO /*cargoMovement.insertCargoMovementJobItems*/
			TMT_JOB(
				CG_NO,
				VSL_CD,
				CALL_YEAR,
				CALL_SEQ,
				MF_DOC_ID,
				VSL_CALL_ID,
				JOB_NO,
				JOB_TP_CD,
				WORK_ST_DT,
				WORK_END_DT,
				SHFT_ID,
				SHFT_DT,
				PKG_QTY,
				CG_VOL,
				CG_WGT,
				CG_GROSS_WGT,
				CNTR_QTY,
				FM_LOC_ID,
				TO_LOC_ID,
				STAT_CD,
				ODR_NO,
				JOB_PURP_CD,
				DMG_YN,
				RHDL_MODE,
				SHU_YN,
				OPE_CLASS_CD,
				DELV_TP_CD,
				JOB_GROUP,
				UPDATE_TIME,
				STAFF_CD,
				VERSION,
				JOB_CO_CD,
				SP_CA_CO_CD,
				LORRY_NO,
				WB_TRANSACTION_NO,
				FORKLIFT_NO,
				PRIME_NO
		) VALUES (
				#{cgNo},
				(SELECT TOP(1)
				    VSL_CD 
				FROM 
				    TMT_CG_MST 
				WHERE 
				    CG_NO          	= #{cgNo}),
				(SELECT TOP(1)
				    CALL_YEAR 
				FROM 
				    TMT_CG_MST 
				WHERE 
				    CG_NO          	= #{cgNo}),
				(SELECT TOP(1)
				    CALL_SEQ 
				FROM 
				    TMT_CG_MST 
				WHERE 
				    CG_NO          	= #{cgNo}),
				(SELECT TOP(1)
				    MF_DOC_ID 
				FROM 
				    TMT_CG_MST 
				WHERE 
				    CG_NO         	= #{cgNo}),
				#{vslCallId},
				 (SELECT
					  'J'
						  +
					  FORMAT(GETDATE(), 'yyMMdd')
						  +
					  RIGHT('000000000' + ISNULL(CONCAT(MAX(CAST(RIGHT(JOB_NO, 9) AS INT)) + 1, ''), '000000000'), 9)
				  FROM TMT_JOB),
				#{jobTpCd},
				#{stDt},
				#{endDt},
 				DBO.F_GET_SHIFT_CD(#{endDt},''),
				DBO.F_GET_SHFT_DATE(#{endDt}),
				#{pkgQty},
				#{msrmt},
				#{wgt},
				#{wgt},
				#{cntrQty},
				#{fmLocId},
				#{toLocId},
				#{statCd},
				#{odrNo},
				#{jobPurpCd},
				(CASE
					WHEN (#{dmgYn} IS NULL OR #{dmgYn} = '') THEN 'N'
					WHEN #{dmgYn} = 'true' THEN 'Y'
					WHEN #{dmgYn} = 'false' THEN 'N'
					WHEN #{dmgYn} = 'Y' THEN 'Y'
					WHEN #{dmgYn} = 'N' THEN 'N'
				END),
				#{rhdlMode},
				(CASE
					WHEN (#{shuYn} IS NULL OR #{shuYn} = '') THEN 'N'
					WHEN #{shuYn} = 'true' THEN 'Y'
					WHEN #{shuYn} = 'false' THEN 'N'
					WHEN #{shuYn} = 'Y' THEN 'Y'
					WHEN #{shuYn} = 'N' THEN 'N'
				END),
				#{opeClassCd},
				#{delvTpCd},
				(SELECT
					 CONVERT(NVARCHAR, MAX(CAST(JOB_GROUP AS INT)) + 1)
				 FROM
					 TMT_JOB
				 WHERE
					 VSL_CALL_ID 					= #{vslCallId}
				   	AND CG_NO 						= #{cgNo}),
				SYSDATETIME(),
				#{userId},
				#{newVersion},
				#{jobCoCd},
				#{spCaCoCd},
				#{lorryNo},
				#{wbTransactionNo},
				#{forkliftNo},
				#{primeNo}
		)
	</insert>
	
	<insert id="insertMinusInvLocItems"  parameterType="cargoMovementItem">
	 	<selectKey order="BEFORE" resultType="String" keyProperty="jobNo" >
		   	SELECT TOP 1 /*cargoMovement.insertMinusInvLocItems*/
			   J.JOB_NO 							AS jobNo
		   	FROM
				TMT_JOB 							J
		   	WHERE
				J.VSL_CALL_ID 			 			= #{vslCallId}
				AND J.CG_NO 			 			= #{cgNo}
				AND J.WORK_ST_DT 		 			= #{stDt}
				AND J.JOB_CO_CD 					= #{jobCoCd}
				AND ISNULL(J.SP_CA_CO_CD, ' ') 		= ISNULL(CONVERT(NVARCHAR(1), #{spCaCoCd}), ' ')
				AND ISNULL(J.RHDL_MODE, ' ') 		= ISNULL(CONVERT(NVARCHAR(4), #{rhdlMode}), ' ')
				AND RTRIM(LTRIM(J.FM_LOC_ID))		= RTRIM(LTRIM(#{locArea}))
				AND J.JOB_TP_CD 		 			= 'MV'
				AND J.JOB_PURP_CD		 			= 'WW'
		 </selectKey>
		INSERT INTO /*cargoMovement.insertMinusInvLocItems*/
			TMT_INV_LOC(
				JOB_NO,
				CG_NO,
				LOC_ID,
				PKG_QTY,
				CG_VOL,
				CG_WGT,
				VSL_CALL_ID,
				VSL_CD,				
				CALL_YEAR,			
				CALL_SEQ,			
				MF_DOC_ID,			
				WH_TP_CD,
				UPDATE_TIME,
		    	STAFF_CD,
		    	VERSION,
		    	SEQ,
		    	WH_LOC_ID
		) VALUES (
			#{jobNo},
			#{cgNo}, 
			#{locId}, 
			CAST('-' + CAST(#{locQty} AS NVARCHAR) AS INT),
			CAST('-' + CAST(#{locMsrmt} AS NVARCHAR) AS FLOAT),
			CAST('-' + CAST(#{locWgt} AS NVARCHAR) AS FLOAT),
			#{vslCallId},
			(SELECT TOP(1)
				    VSL_CD 
				FROM 
				    TMT_CG_MST 
				WHERE 
				    CG_NO          	= #{cgNo}),
			(SELECT TOP(1)
			    CALL_YEAR 
			FROM 
			    TMT_CG_MST 
			WHERE 
			    CG_NO          		= #{cgNo}),
			(SELECT TOP(1)
			    CALL_SEQ 
			FROM 
			    TMT_CG_MST 
			WHERE 
			    CG_NO          		= #{cgNo}),
			(SELECT TOP(1)
			    MF_DOC_ID 
			FROM 
			    TMT_CG_MST 
			WHERE 
			    CG_NO         		= #{cgNo}),
			#{whTpCd},
			SYSDATETIME(),
			#{userId},
			#{newVersion},
			(SELECT
				ISNULL(MAX(SEQ), 0)+1
			 FROM
				TMT_INV_LOC
			 WHERE
				VSL_CALL_ID							= #{vslCallId}
			 	AND CG_NO							= #{cgNo}
			 	AND JOB_NO							= #{jobNo}
			 	<!-- 
			 	AND LOC_ID							= #{locId}
			 	 -->
			 	),
			 SUBSTRING(#{locId}, 1, CHARINDEX('-', #{locId}) -1)
		)
	</insert>
	
	<insert id="insertInvLocItems"  parameterType="cargoMovementItem">
		 <selectKey order="BEFORE" resultType="String" keyProperty="jobNo" >
		   	SELECT TOP 1 /*cargoMovement.insertInvLocItems*/
			   J.JOB_NO 							AS jobNo
		   	FROM
				TMT_JOB 							J
		   	WHERE
				J.VSL_CALL_ID		 				= #{vslCallId}
					AND J.CG_NO 		     		= #{cgNo}
					AND J.WORK_ST_DT 		 		= #{stDt}
					AND J.JOB_CO_CD 				= #{jobCoCd}
					AND ISNULL(J.SP_CA_CO_CD, ' ') 	= ISNULL(CONVERT(NVARCHAR(1), #{spCaCoCd}), ' ')
					AND ISNULL(J.RHDL_MODE, ' ') 	= ISNULL(CONVERT(NVARCHAR(4), #{rhdlMode}), ' ')
					AND J.TO_LOC_ID 		 		= #{locArea}
					AND J.JOB_TP_CD			 		= 'MV'
				    AND J.JOB_PURP_CD		 		= 'WW'
		 </selectKey>
		INSERT INTO /*cargoMovement.insertInvLocItems*/
			TMT_INV_LOC(
				JOB_NO,
				CG_NO,
				LOC_ID,
				PKG_QTY,
				CG_VOL,
				CG_WGT,
				VSL_CALL_ID,
				VSL_CD,					
				CALL_YEAR,				
				CALL_SEQ,				
				MF_DOC_ID,				
				WH_TP_CD,
				UPDATE_TIME,
				STAFF_CD,
				VERSION,
				SEQ,
				WH_LOC_ID,
				FM_LOC_ID,
				REF_NO
		) VALUES (
			#{jobNo},
			#{cgNo}, 
			#{locId}, 
			#{locQty}, 
			#{locMsrmt},
			#{locWgt}, 
			#{vslCallId},
			(SELECT TOP(1)
				    VSL_CD 
				FROM 
				    TMT_CG_MST 
				WHERE 
				    CG_NO          	= #{cgNo}),
			(SELECT TOP(1)
			    CALL_YEAR 
			FROM 
			    TMT_CG_MST 
			WHERE 
			    CG_NO          		= #{cgNo}),
			(SELECT TOP(1)
			    CALL_SEQ 
			FROM 
			    TMT_CG_MST 
			WHERE 
			    CG_NO          		= #{cgNo}),
			(SELECT TOP(1)
			    MF_DOC_ID 
			FROM 
			    TMT_CG_MST 
			WHERE 
			    CG_NO         		= #{cgNo}),
			#{whTpCd},
			SYSDATETIME(),
			#{userId},
			#{newVersion},
			(SELECT
				ISNULL(MAX(SEQ), 0) + 1
			 FROM
				TMT_INV_LOC
			 WHERE
				VSL_CALL_ID							= #{vslCallId}
			 	AND CG_NO							= #{cgNo}
			 	AND JOB_NO							= #{jobNo}
			 	<!-- 
			 	AND LOC_ID							= #{locId}
			 	 -->
			 ),
			 SUBSTRING(#{locId}, 1, CHARINDEX('-', #{locId}) - 1),
			 #{fmLocId},
			 #{shipgNoteNo}
		)
	</insert>
	
	<update id="updateWeightBridge"  parameterType="cargoMovementItem">
		UPDATE /*cargoMovement.updateWeightBridge*/
			TMT_WEIGHTBRIDGE
		SET
			SECOND_WGT 					= CAST(#{wgt} AS FLOAT) + CAST(#{firstWgt} AS FLOAT),
			SECOND_WGT_DT 				= SYSDATETIME(),
			PKG_QTY 					= #{pkgQty},
			UPDATE_TIME 				= SYSDATETIME(),
			STAFF_CD 					= #{userId}
		WHERE
			TRANSACTION_NO 				= #{wbTransactionNo}
	</update>
</mapper>
