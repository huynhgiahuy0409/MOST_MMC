Ext.define('MOST.model.operation.StevedoreTrimming', {
	extend : 'MOST.model.foundation.dataitem.DataItem',
	fields: [{
		name:'vslCallId',
		type:'string'
	},
	{
		name:'cgTpCd',
		type:'string'
	},
	{
		name:'workYmd',
		type:'string'
	},
	{
		name:'shftNm',
		type:'string'
	},
	{
		name:'shftId',
		type:'string'
	},
	{
		name:'searchType',
		type:'string'
	},
	{
		name:'insertType',
		type:'string'
	},
	{
		name:'userId',
		type:'string'
	},
	{
		name:'wharfMarkFrom',
		type:'int'
	},
	{
		name:'wharfMarkTo',
		type:'int'
	},
	{
		name:'atb',
		type:'string'
	},
	{
		name:'vslNm',
		type:'string'
	},
	{
		name:'vslTp',
		type:'string'
	},
	{
		name:'loa',
		type:'string'
	},
	{
		name:'etw',
		type:'string'
	},
	{
		name:'ata',
		type:'string'
	},
	{
		name:'atu',
		type:'string'
	},
	{
		name:'atd',
		type:'string'
	},
	{
		name:'loadCargoQty',
		type:'string'
	},
	{
		name:'dischCargoQty',
		type:'string'
	},
	{
		name:'vslCd',
		type:'string'
	},
	{
		name:'eta',
		type:'string'
	},
	{
		name:'sa',
		type:'string'
	},
	{
		name:'atw',
		type:'string'
	},
	{
		name:'atc',
		type:'string'
	},
	{
		name:'useYN',
		type:'string'
	},
	{
		name:'preAtu',
		type:'string'
	},
	{
		name:'hatchNo',
		type:'string'
	},
	{
		name:'shipgNoteNo',
		type:'string'
	},
	{
		name:'workStDt',
		type: 'date',
		convert:function(value){
			if (value) {
				if (Ext.isDate(value)) 
					return value;
				else
					return new Date(value);
			}else{
				return '';
			}
		}
	},
	{
		name:'workEndDt',
		type: 'date',
		convert:function(value){
			if (value) {
				if (Ext.isDate(value)) 
					return value;
				else
					return new Date(value);
			}else{
				return '';
			}
		}
	},
	{
		name:'cmdtCd',
		type:'string'
	},
	{
		name:'pkgQty',
		type:'int'
	},
	{
		name:'measurement',
		type:'float'
	},
	{
		name:'wgt',
		type:'float'
	},
	{
		name:'doNo',
		type:'string'
	},
	{
		name:'jobTpCd',
		type:'string'
	},
	{
		name:'ctt',
		type:'string'
	},
	{
		name:'cgRefNo',
		type:'string'
	},
	{
		name:'clnCd',
		type:'string'
	},
	{
		name:'topCgCd',
		type:'string'
	},
	{
		name:'gangNo',
		type:'string'
	},
	{
		name:'no',
		type:'int'
	},
	{
		name:'eqTpCd',
		type:'string'
	},
	{
		name:'workLoc',
		type:'string'
	},
	{
		name:'os',
		type:'string'
	},
	{
		name:'wh',
		type:'string'
	},
	{
		name:'gw',
		type:'string'
	},
	{
		name:'tw',
		type:'string'
	},
	{
		name:'fd',
		type:'string'
	},
	{
		name:'sm',
		type:'string'
	},
	{
		name:'dm',
		type:'string'
	},
	{
		name:'hm',
		type:'string'
	},
	{
		name:'nw',
		type:'string'
	},
	{
		name:'ew',
		type:'string'
	},
	{
		name:'sw',
		type:'string'
	},
	{
		name:'osChk',
		type:'string'
	},
	{
		name:'whChk',
		type:'string'
	},
	{
		name:'gwChk',
		type:'string'
	},
	{
		name:'twChk',
		type:'string'
	},
	{
		name:'fdChk',
		type:'string'
	},
	{
		name:'smChk',
		type:'string'
	},
	{
		name:'dmChk',
		type:'string'
	},
	{
		name:'hmChk',
		type:'string'
	},
	{
		name:'nwChk',
		type:'string'
	},
	{
		name:'ewChk',
		type:'string'
	},
	{
		name:'swChk',
		type:'string'
	},
	{
		name:'bg',
		type:'string'
	},
	{
		name:'ll',
		type:'string'
	},
	{
		name:'cu',
		type:'string'
	},
	{
		name:'wharf',
		type:'string'
	},
	{
		name:'hatch',
		type:'string'
	},
	{
		name:'yard',
		type:'string'
	},
	{
		name:'supervisor',
		type:'float'
	},
	{
		name:'conventional',
		type:'string'
	},
	{
		name:'rsDivCd',
		type:'string'
	},
	{
		name:'roleCd',
		type:'string'
	},
	{
		name:'empId',
		type:'string'
	},
	{
		name:'driverId',
		type:'string'
	},
	{
		name:'wkerQty',
		type:'string'
	},
	{
		name:'crudFlag',
		type:'string'
	},
	{
		name:'seq',
		type:'string'
	},
	{
		name:'hatchDrtCd',
		type:'string'
	},
	{
		name:'workComp',
		type:'string'
	},
	{
		name:'compTpCd',
		type:'string'
	},
	{
		name:'mbsCd',
		type:'string'
	},
	{
		name:'roleCdNm',
		type:'string'
	},
	{
		name:'purpCd',
		type:'string'
	},
	{
		name:'eqFacNo',
		type:'string'
	},
	{
		name:'eqFacNm',
		type:'string'
	},
	{
		name:'eqName',
		type:'string'
	},
	{
		name:'facility',
		type:'string'
	},
	{
		name:'facilityName',
		type:'string'
	},
	{
		name:'roleName',
		type:'string'
	},
	{
		name:'remark',
		type:'string'
	},
	{
		name:'winch',
		type:'float'
	},
	{
		name:'general',
		type:'float'
	},
	{
		name:'hoper',
		type:'float'
	},
	{
		name:'deck',
		type:'float'
	},
	{
		name:'signal',
		type:'float'
	},
	{
		name:'nonworker',
		type:'float'
	},
	{
		name:'spr',
		type:'float'
	},
	{
		name:'topClean',
		type:'string'
	},
	{
		name:'crud',
		type:'string'
	},
	{
		name:'fmHhMm',
		type:'string'
	},
	{
		name:'toHhMm',
		type:'string'
	},
	{
		name:'cwDiv',
		type:'string'
	},
	{
		name:'withGears',
		type:'string'
	},
	{
		name:'dptAgent',
		type:'string'
	},
	{
		name:'chkAgent',
		type:'string'
	},
	{
		name:'vslShiftingSeq',
		type:'string'
	},
	{
		name:'vslShiftingYN',
		type:'string'
	},
	{
		name:'wgtBbkDbk',
		type:'string'
	},
	{
		name:'wgtLq',
		type:'string'
	},
	{
		name:'lashingCompCd',
		type:'string'
	},
	{
		name:'lashingGangNos',
		type:'float'
	},
	{
		name:'shipsCrewYn',
		type:'string'
	},
	{
		name:'bbkShipsCrewYn',
		type:'string',
		calculate: function (data) {
			return data.cgTpCd === 'BBK' ? data.shipsCrewYn : data.shipsCrewYn;
		}
	},
	{
		name:'dbkShipsCrewYn',
		type:'string',
		calculate: function (data) {
			return data.cgTpCd === 'DBK' ? data.shipsCrewYn : data.shipsCrewYn;
		}
	}
	
	]
});