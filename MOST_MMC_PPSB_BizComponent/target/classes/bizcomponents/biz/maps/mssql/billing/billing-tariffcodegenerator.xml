<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tariffCodeGenerator">
	<resultMap id="tariffcodeTypeMap" 							type="tariffCodeGatheredItem">
		<result property="trfTpCd"        						column="TRF_TP_CD"/> 
	</resultMap>
	
	 <resultMap id="tariffCodeVesselGeneratorItemMap" 			type="tariffCodeGeneratorItem">
	 	<result property="vslCallId"							column="VSL_CALL_ID"/>	
		<result property="loa"									column="LOA"/>	
		<result property="nrt"									column="NRT"/>  
		<result property="grt"									column="GRT"/>  
		<result property="dwt"									column="DWT"/>          
		<result property="purpCallCd"							column="PURP_CALL"/>    
		<result property="vslCd"								column="VSL_CD"/>  
		<result property="callYear"								column="CALL_YEAR"/>  
		<result property="vslTp"								column="CARGO_TP_MPTS"/>
		<result property="tradeTp"								column="VSL_TP3_TRADE"/>        
		<result property="arrivalTime"							column="ARRIVAL_TIME"/>		        
		<result property="berthLoc"								column="BERTH_LOC"/>        
		<result property="atu"									column="ATU"/>
		<result property="atb"									column="ATB"/>
		<result property="atw"									column="ATW"/>
		<result property="atc"									column="ATC"/>
		<result property="dlyStDt"								column="DLY_ST_DT"/>
		<result property="dlyEndDt"								column="DLY_END_DT"/>
		<result property="bnkAtb"								column="BNK_ATB"/>
		<result property="bnkStDt"								column="BNK_ST_DT"/>
		<result property="bnkEndDt"								column="BNK_END_DT"/>   
		<result property="sacorpId"								column="SA_ID"/>
		<result property="privateBerth"							column="PRIVATE_BERTH"/>  
		<result property="shift"								column="SHIFT"/>
		<result property="handledQty"							column="HANDLED_QTY"/>
		<result property="cargoTypeCnt"							column="CARGO_TYPE_CNT"/>
		<result property="cargoTpMpts"							column="CARGO_TP_MPTS"/>  
		<result property="shipgAgnt"     						column="SHIPG_AGNT"/>
		<result property="shipgAgntPayTpCd" 					column="SHIPG_AGENT_PAY_TP"/> 
		<result property="userId"  								column="USER_ID"/>
		<result property="ivPrfx"  								column="IV_PRFX"/>
		<result property="scn"  								column="SHIP_CALL_NO"/>
	</resultMap> 
	
	<resultMap id="tariffCodeDockageGeneratorItemMap" 			type="tariffCodeGeneratorItem">
		<result property="vslCallId"							column="VSL_CALL_ID"/>	
		<result property="searchType"							column="SEARCH_TYPE"/>  
		<result property="vslTp"								column="CARGO_TP_MPTS"/>  
		<result property="tradeTp"								column="VSL_TRADE_TYPE"/>          
		<result property="purpCallCd"							column="PURP_CALL"/>    
		<result property="atb"									column="ATB"/>  
		<result property="atw"									column="ATW"/>  
		<result property="atc"									column="ATC"/>
		<result property="atu"									column="ATU"/>        
		<result property="loa"									column="LOA"/>		        
		<result property="normalDockageHrs"						column="DC_HRS"/>        
		<result property="firstDockageHrs"						column="FIRST_DC_HRS"/>
		<result property="secondDockageHrs"						column="SECOND_DC_HRS"/>
		<result property="thirdDockageHrs"						column="THIRD_DC_HRS"/>
		<result property="refNo4"								column="SHIFTING_SEQ"/>
		<result property="dblBnkDivCd"							column="DBL_BNK_DIV_CD"/>
		<result property="shipgAgnt"     						column="SHIPG_AGNT"/>
		<result property="shipgAgntPayTpCd" 					column="SHIPG_AGENT_PAY_TP"/> 
		<result property="scrId"  								column="SCR_ID"/>
		<result property="userId"  								column="USER_ID"/>
		<result property="ivPrfx"  								column="IV_PRFX"/>
		<result property="scn"  								column="SHIP_CALL_NO"/>
	</resultMap> 
	
	<resultMap id="delayHrsForDockageItemMap" 					type="tariffCodeGeneratorItem">
		<result property="vslCallId"     						column="VSL_CALL_ID"/>
		<result property="delayHrs"     						column="DELAY_HRS"/>
	</resultMap>
	
	<resultMap id="tariffCodeGeneratorMap" 						type="tariffCodeGatheredItem">
		<result property="trfCd"								column="TRF_CD"/>
		<result property="trfTpCd"								column="TRF_TP_CD"/>
		<result property="subTrfCd"								column="SUB_TRF_CD"/>
		<result property="SUBSTRINGfCd"							column="SUBS_TRF_CD"/>
		<result property="descr"								column="DESCR"/>
		<result property="unitPrc"								column="UNIT_PRC"/>
		<result property="trfRegNo"								column="TRF_REG_NO"/>
		<result property="aplyYmd"								column="APLY_YMD"/>
		<result property="exprYmd"								column="EXPR_YMD"/>
		<result property="minVal1"								column="MIN_VAL1"/>
		<result property="minVal2"								column="MIN_VAL2"/>
		<result property="minVal3"								column="MIN_VAL3"/>
		<result property="maxAmt"								column="MAX_AMT"/>
		<result property="pkgNm"								column="PKG_NM"/>
		<result property="pkgTrfNo"								column="PKG_TRF_NO"/>
		<result property="prcTpCd"								column="PRC_TP_CD"/>
		<result property="billTpCd"								column="BILL_TP_CD"/>
		<result property="ssrTpCd"								column="SSR_TP_CD"/>     
		<result property="costCentCd"							column="COST_CENT_CD"/>
		<result property="erpCostCent"							column="ERP_COST_CENT"/>
		<result property="payer"								column="PAYER"/>
		<result property="ivUnit1"								column="IV_UNIT1"/>
		<result property="ivUnit2"								column="IV_UNIT2"/>
		<result property="ivUnit3"								column="IV_UNIT3"/>
		<result property="vldYn"								column="VLD_YN"/>
		<result property="aplyRuleCd"							column="APLY_RULE_CD"/>
		<result property="subsUnitVal"							column="SUBS_UNIT_VAL"/>
		<result property="subsRate"								column="SUBS_RATE"/>
		<result property="prptCd"								column="PRPT_CD"/>
		<result property="oprIdtCd"								column="OPR_IDT_CD"/>
		<result property="chrVal"								column="CHR_VAL"/>
		<result property="noVal"								column="NO_VAL"/>
		<result property="dtVal"								column="DT_VAL"/>
		<result property="tierVal1"								column="TIER_VAL1"/>
		<result property="tierVal2"								column="TIER_VAL2"/>
		<result property="bndVal1"								column="BND_VAL1"/>
		<result property="bndVal2"								column="BND_VAL2"/>
		<result property="tarSeq"								column="SEQ"/>
		<result property="gstTpCd"								column="TAX_TYPE"/>
		<result property="gstRate"								column="TAX_VALUE"/>
	</resultMap> 
	
	<resultMap id="condPrpt" 									type="tariffCodeConditionItem">
		<result property="trfCd"        						column="TRF_CD"/> 
		<result property="subTrfCd"     						column="SUB_TRF_CD"/> 
		<result property="prcTpCd"      						column="PRC_TP_CD"/> 
		<result property="prptCd"       						column="PRPT_CD"/> 
		<result property="prptNm"       						column="PRPT_NM"/> 
		<result property="dataTpCd"     						column="DATA_TP_CD"/> 
		<result property="opeMode"      						column="OPE_MODE"/>
	</resultMap>
	
	<resultMap id="payerMap" 									type="tariffCodePayerItem">
		<result property="advNo"        						column="ADV_NO"/> 
		<result property="advSeq"     							column="ADV_SEQ"/> 
		<result property="vslCallId"    						column="VSL_CALL_ID"/> 
		<result property="ptnrTpCd"     						column="PTNR_TP_CD"/> 
		<result property="ptnrCd"       						column="PTNR_CD"/> 
		<result property="trfTpCd"      						column="TRF_TP_CD"/> 
		<result property="opeTpCd"      						column="OPE_TP_CD"/> 
		<result property="cmdtCd"       						column="CMDT_CD"/> 
		<result property="blNp"      							column="BL_NO"/> 
		<result property="shipgNoteNo"  						column="SHIPG_NOTE_NO"/> 
		<result property="wgt"       							column="WGT"/> 
		<result property="msRmt"     							column="MSRMT"/> 
		<result property="qty"        							column="QTY"/> 
		<result property="subTrfTpCd"   						column="SUB_TRF_TP_CD"/> 
	</resultMap>

	<resultMap id="tariffCodeServiceOrderGeneratorItemMap" 		type="tariffServiceOrderGatheredItem">
		<result property="vslCallId"							column="VSL_CALL_ID"	/>
		<result property="odrNo"								column="ODR_NO"			/>
		<result property="statCd"								column="STAT_CD" 		/>
		<result property="sumitBy"								column="SUMIT_BY" 		/>
		<result property="sumitDt"								column="SUMIT_DT" 		/>
		<result property="apprvBy"								column="APPRV_BY" 		/>
		<result property="apprvDt"								column="APPRV_DT" 		/>
		<result property="rejBy"								column="REJ_BY"		 	/>
		<result property="rejDt"								column="REJ_DT" 		/>
		<result property="cnclBy"								column="CNCL_BY" 		/>
		<result property="cnclDt"								column="CNCL_DT" 		/>
		<result property="comBy"								column="COM_BY" 		/>
		<result property="comDt"								column="COM_DT" 		/>
		<result property="payer"								column="PAYER" 			/>
		<result property="category1"							column="CATEGORY1" 		/>
		<result property="category2"							column="CATEGORY2" 		/>
		<result property="category3"							column="CATEGORY3" 		/>
		<result property="svcDtFmt"								column="SVC_DT_FMT" 	/>
		<result property="svcDtTp"								column="SVC_DT_TP" 		/>
		<result property="dt1Chk"								column="DT1_CHK" 		/>
		<result property="dt1Tit"								column="DT1_TIT" 		/>
		<result property="dt1Fmt"								column="DT1_FMT" 		/>
		<result property="dt1Tp"								column="DT1_TP" 		/>
		<result property="dt2Chk"								column="DT2_CHK" 		/>
		<result property="dt2Tit"								column="DT2_TIT" 		/>
		<result property="dt2Fmt"								column="DT2_FMT" 		/>
		<result property="dt2Tp"								column="DT2_TP" 		/>
		<result property="shftChk"								column="SHFT_CHK" 		/>
		<result property="unitTit"								column="UNIT_TIT" 		/>
		<result property="unitUom"								column="UNIT_UOM" 		/>
		<result property="unitDec"								column="UNIT_DEC" 		/>
		<result property="unit1Chk"								column="UNIT1_CHK" 		/>
		<result property="unit1Tit"								column="UNIT1_TIT" 		/>
		<result property="unit1Uom"								column="UNIT1_UOM" 		/>
		<result property="unit1Dec"								column="UNIT1_DEC" 		/>
		<result property="unit2Chk"								column="UNIT2_CHK" 		/>
		<result property="unit2Tit"								column="UNIT2_TIT" 		/>
		<result property="unit2Uom"								column="UNIT2_UOM" 		/>
		<result property="unit2Dec"								column="UNIT2_DEC" 		/>
		<result property="eqDivCd"								column="EQ_DIV_CD" 		/>
		<result property="capaCd"								column="CAPA_CD" 		/>
		<result property="payTpCd"								column="PAY_TP_CD" 		/>
		<result property="prcTpCd"								column="PRC_TP_CD" 		/>
		<result property="prcTpDesc"							column="PRC_TP_DESC" 	/>
		<result property="locChk"								column="LOC_CHK" 		/>
		<result property="rmkChk"								column="RMK_CHK" 		/>
		<result property="cmdtyChk"								column="CMDTY_CHK" 		/>
		<result property="svcDtFm"								column="SVC_DT_FM" 		/>
		<result property="svcDtTo"								column="SVC_DT_TO" 		/>
		<result property="dt1Fm"								column="DT1_FM" 		/>
		<result property="dt1To"								column="DT1_TO" 		/>
		<result property="dt2Fm"								column="DT2_FM" 		/>
		<result property="dt2To"								column="DT2_TO" 		/>
		<result property="shftId"								column="SHFT_ID" 		/>
		<result property="unit"									column="UNIT" 			/>
		<result property="unit1"								column="UNIT1" 			/>
		<result property="unit2"								column="UNIT2" 			/>
		<result property="locId"								column="LOC_ID" 		/>
		<result property="reqRmk"								column="REQ_RMK" 		/>
		<result property="comChk"								column="COM_CHK" 		/>
		<result property="cmdtyCd"								column="CMDTY_CD" 		/>			
		<result property="capaDescr"							column="CAPA_DESCR" 	/>
		<result property="loc"									column="LOC" 			/>
		<result property="comSvcDtFm"							column="COM_SVC_DT_FM" 	/>
		<result property="comSvcDtTo"							column="COM_SVC_DT_TO" 	/>
		<result property="comDt1Fm"								column="COM_DT1_FM" 	/>
		<result property="comDt1To"								column="COM_DT1_TO" 	/>
		<result property="comDt2Fm"								column="COM_DT2_FM" 	/>
		<result property="comDt2To"								column="COM_DT2_TO" 	/>
		<result property="comShftId"							column="COM_SHFT_ID" 	/>	
		<result property="comUnit"								column="COM_UNIT" 		/>
		<result property="comUnit1"								column="COM_UNIT1" 		/>
		<result property="comUnit2"								column="COM_UNIT2" 		/>
		<result property="comCapaCd"							column="COM_CAPA_CD" 	/>
		<result property="comLocId"								column="COM_LOC_ID" 	/>
		<result property="comRmk"								column="COM_RMK" 		/>
		<result property="rmk"									column="RMK" 			/>
		<result property="reqDocNo"								column="REQ_DOC_NO" 	/>
		<result property="comDocNo"								column="COM_DOC_NO" 	/>
		<result property="reqUnitNo"							column="REQ_UNIT_NO" 	/>
		<result property="comUnitNo"							column="COM_UNIT_NO" 	/>
		<result property="comUnitNo"							column="COM_UNIT_NO" 	/>
		<result property="payerType"							column="PAYER_TYPE" 	/>
		<result property="ivPrfx"  								column="IV_PRFX"		/>
	</resultMap>
	
	<!-- MMC - Settlement Start -->
	<resultMap id="tariffCodeOverStorageItemMap" 				type="tariffCodeGeneratorItem">
		<result property="vslCallId"  							column="VSL_CALL_ID"/>
		<result property="opeClass"     						column="OPE_CLASS"/>
		<result property="catgCd"     							column="CATG_CD"/>
		<result property="rhdlMode"    	 						column="RHDL_MODE"/>
		<result property="deliveryType"     					column="DELIVERY_TYPE"/>
		<result property="pol"     								column="POL"/>
		<result property="pod"     								column="POD"/>
		<result property="tradeType"     						column="TRADE_TYPE"/>
		<result property="cargoType"     						column="CARGO_TYPE"/>
		<result property="commodityGroup"   					column="COMMODITY_GROUP"/>
		<result property="commodity"     						column="COMMODITY"/>
		<result property="modeofOpr"     						column="MODE_OF_OPR"/>
		<result property="packageType"     						column="PACKAGE_TYPE"/>
		<result property="cargoId"     							column="CARGO_NO"/>
		<result property="fwrAgent"     						column="FWR_AGNT"/>
		<result property="jobPurpCd"     						column="JOB_PURP_CD"/>
		<result property="cgWgt"     							column="CG_WGT"/>
		<result property="cgMsrmt"     							column="CG_MSRMT"/>
		<result property="pkgQty"     							column="PKG_QTY"/>
		<result property="docWgt"     							column="DOC_WGT"/>
		<result property="docMsrmt"     						column="DOC_MSRMT"/>
		<result property="docPkgQty"     						column="DOC_PKG_QTY"/>
		<result property="loadStDt"     						column="LOAD_ST_DT"/>
		<result property="loadEndDt"     						column="LOAD_END_DT"/>
		<result property="disStDt"     							column="DIS_ST_DT"/>
		<result property="disEndDt"     						column="DIS_END_DT"/>
		<result property="workStDt"     						column="WORK_ST_DT"/>
		<result property="workEndDt"     						column="WORK_END_DT"/>
		<result property="ata"     								column="ATA"/>
		<result property="atd"     								column="ATD"/>
		<result property="cargoImSt"     						column="CARGO_IM_ST"/>
		<result property="cargoImEnd"     						column="CARGO_IM_END"/>
		<result property="cargoExSt"     						column="CARGO_EX_ST"/>
		<result property="cargoExEnd"     						column="CARGO_EX_END"/>
		<result property="cargoBothSt"     						column="CARGO_BOTH_ST"/>
		<result property="cargoBothEnd"     					column="CARGO_BOTH_END"/>
		<result property="whLocTp"     							column="WH_TP_CD"/>
		<result property="damaged"     							column="DAMAGED"/>
		<result property="toLocId"     							column="TO_LOC_ID"/>
		<result property="blNo"     							column="BL_NO"/>
		<result property="shipgNoteNo"     						column="SHIPG_NOTE_NO"/>
		<result property="shipgAgnt"     						column="SHIPG_AGNT"/>
		<result property="shpr"     							column="SHPR"/>
		<result property="cnsne"     							column="CNSNE"/>
		<result property="shipgAgntPayTpCd" 					column="SHIPG_AGENT_PAY_TP"/>
		<result property="fwrAgentPayTpCd"  					column="FWD_PAY_TP"/>
		<result property="shprPayTpCd"     						column="SHPR_PAY_TP"/>
		<result property="cnsnePayTpCd"     					column="CNS_PAY_TP"/>
		<result property="shipftDt"     						column="SHFT_DT"/>
		<result property="shipftNm"     						column="SHFT_NM"/>
		<result property="pkgTpCd"     							column="PKG_TP_CD"/>
		<result property="handleType"  							column="HANDLING_TYPE"/>
		<result property="rcCoCd"     							column="RC_CO_CD"/>
		<result property="rhdlNo"     							column="RHDL_NO"/>
		<result property="shuYn"     							column="SHU_YN"/>
		<result property="jobGroup"     						column="JOB_GROUP"/>
		<result property="specCargoCond" 						column="SP_CA_CO_CD"/>
		<result property="expectedDeliveryDay" 					column="EXPECTED_DELV_DT"/>
		<result property="applyFreeDays" 						column="FREE_DAYS"/>
		<result property="scrId"  								column="SCR_ID"/>
		<result property="refNo"  								column="REF_NO"/>
		<result property="refNo2"  								column="REF_NO2"/>
		<result property="refNo4"  								column="REF_NO4"/>
		<result property="ivPrfx"  								column="IV_PRFX"/>
		<result property="cgNo"  								column="CG_NO"/>
		<result property="jobNo"  								column="JOB_NO"/>
		<result property="strgSeq"  							column="STRG_SEQ"/>
		<result property="currency"								column="CRCY_CD"/>
	</resultMap> 
	
	<resultMap id="tariffCodeGeneratorItemMap" 					type="tariffCodeGeneratorItem">
		<result property="opeClass"     						column="OPE_CLASS"/>
		<result property="catgCd"     							column="CATG_CD"/>
		<result property="rhdlMode"    	 						column="RHDL_MODE"/>
		<result property="deliveryType"     					column="DELIVERY_TYPE"/>
		<result property="pol"     								column="POL"/>
		<result property="pod"     								column="POD"/>
		<result property="tradeType"     						column="TRADE_TYPE"/>
		<result property="cargoType"     						column="CARGO_TYPE"/>
		<result property="commodityGroup"   					column="COMMODITY_GROUP"/>
		<result property="commodity"     						column="COMMODITY"/>
		<result property="packageType"     						column="PACKAGE_TYPE"/>
		<result property="dgClass"     							column="DG_CLASS"/>
		<result property="modeofOpr"     						column="MODE_OF_OPR"/>
		<result property="modeofOprLr"     						column="MODE_OF_OPR_LR"/>
		<result property="modeofOprSe"     						column="MODE_OF_OPR_SE"/>
		<result property="cgWgtLr"     							column="CG_WGT_LR"/>
		<result property="cgMsrmtLr"     						column="CG_MSRMT_LR"/>
		<result property="pkgQtyLr"     						column="PKG_QTY_LR"/>
		<result property="cgWgtSe"     							column="CG_WGT_SE"/>
		<result property="cgMsrmtSe"     						column="CG_MSRMT_SE"/>
		<result property="pkgQtySe"     						column="PKG_QTY_SE"/>
		<result property="operatorType"     					column="OPR_TP_CD"/>
		<result property="damaged"     							column="DAMAGED"/>
		<result property="jobPurpCd"     						column="JOB_PURP_CD"/>
		<result property="cargoImSt"     						column="CARGO_IM_ST"/>
		<result property="cargoImEnd"     						column="CARGO_IM_END"/>
		<result property="cargoExSt"     						column="CARGO_EX_ST"/>
		<result property="cargoExEnd"     						column="CARGO_EX_END"/>
		<result property="cargoBothSt"     						column="CARGO_BOTH_ST"/>
		<result property="cargoBothEnd"     					column="CARGO_BOTH_END"/>
		<result property="cargoId"     							column="CARGO_NO"/>
		<result property="cgWgt"     							column="CG_WGT"/>
		<result property="cgMsrmt"     							column="CG_MSRMT"/>
		<result property="pkgQty"     							column="PKG_QTY"/>
		<result property="docWgt"     							column="DOC_WGT"/>
		<result property="docMsrmt"     						column="DOC_MSRMT"/>
		<result property="docPkgQty"     						column="DOC_PKG_QTY"/>
		<result property="hdlInTime"     						column="HDL_IN_TIME"/>
		<result property="hdlOutTime"     						column="HDL_OUT_TIME"/>
		<result property="lastBillingDate"  					column="LAST_BILLING_DATE"/>
		<result property="freeStrgDD"     						column="FREE_STRG_DD"/>
		<result property="blNo"     							column="BL_NO"/>
		<result property="shipgNoteNo"     						column="SHIPG_NOTE_NO"/>
		<result property="shipgAgnt"     						column="SHIPG_AGNT"/>
		<result property="fwrAgent"     						column="FWR_AGNT"/>
		<result property="shpr"     							column="SHPR"/>
		<result property="cnsne"     							column="CNSNE"/>
		<result property="shipgAgntPayTpCd" 					column="SHIPG_AGENT_PAY_TP"/>
		<result property="fwrAgentPayTpCd"  					column="FWD_PAY_TP"/>
		<result property="shprPayTpCd"     						column="SHPR_PAY_TP"/>
		<result property="cnsnePayTpCd"     					column="CNS_PAY_TP"/>
		<result property="currLocId"     						column="CURR_LOC_ID"/>
		<result property="billPkgQty"     						column="BILL_PKG_QTY"/>
		<result property="billWgt"     							column="BILL_WGT"/>
		<result property="billMsrmt"     						column="BILL_MSRMT"/>
		<result property="callYear"     						column="CALL_YEAR"/>
		<result property="billwgtd"     						column="BILL_WGT_D"/>
		<result property="billMsgmtd"     						column="BILL_MSRMT_D"/>
		<result property="billPkgQtyd"     						column="BILL_PKG_QTY_D"/>
		<result property="descr"     							column="DESCR"/>
		<result property="repkgTpCd"     						column="REPKG_TP_CD"/>
		<result property="vslCallId"  							column="VSL_CALL_ID"/>
		<result property="scrId"  								column="SCR_ID"/>
		<result property="adhocYn"  							column="ADHOC_YN"/>
		<result property="refNo"  								column="REF_NO"/>
		<result property="refNo2"  								column="REF_NO2"/>
		<result property="ivPrfx"  								column="IV_PRFX"/>
		<result property="cgNo"  								column="CG_NO"/>
		<result property="applyFreeDays" 						column="FREE_DAYS"/>
		<result property="whLocTp"     							column="WH_TP_CD"/>
		<result property="cargoShiftTpCd"   					column="SFT_TP"/>
		<result property="shipToShipYn"     					column="STS_YN"/>
		<result property="vslTpCd"     							column="VSL_TP"/>
        <result property="vslPurpCall"     						column="VSL_PURP_CALL"/>
        <result property="psnSvcTpCd"     						column="PSN_SVC_TP_CD"/>
        <result property="psnEmbark"     						column="EMBARK"/>
        <result property="psnDisEmbark"     					column="DISEMBARK"/>
        <result property="psnTransit"     						column="TRANSIT"/>
        <result property="currency"								column="CRCY_CD"/>
        <result property="userId"  								column="USER_ID"/>
        <result property="scn"  								column="SHIP_CALL_NO"/>
	</resultMap>
	
	<resultMap id="freeStorageDays" 							type="tariffCodeStroageItem">
		<result property="freeDays"        						column="FREEDAYS"/> 
		<result property="weekend1Yn"     						column="WEEKEND1_YN"/> 
		<result property="weekend2Yn"      						column="WEEKEND2_YN"/> 
		<result property="holidaysYn"      					 	column="HOLIDAY_YN"/> 
		<result property="holidays"       						column="HOLIDAYS"/> 
	</resultMap>
	
	<resultMap id="storageDays" 								type="tariffCodeStroageItem">
		<result property="daydiff"        						column="DAY_DIFF"/> 
	</resultMap>
	<!-- MMC - Settlement End -->
		
	<!--/////////////////////////////////////////////////////////////////////////////////////////////-->
	<select id="selectTariffCodeType" parameterType="tariffCodeGeneratorParm"	resultMap="tariffcodeTypeMap">
		SELECT /* tariffCodeGenerator.selectTariffCodeType */
			S_CD 												AS TRF_TP_CD
	 	FROM 
	 		TMT_CD_MSTD 
 		WHERE 
 			M_CD 												= 'TRFTP' 
			<if test="whereSQL != null and whereSQL != ''">
				${whereSQL}
			</if>	
	</select>

	<select id="selectParnerTariffRate" parameterType="tariffCodeGatheredItem"	resultType="java.lang.String">
		SELECT /* tariffCodeGenerator.selectParnerTariffRate */
			UNIT_PRC
		FROM 
			TMT_B_TRF TRF
		WHERE  
			1 = 1
			AND TRF_CD 											= #{trfCd} 
			AND SUB_TRF_CD 										= #{subTrfCd}    		 
			AND 
				CASE 
					WHEN PKG_TRF_NO <![CDATA[<>]]> '*' THEN 'a' 
						ELSE PKG_TRF_NO
				END 
				=
				CASE 
					WHEN PKG_TRF_NO <![CDATA[<>]]> '*' THEN 'a' 
						ELSE #{pkgTrfNo}
				END
			AND PRC_TP_CD 										= 'P' 
			AND PTNR_CD 										= #{ptnrCd} 
			AND 
				(SELECT TOP 1 
					FORMAT (B.ETA, 'yyyyMMdd')
				FROM 
				TMT_BERTH_LOC 		A, 
				TMT_VSL_SCH 		B
				WHERE 
				A.BERTH_CD 			= B.BERTH_LOC 
				AND B.VSL_CALL_ID 	= #{vslCallId} 
				)  BETWEEN TRF.APLY_YMD AND TRF.EXPR_YMD
		ORDER BY 
			TRF.EXPR_YMD DESC
	</select>
	
	<select id="selectStandardTariffRate" parameterType="tariffCodeGatheredItem"	resultType="java.lang.String">
		SELECT TOP 1 /* tariffCodeGenerator.selectStandardTariffRate */
			UNIT_PRC
		FROM 
			TMT_B_TRF 											TRF
		WHERE  
			1 = 1
			AND TRF_CD 											= #{trfCd} 
			AND SUB_TRF_CD 										= #{subTrfCd}
			AND PRC_TP_CD 										= 'S' 
			AND PTNR_CD 										= '*' 
			AND 
				(SELECT 
					FORMAT (B.ETA, 'yyyyMMdd')
					FROM 
					TMT_BERTH_LOC 		A, 
					TMT_VSL_SCH 		B
					WHERE 
					A.BERTH_CD 			= B.BERTH_LOC 
					AND B.VSL_CALL_ID 	= #{vslCallId} 
				)  BETWEEN TRF.APLY_YMD  AND TRF.EXPR_YMD
		ORDER BY 
			EXPR_YMD DESC
	</select>
	
	<select id="selectTariffCodelist" parameterType="tariffCodeGeneratorParm"	resultMap="tariffCodeGeneratorMap">
		SELECT  /* tariffCodeGenerator.selectTariffCodelist */
			DISTINCT(TRF.TRF_CD) 								AS TRF_CD,
	       	TRF.SUB_TRF_CD,
	       	TCD.DESCR,
			ISNULL(
				(SELECT  
					UNIT_PRC 
				FROM 
					(SELECT TOP 1
						UNIT_PRC 				AS UNIT_PRC
					FROM 
						TMT_B_TRF 
					WHERE 
						TRF_CD 					= TCD.TRF_CD 
						AND SUB_TRF_CD 			= TCD.SUB_TRF_CD 
						<if test="ptnrCd != null and ptnrCd != ''">
							AND PTNR_CD 		= #{ptnrCd}
						</if>
					ORDER BY 
						EXPR_YMD DESC
					) A
				),
				(SELECT 
					UNIT_PRC 
				FROM 
					(SELECT TOP 1 
						UNIT_PRC AS UNIT_PRC
					FROM 
						TMT_B_TRF 
					WHERE 
						TRF_CD = TCD.TRF_CD 
						AND SUB_TRF_CD = TCD.SUB_TRF_CD 
						AND PTNR_CD = '*'
					ORDER BY 
					EXPR_YMD DESC
					) A
				)
			) 													AS UNIT_PRC,
			TRF.TRF_REG_NO,
			TRF.APLY_YMD,
			TRF.EXPR_YMD,
			TRF.MIN_VAL1,
			TRF.MIN_VAL2,
			TRF.MIN_VAL3,
			TRF.MAX_AMT,
			TRF.PKG_NM,
			TRF.PKG_TRF_NO,
			TRF.PRC_TP_CD,
			TCD.BILL_TP_CD,
			TCD.SSR_TP_CD,
			TCD.COST_CENT_CD,
			(CASE 
				WHEN TCD.PAYER IS NULL 
					THEN 'SHA'
				ELSE
					TCD.PAYER
			END ) 												AS PAYER,
			TCD.IV_UNIT1,
			TCD.IV_UNIT2,
			TCD.IV_UNIT3,
			TCD.VLD_YN,
			TCD.SUB_TRF_CD,
			TCD.TRF_TP_CD,
			TCD.TAX_TYPE,
			TCD.TAX_VALUE,
			TCODE.PRPT_CD,
			ISNULL(TCODE.OPR_IDT_CD,'EQ') 						AS OPR_IDT_CD,
			TRIM(TCODE.CHR_VAL) 								AS CHR_VAL,
			TCODE.NO_VAL,
			TCODE.DT_VAL,
			TCODE.TIER_VAL1,
			TCODE.TIER_VAL2,
			TCODE.BND_VAL1,
			TCODE.BND_VAL2,
			TCODE.SEQ
        FROM    
			TMT_B_TRF_CD 										TCD
		INNER JOIN 
			TMT_B_TRF 											TRF 
				ON TCD.TRF_CD 									= TRF.TRF_CD 
				AND TRF.SUB_TRF_CD 								= TCD.SUB_TRF_CD
		INNER JOIN
			(SELECT   
				ISNULL(TCD.TRF_CD, NULL)       					AS TRF_CD,
				ISNULL(TCD.SUB_TRF_CD, NULL)   					AS SUB_TRF_CD,
				CND.PRPT_CD 									AS PRPT_CD,
				CND.OPR_IDT_CD              					AS OPR_IDT_CD,
				CND.CHR_VAL                 					AS CHR_VAL,
				CND.NO_VAL                  					AS NO_VAL,
				CND.DT_VAL                  					AS DT_VAL,
				CND.TIER_VAL1               					AS TIER_VAL1,
				CND.TIER_VAL2               					AS TIER_VAL2,
				CND.BND_VAL1                					AS BND_VAL1,
				CND.BND_VAL2                					AS BND_VAL2,
				CND.SEQ                     					AS SEQ
            FROM 
				TMT_B_TRF_CD 									TCD
			INNER JOIN 
				TMT_B_TRF 										TRF 
					ON TCD.TRF_CD 								= TRF.TRF_CD 
					AND TCD.SUB_TRF_CD 							= TRF.SUB_TRF_CD
			INNER JOIN 
				TMT_B_TRF_COND 									CND 
					ON TRF.TRF_CD 								= CND.TRF_CD 
					AND TRF.SUB_TRF_CD 							= CND.SUB_TRF_CD
       		WHERE 
			 	TCD.TRF_TP_CD 									= #{tarDiv} 
        	) 													TCODE 
				ON TCD.TRF_CD 									= TCODE.TRF_CD 
                AND TCD.SUB_TRF_CD 								= TCODE.SUB_TRF_CD
     			<if test='proformaChk == "Y"'>
     				AND (SELECT 
	                        FORMAT(
	                            CASE A.LOC_CD 
		                            WHEN 'CT' THEN B.ETA 
		                            WHEN 'BBT' THEN B.ETA 
		                            ELSE B.ETD 
	                            END 
	                        ,'yyyyMMdd') 
	                     FROM 
	                     	TMT_BERTH_LOC 		A, 
	                     	TMT_VSL_SCH			B 
	                     WHERE 
	                     	A.BERTH_CD 			= B.BERTH_LOC
                           	AND B.VSL_CALL_ID 	= #{vslCallId}
	                 ) 
	                 	BETWEEN TRF.APLY_YMD 
	                 		AND TRF.EXPR_YMD
     			</if>
                <if test="proformaChk == null">
	                AND (SELECT 
	                        FORMAT(
	                            CASE A.LOC_CD 
									WHEN 'CT' THEN B.ATB 
									WHEN 'BBT' THEN B.ATB 
									ELSE B.ATA 
								END
	                        	,'yyyyMMdd'
							) 
	                     FROM 
						 	TMT_BERTH_LOC 		A, 
							TMT_VSL_SCH 		B 
	                     WHERE 
						 	A.BERTH_CD 			= B.BERTH_LOC
	                   		AND B.VSL_CALL_ID 	= #{vslCallId}
	                 ) 
	                 	BETWEEN TRF.APLY_YMD 
	                 		AND TRF.EXPR_YMD
                </if>
              	<if test="whereSQL != null and whereSQL != ''">
					${whereSQL}
				</if>
				AND TCD.VLD_YN 					= 'Y' 
			ORDER BY 
				TRF.TRF_CD,
				TRF.SUB_TRF_CD
	</select>
	
	<select id="selectGenerateVesselScheduleList" parameterType="tariffCodeGeneratorParm"	resultMap="tariffCodeVesselGeneratorItemMap">
		SELECT /* tariffCodeGenerator.selectGenerateVesselScheduleList */	
			'INV' 												AS IV_PRFX,
			SCH.SHIP_CALL_NO,
			SCH.VSL_CALL_ID,    
			ISNULL(#{userId}, 'SYSTEM')                         AS USER_ID,
			ISNULL(PART.LOA, 0)                                 AS LOA, /* LOA RANGE METER          */
			ISNULL(PART.NRT, 0)                                 AS NRT, /* DWT RANGE METER          */
			ISNULL(PART.GRT, 0)                                 AS GRT, /* DWT RANGE METER          */
			ISNULL(PART.DWT, 0)                                 AS DWT, /* DWT RANGE METER          */
		    SCH.PURP_CALL		                                AS PURP_CALL,       /* PURPOSE OF CALL          */
		    PART.VSL_CD			                                AS VSL_CD,/* VESSEL CODE              */
		    PART.VSL_TP			                                AS VSL_TP,/* VESSEL TYPE              */
            CASE PART.DOM_YN
                WHEN '1'/* Trade Type(Domestic/International) 1 - Domestic, 2 - International*/
                    THEN 'D'
                ELSE 'I'
            END					                                AS VSL_TP3_TRADE,
            (SELECT 
                COUNT (*)
            FROM   
                TMT_VSL_SCH CT
            WHERE  
                VSL_CD = SCH.VSL_CD
                AND ATA IS NOT NULL
                AND SUBSTRING(CONVERT (VARCHAR,SCH.ATA,112),1,10) 
                    BETWEEN SUBSTRING(CONVERT (VARCHAR,SCH.ATA,112),1,6)+'01' 
                    AND SUBSTRING(CONVERT (VARCHAR,SCH.ATA,112),1,6)+'31'
            )                                                   AS ARRIVAL_TIME,
            BERTH_LOC                                           AS BERTH_LOC, /* Operated at Private Jetty */
			SUBSTRING(
                CONVERT(CHAR(8), SCH.ATU, 112)
                + REPLACE(CONVERT(CHAR(6), GETDATE(), 108),':',''),
                1,
                14
            )                                                   AS ATU,
			SUBSTRING(
                CONVERT(CHAR(8), SCH.ATB, 112)
                + REPLACE(CONVERT(CHAR(6), GETDATE(),108),':',''),
                1,
                14
            )                                                   AS ATB,
			SUBSTRING(
                CONVERT(CHAR(8), SCH.ATW, 112)
                + REPLACE(CONVERT(CHAR(6), GETDATE(),108),':',''),
                1,
                14
            )                                                   AS ATW,
			SUBSTRING(
                CONVERT(CHAR(8), SCH.ATC, 112)
                + REPLACE(CONVERT(CHAR(6), GETDATE(),108),':',''),
                1,
                14
            )                                                   AS ATC,
			SUBSTRING(
                CONVERT(CHAR(8), DLY.ST_DT, 112)
                + REPLACE(CONVERT(CHAR(6), GETDATE(),108),':',''),
                1,
                14
            )                                                   AS DLY_ST_DT,
			SUBSTRING(
                CONVERT(CHAR(8), DLY.END_DT, 112)
                + REPLACE(CONVERT(CHAR(6), GETDATE(),108),':',''),
                1,
                14
            )                                                   AS DLY_END_DT,
			SUBSTRING(
                CONVERT(CHAR(8), BNK.ST_DT, 112)
                + REPLACE(CONVERT(CHAR(6), GETDATE(),108),':',''),
                1,
                14
            )                                                   AS BNK_ST_DT,
			SUBSTRING(
                CONVERT(CHAR(8), BNK.END_DT, 112)
                + REPLACE(CONVERT(CHAR(6), GETDATE(),108),':',''),
                1,
                14
            )                                                   AS BNK_END_DT,
		    SCH.ARRV_SA_ID                                      AS SA_ID,
		    CASE LOC.LOC_CD
		    	WHEN 'PJ' /* Trade Type(Domestic/International) 1 - Domestic, 2 - International*/
		        THEN 'Y'
		        ELSE 'N'
		    END                                                 AS PRIVATE_BERTH,
		    (SELECT COUNT (*)
		    FROM   
                TMT_VSL_SHFT        SHFT
		    WHERE  
                SHFT.VSL_CALL_ID    = SCH.VSL_CALL_ID
		        AND ATB_DT IS NOT NULL
		        AND APPRV_DT IS NOT NULL
		    )                                                   AS SHIFT,
            (SELECT   
                SUM (CG_VOL)
            FROM     
                TMT_CG_MST
            WHERE    
                VSL_CALL_ID = #{vslCallId}
            )                                    				AS HANDLED_QTY,
		    (SELECT 
            ISNULL (SUM(CT), 0)
		    FROM (
		         	SELECT 
                        ISNULL (COUNT (*), 0) AS CT
		            FROM (
		            	SELECT   
                            CG_TP_CD
                        FROM     
                            TMT_CG_MST
                        WHERE    
                            VSL_CALL_ID = ''
                        AND      
                            CG_TP_CD IS NOT NULL
                        GROUP BY 
                            CG_TP_CD
                        ) S
                        UNION ALL
                        SELECT 
                            ISNULL (COUNT (*), 0) AS CT
                        FROM (
                            SELECT   
                                CG_TP_CD
                            FROM     
                                TMT_LQDCG_OPE
                            WHERE    
                                VSL_CALL_ID = #{vslCallId}
                                AND CG_TP_CD IS NOT NULL
                            GROUP BY 
                                CG_TP_CD
                        ) S
            )                                                   S
            )                                                   AS CARGO_TYPE_CNT,
            (SELECT TOP(1)
                CASE
                    WHEN COUNT (*) > 1 THEN 'D'
                    ELSE 'I'
                END
            FROM     
            	TMT_CG_MST
            WHERE    
            	VSL_CALL_ID = #{vslCallId}
            	AND DELV_TP_CD != 'B'
            	GROUP BY DELV_TP_CD 
            )                                                   AS DELV_TP,
            SCH.CALL_YEAR                                       AS CALL_YEAR,
            SCH.CARGO_TP_MPTS                                   AS CARGO_TP_MPTS,
			SCH.ARRV_SA_ID                                      AS SHIPG_AGNT,
		    (SELECT 
                PAYMENT_TYPE 
            FROM 
                TMT_PTNR 
            WHERE 
                PTNR_CODE = SCH.ARRV_SA_ID 
                AND PTNR_TYPE = 'SHA' 
                AND (
                    PAYMENT_TYPE IS NOT NULL 
                    AND PAYMENT_TYPE <![CDATA[<>]]> ''
                )
			UNION
			SELECT 
                PAYMENT_TYPE 
            FROM 
                TMT_AGENCY_INFO 
            WHERE 
                AGENCY_CODE = SCH.ARRV_SA_ID 
                AND PTNR_TYPE = 'SHA' 
                AND (
                    PAYMENT_TYPE IS NOT NULL 
                    AND PAYMENT_TYPE <![CDATA[<>]]> ''
                )
			)                                                   AS SHIPG_AGENT_PAY_TP
		FROM            
            TMT_VSL_SCH                                         SCH
		INNER JOIN      
            TMT_VSL_PART                                        PART
			    ON SCH.VSL_CD                                   = PART.VSL_CD
		LEFT OUTER JOIN 
            TMT_DLY_BRK DLY
                ON SCH.VSL_CD                                   = DLY.VSL_CALL_ID
                AND ACPT_YN                                     = 'Y'
		LEFT OUTER JOIN 
            TMT_DBL_BNK                                         BNK
			    ON SCH.VSL_CD                                   = BNK.VSL_CALL_ID
		INNER JOIN      
            TMT_BERTH_LOC                                       LOC
			    ON SCH.BERTH_LOC                                = LOC.BERTH_CD
		WHERE	
            SCH.VSL_CALL_ID                                     = #{vslCallId}
	</select>
	
	<!-- START OF DOCKAGE CHARGE -->
    <select id="selectDelayHrsForDockageCharge" parameterType="tariffcodeGeneratorParm"	resultMap="delayHrsForDockageItemMap">
    	WITH 
            DELAY_DATA AS  (
                SELECT	
                    D.VSL_CALL_ID,
                    ST_DT,
                    END_DT,
                    ROUND(DATEDIFF(MINUTE, ST_DT, END_DT)/60.0, 3)  AS DELAY_HRS
                FROM 	
                    TMT_DLY_BRK D
                WHERE  
                    D.VSL_CALL_ID                                   = #{vslCallId}
                    AND ACPT_YN                                     = #{acptDelayYn}
                    <if test="whereSQL != null and whereSQL != ''">
                        ${whereSQL}
                    </if>
                GROUP BY 
                    VSL_CALL_ID,
                    ST_DT, 
                    END_DT, 
                    RSN_CD		
                    
                UNION ALL
                SELECT	
                    D.VSL_CALL_ID,
                    ST_DT,
                    END_DT,
                    ROUND (DATEDIFF (MINUTE, ST_DT, END_DT) / 60.0, 3) AS DELAY_HRS
                FROM 	
                    TMT_DLY_SUM D
                WHERE  
                    D.VSL_CALL_ID                                   = #{vslCallId}
                    AND ACPT_DLY_YN                                 = #{acptDelayYn}
                    <if test="whereSQL != null and whereSQL != ''">
                        ${whereSQL}
                    </if>
            )
                
		SELECT  /* tariffCodeGenerator.selectDelayHrsForDockageCharge */	
            VSL_CALL_ID, 
            SUM (DELAY_HRS)                                         AS DELAY_HRS
		FROM 	
            DELAY_DATA
		GROUP BY 
            VSL_CALL_ID
    </select>
    
	<select id="selectGenerateVesselDockageCharge" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeDockageGeneratorItemMap">
    	SELECT /* tariffCodeGenerator.selectGenerateVesselDockageCharge */
            V.VSL_CALL_ID,
            V.SHIP_CALL_NO,
            'SCHEDULE'                                          AS SEARCH_TYPE,
            'INV'                                               AS IV_PRFX,
            'OPE'                                               AS SCR_ID,
            ISNULL(#{userId}, 'SYSTEM')                         AS USER_ID,
            V.CARGO_TP_MPTS,
            CASE P.DOM_YN 
                WHEN '1' THEN 'D' 
                WHEN '2' THEN 'I' 
                ELSE '' 
            END                                                 AS VSL_TRADE_TYPE,
            V.PURP_CALL,
            FORMAT(V.ATB, 'dd/MM/yyyy HH:mm')                   AS ATB,
            FORMAT(V.ATW, 'dd/MM/yyyy HH:mm')                   AS ATW,
            FORMAT(V.ATC, 'dd/MM/yyyy HH:mm')                   AS ATC,
            FORMAT(V.ATU, 'dd/MM/yyyy HH:mm')                   AS ATU,
            P.LOA,
            ROUND (DATEDIFF (MINUTE, ATB, ATU) / 60.0, 3)       AS DC_HRS,
            ROUND (DATEDIFF (MINUTE, ATB, ATW) / 60.0, 3)       AS FIRST_DC_HRS,
            ROUND (DATEDIFF (MINUTE, ATC, ATU) / 60.0, 3)       AS SECOND_DC_HRS,
            NULL                                                AS SHIFTING_SEQ,
            NULL                                                AS DBL_BNK_DIV_CD,
            V.ARRV_SA_ID                                        AS SHIPG_AGNT,
            (SELECT 
                PAYMENT_TYPE 
            FROM 
                TMT_PTNR 
            WHERE 
                PTNR_CODE       = V.ARRV_SA_ID 
                AND PTNR_TYPE   = 'SHA' 
                AND (
                    PAYMENT_TYPE IS NOT NULL 
                    AND PAYMENT_TYPE <![CDATA[<>]]> ''
                )
            UNION
            SELECT 
                PAYMENT_TYPE 
            FROM 
                TMT_AGENCY_INFO 
            WHERE 
                AGENCY_CODE     = V.ARRV_SA_ID 
                AND PTNR_TYPE   = 'SHA' 
                AND (
                    PAYMENT_TYPE IS NOT NULL 
                    AND PAYMENT_TYPE <![CDATA[<>]]> ''
                )
            )                                                   AS SHIPG_AGENT_PAY_TP   
		FROM  
            TMT_VSL_SCH                                         V
		INNER JOIN 
            TMT_VSL_PART P 
                ON V.VSL_CD                                     = P.VSL_CD
		WHERE 
            V.VSL_CALL_ID                                       = #{vslCallId}
		
		UNION ALL

		SELECT 
            V.VSL_CALL_ID,
            V.SHIP_CALL_NO,
            'SHIFTING'                                          AS SEARCH_TYPE,
            'INV'                                               AS IV_PRFX,
            'OPE'                                               AS SCR_ID,
            ISNULL(#{userId}, 'SYSTEM')                         AS USER_ID,
            V.CARGO_TP_MPTS,
            CASE P.DOM_YN 
                WHEN '1' THEN 'D' 
                WHEN '2' THEN 'I' 
                ELSE '' 
            END                                                 AS VSL_TRADE_TYPE,
            V.PURP_CALL,
            FORMAT(S.ATB_DT, 'dd/MM/yyyy HH:mm')                AS ATB,
            FORMAT(S.ATW_DT, 'dd/MM/yyyy HH:mm')                AS ATW,
            FORMAT(S.ATC_DT, 'dd/MM/yyyy HH:mm')                AS ATC,
            FORMAT(S.ATU_DT, 'dd/MM/yyyy HH:mm')                AS ATU,
            P.LOA,
            ROUND (DATEDIFF (MINUTE, S.ATB_DT, S.ATU_DT) / 60.0, 3) AS DC_HRS,
            ROUND (DATEDIFF (MINUTE, S.ATB_DT, S.ATW_DT) / 60.0, 3) AS FIRST_DC_HRS,
            ROUND (DATEDIFF (MINUTE, S.ATC_DT, S.ATU_DT) / 60.0, 3) AS SECOND_DC_HRS,
            S.SEQ                                               AS SHIFTING_SEQ,
            NULL                                                AS DBL_BNK_DIV_CD,
            V.ARRV_SA_ID                                        AS SHIPG_AGNT,
            (SELECT 
                PAYMENT_TYPE 
            FROM 
                TMT_PTNR 
            WHERE 
                PTNR_CODE       = V.ARRV_SA_ID 
                AND PTNR_TYPE   = 'SHA' 
                AND (
                    PAYMENT_TYPE IS NOT NULL 
                    AND PAYMENT_TYPE <![CDATA[<>]]> ''
                )
            UNION
            SELECT 
                PAYMENT_TYPE 
            FROM 
                TMT_AGENCY_INFO 
            WHERE 
                AGENCY_CODE     = V.ARRV_SA_ID 
                AND PTNR_TYPE   = 'SHA' 
                AND (
                    PAYMENT_TYPE IS NOT NULL 
                    AND PAYMENT_TYPE <![CDATA[<>]]> ''
                )
            )                                                   AS SHIPG_AGENT_PAY_TP
		FROM  
            TMT_VSL_SCH                                         V
        INNER JOIN 
            TMT_VSL_SHFT                                        S 
                ON V.VSL_CALL_ID                                = S.VSL_CALL_ID
        INNER JOIN 
            TMT_VSL_PART                                        P 
                ON V.VSL_CD                                     = P.VSL_CD
		WHERE 
            V.VSL_CALL_ID                                       = #{vslCallId}
		    AND S.ATB_DT IS NOT NULL 
            AND S.ATU_DT IS NOT NULL
		
		UNION ALL

		SELECT 
            V.VSL_CALL_ID,
			V.SHIP_CALL_NO,
            'DOUBLE_BANKING'                                    AS SEARCH_TYPE,
            'INV' AS IV_PRFX,
            'OPE' AS SCR_ID,
            ISNULL(#{userId}, 'SYSTEM')                         AS USER_ID,
            V.CARGO_TP_MPTS,
            CASE P.DOM_YN 
                WHEN '1' THEN 'D' 
                WHEN '2' THEN 'I' 
                ELSE '' 
            END                                                 AS VSL_TRADE_TYPE,
            V.PURP_CALL,
            FORMAT(S.SHIP1_ATB, 'dd/MM/yyyy HH:mm')             AS ATB,
            FORMAT(S.SHIP1_ATW, 'dd/MM/yyyy HH:mm')             AS ATW,
            FORMAT(S.SHIP1_ATC, 'dd/MM/yyyy HH:mm')             AS ATC,
            FORMAT(S.SHIP1_ATU, 'dd/MM/yyyy HH:mm')             AS ATU,
            S.SHIP1_LOA                                         AS LOA ,
            ROUND (DATEDIFF (MINUTE, S.SHIP1_ATB, S.SHIP1_ATU) / 60.0, 3) AS DC_HRS,
            ROUND (DATEDIFF (MINUTE, S.SHIP1_ATB, S.SHIP1_ATW) / 60.0, 3) AS FIRST_DC_HRS,
            ROUND (DATEDIFF (MINUTE, S.SHIP1_ATC, S.SHIP1_ATU) / 60.0, 3) AS SECOND_DC_HRS,
            NULL                                                AS SHIFTING_SEQ,
            DBL_BNK_DIV_CD,
            V.ARRV_SA_ID                                        AS SHIPG_AGNT,
            (SELECT 
                PAYMENT_TYPE 
            FROM 
                TMT_PTNR 
            WHERE 
                PTNR_CODE       = V.ARRV_SA_ID 
                AND PTNR_TYPE   = 'SHA' 
                AND (
                    PAYMENT_TYPE IS NOT NULL 
                    AND PAYMENT_TYPE <![CDATA[<>]]> ''
                )
            UNION
            SELECT 
                PAYMENT_TYPE 
            FROM 
                TMT_AGENCY_INFO 
            WHERE 
                AGENCY_CODE     = V.ARRV_SA_ID 
                AND PTNR_TYPE   = 'SHA' 
                AND (
                    PAYMENT_TYPE IS NOT NULL 
                    AND PAYMENT_TYPE <![CDATA[<>]]> ''
                )
            )                                                   AS SHIPG_AGENT_PAY_TP
		FROM  
            TMT_VSL_SCH                                         V
        INNER JOIN 
            TMT_DBL_BNK                                         S 
                ON V.VSL_CALL_ID = S.VSL_CALL_ID
        INNER JOIN 
            TMT_VSL_PART                                        P 
                ON V.VSL_CD = P.VSL_CD
		WHERE 
            V.VSL_CALL_ID                                       = #{vslCallId}
            AND S.SHIP1_ATB IS NOT NULL 
            AND S.SHIP1_ATU IS NOT NULL
            AND S.DBL_BNK_DIV_CD IN ('TG')
    </select>
    
    <!-- END OF DOCKAGE CHARGE -->
    
    <!-- START OF HANDLING GOODS CHARGE -->
    <select id="selectGenerateHandlingGoodsItems" parameterType="tariffCodeGeneratorParm" resultMap="tariffCodeGeneratorItemMap">
    	WITH DOCUMENT_INFO AS (
		    SELECT 
		        VSL_CALL_ID,
		        CATG_CD,
		        MF_DOC_ID,
		        BL_NO,
		        NULL                          					AS SHIPG_NOTE_NO,
		        BL_NO                                 			AS BLSN,
		        CG_TP_CD,
		        CMDT_GRP_CD,
		        CMDT_CD,
		        PKG_TP_CD,
		        FWRD,
		        CNSNE,
		        SHPR,
		        POL,
		        POD,
		        FDEST,
		        WGT_CHK,
		        DELV_TP_CD,
		        DOMESTIC_CHK
		    FROM 
		        TMT_BL
		    WHERE 
		        VSL_CALL_ID                                		= #{vslCallId}
		
		    UNION
		
		    SELECT 
		        VSL_CALL_ID,
		        CATG_CD,
		        MF_DOC_ID,
		        NULL                                       		AS BL_NO,
		        SHIPG_NOTE_NO,
		        SHIPG_NOTE_NO                            		AS BLSN,
		        CG_TP_CD,
		        CMDT_GRP_CD,
		        CMDT_CD,
		        PKG_TP_CD,
		        FWRD,
		        CNSNE,
		        SHPR,
		        POL,
		        POD,
		        FDEST,
		        WGT_CHK,
		        DELV_TP_CD,
		        DOMESTIC_CHK
		    FROM 
		        TMT_SHIPG_NOTE
		    WHERE 
		        VSL_CALL_ID                                     = #{vslCallId}
		    )
		SELECT DISTINCT
	        VS.VSL_CALL_ID,
	        VS.SHIP_CALL_NO,
	        DC.MF_DOC_ID                                     	AS REF_NO2,
	        DC.BLSN                                         	AS REF_NO,
	        CASE 
	            WHEN DC.DOMESTIC_CHK = 'Y' THEN 'D' 
	            ELSE 'I' 
	        END                                                 AS TRADE_TYPE,
	        BO.CATG_CD                                          AS OPE_CLASS,
	        BO.CG_TP_CD                                         AS CARGO_TYPE,
	        ISNULL(BO.DELV_TP_CD, CG.DELV_TP_CD)              	AS DELIVERY_TYPE,
	        ISNULL(BO.TSPT_TP_CD, CG.TSPT_TP_CD)              	AS MODE_OF_OPR,
	        ISNULL(CG.CMDT_GRP_CD, DC.CMDT_GRP_CD)            	AS COMMODITY_GROUP,
	        ISNULL(BO.CMDT_CD, CG.CMDT_CD)                  	AS COMMODITY,
	        ISNULL(BO.PKG_TP_CD, CG.PKG_TP_CD)              	AS PACKAGE_TYPE,
	        ISNULL(BO.BILL_WGT, 0)                           	AS CG_WGT,
	        ISNULL(BO.BILL_MSRMT, 0)                         	AS CG_VOL,
	        ISNULL(BO.BILL_PKG_QTY, 0)                         	AS PKG_QTY,
	        VS.ARRV_SA_ID                                     	AS SHIPG_AGNT,
	        (SELECT TOP 1 
	            PAYMENT_TYPE 
	        FROM 
	            TMT_AGENCY_INFO SA 
	        WHERE 
	            SA.AGENCY_CODE = VS.ARRV_SA_ID 
	            AND PTNR_TYPE = 'SHA'
	        )                                               	AS SHIPG_AGENT_PAY_TP,
	        DC.FWRD 											AS FWR_AGNT,
	        (SELECT TOP 1 
	            PAYMENT_TYPE 
	        FROM 
	            TMT_PTNR 
	        WHERE 
	            PTNR_CODE       = DC.FWRD 
	            AND PTNR_TYPE   = 'FWD'
	        )                                             		AS FWD_PAY_TP,
	        DC.SHPR 											AS SHPR,
	        (SELECT TOP 1 
	            PAYMENT_TYPE 
	        FROM 
	            TMT_PTNR 
	        WHERE 
	            PTNR_CODE       = DC.SHPR 
	            AND PTNR_TYPE   = 'SHP'
	        )                                                	AS SHPR_PAY_TP,
	        DC.CNSNE                                       		AS CNSNE,
	        (SELECT TOP 1 
	            PAYMENT_TYPE 
	        FROM 
	            TMT_PTNR 
	        WHERE 
	            PTNR_CODE       = DC.CNSNE 
	            AND PTNR_TYPE   = 'CNS'
	        )                                               	AS CNS_PAY_TP,
	        'INV' 												AS IV_PRFX,
	        'OPE' 												AS SCR_ID,
	        ISNULL(#{userId}, 'SYSTEM')                      	AS USER_ID
			FROM  
	            TMT_CG_MST                                  	CG
	        INNER JOIN 
	            TMT_VSL_SCH                                   	VS 
	            	ON CG.VSL_CALL_ID                           = VS.VSL_CALL_ID
	        INNER JOIN 
	            DOCUMENT_INFO                              		DC 
	            	ON VS.VSL_CALL_ID                          	= DC.VSL_CALL_ID
	        INNER JOIN 
	            TMT_B_OPE_AMNT                              	BO 
		            ON DC.VSL_CALL_ID                           = BO.VSL_CALL_ID 
		            AND BO.CG_NO                                = DC.BLSN 
		            AND BO.CATG_CD                  			= DC.CATG_CD
			WHERE 
	            VS.VSL_CALL_ID                                 	= #{vslCallId}
    </select>
    
    <!-- END OF HANDLING GOODS CHARGE -->
	
	<select id="selectGenerateCargolist" parameterType="tariffCodeGeneratorParm" resultMap="tariffCodeGeneratorItemMap">
		SELECT DISTINCT	/* tariffCodeGenerator.selectGenerateCargolist */
			CASE CG.OPE_CLASS_CD 
				WHEN 'R' THEN 'E' ELSE CG.OPE_CLASS_CD 
			END													AS OPE_CLASS,					/* C1 - Category */
			RH.RHDL_MODE 										AS RHDL_MODE,  					/* C2 - Rehandle */
			CASE CG.OPE_CLASS_CD 
				WHEN  'I' THEN OA.DELV_TP_CD 
				ELSE  CG.ACTL_DELV_TP_CD 
			END 												AS DELIVERY_TYPE, 				/* C3 - Delivery Mode */
			SUBSTRING (CG.PORT_OF_LOAD, 1, 2) 					AS POL,
			SUBSTRING (CG.PORT_OF_DIS, 1, 2) 					AS POD,
			CASE SCH.DOMESTIC_CHK 
				WHEN  'Y' THEN 'D'
				ELSE 'I' 
			END													AS VSLTPTRADE, 					/* C4 - Trade Type */
			ISNULL(OA.CG_TP_CD, CG.CG_TP_CD) 					AS CARGO_TYPE,					/* C7 - Cargo Type */ 
			CG.CMDT_GRP_CD 										AS COMMODITY_GROUP,				/* C8 - Commodity Group */ 
			CG.CMDT_CD 											AS COMMODITY,					/* C9 - Commodity */
			ISNULL(OA.PKG_TP_CD, CG.PKG_TP_CD)					AS PACKAGE_TYPE,				/* C10 - Package Type */
			'' 													AS DG_CLASS,					/* C11 - DG Class */
			ISNULL(OA.TSPT_TP_CD, CG.TSPT_TP_CD)				AS MODE_OF_OPR, 				/* C12 - Mode of OPR */
			CG.DMG_YN 											AS DAMAGED,						/* C13 - Damaged */
			(SELECT TOP 1 
				JOB.JOB_TP_CD 
			FROM 
				TMT_JOB JOB 
			WHERE 
					JOB.VSL_CALL_ID = CG.VSL_CALL_ID
				AND JOB.CG_NO 		= CG.CG_NO
				AND JOB.JOB_TP_CD 	IN ('DS', 'LD')
			)													AS JOB_TP_CD,		/* C14 - Operation Type */
			<!-- 
			CASE CG.OPE_CLASS_CD 
				WHEN  'I' THEN DATEADD(DAY, 3, DIS_ST_DT) 
				ELSE NULL END IS NOT NULL 
				THEN 
					CASE 
						WHEN 
							CASE CG.OPE_CLASS_CD 
								WHEN 'I' THEN DATEADD(DAY, 3, DIS_ST_DT) 
								ELSE NULL 
							END <![CDATA[<]]> SCH.ATC 
								THEN 
									FORMAT(
										CASE CG.OPE_CLASS_CD 
											WHEN 'I' THEN DATEADD(DAY, 3, DIS_ST_DT) 
											ELSE NULL 
										END, 
										'yyyyMMddHHmm'
									) 
							ELSE FORMAT(SCH.ATC,'yyyyMMddHHmm') 
					END 
			END 												AS CARGO_IM_ST, 
			--> 
			NULL 												AS CARGO_IM_ST, 
			FORMAT(
				CASE CG.OPE_CLASS_CD WHEN 'I' THEN CG.HDL_OUT_END_DT ELSE NULL END,
				'yyyyMMddHHmm'
			) 													AS CARGO_IM_END,  /* O6 - CARGO OVER Storage (END) */
			CASE 
				WHEN 
					CASE CG.OPE_CLASS_CD 
						WHEN 'E' 
							THEN DATEADD(DAY, 3, CG.HDL_IN_ST_DT) 
						ELSE NULL 
					END IS NOT NULL
				THEN
					CASE 
						WHEN 
							CASE CG.OPE_CLASS_CD 
								WHEN 'E' 
									THEN DATEADD(DAY, 3, CG.HDL_IN_ST_DT) 
								ELSE NULL 
							END <![CDATA[<]]> SCH.ATC 
								THEN 
									FORMAT(
										CASE CG.OPE_CLASS_CD 
											WHEN 'E' 
												THEN DATEADD(DAY, 3, CG.HDL_IN_ST_DT)
											ELSE NULL 
										END,
										'yyyyMMddHHmm'
									) 
						ELSE FORMAT(SCH.ATC,'yyyyMMddHHmm') 
					END 
			END 												AS CARGO_EX_ST, /* O6 - CARGO OVER Storage (START)   */
			FORMAT(
				CASE CG.OPE_CLASS_CD 
					WHEN 'E' THEN CG.LOAD_END_DT 
					ELSE NULL 
				END,
				'yyyyMMddHHmm'
			) 													AS CARGO_EX_END,  /* O6 - CARGO OVER Storage (END)   */
			CASE 
				WHEN 
					CASE CG.OPE_CLASS_CD 
						WHEN 'B' THEN DATEADD(DAY, 3, CG.DIS_ST_DT) 
						ELSE NULL 
					END IS NOT NULL
				THEN
					CASE 
						WHEN 
							CASE CG.OPE_CLASS_CD 
								WHEN 'B' 
									THEN DATEADD(DAY, 3, CG.DIS_ST_DT) 
								ELSE NULL 
							END <![CDATA[<]]> SCH.ATC 
						THEN 
							FORMAT(
								CASE CG.OPE_CLASS_CD 
									WHEN 'B' 
										THEN DATEADD(DAY, 3, CG.DIS_ST_DT) 
									ELSE NULL 
								END,
								'yyyyMMddHHmm'
							) 
						ELSE FORMAT(SCH.ATC,'yyyyMMddHHmm') 
					END 
			END 												AS CARGO_BOTH_ST, /* O6 - CARGO OVER Storage (START)   */
			FORMAT(
				CASE CG.OPE_CLASS_CD 
					WHEN 'B' THEN CG.HDL_OUT_END_DT 
					ELSE NULL 
				END,
				'yyyyMMddHHmm'
			) 													AS CARGO_BOTH_END,  /* O6 - CARGO OVER Storage (END)   */  
			(SELECT 
				WH_LOC_TP 
			FROM 
				TMT_INV_LOC 
			WHERE 
				VSL_CALL_ID 			= CG.VSL_CALL_ID 
				AND CG_NO 				= CG.CG_NO 
				AND UPDATE_TIME IN (
					SELECT 
						MAX(UPDATE_TIME) 
					FROM 
						TMT_INV_LOC 
					WHERE 
						VSL_CALL_ID 	= CG.VSL_CALL_ID 
						AND CG_NO 		= CG.CG_NO 
						AND WH_LOC_TP 	IS NOT NULL
					)
			GROUP BY 
				WH_LOC_TP
			) 													AS WH_LOC_TP, /* C6 - W/H Type   */ 
			CG.CG_NO 											AS CARGO_NO,
			ISNULL(OA.BILL_WGT, 0)								AS CG_WGT,
			ISNULL(OA.BILL_MSRMT, 0)							AS CG_MSRMT,
			ISNULL(OA.BILL_PKG_QTY, 0)							AS PKG_QTY,
			CG.HDL_IN_ST_DT 									AS HDL_IN_TIME,
			CG.HDL_OUT_END_DT 									AS HDL_OUT_TIME,
			<!-- 
			'' 													AS LAST_BILLING_DATE, 
			-->
			NULL 												AS LAST_BILLING_DATE,
			'' 													AS FREE_STRG_DD,
			CG.BL_NO 											AS BL_NO,
			CG.SHIPG_NOTE_NO 									AS SHIPG_NOTE_NO,
			SCH.ARRV_SA_ID  									AS SHIPG_AGNT,
			(SELECT TOP 1 PAYMENT_TYPE 
			FROM TMT_AGENCY_INFO SA 
			WHERE SA.AGENCY_CODE = SCH.ARRV_SA_ID 
			AND PTNR_TYPE = 'SHA' 
			) 													AS SHIPG_AGENT_PAY_TP,
			DOC.FWRD AS FWR_AGNT,
			JOB.EQ_TP_CD 										AS EQUIPMENT_TYPE,
			(SELECT TOP 1 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.FWRD 
				AND PTNR_TYPE 			= 'FWD'
			) 													AS FWD_PAY_TP,
			DOC.SHPR 											AS SHPR,
			(SELECT TOP 1 
				 PAYMENT_TYPE
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.SHPR 
				AND PTNR_TYPE 			= 'SHP'
			) 													AS SHPR_PAY_TP,
			DOC.CNSNE 											AS CNSNE,
			(SELECT TOP 1 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.CNSNE 
				AND PTNR_TYPE 			= 'CNS'
			) 													AS CNS_PAY_TP,
			CG.CURR_LOC_ID 										AS CURR_LOC_ID,
			ISNULL(
				CASE CG.OPE_CLASS_CD
					WHEN 'I' 
						THEN 
							CASE OA.DELV_TP_CD 
								WHEN 'I' THEN OA.BILL_PKG_QTY 
								ELSE 0 
							END 
					ELSE CG.BILL_PKG_QTY 
				END,
				0
			) 													AS BILL_PKG_QTY,
			ISNULL(
				CASE CG.OPE_CLASS_CD
					WHEN 'I' 
						THEN 
							CASE OA.DELV_TP_CD 
								WHEN 'I' THEN OA.BILL_WGT 
								ELSE 0 
							END 
					ELSE CG.BILL_WGT 
				END,
				0
			) 													AS BILL_WGT,
			ISNULL(
				CASE CG.OPE_CLASS_CD
					WHEN 'I' 
						THEN 
							CASE OA.DELV_TP_CD 
								WHEN 'I' THEN OA.BILL_MSRMT 
								ELSE 0 
							END 
					ELSE CG.BILL_MSRMT 
				END,
				0
			) 													AS BILL_MSRMT,
			SCH.CALL_YEAR										AS CALL_YEAR,
			ISNULL(
				CASE CG.OPE_CLASS_CD
					WHEN 'I'
						THEN 
							CASE OA.DELV_TP_CD 
								WHEN 'D' THEN OA.BILL_WGT 
								ELSE 0 
							END
					ELSE CG.BILL_WGT_D 
				END,
				0
			) 													AS BILL_WGT_D,
			ISNULL(
				CASE CG.OPE_CLASS_CD
					WHEN 'I' 
						THEN 
							CASE OA.DELV_TP_CD 
								WHEN 'D' THEN OA.BILL_MSRMT 
								ELSE 0 
							END
					ELSE CG.BILL_MSRMT_D 
				END,
				0
			) 													AS BILL_MSRMT_D,
			<!-- 
			ISNULL(
				CASE CG.OPE_CLASS_CD
					WHEN 'I' 
						THEN 
							CASE OA.DELV_TP_CD 
								WHEN 'D' THEN OA.BILL_PKG_QTY 
								ELSE 0 
							END
					ELSE CG.BILL_PKG_QTY_D 
				END,
				0
			) 													AS BILL_PKG_QTY_D, 
			--> 
			ISNULL(
				CASE 
					WHEN CG.OPE_CLASS_CD = 'I' AND OA.DELV_TP_CD = 'D' 
						THEN OA.BILL_PKG_QTY
					ELSE CG.BILL_PKG_QTY_D
				END, 
				0
			) 													AS BILL_PKG_QTY_D,
			CASE 
				WHEN CG.OPE_CLASS_CD = 'I'
					THEN
						(SELECT TOP 1 
							CMDT_DESC
						FROM 
							TMT_CMDT
						WHERE 
							CMDT_CD 	= OA.CMDT_CD)
				ELSE
					(SELECT TOP 1 
						CMDT_DESC
					FROM 
						TMT_CMDT
					WHERE 
						CMDT_CD = CG.CMDT_CD)
			END 												AS DESCR,
			REPKG_TP_CD,
			CG.VSL_CALL_ID,
			ISNULL(CG.BL_NO, CG.SHIPG_NOTE_NO) 					AS REF_NO,
			DOC.MF_DOC_ID 										AS REF_NO2,
			'INV' 												AS IV_PRFX,
			'OPE' 												AS SCR_ID,
			DOC.WGT_CHK,
			(SELECT TOP 1 
				CASE 
					WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
						THEN 
							CASE 
								WHEN DOC.DELV_TP_CD = 'I' 
									THEN ISNULL(I_MT, 0) 
								ELSE ISNULL(D_LR_MT, 0) 
							END
					ELSE 0
				END
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO
			) 													AS CG_WGT_LR,
					
			(SELECT TOP 1 
				CASE 
					WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
						THEN 
							CASE 
								WHEN DOC.DELV_TP_CD = 'I' 
									THEN ISNULL(I_M3, 0) 
								ELSE ISNULL(D_LR_M3, 0) 
							END
						ELSE 0
				END
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO 
			) 													AS CG_MSRMT_LR,	

			(SELECT TOP 1 
				CASE 
					WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
						THEN 
							CASE 
								WHEN DOC.DELV_TP_CD = 'I' 
									THEN ISNULL(I_QTY, 0) 
								ELSE ISNULL(D_LR_QTY, 0) 
							END
					ELSE 0
				END
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO
			) 													AS PKG_QTY_LR,
					
			(SELECT TOP 1 
				ISNULL(D_VSL_MT, 0) 
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO 
			) 													AS CG_WGT_SE,

			(SELECT TOP 1 
				ISNULL(D_VSL_M3, 0) 
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO
			) 													AS CG_MSRMT_SE,

			(SELECT TOP 1 
				ISNULL(D_VSL_QTY, 0) 
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO
			) 													AS PKG_QTY_SE
		FROM	
			TMT_VSL_SCH 										SCH 
		INNER JOIN 
			TMT_CG_MST 											CG 
				ON SCH.VSL_CALL_ID 								= CG.VSL_CALL_ID
		INNER JOIN 
			(SELECT 
				VSL_CALL_ID,
				CATG_CD,
				MF_DOC_ID,
				BL_NO,
				'null' 					AS SHIPG_NOTE_NO,
				BL_NO  					AS BLSN,
				CG_TP_CD,
				CMDT_GRP_CD,
				CMDT_CD,
				PKG_TP_CD,
				FWRD,
				CNSNE,
				SHPR,
				POL,
				POD,
				NULL         			AS POR,
				FDEST,
				WGT_CHK,
				DELV_TP_CD
			FROM 
				TMT_BL
			WHERE 
				VSL_CALL_ID 			= #{vslCallId}
		    
			UNION

		    SELECT 
				VSL_CALL_ID,
				CATG_CD,
				MF_DOC_ID,
				'null' 					AS BL_NO,
				SHIPG_NOTE_NO,
				SHIPG_NOTE_NO 			AS BLSN,
				CG_TP_CD,
				CMDT_GRP_CD,
				CMDT_CD,
				PKG_TP_CD,
				FWRD,
				CNSNE,
				SHPR,
				POL,
				POD,
				POR,
				FDEST,
				WGT_CHK,
				DELV_TP_CD
			FROM 
				TMT_SHIPG_NOTE
			WHERE 
				VSL_CALL_ID = #{vslCallId}
		    ) 													DOC
					ON CG.VSL_CALL_ID 							= DOC.VSL_CALL_ID 
		        	AND (CG.BL_NO = DOC.BL_NO 					OR CG.SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO)
			
		LEFT OUTER JOIN 
			TMT_B_OPE_AMNT 										OA
				ON CG.VSL_CALL_ID 								= OA.VSL_CALL_ID 
				AND (
					(CG.SHIPG_NOTE_NO IS NULL 					AND OA.CG_NO = CG.BL_NO)
					OR
					(CG.SHIPG_NOTE_NO IS NOT NULL 				AND OA.CG_NO = CG.SHIPG_NOTE_NO)
				)

		LEFT OUTER JOIN 
			(SELECT 
				EQ.EQ_TP_CD,
				J.CG_WGT,
				J.CG_VOL,
				J.PKG_QTY,
				J.CG_NO,
				J.EQ_NO,
				J.VSL_CALL_ID,
				J.REPKG_TYPE_CD
			FROM 
				TMT_EQ_FAC 					EQ
			INNER JOIN(
				SELECT 
					VSL_CALL_ID,
					CG_NO,
					ISNULL(SUM(CG_WGT), 0)  AS CG_WGT,
					ISNULL(SUM(CG_VOL), 0)  AS CG_VOL,
					ISNULL(SUM(PKG_QTY), 0) AS PKG_QTY,
					EQ_NO,
					JOB_PURP_CD,
					REPKG_TYPE_CD
				FROM 
					TMT_JOB
				WHERE 
					JOB_PURP_CD 				IN ('VA', 'VG', 'VB', 'AV', 'GV', 'BV')
				GROUP BY 
					VSL_CALL_ID,
					CG_NO,
					EQ_NO,
					JOB_PURP_CD,
					REPKG_TYPE_CD
			) 								J
				ON EQ.EQ_FAC_NO 			= J.EQ_NO
			INNER JOIN (
				SELECT 
					VSL_CALL_ID, 
					BL_NO 					AS CG_NO 
				FROM 
					TMT_BL
				UNION
				SELECT 
					VSL_CALL_ID, 
					GR_NO 					AS CG_NO 
				FROM 
					TMT_GR
			) 								DOC
				ON  DOC.VSL_CALL_ID 		= J.VSL_CALL_ID
				AND DOC.CG_NO 				= J.CG_NO
			) 													JOB
				ON 	JOB.VSL_CALL_ID 							= CG.VSL_CALL_ID
				AND JOB.CG_NO  									= CG.CG_NO
				AND JOB.CG_WGT  								= ISNULL(OA.BILL_WGT_V, 0)
				AND JOB.CG_VOL  								= ISNULL(OA.BILL_MSRMT_V, 0)
				AND JOB.PKG_QTY  								= ISNULL(OA.BILL_PKG_QTY_V, 0)
		LEFT OUTER JOIN 
			TMT_CMDT 											CM 
				ON CG.CMDT_CD 									= CM.CMDT_CD
		LEFT OUTER JOIN 
			TMT_RHDL_CG 										RH
				ON SCH.VSL_CALL_ID 								= RH.VSL_CALL_ID
				AND CG.CG_NO 									= RH.ORG_REF_NO
		LEFT OUTER JOIN 
			TMT_DG 												DG
			ON SCH.VSL_CD 										= DG.VSL_CD
			AND SCH.CALL_YEAR 									= DG.CALL_YEAR
			AND SCH.CALL_SEQ 									= DG.CALL_SEQ
			AND (
				(CG.CG_NO 				= DG.CG_NO 
				AND 
				CG.SHIPG_NOTE_NO 		IS NULL)
				OR 
				(CG.SHIPG_NOTE_NO 		= DG.CG_NO 
				AND 
				CG.SHIPG_NOTE_NO 		IS NOT NULL)
			)	
		WHERE 	
			SCH.VSL_CALL_ID 									= #{vslCallId}
			<choose>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND CG.OPE_CLASS_CD 						IN ('I', 'E')
				</when>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk != 'Y'.toString()">
					AND CG.OPE_CLASS_CD 						IN ('I')
				</when>
				<when test="imVrfChk != 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND CG.OPE_CLASS_CD 						IN ('E')
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
		ORDER BY 
			ISNULL(OA.CG_TP_CD, CG.CG_TP_CD) ASC;
	</select>
	
	<select id="selectGeneratePortHandling" parameterType="tariffCodeGeneratorParm" resultMap="tariffCodeGeneratorItemMap">
		WITH JOBS AS (
		    SELECT 
		        J.VSL_CALL_ID,
		        ISNULL(SHIPG_NOTE_NO, BL_NO) 					AS CG_NO,
		        J.OPE_CLASS_CD,
		        JOB_TP_CD,
		        JOB_PURP_CD,
		        J.DELV_TP_CD,
		        SUM(J.CG_WGT) 									AS CG_WGT,
		        SUM(J.CG_VOL) 									AS CG_VOL,
		        SUM(J.PKG_QTY) 									AS PKG_QTY,
		        MIN(WORK_ST_DT)    								AS WORK_ST_DT,
		        MAX(WORK_END_DT)   								AS WORK_END_DT,
		        MIN(JOB_NO) 									AS JOB_NO,
		        MIN(GATE_TXN_NO) 								AS GATE_TXN_NO,
		        BL_NO,
		        SHIPG_NOTE_NO,
		        MAX(J.TSPT_TP_CD)    							AS TSPT_TP_CD,
		        MAX(MARK_NO)   									AS MARK_NO,
		        MIN(GATE_IN_DT)    								AS GATE_IN_DT,
		        MAX(GATE_OUT_DT)   								AS GATE_OUT_DT,
		        MIN(HDL_IN_ST_DT)  								AS HDL_IN_ST_DT,
		        MAX(HDL_IN_END_DT) 								AS HDL_IN_END_DT,
		        MIN(HDL_OUT_ST_DT) 								AS HDL_OUT_ST_DT,
		        MAX(HDL_OUT_END_DT)    							AS HDL_OUT_END_DT,
		        MIN(LOAD_ST_DT)    								AS LOAD_ST_DT,
		        MAX(LOAD_END_DT)   								AS LOAD_END_DT,
		        MIN(DIS_ST_DT) 									AS DIS_ST_DT,
		        MAX(DIS_END_DT)    								AS DIS_END_DT,
		        ISNULL(MAX(J.REPKG_TYPE_CD),
				MAX(J.PKG_TP_CD)) 								AS PKG_TP_CD,
		        MAX(J.DMG_YN)    								AS DMG_YN,
		        MAX(J.RHDL_MODE) 								AS RHDL_MODE,
		        MAX(CG_TP_CD)  									AS CG_TP_CD,
		        MAX(CMDT_CD)   									AS CMDT_CD,
		        MIN(TMNL_IN_DT)    								AS TMNL_IN_DT,
		        MAX(TMNL_OUT_DT)   								AS TMNL_OUT_DT,
		        MAX(PREV_LOC_ID)   								AS PREV_LOC_ID,
		        MAX(CURR_LOC_ID)   								AS CURR_LOC_ID,
		        MAX(NX_LOC_ID) 									AS NX_LOC_ID,
		        MAX(SHIPG_AGNT)    								AS SHIPG_AGNT,
		        MAX(FWR_AGNT)  									AS FWR_AGNT,
		        MAX(SHPR)  										AS SHPR,
		        MAX(SHPR_NM)   									AS SHPR_NM,
		        MAX(SHPR_ADDR) 									AS SHPR_ADDR,
		        MAX(CNSNE) 										AS CNSNE,
		        MAX(CNSNE_NM)  									AS CNSNE_NM,
		        MAX(CNSNE_ADDR)    								AS CNSNE_ADDR,
		        MAX(CNTRY_OF_ORG)  								AS CNTRY_OF_ORG,
		        MAX(PORT_OF_LOAD)  								AS PORT_OF_LOAD,
		        MAX(PORT_OF_DIS)   								AS PORT_OF_DIS,
		        MAX(FDEST) 										AS FDEST,
		        MAX(J.RMK)   									AS RMK,
		        MAX(WH_FNL_DELV_YN)    							AS WH_FNL_DELV_YN,
		        SUM(J.LD_DMG_QTY)    							AS LD_DMG_QTY,
		        SUM(J.LD_DMG_MT) 								AS LD_DMG_MT,
		        SUM(J.LD_DMG_M3) 								AS LD_DMG_M3,
		        SUM(BILL_WGT)  									AS BILL_WGT,
		        SUM(BILL_MSRMT)    								AS BILL_MSRMT,
		        SUM(BILL_PKG_QTY)  								AS BILL_PKG_QTY,
		        SUM(BILL_WGT_D)    								AS BILL_WGT_D,
		        SUM(BILL_MSRMT_D)  								AS BILL_MSRMT_D,
		        SUM(BILL_PKG_QTY_D)    							AS BILL_PKG_QTY_D,
		        SUM(BILL_WGT_V)    								AS BILL_WGT_V,
		        SUM(BILL_MSRMT_V)  								AS BILL_MSRMT_V,
		        SUM(BILL_PKG_QTY_V)    							AS BILL_PKG_QTY_V,
		        MAX(DO_NO) 										AS DO_NO,
		        MAX(CMDT_GRP_CD)   								AS CMDT_GRP_CD,
		        MAX(J.REPKG_TP_CD)   							AS REPKG_TP_CD,
		        MIN(GR_NO) 										AS GR_NO,
		        MAX(J.EQ_NO) 									AS EQ_NO
		    FROM 
				TMT_JOB 										J
		    LEFT JOIN 
				TMT_CG_MST 										CG 
					ON J.VSL_CALL_ID 							= CG.VSL_CALL_ID 
					AND J.CG_NO 								= CG.CG_NO
		    WHERE 
				1 = 1
				AND JOB_PURP_CD 								IN ('WG', 'GW')
				AND J.VSL_CALL_ID 								= #{vslCallId}
		    GROUP BY 
				JOB_TP_CD, 
				J.VSL_CALL_ID, 
				JOB_PURP_CD, 
				J.DELV_TP_CD, 
				J.OPE_CLASS_CD, 
				BL_NO, 
				SHIPG_NOTE_NO
		)
		
		SELECT DISTINCT	/*tariffCodeGenerator.selectGenerateCargolist*/
			CASE CG.OPE_CLASS_CD 
				WHEN 'R' THEN 'E' 
				ELSE CG.OPE_CLASS_CD 
			END 												AS OPE_CLASS,		/* C1 - Category */
			RH.RHDL_MODE 										AS RHDL_MODE,  		/* C2 - Rehandle */
			CG.DELV_TP_CD										AS DELIVERY_TYPE, 	/* C3 - Delivery Mode */
			SUBSTRING (CG.PORT_OF_LOAD, 1, 2) 					AS POL,
			SUBSTRING (CG.PORT_OF_DIS, 1, 2) 					AS POD,
			CASE SCH.DOMESTIC_CHK 
				WHEN 'Y' THEN 'D' 
				ELSE 'I' 
			END													AS VSLTPTRADE, 		/* C4 - Trade Type */
			CG.CG_TP_CD					 						AS CARGO_TYPE,		/* C7 - Cargo Type */ 
			CG.CMDT_GRP_CD 										AS COMMODITY_GROUP,	/* C8 - Commodity Group */ 
			CG.CMDT_CD 											AS COMMODITY,		/* C9 - Commodity */
			CG.PKG_TP_CD										AS PACKAGE_TYPE,	/* C10 - Package Type */
			'' 													AS DG_CLASS,		/* C11 - DG Class */
			CG.TSPT_TP_CD										AS MODE_OF_OPR, 	/* C12 - Mode of OPR */
			CG.DMG_YN 											AS DAMAGED,			/* C13 - Damaged */
			CG.JOB_TP_CD										AS JOB_TP_CD,		/* C14 - Operation Type */
			(SELECT 
				WH_LOC_TP 
			FROM 
				TMT_INV_LOC 
			WHERE 
				VSL_CALL_ID 			= CG.VSL_CALL_ID 
				AND CG_NO 				= CG.CG_NO 
				AND UPDATE_TIME IN (
					SELECT 
						MAX(UPDATE_TIME) 
					FROM 
						TMT_INV_LOC 
					WHERE 
						VSL_CALL_ID 	= CG.VSL_CALL_ID 
						AND CG_NO 		= CG.CG_NO 
						AND WH_LOC_TP 	IS NOT NULL
			)
			GROUP BY 
				WH_LOC_TP
			) 													AS WH_LOC_TP, /* C6 - W/H Type   */ 
			CG.CG_NO 											AS CARGO_NO,
			ISNULL(CG.CG_WGT, 0)								AS CG_WGT,
			ISNULL(CG.CG_VOL, 0)								AS CG_MSRMT,
			ISNULL(CG.PKG_QTY, 0)								AS PKG_QTY,
			CG.HDL_IN_ST_DT 									AS HDL_IN_TIME,
			CG.HDL_OUT_END_DT 									AS HDL_OUT_TIME,
			<!-- 
			'' 													AS LAST_BILLING_DATE, 
			-->
			null 												AS LAST_BILLING_DATE,
			'' 													AS FREE_STRG_DD,
			CG.BL_NO 											AS BL_NO,
			CG.SHIPG_NOTE_NO 									AS SHIPG_NOTE_NO,
			SCH.ARRV_SA_ID  									AS SHIPG_AGNT,
			(SELECT TOP 1 
				PAYMENT_TYPE 
			FROM 
				TMT_AGENCY_INFO 		SA 
			WHERE 
				SA.AGENCY_CODE 			= SCH.ARRV_SA_ID 
				AND PTNR_TYPE 			= 'SHA'
			) 													AS SHIPG_AGENT_PAY_TP,
			DOC.FWRD 											AS FWR_AGNT,
			(SELECT TOP 1  
				EQ.EQ_TP_CD
			FROM 
				TMT_EQ_FAC EQ
			INNER JOIN 
				TMT_JOB JOB
					ON EQ.EQ_FAC_NO 	= JOB.EQ_NO
			INNER JOIN 
				(SELECT 
					VSL_CALL_ID, 
					BL_NO 				AS CG_NO
				FROM 
					TMT_BL
				UNION
				SELECT 
					VSL_CALL_ID, 
					GR_NO 				AS CG_NO
				FROM 
					TMT_GR
				) 						DOC
					ON DOC.VSL_CALL_ID 	= JOB.VSL_CALL_ID
					AND DOC.CG_NO 		= JOB.CG_NO
			WHERE 
				JOB.VSL_CALL_ID 		= #{vslCallId}
				AND DOC.CG_NO 			= CG.CG_NO
				AND JOB.JOB_PURP_CD 	IN ('WG', 'GW')
			) 													AS EQUIPMENT_TYPE,
			(SELECT  TOP 1 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE = DOC.FWRD 
				AND PTNR_TYPE = 'FWD'
			) 													AS FWD_PAY_TP,
			DOC.SHPR 											AS SHPR,
			(SELECT  TOP 1 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE = DOC.SHPR 
				AND PTNR_TYPE = 'SHP'
			) 													AS SHPR_PAY_TP,
			DOC.CNSNE 											AS CNSNE,
			(SELECT  TOP 1 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE = DOC.CNSNE 
				AND PTNR_TYPE = 'CNS'
			) 													AS CNS_PAY_TP,
			CG.CURR_LOC_ID 										AS CURR_LOC_ID,
			(SELECT TOP 1  
				CMDT_DESC
			FROM 
				TMT_CMDT
			WHERE 
				CMDT_CD 				= CG.CMDT_CD
			) 													AS DESCR,
			REPKG_TP_CD,
			CG.VSL_CALL_ID,
			ISNULL(CG.BL_NO, CG.SHIPG_NOTE_NO) 					AS REF_NO,
			DOC.MF_DOC_ID 										AS REF_NO2,
			'INV' 												AS IV_PRFX,
			'OPE' 												AS SCR_ID,
			DOC.WGT_CHK,
			
			(SELECT TOP 1 
				CASE 
					WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
						THEN 
							CASE 
								WHEN DOC.DELV_TP_CD = 'I' 
									THEN ISNULL(I_MT, 0) 
								ELSE ISNULL(D_LR_MT, 0) 
							END
					ELSE 0
				END
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO
			) 													AS CG_WGT_LR,
					
			(SELECT TOP 1 
				CASE 
					WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
						THEN 
							CASE 
								WHEN DOC.DELV_TP_CD = 'I' 
									THEN ISNULL(I_M3, 0) 
								ELSE ISNULL(D_LR_M3, 0) 
							END
					ELSE 0
				END 
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO 
			) 													AS CG_MSRMT_LR,
					
			(SELECT TOP 1  
				CASE 
					WHEN DOC.SHIPG_NOTE_NO <![CDATA[<>]]> 'null' 
						THEN 
							CASE 
								WHEN DOC.DELV_TP_CD = 'I' 
									THEN ISNULL(I_QTY, 0) 
								ELSE ISNULL(D_LR_QTY, 0) 
							END
					ELSE 0
				END
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO		= DOC.SHIPG_NOTE_NO
			) 													AS PKG_QTY_LR,
					
			(SELECT TOP 1  
				ISNULL(D_VSL_MT, 0) 
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO
			) 													AS CG_WGT_SE,
			(SELECT TOP 1  
				ISNULL(D_VSL_M3, 0) 
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO
			) 													AS CG_MSRMT_SE,
			(SELECT TOP 1  
				ISNULL(D_VSL_QTY, 0) 
			FROM 
				TMT_SHIPG_NOTE_AMT 
			WHERE 
				VSL_CALL_ID 			= DOC.VSL_CALL_ID 
				AND MF_DOC_ID 			= DOC.MF_DOC_ID 
				AND SHIPG_NOTE_NO 		= DOC.SHIPG_NOTE_NO
			) 													AS PKG_QTY_SE
		FROM	
			TMT_VSL_SCH 										SCH 
		INNER JOIN 
			JOBS 												CG 
				ON SCH.VSL_CALL_ID 								= CG.VSL_CALL_ID
		INNER JOIN 
			(SELECT 
				VSL_CALL_ID,
				CATG_CD,
				MF_DOC_ID,
				BL_NO,
				'null' 					AS SHIPG_NOTE_NO,
				BL_NO  					AS BLSN,
				CG_TP_CD,
				CMDT_GRP_CD,
				CMDT_CD,
				PKG_TP_CD,
				FWRD,
				CNSNE,
				SHPR,
				POL,
				POD,
				NULL         			AS POR,
				FDEST,
				WGT_CHK,
				DELV_TP_CD
		    FROM 
				TMT_BL
		    WHERE 
				VSL_CALL_ID 			= #{vslCallId}
		    
			UNION
		            
			SELECT 
				VSL_CALL_ID,
				CATG_CD,
				MF_DOC_ID,
				'null' 					AS BL_NO,
				SHIPG_NOTE_NO,
				SHIPG_NOTE_NO 			AS BLSN,
				CG_TP_CD,
				CMDT_GRP_CD,
				CMDT_CD,
				PKG_TP_CD,
				FWRD,
				CNSNE,
				SHPR,
				POL,
				POD,
				POR,
				FDEST,
				WGT_CHK,
				DELV_TP_CD
			FROM 
				TMT_SHIPG_NOTE
			WHERE 
				VSL_CALL_ID 			= #{vslCallId}
			) 													DOC
				ON CG.VSL_CALL_ID 								= DOC.VSL_CALL_ID 
				AND (CG.BL_NO = DOC.BL_NO 						OR CG.SHIPG_NOTE_NO = DOC.SHIPG_NOTE_NO)
		LEFT OUTER JOIN 
			TMT_CMDT 											CM 
				ON CG.CMDT_CD 									= CM.CMDT_CD
		LEFT OUTER JOIN 
			TMT_RHDL_CG 										RH
				ON SCH.VSL_CALL_ID 								= RH.VSL_CALL_ID 
				AND CG.CG_NO 									= RH.ORG_REF_NO
		LEFT OUTER JOIN 
			TMT_DG 												DG
				ON SCH.VSL_CD 									= DG.VSL_CD
				AND SCH.CALL_YEAR 								= DG.CALL_YEAR
				AND SCH.CALL_SEQ 								= DG.CALL_SEQ
				AND (
					(CG.CG_NO = DG.CG_NO 						AND CG.SHIPG_NOTE_NO IS NULL)
					OR 
					(CG.SHIPG_NOTE_NO = DG.CG_NO 				AND CG.SHIPG_NOTE_NO IS NOT NULL)
				)
		WHERE 	
			SCH.VSL_CALL_ID 									= #{vslCallId}
			<choose>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND CG.OPE_CLASS_CD 						IN ('I', 'E')
				</when>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk != 'Y'.toString()">
					AND CG.OPE_CLASS_CD 						IN ('I')
				</when>
				<when test="imVrfChk != 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND CG.OPE_CLASS_CD 						IN ('E')
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
		ORDER BY 
			CG.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateCargoForProformaExportList" parameterType="tariffCodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		SELECT 	/*tariffCodeGenerator.selectGenerateCargoForProformaExportList*/
			CG.CATG_CD 											AS OPE_CLASS,						/* C1 - Category */
			'' 													AS RHDL_MODE,						/* C2 - Rehandle */
			CG.DELV_TP_CD										AS DELIVERY_TYPE,					/* C3 - Delivery Mode */
			SUBSTRING (CG.POL, 1, 2) 							AS POL,
			SUBSTRING (CG.POD, 1, 2) 							AS POD,								/* C4 - Trade Type */
			CG.CG_TP_CD											AS CARGO_TYPE,						/* C7 - Cargo Type */
			CG.CMDT_GRP_CD 										AS COMMODITY_GROUP,      			/* C8 - Commodity Group */
			CG.CMDT_CD 											AS COMMODITY,						/* C9 - Commodity */
			CG.PKG_TP_CD 										AS PACKAGE_TYPE,					/* C10 - Package Type */
			CASE 
				WHEN CG.DELV_TP_CD = 'I' THEN 'LR' 
				ELSE CG.TSPT_TP_CD 
			END													AS MODE_OF_OPR,						/* C12 - Mode of OPR */
			CASE 
				WHEN 
					(SELECT TOP 1 
						ISNULL(D_LR_MT, 0) 
					FROM 
						TMT_SHIPG_NOTE_AMT 
					WHERE 
						VSL_CALL_ID	 		= CG.VSL_CALL_ID 
						AND MF_DOC_ID 		= CG.MF_DOC_ID 
						AND SHIPG_NOTE_NO 	= CG.SHIPG_NOTE_NO
					) = 0 THEN ''
				ELSE 'LR'
			END													AS MODE_OF_OPR_LR,
			CASE 
				WHEN (SELECT TOP 1 ISNULL(D_VSL_MT, 0) 
						FROM TMT_SHIPG_NOTE_AMT 
						WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
								AND MF_DOC_ID = CG.MF_DOC_ID 
								AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
								) = 0 THEN ''
					ELSE 'SE'
			END								AS MODE_OF_OPR_SE,
			
			(SELECT TOP 1 CASE WHEN CG.SHIPG_NOTE_NO IS NOT NULL 
							THEN CASE WHEN CG.DELV_TP_CD = 'I' THEN ISNULL(I_MT, 0) 
									ELSE ISNULL(D_LR_MT, 0) 
								END
							ELSE 0
					END
				FROM TMT_SHIPG_NOTE_AMT 
				WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					AND MF_DOC_ID = CG.MF_DOC_ID 
					AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					) 			AS CG_WGT_LR,
					
			(SELECT TOP 1 CASE WHEN CG.SHIPG_NOTE_NO IS NOT NULL 
							THEN CASE WHEN CG.DELV_TP_CD = 'I' THEN ISNULL(I_M3, 0) 
									ELSE ISNULL(D_LR_M3, 0) 
								END
							ELSE 0
					END
				FROM TMT_SHIPG_NOTE_AMT 
				WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					AND MF_DOC_ID = CG.MF_DOC_ID 
					AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					) 			AS CG_MSRMT_LR,
					
			(SELECT TOP 1 CASE WHEN CG.SHIPG_NOTE_NO IS NOT NULL 
							THEN CASE WHEN CG.DELV_TP_CD = 'I' THEN ISNULL(I_QTY, 0) 
									ELSE ISNULL(D_LR_QTY, 0) 
								END
							ELSE 0
					END
				FROM TMT_SHIPG_NOTE_AMT 
				WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					AND MF_DOC_ID = CG.MF_DOC_ID 
					AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					) 			AS PKG_QTY_LR,
					
			(SELECT TOP 1 ISNULL(D_VSL_MT, 0) 
				FROM TMT_SHIPG_NOTE_AMT 
				WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					AND MF_DOC_ID = CG.MF_DOC_ID 
					AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					) 			AS CG_WGT_SE,
			(SELECT TOP 1 ISNULL(D_VSL_M3, 0) 
				FROM TMT_SHIPG_NOTE_AMT 
				WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					AND MF_DOC_ID = CG.MF_DOC_ID 
					AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					) 			AS CG_MSRMT_SE,
			(SELECT TOP 1 ISNULL(D_VSL_QTY, 0) 
				FROM TMT_SHIPG_NOTE_AMT 
				WHERE VSL_CALL_ID = CG.VSL_CALL_ID 
					AND MF_DOC_ID = CG.MF_DOC_ID 
					AND SHIPG_NOTE_NO = CG.SHIPG_NOTE_NO 
					) 			AS PKG_QTY_SE,
					
			CG.SHIPG_NOTE_NO				AS CARGO_NO,
			CG.CG_WGT 						AS CG_WGT,
			CG.CG_VOL 						AS CG_MSRMT,
			CG.PKG_QTY 						AS PKG_QTY,
			CG.CG_WGT     					AS DOC_WGT,
			CG.CG_VOL	    				AS DOC_MSRMT,
			CG.PKG_QTY						AS DOC_PKG_QTY,
			CG.WGT_CHK						AS WGT_CHK,
			CG.SHIPG_NOTE_NO 				AS SHIPG_NOTE_NO,
			CG.FWRD 						AS FWR_AGNT,
			CG.SHPR 						AS SHPR,
			CG.CNSNE 						AS CNSNE,
			(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.FWRD AND PTNR_TYPE = 'FWD')     AS FWD_PAY_TP,
			(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.SHPR AND PTNR_TYPE = 'CNS')     AS SHPR_PAY_TP,
			(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.CNSNE AND PTNR_TYPE = 'CNS')     AS CNS_PAY_TP,
			CG.VSL_CALL_ID,
			'PRF' 							AS SCR_ID,
			CG.SHIPG_NOTE_NO 				AS REF_NO,
			CG.MF_DOC_ID 					AS REF_NO2
		FROM 	
			TMT_VSL_SCH SCH
		INNER JOIN 
			TMT_SHIPG_NOTE CG 
				ON SCH.VSL_CALL_ID 								= CG.VSL_CALL_ID
		WHERE	
			SCH.VSL_CALL_ID 									= #{vslCallId} 
			AND CG.MF_DOC_ID 									= #{bookingNo}
			AND CG.CG_TP_CD 									NOT LIKE 'RCV'
			<if test="shipgNoteNo != '' and shipgNoteNo != null ">
				AND CG.SHIPG_NOTE_NO 							= #{shipgNoteNo}
			</if>
		ORDER BY 
			CG.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateCargoForProformaImportList" parameterType="tariffCodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		SELECT 	/*tariffCodeGenerator.selectGenerateCargoForProformaImportList*/
				CG.CATG_CD 						AS OPE_CLASS,						/* C1 - Category */
				'' 								AS RHDL_MODE,						/* C2 - Rehandle */
				CG.DELV_TP_CD 					AS DELIVERY_TYPE,					/* C3 - Delivery Mode */
				SUBSTRING (CG.POL, 1, 2) 			AS POL,
				SUBSTRING (CG.POD, 1, 2) 			AS POD,								/* C4 - Trade Type */
				CG.CG_TP_CD						AS CARGO_TYPE,						/* C7 - Cargo Type */
 				CG.CMDT_GRP_CD 					AS COMMODITY_GROUP,      			/* C8 - Commodity Group */ 
				CG.CMDT_CD 						AS COMMODITY,						/* C9 - Commodity */
				CG.PKG_TP_CD 					AS PACKAGE_TYPE,					/* C10 - Package Type */
				CG.TSPT_TP_CD 					AS MODE_OF_OPR,						/* C12 - Mode of OPR */
				CG.BL_NO 						AS CARGO_NO,
				CG.CG_WGT 						AS CG_WGT,
				CG.CG_VOL 						AS CG_MSRMT,
				CG.PKG_QTY 						AS PKG_QTY,
				CG.CG_WGT     					AS DOC_WGT,
				CG.CG_VOL	    				AS DOC_MSRMT,
				CG.PKG_QTY						AS DOC_PKG_QTY,
				CG.BL_NO 						AS BL_NO,
				CG.WGT_CHK						AS WGT_CHK,
				CG.FWRD 						AS FWR_AGNT,
				CG.SHPR 						AS SHPR,
				CG.CNSNE 						AS CNSNE,
				(SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.FWRD AND PTNR_TYPE = 'FWD')     AS FWD_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.SHPR AND PTNR_TYPE = 'CNS')     AS SHPR_PAY_TP,
		        (SELECT PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = CG.CNSNE AND PTNR_TYPE = 'CNS')     AS CNS_PAY_TP,
				CG.VSL_CALL_ID,
				'PRF' 							AS SCR_ID,
				CG.BL_NO 						AS REF_NO,
				CG.MF_DOC_ID 					AS REF_NO2
		FROM 	TMT_VSL_SCH SCH
		        INNER JOIN TMT_BL CG ON SCH.VSL_CALL_ID = CG.VSL_CALL_ID
		WHERE	SCH.VSL_CALL_ID = #{vslCallId} 
				AND CG.MF_DOC_ID = #{masterBL}
				AND CG.CG_TP_CD NOT LIKE 'RCV'
				<if test="blNo != '' and blNo != null ">
					AND CG.BL_NO = #{blNo}
				</if>
		ORDER BY CG.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateRoroList" parameterType="tariffCodeGeneratorParm" resultMap="tariffCodeGeneratorItemMap">
		SELECT	/*tariffCodeGenerator.selectGenerateRoroList*/
				DISTINCT
				CASE JOB.OPE_CLASS_CD WHEN 'R' THEN 'E' ELSE JOB.OPE_CLASS_CD END 				AS OPE_CLASS,		/* C1 - Category */
		        RH.RHDL_MODE 														AS RHDL_MODE,  		/* C2 - Rehandle */
		        CASE JOB.OPE_CLASS_CD WHEN 'I' THEN OA.DELV_TP_CD ELSE JOB.DELV_TP_CD END		AS DELIVERY_TYPE, 	/* C3 - Delivery Mode */
		        CASE SCH.DOMESTIC_CHK WHEN 'Y' THEN 'D' ELSE 'I' END								AS VSLTPTRADE, 		/* C4 - Trade Type */
		        ISNULL(OA.CG_TP_CD, RORO.CG_TP_CD) 									AS CARGO_TYPE,		/* C7 - Cargo Type */ 
		        DOC.CMDT_GRP_CD 													AS COMMODITY_GROUP,	/* C8 - Commodity Group */ 
		        DOC.CMDT_CD															AS COMMODITY,		/* C9 - Commodity */
		        ISNULL(OA.PKG_TP_CD, JOB.PKG_TP_CD)									AS PACKAGE_TYPE,	/* C10 - Package Type */
		        '' 																	AS DG_CLASS,		/* C11 - DG Class */
		        ISNULL(ISNULL(OA.TSPT_TP_CD, JOB.TSPT_TP_CD), 'OH')						AS MODE_OF_OPR, 	/* C12 - Mode of OPR */
		        (
		        	SELECT TOP 1 JOB.JOB_TP_CD 
		        	FROM TMT_JOB JOB 
		        	WHERE JOB.VSL_CALL_ID = RORO.VSL_CALL_ID
		        	AND JOB.CG_NO = RORO.CG_NO
		        	AND JOB.JOB_TP_CD IN ('DS', 'LD')
		        	
		        )																	AS JOB_TP_CD,		/* C14 - Operation Type */
				JOB.WH_TP           												AS WH_LOC_TP, /* C6 - W/H Type   */
				RORO.CG_NO 															AS CARGO_NO,
				ISNULL(OA.BILL_WGT, 0)													AS CG_WGT,
				ISNULL(OA.BILL_MSRMT, 0)												AS CG_MSRMT,
				ISNULL(OA.BILL_PKG_QTY, 0)												AS PKG_QTY,
		        <!-- '' 																	AS LAST_BILLING_DATE, -->
		        null 																AS LAST_BILLING_DATE,
		        '' 																	AS FREE_STRG_DD,
		        DOC.BL_NO 															AS BL_NO,
		        DOC.SHIPG_NOTE_NO 													AS SHIPG_NOTE_NO,
		        SCH.ARRV_SA_ID  													AS SHIPG_AGNT,
		        (
		        	SELECT TOP 1 PAYMENT_TYPE 
		        	FROM TMT_AGENCY_INFO SA 
		        	WHERE SA.AGENCY_CODE = SCH.ARRV_SA_ID 
		        	AND PTNR_TYPE = 'SHA' 
		        	
		        ) 																	AS SHIPG_AGENT_PAY_TP,
				DOC.FWRD AS FWR_AGNT,
				(SELECT  TOP 1 PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.FWRD AND PTNR_TYPE = 'FWD') AS FWD_PAY_TP,
				DOC.SHPR AS SHPR,
		        (SELECT TOP 1  PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.SHPR AND PTNR_TYPE = 'SHP') AS SHPR_PAY_TP,
		        DOC.CNSNE AS CNSNE,
		        (SELECT  TOP 1 PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.CNSNE AND PTNR_TYPE = 'CNS') AS CNS_PAY_TP,
		        ISNULL(
					CASE JOB.OPE_CLASS_CD
						WHEN 'I' 
						THEN CASE OA.DELV_TP_CD WHEN 'I' THEN OA.BILL_PKG_QTY ELSE 0 END 
						ELSE JOB.PKG_QTY END,
		            0) AS BILL_PKG_QTY,
		        ISNULL(
		            CASE JOB.OPE_CLASS_CD
						WHEN 'I' 
						THEN CASE OA.DELV_TP_CD WHEN 'I' THEN OA.BILL_WGT ELSE 0 END 
						ELSE JOB.CG_WGT END,
		            0) AS BILL_WGT,
		        ISNULL(
		            CASE JOB.OPE_CLASS_CD
						WHEN 'I' 
						THEN CASE OA.DELV_TP_CD WHEN 'I' THEN OA.BILL_MSRMT ELSE 0 END 
						ELSE JOB.CG_VOL END,
		            0) AS BILL_MSRMT,
		        SCH.CALL_YEAR AS CALL_YEAR,
		        ISNULL(
		            CASE JOB.OPE_CLASS_CD
						WHEN 'I'
						THEN CASE OA.DELV_TP_CD WHEN 'D' THEN OA.BILL_WGT ELSE 0 END
						ELSE JOB.CG_WGT END,
		            0) AS BILL_WGT_D,
		        ISNULL(
		            CASE JOB.OPE_CLASS_CD 
		            WHEN 'I' 
		            THEN CASE OA.DELV_TP_CD WHEN 'D' THEN OA.BILL_MSRMT ELSE 0 END
		            ELSE JOB.CG_VOL END,
		            0) AS BILL_MSRMT_D,
		        ISNULL(
		            CASE JOB.OPE_CLASS_CD 
		            WHEN 'I' 
		            THEN CASE OA.DELV_TP_CD WHEN 'D' THEN OA.BILL_PKG_QTY ELSE 0 END 
		            ELSE JOB.PKG_QTY END,
		            0) AS BILL_PKG_QTY_D,
		        CASE WHEN JOB.OPE_CLASS_CD = 'I'
		        		THEN
							(SELECT TOP 1 CMDT_DESC
							FROM TMT_CMDT
							WHERE CMDT_CD = OA.CMDT_CD)
						ELSE
							(SELECT TOP 1 CMDT_DESC
							FROM TMT_CMDT
							WHERE CMDT_CD = DOC.CMDT_CD)
				END AS DESCR,
				ISNULL(OA.PKG_TP_CD, DOC.PKG_TP_CD) AS REPKG_TP_CD,
				RORO.VSL_CALL_ID,
				RORO.CG_NO AS REF_NO,
				DOC.MF_DOC_ID AS REF_NO2,
				'INV' AS IV_PRFX,
				'OPE' AS SCR_ID,
				DOC.WGT_CHK
		FROM	TMT_VSL_SCH SCH 
				INNER JOIN TMT_RORO_MST RORO 
					ON SCH.VSL_CALL_ID = RORO.VSL_CALL_ID
				INNER JOIN (
		            SELECT 
		                VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,BL_NO
		                ,NULL AS SHIPG_NOTE_NO
		                ,BL_NO  AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,NULL         AS POR
					    ,FDEST
					    ,WGT_CHK
		            FROM TMT_BL
		            WHERE VSL_CALL_ID = #{vslCallId}
		            UNION
		            SELECT 
		                 VSL_CALL_ID
		                ,CATG_CD
		                ,MF_DOC_ID
		                ,NULL AS BL_NO
		                ,SHIPG_NOTE_NO
		                ,SHIPG_NOTE_NO AS BLSN
		                ,CG_TP_CD
		                ,CMDT_GRP_CD
		                ,CMDT_CD
		                ,PKG_TP_CD
		                ,FWRD
		                ,CNSNE
		                ,SHPR
		                ,POL
					    ,POD
					    ,POR
					    ,FDEST
					    ,WGT_CHK
		            FROM TMT_SHIPG_NOTE
		            WHERE VSL_CALL_ID = #{vslCallId}
		        ) DOC
		        	ON RORO.VSL_CALL_ID = DOC.VSL_CALL_ID 
		        	AND (RORO.CG_NO = DOC.BL_NO OR RORO.CG_NO = DOC.SHIPG_NOTE_NO)
		        LEFT OUTER JOIN TMT_B_OPE_AMNT OA
	            	ON RORO.VSL_CALL_ID = OA.VSL_CALL_ID 
	            	AND RORO.CG_NO = OA.CG_NO
		        LEFT OUTER JOIN (
		        	SELECT
			        	B.VSL_CALL_ID,
						B.BL_NO AS CG_NO,
						B.CG_TP_CD,
						B.CATG_CD,
						J.DELV_TP_CD,
						ISNULL(J.TSPT_TP_CD, 'LR') AS TSPT_TP_CD,
						B.CMDT_CD,
						J.CG_WGT						AS CG_WGT,
						J.CG_VOL						AS CG_VOL,
						J.PKG_QTY						AS PKG_QTY,
						ISNULL(J.REPKG_TYPE_CD, B.PKG_TP_CD) AS PKG_TP_CD,
						J.JOB_PURP_CD,
						J.OPE_CLASS_CD,
						RORO.WH_ID						AS WH_ID,
						LOC.LOC_TP_CD					AS WH_TP,
						(SELECT TOP 1 S_CD_NM FROM TMT_CD_MSTD WHERE L_CD = 'MT' AND M_CD   = 'WHTP' AND S_CD   = LOC.LOC_TP_CD) AS WH_TP_NM,
						RORO.JOB_NO
					FROM TMT_JOB J
						INNER JOIN TMT_BL B
							ON J.VSL_CALL_ID = B.VSL_CALL_ID
							AND J.CG_NO = B.BL_NO
						LEFT OUTER JOIN (
							SELECT MST.VSL_CALL_ID,
								MST.CG_NO,
								MST.WH_ID,
								JOB.CHAS_NO,
								JOB.JOB_NO
							FROM TMT_JOB JOB
							INNER JOIN TMT_RORO_MST MST
							ON JOB.VSL_CALL_ID = MST.VSL_CALL_ID
							AND JOB.CG_NO = MST.CG_NO
							WHERE MST.VSL_CALL_ID = JOB.VSL_CALL_ID
							AND MST.CG_NO = JOB.CG_NO
							AND MST.LOC_ID = JOB.TO_LOC_ID
							AND JOB.JOB_PURP_CD = 'AW'
							GROUP BY MST.VSL_CALL_ID, MST.CG_NO, MST.WH_ID, JOB.CHAS_NO, JOB.JOB_NO
						) RORO 
							ON RORO.VSL_CALL_ID = J.VSL_CALL_ID
								AND RORO.CG_NO = J.CG_NO
								AND RORO.CHAS_NO = J.CHAS_NO
						LEFT OUTER JOIN TMT_LOC_DEF LOC
							ON LOC.LOC_ID = RORO.WH_ID
					WHERE J.JOB_PURP_CD IN ('VG', 'VA', 'VB')
					AND J.JOB_TP_CD = 'DS'
					AND J.VSL_CALL_ID = #{vslCallId}
					AND B.CG_TP_CD = 'RCV'
					GROUP BY B.VSL_CALL_ID, B.BL_NO, B.CG_TP_CD, B.CATG_CD, J.DELV_TP_CD, J.TSPT_TP_CD, B.CMDT_CD, J.CG_WGT, J.CG_VOL, J.PKG_QTY, J.REPKG_TYPE_CD, B.PKG_TP_CD, J.JOB_PURP_CD, J.OPE_CLASS_CD, RORO.WH_ID, LOC.LOC_TP_CD, RORO.JOB_NO
				) JOB
		        	ON JOB.VSL_CALL_ID = RORO.VSL_CALL_ID
		        	AND JOB.CG_NO = RORO.CG_NO
		        	AND JOB.CG_WGT = ISNULL(OA.BILL_WGT_V, 0)
					AND JOB.CG_VOL = ISNULL(OA.BILL_MSRMT_V, 0)
					AND JOB.PKG_QTY = ISNULL(OA.BILL_PKG_QTY_V, 0)
	         	LEFT OUTER JOIN TMT_CMDT CM 
	         		ON DOC.CMDT_CD = CM.CMDT_CD
	         	LEFT OUTER JOIN TMT_RHDL_CG RH
	            	ON SCH.VSL_CALL_ID = RH.VSL_CALL_ID AND RORO.CG_NO = RH.ORG_REF_NO
	         	LEFT OUTER JOIN TMT_DG DG
	            	ON SCH.VSL_CD = DG.VSL_CD
	               	AND SCH.CALL_YEAR = DG.CALL_YEAR
					AND SCH.CALL_SEQ = DG.CALL_SEQ
					AND RORO.CG_NO = DG.CG_NO
		WHERE SCH.VSL_CALL_ID = #{vslCallId}
			<choose>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND JOB.OPE_CLASS_CD IN ('I', 'E')
				</when>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk != 'Y'.toString()">
					AND JOB.OPE_CLASS_CD IN ('I')
				</when>
				<when test="imVrfChk != 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND JOB.OPE_CLASS_CD IN ('E')
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
		ORDER BY ISNULL(OA.CG_TP_CD, RORO.CG_TP_CD) ASC
	</select>
	
	<select id="selectGenerateRoroPortHadlingList" parameterType="tariffCodeGeneratorParm" resultMap="tariffCodeGeneratorItemMap">
		WITH JOBS AS (
		    SELECT 
		        J.VSL_CALL_ID,
		        RORO.CG_NO 										AS CG_NO,
		        J.OPE_CLASS_CD,
		        JOB_TP_CD,
		        JOB_PURP_CD,
		        J.DELV_TP_CD,
		        J.CG_WGT CG_WGT,
		        J.CG_VOL CG_VOL,
		        J.PKG_QTY PKG_QTY,
		        MIN(WORK_ST_DT)    								AS WORK_ST_DT,
		        MAX(WORK_END_DT)   								AS WORK_END_DT,
		        JOB_NO,
		        MIN(GATE_TXN_NO) 								AS GATE_TXN_NO,
		        J.TSPT_TP_CD,
		        ISNULL(MAX(J.REPKG_TYPE_CD),
				 MAX(J.PKG_TP_CD)) 								AS PKG_TP_CD,
		        MAX(J.DMG_YN)    								AS DMG_YN,
		        MAX(J.RHDL_MODE) 								AS RHDL_MODE,
		        CG_TP_CD,
		        MAX(J.RMK)   									AS RMK,
		        J.LD_DMG_QTY    								AS LD_DMG_QTY,
		        J.LD_DMG_MT 									AS LD_DMG_MT,
		        J.LD_DMG_M3 									AS LD_DMG_M3,
		        MAX(DO_NO) 										AS DO_NO,
		        MAX(CMDT_GRP_CD)   								AS CMDT_GRP_CD,
		        MAX(J.REPKG_TP_CD)   							AS REPKG_TP_CD,
		        MIN(GR_NO) 										AS GR_NO,
		        MAX(J.EQ_NO) 									AS EQ_NO,
		        J.TO_LOC_ID										AS TO_LOC_ID
		    FROM 
				TMT_JOB J
		    LEFT JOIN 
				TMT_RORO_MST 									RORO 
				ON J.VSL_CALL_ID 								= RORO.VSL_CALL_ID 
				AND J.CG_NO 									= RORO.CG_NO
		    WHERE 
				1 = 1
				AND JOB_PURP_CD 								IN ('WG', 'GW')
				AND J.VSL_CALL_ID 								= #{vslCallId}
				GROUP BY 
					JOB_TP_CD, 
					RORO.CG_NO, 
					J.VSL_CALL_ID, 
					JOB_PURP_CD, 
					J.DELV_TP_CD, 
					J.OPE_CLASS_CD, 
					JOB_NO, 
					CG_TP_CD, 
					J.CG_WGT, 
					J.CG_VOL, 
					J.PKG_QTY, 
					J.TSPT_TP_CD, 
					J.LD_DMG_QTY, 
					J.LD_DMG_MT, 
					J.LD_DMG_M3, 
					J.TO_LOC_ID
		)
		
		SELECT DISTINCT	/*tariffCodeGenerator.selectGenerateRoroPortHadlingList*/
			CASE RORO.OPE_CLASS_CD WHEN 'R' THEN 'E' ELSE RORO.OPE_CLASS_CD END			AS OPE_CLASS,		/* C1 - Category */
			RH.RHDL_MODE 														AS RHDL_MODE,  		/* C2 - Rehandle */
			RORO.DELV_TP_CD													 	AS DELIVERY_TYPE, 	/* C3 - Delivery Mode */
			CASE SCH.DOMESTIC_CHK WHEN 'Y' THEN 'D' ELSE 'I' END								AS VSLTPTRADE, 		/* C4 - Trade Type */
			RORO.CG_TP_CD					 									AS CARGO_TYPE,		/* C7 - Cargo Type */ 
			DOC.CMDT_GRP_CD 													AS COMMODITY_GROUP,	/* C8 - Commodity Group */ 
			DOC.CMDT_CD 														AS COMMODITY,		/* C9 - Commodity */
			RORO.PKG_TP_CD														AS PACKAGE_TYPE,	/* C10 - Package Type */
			'' 																	AS DG_CLASS,		/* C11 - DG Class */
			RORO.TSPT_TP_CD														AS MODE_OF_OPR, 	/* C12 - Mode of OPR */
			RORO.DMG_YN 														AS DAMAGED,			/* C13 - Damaged */
			RORO.JOB_TP_CD														AS JOB_TP_CD,		/* C14 - Operation Type */
			LOC.LOC_TP_CD														AS WH_LOC_TP, 		/* C6 - W/H Type   */ 
			RORO.CG_NO 															AS CARGO_NO,
			ISNULL(RORO.CG_WGT, 0)													AS CG_WGT,
			ISNULL(RORO.CG_VOL, 0)													AS CG_MSRMT,
			ISNULL(RORO.PKG_QTY, 0)												AS PKG_QTY,
			<!-- '' 																	AS LAST_BILLING_DATE, -->
			null 																AS LAST_BILLING_DATE,
			'' 																	AS FREE_STRG_DD,
			DOC.BL_NO 															AS BL_NO,
			DOC.SHIPG_NOTE_NO 													AS SHIPG_NOTE_NO,
			SCH.ARRV_SA_ID  													AS SHIPG_AGNT,
			(
				SELECT TOP 1 PAYMENT_TYPE 
				FROM TMT_AGENCY_INFO SA 
				WHERE SA.AGENCY_CODE = SCH.ARRV_SA_ID 
				AND PTNR_TYPE = 'SHA' 
			
			) 																	AS SHIPG_AGENT_PAY_TP,
			DOC.FWRD AS FWR_AGNT,
			(
				SELECT TOP 1 EQ.EQ_TP_CD
				FROM TMT_EQ_FAC EQ
				INNER JOIN TMT_JOB JOB
					ON EQ.EQ_FAC_NO = JOB.EQ_NO
				INNER JOIN (
					SELECT VSL_CALL_ID, BL_NO AS CG_NO
					FROM TMT_BL
					UNION
					SELECT VSL_CALL_ID, GR_NO AS CG_NO
					FROM TMT_GR
				) DOC
					ON DOC.VSL_CALL_ID = JOB.VSL_CALL_ID
					AND DOC.CG_NO = JOB.CG_NO
				WHERE JOB.VSL_CALL_ID = #{vslCallId}
				AND DOC.CG_NO = RORO.CG_NO
				AND JOB.JOB_PURP_CD IN ('WG', 'GW')
				
			) AS EQUIPMENT_TYPE,
			(SELECT TOP 1 PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.FWRD AND PTNR_TYPE = 'FWD') AS FWD_PAY_TP,
			DOC.SHPR AS SHPR,
			(SELECT TOP 1 PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.SHPR AND PTNR_TYPE = 'SHP') AS SHPR_PAY_TP,
			DOC.CNSNE AS CNSNE,
			(SELECT TOP 1 PAYMENT_TYPE FROM TMT_PTNR WHERE PTNR_CODE = DOC.CNSNE AND PTNR_TYPE = 'CNS') AS CNS_PAY_TP,
			(
				SELECT TOP 1 CMDT_DESC
				FROM TMT_CMDT
				WHERE CMDT_CD = DOC.CMDT_CD 
				
			) AS DESCR,
			REPKG_TP_CD,
			RORO.VSL_CALL_ID,
			RORO.CG_NO AS REF_NO,
			DOC.MF_DOC_ID AS REF_NO2,
			'INV' AS IV_PRFX,
			'OPE' AS SCR_ID,
			DOC.WGT_CHK
		FROM	
			TMT_VSL_SCH 										SCH 
		INNER JOIN 
			JOBS 												RORO 
			ON SCH.VSL_CALL_ID 									= RORO.VSL_CALL_ID
		INNER JOIN 
			(SELECT 
				VSL_CALL_ID,
				CATG_CD,
				MF_DOC_ID,
				BL_NO,
				NULL 					AS SHIPG_NOTE_NO,
				BL_NO  					AS BLSN,
				CG_TP_CD,
				CMDT_GRP_CD,
				CMDT_CD,
				PKG_TP_CD,
				FWRD,
				CNSNE,
				SHPR,
				POL,
				POD,
				NULL         			AS POR,
				FDEST,
				WGT_CHK
			FROM 
				TMT_BL
			WHERE 
				VSL_CALL_ID 			= #{vslCallId}

			UNION

			SELECT 
				VSL_CALL_ID,
				CATG_CD,
				MF_DOC_ID,
				NULL 					AS BL_NO,
				SHIPG_NOTE_NO,
				SHIPG_NOTE_NO 			AS BLSN,
				CG_TP_CD,
				CMDT_GRP_CD,
				CMDT_CD,
				PKG_TP_CD,
				FWRD,
				CNSNE,
				SHPR,
				POL,
				POD,
				POR,
				FDEST,
				WGT_CHK
			FROM 
				TMT_SHIPG_NOTE
			WHERE 
				VSL_CALL_ID 			= #{vslCallId}
			) 													DOC
				ON RORO.VSL_CALL_ID 							= DOC.VSL_CALL_ID 
				AND (RORO.CG_NO = DOC.BL_NO 					OR RORO.CG_NO = DOC.SHIPG_NOTE_NO)
		LEFT OUTER JOIN 
			TMT_CMDT 											CM 
				ON DOC.CMDT_CD 									= CM.CMDT_CD
		LEFT OUTER JOIN 
			TMT_RHDL_CG 										RH
				ON SCH.VSL_CALL_ID 								= RH.VSL_CALL_ID 			
				AND RORO.CG_NO 									= RH.ORG_REF_NO
		LEFT OUTER JOIN 
			TMT_LOC_DEF 										LOC
				ON SUBSTRING(RORO.TO_LOC_ID, 0, CHARINDEX('(', RORO.TO_LOC_ID, 1) - 1) = LOC.WH_ID
		WHERE 	
			SCH.VSL_CALL_ID 									= #{vslCallId}
			AND	LOC.LOC_DIV_CD 									= 'WHO'
			<choose>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND RORO.OPE_CLASS_CD 						IN ('I', 'E')
				</when>
				<when test="imVrfChk == 'Y'.toString() and exVrfChk != 'Y'.toString()">
					AND RORO.OPE_CLASS_CD 						IN ('I')
				</when>
				<when test="imVrfChk != 'Y'.toString() and exVrfChk == 'Y'.toString()">
					AND RORO.OPE_CLASS_CD 						IN ('E')
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
		ORDER BY 
			RORO.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateRoroForProformaExportList" parameterType="tariffCodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		SELECT 	/* tariffCodeGenerator.selectGenerateRoroForProformaExportList */
			DOC.CATG_CD 										AS OPE_CLASS,						/* C1 - Category */
			'' 													AS RHDL_MODE,						/* C2 - Rehandle */
			DOC.DELV_TP_CD										AS DELIVERY_TYPE,					/* C3 - Delivery Mode */
			SUBSTRING (DOC.POL, 1, 2) 							AS POL,
			SUBSTRING (DOC.POD, 1, 2) 							AS POD,								/* C4 - Trade Type */
			DOC.CG_TP_CD										AS CARGO_TYPE,						/* C7 - Cargo Type */
			DOC.CMDT_GRP_CD 									AS COMMODITY_GROUP,      			/* C8 - Commodity Group */
			DOC.CMDT_CD 										AS COMMODITY,						/* C9 - Commodity */
			DOC.PKG_TP_CD 										AS PACKAGE_TYPE,					/* C10 - Package Type */
			DOC.TSPT_TP_CD 										AS MODE_OF_OPR,						/* C12 - Mode of OPR */
			DOC.SHIPG_NOTE_NO									AS CARGO_NO,
			DOC.CG_WGT 											AS CG_WGT,
			DOC.CG_VOL 											AS CG_MSRMT,
			DOC.PKG_QTY 										AS PKG_QTY,
			DOC.CG_WGT     										AS DOC_WGT,
			DOC.CG_VOL	    									AS DOC_MSRMT,
			DOC.PKG_QTY											AS DOC_PKG_QTY,
			DOC.WGT_CHK											AS WGT_CHK,
 			DOC.SHIPG_NOTE_NO 									AS SHIPG_NOTE_NO,
			DOC.FWRD 											AS FWR_AGNT,
			DOC.SHPR 											AS SHPR,
			DOC.CNSNE 											AS CNSNE,
			(SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 			= DOC.FWRD 
				AND PTNR_TYPE 		= 'FWD'
			)     												AS FWD_PAY_TP,
	        (SELECT 
	        	PAYMENT_TYPE
	        FROM 
	        	TMT_PTNR 
	        WHERE 
	        	PTNR_CODE 			= DOC.SHPR 
	        	AND PTNR_TYPE 		= 'CNS'
	        )     												AS SHPR_PAY_TP,
	        (SELECT 
	        	PAYMENT_TYPE 
	        FROM 
	        	TMT_PTNR 
	        WHERE 
	        	PTNR_CODE 			= DOC.CNSNE 
	        	AND PTNR_TYPE 		= 'CNS'
	        )     												AS CNS_PAY_TP,
			DOC.VSL_CALL_ID,
			'PRF' 												AS SCR_ID,
			DOC.SHIPG_NOTE_NO 									AS REF_NO,
			DOC.MF_DOC_ID 										AS REF_NO2
		FROM 	
			TMT_VSL_SCH SCH
		INNER JOIN 
			TMT_SHIPG_NOTE DOC 
				ON SCH.VSL_CALL_ID								= DOC.VSL_CALL_ID
		WHERE	
			SCH.VSL_CALL_ID 									= #{vslCallId} 
			AND DOC.MF_DOC_ID 									= #{bookingNo}
			AND DOC.CG_TP_CD 									LIKE 'RCV'
			<if test="shipgNoteNo != '' and shipgNoteNo != null ">
				AND DOC.SHIPG_NOTE_NO 							= #{shipgNoteNo}
			</if>
		ORDER BY 
			DOC.CG_TP_CD ASC
	</select>
	
	<select id="selectGenerateRoroForProformaImportList" parameterType="tariffCodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		SELECT 	/* tariffCodeGenerator.selectGenerateRoroForProformaImportList */
			DOC.CATG_CD 										AS OPE_CLASS,						/* C1 - Category */
			'' 													AS RHDL_MODE,						/* C2 - Rehandle */
			DOC.DELV_TP_CD 										AS DELIVERY_TYPE,					/* C3 - Delivery Mode */
			SUBSTRING (DOC.POL, 1, 2) 							AS POL,
			SUBSTRING (DOC.POD, 1, 2) 							AS POD,								/* C4 - Trade Type */
			DOC.CG_TP_CD										AS CARGO_TYPE,						/* C7 - Cargo Type */
			DOC.CMDT_GRP_CD 									AS COMMODITY_GROUP,      			/* C8 - Commodity Group */ 
			DOC.CMDT_CD 										AS COMMODITY,						/* C9 - Commodity */
			DOC.PKG_TP_CD 										AS PACKAGE_TYPE,					/* C10 - Package Type */
			DOC.TSPT_TP_CD 										AS MODE_OF_OPR,						/* C12 - Mode of OPR */
			DOC.BL_NO 											AS CARGO_NO,
			DOC.CG_WGT 											AS CG_WGT,
			DOC.CG_VOL 											AS CG_MSRMT,
			DOC.PKG_QTY 										AS PKG_QTY,
			DOC.CG_WGT     										AS DOC_WGT,
			DOC.CG_VOL	    									AS DOC_MSRMT,
			DOC.PKG_QTY											AS DOC_PKG_QTY,
			DOC.BL_NO 											AS BL_NO,
			DOC.WGT_CHK											AS WGT_CHK,
			DOC.FWRD 											AS FWR_AGNT,
			DOC.SHPR 											AS SHPR,
			DOC.CNSNE 											AS CNSNE,
			(SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.FWRD 
				AND PTNR_TYPE 			= 'FWD'
			)     												AS FWD_PAY_TP,
			(SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.SHPR 
				AND PTNR_TYPE 			= 'CNS'
			)     												AS SHPR_PAY_TP,
			(SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.CNSNE 
				AND PTNR_TYPE 			= 'CNS'
			)     												AS CNS_PAY_TP,
			DOC.VSL_CALL_ID,
			'PRF' 												AS SCR_ID,
			DOC.BL_NO 											AS REF_NO,
			DOC.MF_DOC_ID 										AS REF_NO2
		FROM 	
			TMT_VSL_SCH 										SCH
		INNER JOIN 
			TMT_BL DOC ON SCH.VSL_CALL_ID 						= DOC.VSL_CALL_ID
		WHERE	
			SCH.VSL_CALL_ID 									= #{vslCallId} 
			AND DOC.MF_DOC_ID 									= #{masterBL}
			AND DOC.CG_TP_CD 									LIKE 'RCV'
			<if test="blNo != '' and blNo != null ">
				AND DOC.BL_NO 									= #{blNo}
			</if>
		ORDER BY 
			DOC.CG_TP_CD ASC
	</select>
	
	<select id="selectTrfCondPrpt" parameterType="tariffCodeGatheredItem" resultMap="condPrpt">
		SELECT /* tariffCodeGenerator.selectTrfCondPrpt */
			TRF_CD, 
			SUB_TRF_CD, 
			PRC_TP_CD, 
			PRPT_CD, 
			PRPT_NM, 
			DATA_TP_CD, 
			ISNULL(
				(SELECT TOP 1 
					CHR_VAL 
				FROM 
					TMT_B_TRF_COND 
				WHERE 
					TRF_CD 			= #{trfCd} 
					AND SUB_TRF_CD 	= #{subTrfCd} 
					<!--  AND PRPT_CD 	= 'C12' -->
				), 
				'NULL'
			) 													AS OPE_MODE
		FROM 
			TMT_B_TRF_COND_PRPT
		WHERE 
			TRF_CD 												= #{trfCd}
			AND SUB_TRF_CD 										= #{subTrfCd}
			AND PRC_TP_CD 										= #{prcTpCd}
    </select>
    
    <select id="selectTrfPayerList" parameterType="tariffCodeGeneratorParm" resultMap="payerMap">
		SELECT 	/* tariffCodeGenerator.selectTrfPayerList */
			ADV.ADV_NO 											AS ADV_NO, 
			ADV_SEQ, 
			VSL_CALL_ID, 
			ADV.PAYER_TP_CD 									AS PTNR_TP_CD, 
			ADV.PAYER_CD 										AS PTNR_CD, 
			TRF_TP_CD, 
			CASE OPE_TP_CD 
				WHEN 'DS' THEN 'I' 
				ELSE 'E' 
			END 												AS OPE_TP_CD,
			CMDT_CD, 
			BL_NO, 
			SHIPG_NOTE_NO, 
			WGT, 
			VOL, 
			QTY, 
			SUB_TRF_TP_CD
		FROM 
			TMT_B_IV_ADV 										ADV
		WHERE 
			ADV.VSL_CALL_ID 									= #{vslCallId}
    </select>
    
	<select id="selectInvoiceItemsForDataGathering"  parameterType="tariffCodeGeneratorParm" resultType="InvoiceDataItem">
		SELECT /*	tariffCodeGenerator.selectInvoiceItemsForDataGathering	*/
			SUM(ISNULL(APLY_AMT, 0)) 							AS APLYAMT,
		    SUM(ISNULL(UNIT1_VAL, 0)) 							AS UNIT1VAL
		FROM 
			TMT_B_IV_DATA 										IV_DATA
		LEFT JOIN 
			TMT_B_TRF_CD 										TRF 
			ON TRF.TRF_CD 										= IV_DATA.TRF_CD 
			AND TRF.SUB_TRF_CD 									= IV_DATA.SUB_TRF_CD 
		WHERE 
			VSL_CALL_ID 										= #{vslCallId}
			<if test="trfTpCd != 'CC' and trfTpCd != 'BM'">
				<choose>
					<when test="masterBL !=null and masterBL != ''">
						AND REF_NO1 							= #{blNo}
						AND REF_NO2 							= #{masterBL}
					</when>
					<otherwise>
						AND REF_NO1 							= #{shipgNoteNo}
						AND REF_NO2 							= #{bookingNo}
					</otherwise>
				</choose>
			</if>
			AND TRF.TRF_TP_CD 									= #{trfTpCd}
			AND STAT_CD 										IN ('IV','PC','SM','VF') 
			HAVING 
				SUM(ISNULL(APLY_AMT, 0)) 						IS NOT NULL 
				AND SUM(ISNULL(UNIT1_VAL, 0)) 					IS NOT NULL
	</select>
	
	<select id="selectInvoiceItemsForProformalist"  parameterType="tariffCodeGeneratorParm" resultType="InvoiceDataItem">
		SELECT /* tariffCodeGenerator.selectInvoiceItemsForProformalist */
		    IV_DATA.UNIT1_VAL 									AS PRFUNIT1VAL,
		    IV_DATA.APLY_AMT 									AS PRFAMT,
			COND.CHR_VAL 										AS DELVTPCD,
			SUMMARY_IV_DATA.ALL_UNIT1_VAL						AS UNIT1VAL,
		    SUMMARY_IV_DATA.ALL_APLY_AMT						AS APPLIEDAMT
		FROM 
			TMT_B_IV_DATA 										IV_DATA
		LEFT JOIN 
			TMT_B_TRF_CD TRF 
				ON TRF.TRF_CD 									= IV_DATA.TRF_CD 
				AND TRF.SUB_TRF_CD 								= IV_DATA.SUB_TRF_CD
		LEFT JOIN 
			(SELECT 
				TRF_CD,
				SUB_TRF_CD,
				CHR_VAL
		    FROM 
				TMT_B_TRF_COND 		COND
		    WHERE 
				PRPT_CD = 'C3'
		    	AND CHR_VAL NOT IN ('B')
		    ) COND 
				ON TRF.TRF_CD 									= COND.TRF_CD 
				AND TRF.SUB_TRF_CD 								= COND.SUB_TRF_CD
		INNER JOIN (
			SELECT
				MIN(IV_NO) 										AS IV_NO,
				SUM(UNIT1_VAL) 									AS ALL_UNIT1_VAL,
				SUM(APLY_AMT) 									AS ALL_APLY_AMT
			FROM
				TMT_B_IV_DATA 									IV_DATA
			LEFT JOIN 
				TMT_B_TRF_CD 									TRF 
				ON TRF.TRF_CD 									= IV_DATA.TRF_CD
				AND TRF.SUB_TRF_CD 								= IV_DATA.SUB_TRF_CD
			WHERE
				VSL_CALL_ID 									= #{vslCallId}
				AND REF_NO1 									= #{blNo}
				AND REF_NO2 									= #{masterBL}
				AND TRF.TRF_TP_CD 								= #{trfTpCd}
				AND SCR_ID 										= 'PFI'
				AND STAT_CD 									IN ('IV','PC','SM','VF')
		) 														SUMMARY_IV_DATA 
			ON SUMMARY_IV_DATA.IV_NO 							= IV_DATA.IV_NO		
		WHERE 
			IV_DATA.VSL_CALL_ID 								= #{vslCallId}
			<if test="trfTpCd != 'CC' and trfTpCd != 'BM'">
				<choose>
					<when test="masterBL !=null and masterBL != ''">
						AND REF_NO1 							= #{blNo}
						AND REF_NO2 							= #{masterBL}
					</when>
					<otherwise>
						AND REF_NO1 							= #{shipgNoteNo}
						AND REF_NO2 							= #{bookingNo}
					</otherwise>
				</choose>
			</if>
			AND TRF.TRF_TP_CD 									= #{trfTpCd}
			AND SCR_ID 											= 'PFI'
			AND STAT_CD 										IN ('IV','PC','SM','VF')
			AND (
				ADHOC_YN 										IS NULL
				OR ADHOC_YN 									= ''
			)
	</select>
	
	<select id="selectInvoiceItemsForServiceOrder"  parameterType="tariffCodeGeneratorParm" resultType="InvoiceDataItem">
		SELECT /*tariffCodeGenerator.selectInvoiceItemsForServiceOrder*/
			SUM(APLY_AMT) 										AS APLYAMT,
		    SUM(UNIT1_VAL) 										AS UNIT1VAL
		FROM 
			TMT_B_IV_DATA 										IV_DATA
		LEFT JOIN 
			TMT_B_TRF_CD 										TRF 
				ON TRF.TRF_CD 									= IV_DATA.TRF_CD 
				AND TRF.SUB_TRF_CD 								= IV_DATA.SUB_TRF_CD 
		WHERE 
			VSL_CALL_ID 										= #{vslCallId}
			AND REF_NO1 										= #{odrNo}
			AND REF_NO2 										= #{vslCallId}
			AND TRF.TRF_TP_CD 									= #{trfTpCd}
			AND STAT_CD 										IN ('IV','PC','SM','VF') 
	</select>
	
	<select id="selectGenerateServiceOrderCreditList" parameterType="tariffCodeGeneratorParm" resultMap="tariffCodeServiceOrderGeneratorItemMap">
		SELECT /*tariffCodeGenerator.selectGenerateServiceOrderCreditList*/
			 DISTINCT
             VSL_CALL_ID
             , A.ODR_NO
             , STAT_CD
             , SUMIT_BY
             , FORMAT(SUMIT_DT, 'yyyyMMddHHmm') SUMIT_DT
             , APPRV_BY
             , FORMAT(APPRV_DT, 'yyyyMMddHHmm') APPRV_DT
             , REJ_BY
             , FORMAT(REJ_DT, 'yyyyMMddHHmm') REJ_DT
             , CNCL_BY
             , FORMAT(CNCL_DT, 'yyyyMMddHHmm') CNCL_DT
             , COM_BY
             , FORMAT(COM_DT, 'yyyyMMddHHmm') COM_DT
             , PAYER
             , CATEGORY1
             , CATEGORY2
             , CATEGORY3
             , SVC_DT_FMT
             , SVC_DT_TP
             , DT1_CHK
             , DT1_TIT
             , DT1_FMT
             , DT1_TP
             , DT2_CHK
             , DT2_TIT
             , DT2_FMT
             , DT2_TP
             , SHFT_CHK
             , UNIT_TIT
             , UNIT_UOM
             , UNIT_DEC
             , UNIT1_CHK
             , UNIT1_TIT
             , UNIT1_UOM
             , UNIT1_DEC
             , UNIT2_CHK
             , UNIT2_TIT
             , UNIT2_UOM
             , UNIT2_DEC
             , EQ_DIV_CD
             , ISNULL(CAPA_CD, '') CAPA_CD
             , PAY_TP_CD
             , PRC_TP_CD
             , LOC_CHK
             , RMK_CHK
             , CMDTY_CHK
             , FORMAT(SVC_DT_FM,'yyyyMMddHHmm') AS  SVC_DT_FM
             , FORMAT(SVC_DT_TO,'yyyyMMddHHmm') AS  SVC_DT_TO
             , FORMAT(DT1_FM,'yyyyMMddHHmm')    AS  DT1_FM
             , FORMAT(DT1_TO,'yyyyMMddHHmm')    AS  DT1_TO
             , FORMAT(DT2_FM,'yyyyMMddHHmm')    AS  DT2_FM
             , FORMAT(DT2_TO,'yyyyMMddHHmm')    AS  DT2_TO
             , SHFT_ID
             , UNIT
             , UNIT1
             , UNIT2
             , LOC_ID
             , REQ_RMK
             , COM_CHK
             , CMDTY_CD
             , COM_CMDTY_CD
             , FORMAT(SVC_DT_FM,'yyyyMMddHHmm')  AS COM_SVC_DT_FM
             , FORMAT(SVC_DT_FM,'yyyyMMddHHmm')  AS COM_SVC_DT_TO
             , FORMAT(SVC_DT_FM,'yyyyMMddHHmm')  AS COM_DT1_FM
             , FORMAT(SVC_DT_FM,'yyyyMMddHHmm')  AS COM_DT1_TO
             , FORMAT(SVC_DT_FM,'yyyyMMddHHmm')  AS COM_DT2_FM
             , FORMAT(SVC_DT_FM,'yyyyMMddHHmm')  AS COM_DT2_TO
             , ISNULL(com_shft_id, DBO.F_GET_SHIFT_CD (com_svc_dt_fm, '')) COM_SHFT_ID
             , COM_UNIT
             , COM_UNIT1
             , COM_UNIT2
             , ISNULL(COM_CAPA_CD, '') COM_CAPA_CD
             , COM_LOC_ID
             , COM_RMK
             , RMK
             , REQ_DOC_NO
             , COM_DOC_NO
             , REQ_UNIT_NO
             , COM_UNIT_NO
             , (SELECT TOP 1 PAYMENT_TYPE FROM TMT_PTNR WHERE 1=1 AND PTNR_CODE = PAYER AND PAYMENT_TYPE = 'C') AS PAYER_TYPE
             , 'INV' AS IV_PRFX
        FROM  
        	TMT_SVC_ODR A
        WHERE  
        	ODR_NO IS NOT NULL
        	AND STAT_CD = 'CP'

        <if test="vslCallId != null and vslCallId != ''">
			AND VSL_CALL_ID = #{vslCallId}
		</if>
	</select>
	
	<select id="selectReconcileVerifyChk"  parameterType="tariffCodeGeneratorParm" resultType="InvoiceDataItem">
		SELECT /* tariffCodeGenerator.selectReconcileVerifyChk */
			ISNULL(IM_RECCL_CD, 'N') 							AS IMVRFCHK,
			ISNULL(EX_RECCL_CD, 'N') 							AS EXVRFCHK
		FROM 
			TMT_B_RECCL
		WHERE 
			VSL_CALL_ID 										= #{vslCallId}
	</select>
	
	<!-- MMC - Settlement -->
	<delete id="deleteItem" parameterType="invoiceDataItem">
		DELETE /* tariffCodeGenerator.deleteItem */
			TMT_B_IV_DATA 
	  	WHERE 
	  		VSL_CALL_ID 										= #{vslCallId}
	  		AND STAT_CD 										NOT IN ('IV','VF', 'PC', 'SM', 'IC')
		<if test="bookingNo != null and bookingNo != ''">
			AND (REF_NO2 = #{bookingNo} 						OR REF_NO2 IS NULL)
		</if>
		<if test="masterBl != null and masterBl != ''">
			AND (REF_NO2 = #{masterBl} 							OR REF_NO2 IS NULL)
		</if>
	  	<if test="scrId != null and scrId != ''">
			AND SCR_ID 											= #{scrId}
		</if>
  	</delete>	
  	
  	
  	
  	<select id="selectTariffCodelistForCalculationProforma" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeGeneratorMap">
	/* tariffCodeGenerator.selectTariffCodelistForProforma */
		WITH 
			VSL_INFO AS (
				<choose>
					<when test="vslCallId == 'STRG' or vslCallId == 'CSTO'">
						SELECT 
							FORMAT(SYSDATETIME(), 'yyyyMMdd') 	AS COMPARING_DT 
					</when>
					<otherwise>
						SELECT 	
							FORMAT(
								CASE A.LOC_CD
									WHEN 'CT'  THEN B.ATB
									WHEN 'BBT' THEN B.ATB
									WHEN 'ANT' THEN B.ATB
									WHEN 'CRT' THEN B.ATB
									ELSE B.ATA
								END,
								'yyyyMMdd')  					AS COMPARING_DT
							<!-- Invalid Column
								B.TMNL_CD
							-->
							FROM 
								TMT_BERTH_LOC 					A, 
								TMT_VSL_SCH 					B
							WHERE 
								A.BERTH_CD 						= B.BERTH_LOC 
								AND B.VSL_CALL_ID 				= #{vslCallId}
					</otherwise>
				</choose>
			)
		SELECT 
			DISTINCT(TRF.TRF_CD) 								AS TRF_CD,    
			TRF.SUB_TRF_CD,          
			TCD.DESCR,
			TRF.UNIT_PRC,            
			TRF.TRF_REG_NO,
			TRF.APLY_YMD,            
			TRF.EXPR_YMD,
			TRF.MIN_VAL1,            
			TRF.MIN_VAL2,
			TRF.MIN_VAL3,            
			TRF.MAX_AMT,
			TRF.PKG_NM,              
			TRF.PKG_TRF_NO,
			TRF.PRC_TP_CD,
			TCD.BILL_TP_CD,            
			TCD.SSR_TP_CD,
			TCD.COST_CENT_CD, 
			<choose>
				<when test="branchCode == 'MOST_KPGC1'">
					(SELECT TOP(1)
						ERP_COST_CENT 
					FROM 
						TMT_B_COST_CENTER 
					WHERE 
						TRF_CD 				= TRF.TRF_CD 
						AND SUB_TRF_CD 		= TRF.SUB_TRF_CD 
						<!-- Invalid Column 
						AND TMNL_CD 		= VSL.TMNL_CD
						--> 
					) 											AS ERP_COST_CENT,
				</when>
				<otherwise>
					TCD.ERP_COST_CENT,
				</otherwise>
			</choose>   
			CASE 
				WHEN (TCD.PAYER IS NULL OR TCD.PAYER = '')
					THEN 'SHA'
				ELSE TCD.PAYER      
			END 												AS PAYER,    
			TCD.IV_UNIT1,                
			TCD.IV_UNIT2,
			TCD.IV_UNIT3,                 
			TCD.VLD_YN,
			<!-- Invalid Column  
			ISNULL(TCD.APLY_RULE_CD,' ')   						AS APLY_RULE_CD ,
			TCD.SUBS_UNIT_VAL,
			TCD.SUBS_RATE,            
			TCD.SUBS_TRF_CD,
			TCD.GST_TP_CD,
			TCD.GST_RATE										AS GST_RATE,  
			-->             
			TCD.TRF_TP_CD,
			TCODE.PRPT_CD,            
			ISNULL(TCODE.OPR_IDT_CD,'EQ')						AS OPR_IDT_CD,
			TCODE.CHR_VAL,            
			TCODE.NO_VAL,
			TCODE.DT_VAL,            
			TCODE.TIER_VAL1,                
			TCODE.TIER_VAL2,        
			TCODE.BND_VAL1,
			TCODE.BND_VAL2,            
			TCODE.SEQ,
			<!-- Invalid Column 
			TCODE.SYTM_ID,
			CASE
				WHEN TMNL IS NULL THEN ''
				ELSE TMNL
			END 												AS tmnl,
			-->
			<choose>
		        <when test="estDt != null and estDt != '' ">
		            FORMAT(
						CONVERT(DATETIME, #{estDt}, 103),
						'yyyyMMddHHmm'
					) 											AS EXPECTED_DELV_DT,
		        </when>
		        <otherwise>
		            ''  										AS EXPECTED_DELV_DT,
		        </otherwise>
		    </choose>
			TRF.MIN_AMT
	FROM     
		TMT_B_TRF_CD 											TCD 
	INNER JOIN 
		VSL_INFO 												VSL 
		ON 1 = 1    
	INNER JOIN 
		TMT_B_TRF TRF    
			ON TCD.TRF_CD 										= TRF.TRF_CD 
			AND TRF.SUB_TRF_CD 									= TCD.SUB_TRF_CD        
	INNER JOIN (
		SELECT    
			ISNULL(TCD.TRF_CD, NULL)         					AS TRF_CD, 
			ISNULL(TCD.SUB_TRF_CD, NULL)     					AS SUB_TRF_CD,
			CND.PRPT_CD                  						AS PRPT_CD,            
			CND.OPR_IDT_CD                  					AS OPR_IDT_CD,
			CND.CHR_VAL                  						AS CHR_VAL,            
			CND.NO_VAL                      					AS NO_VAL,
			CND.DT_VAL                      					AS DT_VAL,            
			CND.TIER_VAL1                  						AS TIER_VAL1,                
			CND.TIER_VAL2                  						AS TIER_VAL2,        
			CND.BND_VAL1                   						AS BND_VAL1,
			CND.BND_VAL2                   						AS BND_VAL2,     
			<!-- Invalid Column  
			CND.SYTM_ID                       					AS SYTM_ID,
			--> 
			CND.SEQ                         					AS SEQ
		FROM    
			TMT_B_TRF_CD 										TCD 
		INNER JOIN 
			TMT_B_TRF  											TRF 
				ON TCD.TRF_CD 									= TRF.TRF_CD 
				AND TCD.SUB_TRF_CD 								= TRF.SUB_TRF_CD
		INNER JOIN 
			TMT_B_TRF_COND 										CND    
				ON TRF.TRF_CD 									= CND.TRF_CD 
				AND TRF.SUB_TRF_CD 								= CND.SUB_TRF_CD
			WHERE    
				TCD.TRF_TP_CD 									= #{tarDiv} 
				<!-- Invalid Column   
				AND ISNULL(TCD.SYTM_ID,'MT')					= 'MT'
				-->
		) 														TCODE 
		ON TCD.TRF_CD 											= TCODE.TRF_CD 
		AND TCD.SUB_TRF_CD 										= TCODE.SUB_TRF_CD
		AND VSL.COMPARING_DT 
			BETWEEN TRF.APLY_YMD 
				AND TRF.EXPR_YMD
		<!-- Invalid Column   
		AND ISNULL(TRF.SYTM_ID,'MT')							= 'MT'   
		-->
		AND TCD.VLD_YN 											= 'Y' 
		<if test="whereSQL != null and whereSQL != ''">
			${whereSQL}
		</if>	
		ORDER BY 
			TRF.TRF_CD,
			TRF.SUB_TRF_CD
	</select>
	
	<select id="selectGenerateOverStorageForCalculateProformalistADP" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeOverStorageItemMap">
		WITH DOCUMENT_INFO AS 
			(SELECT 
				SN.VSL_CALL_ID,
				'E' 											AS OPE_CLASS_CD,
				SN.MF_DOC_ID,
				NULL 											AS BL_NO,
				SN.SHIPG_NOTE_NO,
				SN.SHIPG_NOTE_NO 								AS CG_NO,
				SN.PKG_NO,
				SN.GDS_RMK 										AS PKG_MARK,
				SN.CATG_CD,
				(SELECT 
				S_CD_NM
				FROM 
					TMT_CD_MSTD MSTD
				WHERE     
					L_CD 				= 'MT'
					AND M_CD 			= 'CATGTP'
					AND SN.CATG_CD 		= MSTD.S_CD
				) 												AS CATG_NM,
				SN.CG_TP_CD,
				(SELECT 
					S_CD_NM
				FROM 
					TMT_CD_MSTD
				WHERE     
					L_CD 				= 'MT'
					AND M_CD 			= 'CGTP'
					AND S_CD_USE 		= 'Y'
					AND S_CD 			= SN.CG_TP_CD
				) 												AS CGTPNM,
				SN.CMDT_GRP_CD,
				(SELECT 
					S_CD_NM
				FROM 
					TMT_CD_MSTD
				WHERE     
					L_CD 				= 'MT'
					AND M_CD 			= 'CMDTGRP'
					AND S_CD_USE 		= 'Y'
					AND S_CD 			= SN.CMDT_GRP_CD
				) 												AS CMDTGRPNM,
				SN.CMDT_CD,
				(SELECT 
					CMDT_DESC
				FROM 
					TMT_CMDT CMDT
				WHERE     
					CMDT.CMDT_CD 		= SN.CMDT_CD
					AND CMDT.CMDT_GRP_CD= SN.CMDT_GRP_CD
				) 												AS CMDTNM,
				SN.PKG_TP_CD,
				(SELECT 
					S_CD_NM
				FROM 
					TMT_CD_MSTD
				WHERE     
					L_CD 				= 'MT'
					AND M_CD 			= 'PKGTP'
					AND S_CD_USE 		= 'Y'
					AND S_CD = SN.PKG_TP_CD
				) 												AS PKGTPNM,
				SN.IMDG 										AS IMDGCLASS,
				SN.UNNO 										AS UNNO,
				SN.CG_WGT 										AS WGT,
				SN.CG_VOL 										AS VOL,
				SN.PKG_QTY,
				SN.DELV_TP_CD,
				SN.TSPT_TP_CD,
				SN.FWRD,
				SN.SHIPG_AGNCY 									AS SHIPG_AGENT,
				SN.CNSNE,
				SN.SHPR,
				SN.POR 											AS POR,
				SN.POD 											AS POD,
				SN.POL 											AS POL,
				SN.FDEST,
				SN.DOMESTIC_CHK
			FROM 
				TMT_SHIPG_NOTE 									SN
			WHERE 
				SN.VSL_CALL_ID 									= #{vslCallId}

			UNION

			SELECT 
				BL.VSL_CALL_ID,
				'I' 											AS OPE_CLASS_CD,
				BL.MF_DOC_ID,
				BL.BL_NO,
				NULL,
				BL.BL_NO 										AS CG_NO,
				'BL.PKG_NO'										AS PKG_NO, 		<!-- Invalid Column BL.PKG_NO -->
				'BL.PKG_MARK'									AS PKG_MARK,	<!-- Invalid Column BL.PKG_MARK -->
				BL.CATG_CD,
				(SELECT 
					S_CD_NM
				FROM 
					TMT_CD_MSTD 		MSTD
				WHERE     
					L_CD  				= 'MT'
					AND M_CD  			= 'CATGTP'
					AND BL.CATG_CD 		= MSTD.S_CD
				)												AS CATGNM,
				BL.CG_TP_CD,
				(SELECT 
					S_CD_NM
				FROM 
					TMT_CD_MSTD
				WHERE     
					L_CD  				= 'MT'
					AND M_CD  			= 'CGTP'
					AND S_CD_USE 		= 'Y'
					AND S_CD  			= BL.CG_TP_CD
				)												AS CGTPNM,
				BL.CMDT_GRP_CD,
				(SELECT 
					S_CD_NM
				FROM 
					TMT_CD_MSTD
				WHERE     
					L_CD  				= 'MT'
					AND M_CD  			= 'CMDTGRP'
					AND S_CD_USE 		= 'Y'
					AND S_CD  			= BL.CMDT_GRP_CD
				)												AS CMDTGRPNM,
				BL.CMDT_CD,
				(SELECT 
					CMDT_DESC
				FROM 
					TMT_CMDT  			CMDT
				WHERE     
					CMDT.CMDT_CD 		= BL.CMDT_CD
					AND CMDT.CMDT_GRP_CD= BL.CMDT_GRP_CD
				)												AS CMDTNM,
				BL.PKG_TP_CD,
				(SELECT 
					S_CD_NM
				FROM 
					TMT_CD_MSTD
				WHERE     
					L_CD  				= 'MT'
					AND M_CD  			= 'PKGTP'
					AND S_CD_USE 		= 'Y'
					AND S_CD  			= BL.PKG_TP_CD
				)												AS PKGTPNM,
				BL.IMDG_CLASS  									AS IMDGCLASS,
				BL.UNNO  		 		 		 				AS UNNO,
				BL.CG_WGT,
				BL.CG_VOL,
				BL.PKG_QTY,
				BL.DELV_TP_CD,
				BL.TSPT_TP_CD,
				BL.FWRD,
				'BL.SHIPG_AGENT' 								AS SHIPG_AGENT,
				BL.CNSNE,
				BL.SHPR,
				NULL  			 		 		 		 		AS POR,
				BL.POD,
				BL.POL,
				BL.FDEST,
				BL.DOMESTIC_CHK
			FROM 
				TMT_BL BL
			WHERE 
				BL.VSL_CALL_ID  								= #{vslCallId}
		),

		OPERATION_JOB AS (  
			SELECT 
				MIN (JOB_NO)  		 		 		 			AS JOB_NO,
				JOB.JOB_PURP_CD,
				JOB.JOB_TP_CD,
				ISNULL(CGM.BL_NO, CGM.SHIPG_NOTE_NO) 			AS CG_NO,
				CGM.BL_NO,
				CGM.SHIPG_NOTE_NO,
				JOB.DELV_TP_CD,
				JOB.VSL_CALL_ID,
				CASE
					WHEN CGM.BL_NO IS NULL
						THEN 'I'
					ELSE 'E'
				END 											AS OPE_CLASS_CD,
				JOB.OPE_CLASS_CD 								AS CATG_CG,
				SUM (JOB.CG_VOL) 								AS MSRMT,
				SUM (JOB.PKG_QTY) 								AS PKG_QTY,
				SUM (JOB.CG_WGT) 								AS WGT,
				MAX (JOB.WORK_END_DT) 							AS WORK_END_DT,
				MIN (JOB.WORK_ST_DT) 							AS WORK_ST_DT,
				MAX (JOB.SHFT_DT) 								AS SHFT_DT,
				MAX (JOB.SHFT_ID) 								AS SHFT_ID,
				LOC.LOC_TP_CD,
				JOB.RHDL_MODE,
				MAX (TO_LOC_ID) 								AS TO_LOC_ID,
				MAX (JOB.TSPT_TP_CD) 							AS TSPT_TP_CD,
				MIN (CGM.GATE_IN_DT) 							AS GATE_IN_DT,
				MAX (CGM.GATE_OUT_DT) 							AS GATE_OUT_DT,
				MIN (CGM.HDL_IN_ST_DT) 							AS HDL_IN_ST_DT,
				MAX (CGM.HDL_IN_END_DT) 						AS HDL_IN_END_DT,
				MIN (CGM.HDL_OUT_ST_DT) 						AS HDL_OUT_ST_DT,
				MAX (CGM.HDL_OUT_END_DT) 						AS HDL_OUT_END_DT,
				MIN (CGM.LOAD_ST_DT) 							AS LOAD_ST_DT,
				MAX (CGM.LOAD_END_DT) 							AS LOAD_END_DT,
				MIN (CGM.DIS_ST_DT) 							AS DIS_ST_DT,
				MAX (CGM.DIS_END_DT) 							AS DIS_END_DT,
				MAX (SHF.SHFT_NM) 								AS SHFT_NM
			FROM 
				TMT_JOB  		 		 		 		 		JOB
			INNER JOIN 
				TMT_CG_MST 	 		 		 					CGM
				ON 	JOB.VSL_CALL_ID  		 		 		 	= CGM.VSL_CALL_ID
				AND JOB.CG_NO 	 		 		 				= CGM.CG_NO
			INNER JOIN 
				TMT_LOC_DEF LOC
				ON LOC.LOC_ID =
					SUBSTRING (
						JOB.TO_LOC_ID,
						0,
						PATINDEX('%[-(]%', JOB.TO_LOC_ID))
				AND LOC.LOC_DIV_CD 	 		 		 		 	= 'WHO'
			LEFT OUTER JOIN 
				TMT_SHFT 										SHF
				ON JOB.SHFT_ID 									= SHF.SHFT_ID 
				AND SHF.VLD_YN 									= 'Y'
			WHERE     
				(
					(JOB.JOB_PURP_CD 							= 'AW' 
					AND JOB.JOB_TP_CD 							= 'DS')
	                OR 
					(JOB.JOB_PURP_CD 							= 'GW' 
					AND JOB.JOB_TP_CD 							= 'LF')
				)
				AND ISNULL(JOB.RC_CO_CD, 'NR') 					<![CDATA[<>]]> 'CC'
				AND (JOB.TO_LOC_ID IS NOT NULL					AND JOB.TO_LOC_ID <![CDATA[<>]]> '')
				AND NOT (JOB.JOB_CO_CD = 'D' 					AND JOB.JOB_PURP_CD != 'WW')
				AND JOB.VSL_CALL_ID 							= #{vslCallId}
				AND ISNULL(CGM.BL_NO, CGM.SHIPG_NOTE_NO) 		= #{blNo}
			GROUP BY 
				JOB.VSL_CALL_ID,
				JOB.JOB_PURP_CD,
				JOB.JOB_TP_CD,
				JOB.OPE_CLASS_CD,
				JOB.DELV_TP_CD,
				CGM.BL_NO,
				CGM.SHIPG_NOTE_NO,
				LOC.LOC_TP_CD,
				JOB.RHDL_MODE
		)
	                  
		<choose>
			<when test="opeClassCd eq 'E'.toString()">
				<include refid="sqlOverStorageForCalculateProformalistExport"></include>
			</when>
			<otherwise>
				<include refid="sqlOverStorageForCalculateProformalistImport"></include>
			</otherwise>
		</choose>
	</select>
	
	<sql id="sqlOverStorageForCalculateProformalistExport">
		SELECT /* tariffCodeGenerator.selectGenerateOverStorageForProformalist */
			JOB.VSL_CALL_ID 									AS VSL_CALL_ID,
			DOC.OPE_CLASS_CD 									AS OPE_CLASS,
			DOC.CATG_CD 										AS CATG_CD,
			'N' 												AS RHDL_MODE,
			DOC.DELV_TP_CD 										AS DELIVERY_TYPE,
			SUBSTRING(DOC.POL, 1, 2) 							AS POL,
			SUBSTRING(DOC.POD, 1, 2) 							AS POD,
			CASE DOC.DOMESTIC_CHK
				WHEN 'Y' THEN 'D'
				ELSE 'I'
			END													AS TRADE_TYPE, 						/* C4 - Trade Type */
			DOC.CG_TP_CD 										AS CARGO_TYPE,
			DOC.CMDT_GRP_CD 									AS COMMODITY_GROUP,
			DOC.CMDT_CD 										AS COMMODITY,
			'LR' 												AS MODE_OF_OPR,
			DOC.PKG_TP_CD 										AS PKG_TP_CD,
			JOB.SHIPG_NOTE_NO 									AS CARGO_NO,
			'GW' 												AS JOB_PURP_CD,
			JOB.CG_WGT 											AS CG_WGT,
			JOB.CG_VOL 											AS CG_MSRMT,
			JOB.PKG_QTY 										AS PKG_QTY,
			DOC.WGT 											AS DOC_WGT,
			DOC.VOL 											AS DOC_MSRMT,
			DOC.PKG_QTY 										AS DOC_PKG_QTY,
			NULL 												AS LOAD_ST_DT,
			NULL 												AS LOAD_END_DT,
			NULL 												AS DIS_ST_DT,
			NULL 												AS DIS_END_DT,
			NULL 												AS WORK_ST_DT,
			NULL 												AS WORK_END_DT,
			FORMAT(SCH.ATA, 'yyyyMMddHHmm') 					AS ATA,
			FORMAT(SCH.ATD, 'yyyyMMddHHmm') 					AS ATD,
			NULL 												AS HDL_IN_TIME,
			NULL 												AS HDL_OUT_TIME,
			CASE
				WHEN
					CASE DOC.OPE_CLASS_CD
						WHEN 'I' THEN SCH.ATC
						ELSE ''
					END IS NOT NULL
				THEN
					CASE
						WHEN CONVERT(DATE, SCH.ATC, 103) 
							BETWEEN CONVERT(DATE, SCH.ATB, 103)
								AND CONVERT(DATE, SCH.ATB + ISNULL( #{osFreeDays}, 3), 103)
							THEN
								FORMAT(
									CASE DOC.OPE_CLASS_CD
										WHEN 'I' THEN SCH.ATC
										ELSE ''
									END, 
									'yyyyMMddHHmm'
								)
						ELSE
							FORMAT(
								SCH.ATB + ISNULL(#{osFreeDays}, 3), 
								'yyyyMMddHHmm'
							)
					END
				ELSE FORMAT(SCH.ATB, 'yyyyMMddHHmm')
			END 												AS CARGO_IM_ST,
			NULL 												AS CARGO_IM_END,
			JOB.IN_DATE   										AS CARGO_EX_ST,
			CASE 
				WHEN JOB.IO_CD = 'I' 
					THEN FORMAT(SYSDATETIME(), 'yyyyMMddHHmm') 
				ELSE JOB.OUT_DATE 
			END  												AS CARGO_EX_END,
			NULL 												AS CARGO_BOTH_ST,
			NULL 												AS CARGO_BOTH_END,
			JOB.LOC_TP_CD 										AS WH_TP_CD,
			NULL 												AS TO_LOC_ID,
			JOB.BL_NO 											AS BL_NO,
			JOB.SHIPG_NOTE_NO 									AS SHIPG_NOTE_NO,
			DOC.SHIPG_AGENT 									AS SHIPG_AGNT,
			DOC.FWRD 											AS FWR_AGNT,
			DOC.SHPR 											AS SHPR,
			DOC.CNSNE 											AS CNSNE,
			(SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_PTNR
			WHERE     
				PTNR_CODE 				= DOC.SHIPG_AGENT
				AND PTNR_TYPE 			= 'SHA'
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
				)
			UNION
			SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_AGENCY_INFO
			WHERE     
				AGENCY_CODE 			= DOC.SHIPG_AGENT
				AND PTNR_TYPE 			= 'SHA'
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
				)
			) 													AS SHIPG_AGENT_PAY_TP,
			(SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_PTNR
			WHERE 
				PTNR_CODE 				= DOC.FWRD 
				AND PTNR_TYPE 			= 'FWD'
			) 													AS FWD_PAY_TP,
			(SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_PTNR
			WHERE 
				PTNR_CODE 				= DOC.SHPR 
				AND PTNR_TYPE 			= 'SHP'
			) 													AS SHPR_PAY_TP,
			(SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_PTNR
			WHERE 
				PTNR_CODE 				= DOC.CNSNE 
				AND PTNR_TYPE			= 'CNS'
			) 													AS CNS_PAY_TP,
			NULL 												AS SHFT_DT,
			NULL 												AS SHFT_NM,
			NULL 												AS HDL_IN_END_DT,
			<choose>
				<when test="estDt != null and estDt != '' ">
					FORMAT(
						CONVERT(DATETIME, #{estDt}, 103),
						'yyyyMMddHHmm'
					) 											AS EXPECTED_DELV_DT,
				</when>
				<otherwise>
					''  										AS EXPECTED_DELV_DT,
				</otherwise>
			</choose>
			MF_DOC.FREE_DAYS,														
			'PFI' 												AS SCR_ID,
			JOB.SHIPG_NOTE_NO 									AS REF_NO,
			DOC.MF_DOC_ID 										AS REF_NO2,
			NULL 												AS JOB_NO,
			JOB.STRG_SEQ
		FROM 
			TMT_STORAGE_YARD  									JOB
		INNER JOIN 
			DOCUMENT_INFO 										DOC
				ON JOB.VSL_CALL_ID 								= DOC.VSL_CALL_ID 
				AND JOB.SHIPG_NOTE_NO 							= DOC.CG_NO
		INNER JOIN 
			TMT_MF 												MF_DOC
			ON DOC.VSL_CALL_ID 									= MF_DOC.VSL_CALL_ID 
			AND DOC.MF_DOC_ID 									= MF_DOC.MF_DOC_ID
		LEFT OUTER JOIN 
			TMT_VSL_SCH 										SCH 
				ON SCH.VSL_CALL_ID 								= JOB.VSL_CALL_ID
		LEFT OUTER JOIN 
			TMT_VSL_PART 										PART 
			ON SCH.VSL_CD 										= PART.VSL_CD
		WHERE  
			JOB.IO_CD 											IN ('I')
			AND JOB.VSL_CALL_ID 								= #{vslCallId}   
			AND DOC.OPE_CLASS_CD 								= #{opeClassCd}
			AND DOC.MF_DOC_ID 									= #{masterBL}
			AND DOC.CG_NO 										= #{blNo}
	</sql>
	
	<sql id="sqlOverStorageForCalculateProformalistImport">
		SELECT /*TariffCodeGenerator.selectGenerateOverStorageForProformalist*/
		    JOB.VSL_CALL_ID                                 	AS VSL_CALL_ID,  
		    DOC.OPE_CLASS_CD  									AS OPE_CLASS,
		    JOB.OPE_CLASS_CD  									AS CATG_CD,
		    ISNULL(JOB.RHDL_MODE, 'N') 							AS RHDL_MODE, 
		    JOB.DELV_TP_CD										AS DELIVERY_TYPE,
		    SUBSTRING(DOC.POL, 1, 2) 							AS POL,
		    SUBSTRING(DOC.POD, 1, 2)							AS POD,							
			CASE DOC.DOMESTIC_CHK
				WHEN 'Y' THEN 'D'
				ELSE 'I'
			END 												AS TRADE_TYPE, 	/* C4 - Trade Type */
		    DOC.CG_TP_CD      									AS CARGO_TYPE,
		    DOC.CMDT_GRP_CD       								AS COMMODITY_GROUP,
		    DOC.CMDT_CD       									AS COMMODITY, 
		    JOB.TSPT_TP_CD 										AS MODE_OF_OPR,
		    DOC.PKG_TP_CD 										AS PKG_TP_CD,
		    JOB.CG_NO        	 								AS CARGO_NO,
		    JOB.JOB_PURP_CD   									AS JOB_PURP_CD,
		    JOB.WGT   								          	AS CG_WGT,
		    JOB.MSRMT 					                      	AS CG_MSRMT,
		    JOB.PKG_QTY  	                                  	AS PKG_QTY,
		    DOC.WGT     										AS DOC_WGT,
		    DOC.VOL	    										AS DOC_MSRMT,
		    DOC.PKG_QTY											AS DOC_PKG_QTY,
		    FORMAT(JOB.LOAD_ST_DT, 'yyyyMMddHHmm') 				AS LOAD_ST_DT,
		    FORMAT(JOB.LOAD_END_DT, 'yyyyMMddHHmm') 			AS LOAD_END_DT,
		    FORMAT(JOB.DIS_ST_DT, 'yyyyMMddHHmm') 				AS DIS_ST_DT,
		    FORMAT(JOB.DIS_END_DT, 'yyyyMMddHHmm') 				AS DIS_END_DT,
		    FORMAT(JOB.WORK_ST_DT, 'yyyyMMddHHmm') 				AS WORK_ST_DT,
		    FORMAT(JOB.WORK_END_DT, 'yyyyMMddHHmm')				AS WORK_END_DT,
		    FORMAT(SCH.ATA,'yyyyMMddHHmm') 						AS ATA,
		    FORMAT(SCH.ATD,'yyyyMMddHHmm') 						AS ATD,  
		    JOB.HDL_IN_ST_DT 						   			AS HDL_IN_TIME,
		    JOB.HDL_OUT_END_DT 					   				AS HDL_OUT_TIME,
		    CASE 
				WHEN 
					CASE DOC.OPE_CLASS_CD
						WHEN 'I' THEN SCH.ATC
						ELSE ''
					END IS NOT NULL 
					THEN 
						CASE 
							WHEN CONVERT(DATE, SCH.ATC) 
								BETWEEN CONVERT(DATE, SCH.ATB, 103)
									AND CONVERT(DATE, SCH.ATB + ISNULL(#{osFreeDays}, 3), 103)
								THEN 
									FORMAT(
										CASE DOC.OPE_CLASS_CD
											WHEN 'I' THEN SCH.ATC
											ELSE ''
										END,
										'yyyyMMddHHmm'
									) 
							ELSE 
								FORMAT(
									SCH.ATB + ISNULL(#{osFreeDays}, 3),
									'yyyyMMddHHmm'
								) 
						END 
		        ELSE 
		            FORMAT(SCH.ATB,'yyyyMMddHHmm') 
		    END 												AS CARGO_IM_ST,
		    FORMAT(
				CASE DOC.OPE_CLASS_CD
					WHEN 'I' THEN JOB.HDL_OUT_END_DT
					ELSE ''
				END,
				'yyyyMMddHHmm'
			) 													AS CARGO_IM_END, 
		    CASE
		        WHEN 
					CASE DOC.OPE_CLASS_CD
						WHEN 'E' THEN JOB.HDL_IN_ST_DT
						ELSE ''
					END IS NOT NULL 
						THEN 
							FORMAT(
								JOB.HDL_IN_ST_DT, 
								'yyyyMMddHHmm'
							)
		    END 												AS CARGO_EX_ST,
		    FORMAT(
				CASE DOC.OPE_CLASS_CD
					WHEN 'E' THEN JOB.LOAD_END_DT
					ELSE ''
				END,
				'yyyyMMddHHmm'
			) 													AS CARGO_EX_END,
		    CASE 
				WHEN 
					CASE DOC.OPE_CLASS_CD
						WHEN 'B' 
							THEN JOB.DIS_ST_DT 
									+ ISNULL(#{osFreeDays}, 3) 
						ELSE ''
					END IS NOT NULL
						THEN
							CASE 
								WHEN
									CASE DOC.OPE_CLASS_CD
										WHEN 'B' 
											THEN JOB.DIS_ST_DT 
												+ ISNULL(#{osFreeDays}, 3)
										ELSE ''
									END <![CDATA[<]]> SCH.ATC 
									THEN 
										FORMAT(
											CASE DOC.OPE_CLASS_CD
												WHEN 'B' 
													THEN 
														JOB.DIS_ST_DT 
															+ ISNULL(#{osFreeDays}, 3)
												ELSE ''
											END,
											'yyyyMMddHHmm'
										) 
								ELSE 
									FORMAT(SCH.ATC,'yyyyMMddHHmm') 
							END 
		    END 												AS CARGO_BOTH_ST, 
		    FORMAT(
				CASE DOC.OPE_CLASS_CD
					WHEN 'B' THEN JOB.HDL_OUT_END_DT
					ELSE ''
				END,
				'yyyyMMddHHmm'
			) 													AS CARGO_BOTH_END,   
		    JOB.LOC_TP_CD   									AS WH_TP_CD,
		    JOB.TO_LOC_ID 										AS TO_LOC_ID,
		    JOB.BL_NO 											AS BL_NO, 
		    JOB.SHIPG_NOTE_NO 									AS SHIPG_NOTE_NO, 
		    DOC.SHIPG_AGENT       								AS SHIPG_AGNT,
		    DOC.FWRD         									AS FWR_AGNT,
		    DOC.SHPR             								AS SHPR,
		    DOC.CNSNE            								AS CNSNE,
		    (SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.SHIPG_AGENT 
				AND PTNR_TYPE 			= 'SHA' 
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
				)
		    UNION 
			SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_AGENCY_INFO 
			WHERE 
				AGENCY_CODE 			= DOC.SHIPG_AGENT 
				AND PTNR_TYPE 			= 'SHA' 
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
				)
			) 													AS SHIPG_AGENT_PAY_TP,
		    (SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.FWRD 
				AND PTNR_TYPE 			= 'FWD'
			) 													AS FWD_PAY_TP,
		    (SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.SHPR 
				AND PTNR_TYPE 			= 'SHP'
			) 													AS SHPR_PAY_TP,
		    (SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.CNSNE 
				AND PTNR_TYPE 			= 'CNS'
			) 													AS CNS_PAY_TP,
		    JOB.SHFT_DT											AS SHFT_DT,
		    JOB.SHFT_NM 										AS SHFT_NM,
		    ISNULL(
				JOB.HDL_IN_END_DT, 
				(SELECT TOP(1)
					J.WORK_END_DT
				FROM 
					TMT_JOB J 
				WHERE 
					J.FNL_OPE_YN 		= 'Y'
					AND J.JOB_PURP_CD 	IN ('GW', 'AW')
					AND J.VSL_CALL_ID 	= JOB.VSL_CALL_ID
					AND J.CG_NO 		= JOB.CG_NO
				)
			) 													AS HDL_IN_END_DT,
		    <choose>
		        <when test="estDt != null and estDt != '' ">
		            FORMAT(
						CONVERT(DATETIME, #{estDt}, 103),
						'yyyyMMddHHmm'
					) 											AS EXPECTED_DELV_DT,
		        </when>
		        <otherwise>
		            ''  										AS EXPECTED_DELV_DT,
		        </otherwise>
		    </choose>
		    MF_DOC.FREE_DAYS,
		    'PFI'      											AS SCR_ID,
		    JOB.CG_NO 											AS REF_NO,
		    DOC.MF_DOC_ID 										AS REF_NO2,
		    JOB_NO,
		    NULL 												AS STRG_SEQ
		FROM	
			OPERATION_JOB 										JOB
		INNER JOIN 
			DOCUMENT_INFO 										DOC
				ON JOB.VSL_CALL_ID 								= DOC.VSL_CALL_ID
				AND JOB.CG_NO 									= DOC.CG_NO
				AND JOB.OPE_CLASS_CD 							= DOC.OPE_CLASS_CD
		INNER JOIN 
			TMT_MF 												MF_DOC
				ON	DOC.VSL_CALL_ID 							= MF_DOC.VSL_CALL_ID
				AND DOC.MF_DOC_ID 								= MF_DOC.MF_DOC_ID
		LEFT OUTER JOIN 
			TMT_VSL_SCH 										SCH 
			ON SCH.VSL_CALL_ID 									= JOB.VSL_CALL_ID
		LEFT OUTER JOIN 
			TMT_VSL_PART 										PART 
			ON SCH.VSL_CD 										= PART.VSL_CD
		 WHERE  
		 	JOB.JOB_PURP_CD 									IN ('GW', 'AW')
			AND JOB.VSL_CALL_ID 								= #{vslCallId}   
			AND DOC.OPE_CLASS_CD 								= #{opeClassCd}
			AND DOC.MF_DOC_ID 									= #{masterBL}
			AND DOC.CG_NO 										= #{blNo}
	</sql>
	
	<select id="selectGenerateCargoForProformaList" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		SELECT 	/* tariffcodegeneration.selectGenerateCargoForProformaList */
			CG.OPE_CLASS_CD 									AS OPE_CLASS,						/* Opearation */
			CG.CATG_CD 											AS CATG_CD,							/* C1 - Category */
			'N' 												AS RHDL_MODE,						/* C2 - Rehandle */
			CASE CG.DELV_TP_CD
				WHEN 'B' THEN 'D'
				ELSE CG.DELV_TP_CD
			END 												AS DELIVERY_TYPE,					/* C3 - Delivery Mode */
			SUBSTRING(CG.POL, 1, 2) 							AS POL,
			SUBSTRING(CG.POD, 1, 2) 							AS POD,								
			CASE CG.DOMESTIC_CHK
				WHEN 'Y' THEN 'D'
				ELSE 'I'
			END 												AS TRADE_TYPE, 						/* C4 - Trade Type */
			CG.CG_TP_CD 										AS CARGO_TYPE,						/* C7 - Cargo Type */
			CG.CMDT_GRP_CD 										AS COMMODITY_GROUP,      			/* C8 - Commodity Group */
			CG.CMDT_CD 											AS COMMODITY,						/* C9 - Commodity */
			CG.PKG_TP_CD 										AS PACKAGE_TYPE,					/* C10 - Package Type */
			CG.TSPT_TP_CD 										AS MODE_OF_OPR,						/* C12 - Mode of OPR */
			CG.CG_NO 											AS CARGO_NO,
			CG.WGT 												AS CG_WGT,
			CG.VOL 												AS CG_MSRMT,
			CG.PKG_QTY 											AS PKG_QTY,
			CG.WGT     											AS DOC_WGT,
			CG.VOL	    										AS DOC_MSRMT,
			CG.PKG_QTY											AS DOC_PKG_QTY,
			CG.BL_NO 											AS BL_NO,
			CG.SHIPG_AGENT 										AS SHIPG_AGNT,
			CG.FWRD 											AS FWR_AGNT,
			CG.SHPR 											AS SHPR,
			CG.CNSNE 											AS CNSNE,
			(SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= CG.SHIPG_AGENT 
				AND PTNR_TYPE 			= 'SHA' 
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE	<![CDATA[<>]]> ''
				)
			UNION 
			SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_AGENCY_INFO 
			WHERE 
				AGENCY_CODE 			= CG.SHIPG_AGENT 
				AND PTNR_TYPE 			= 'SHA' 
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
				)
			) 													AS SHIPG_AGENT_PAY_TP,
			(SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= CG.FWRD 
				AND PTNR_TYPE 			= 'FWD'
			) 													AS FWD_PAY_TP,
			(SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= CG.SHPR 
				AND PTNR_TYPE 			= 'SHP'
			) 													AS SHPR_PAY_TP,
			(SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= CG.CNSNE 
				AND PTNR_TYPE 			= 'CNS'
			) 													AS CNS_PAY_TP,
			dbo.F_GET_CMDT_DESC(CG.CMDT_CD) 					AS DESCR,
			CG.VSL_CALL_ID,
			'PFI' 												AS SCR_ID,
			CG.CG_NO 											AS REF_NO,
			CG.MF_DOC_ID 										AS REF_NO2,
			SCH.ATB                         					AS ATB,
			SCH.ATC                         					AS ATC,
			CASE 
				WHEN
					CASE CG.OPE_CLASS_CD
						WHEN 'I' THEN SCH.ATC
						ELSE ''
					END 										IS NOT NULL 
					THEN 
						CASE 
							WHEN 
								CONVERT(DATE, SCH.ATC, 103)
									BETWEEN CONVERT(DATE, SCH.ATB, 103)
									AND CONVERT(DATE, SCH.ATB + ISNULL(#{osFreeDays}, 3), 103)
							THEN 
								FORMAT(
									CASE CG.OPE_CLASS_CD
										WHEN 'I' THEN SCH.ATC
										ELSE ''
									END,
									'yyyyMMddHHmm'
								) 
							ELSE 
								FORMAT(
									SCH.ATB + ISNULL(#{osFreeDays}, 3),
									'yyyyMMddHHmm'
								) 
						END 
						WHEN 
							CASE CG.OPE_CLASS_CD
								WHEN 'I' THEN SCH.ATB
								ELSE ''
							END  IS NOT NULL 
								THEN 
									FORMAT(
										SCH.ATB,
										'yyyyMMddHHmm'
									) 
						ELSE 
							FORMAT(
								ISNULL(SCH.ETB, SCH.ETA),
								'yyyyMMddHHmm'
							) 
			END 												AS CARGO_IM_ST,
			CASE
				WHEN 
					CASE CG.OPE_CLASS_CD
						WHEN 'E' THEN WH.HDL_IN_ST_DT
						ELSE ''
					END IS NOT NULL 
						THEN 
							FORMAT(
								WH.HDL_IN_ST_DT, 
								'yyyyMMddHHmm'
							)
				ELSE 
					FORMAT(
						ISNULL(SCH.ETB, SCH.ETA), 
						'yyyyMMddHHmm'
					)
			END 												AS CARGO_EX_ST,
			CASE 
				WHEN 
					WH.DELV_TP_CD = CG.DELV_TP_CD 
						THEN
							CASE 
								WHEN CHARINDEX('CS', WH.WH_TP_CD) > 0 THEN 'CS'
								WHEN CHARINDEX('OY', WH.WH_TP_CD) > 0 THEN 'OY'
								WHEN CHARINDEX('OS', WH.WH_TP_CD) > 0 THEN 'OS'
							END
				ELSE NULL
			END 												AS WH_TP_CD,
			'CSH' 												AS IV_PRFX
		FROM 	
			TMT_VSL_SCH 										SCH
		INNER JOIN (
			SELECT 
				SN.VSL_CALL_ID,                                                                            
				'E'                                        		AS OPE_CLASS_CD,
				SN.MF_DOC_ID,                                                                          
				NULL                                          	AS BL_NO,
				SN.SHIPG_NOTE_NO,                                                                        
				SN.SHIPG_NOTE_NO                            	AS CG_NO,
				SN.PKG_NO,                                                                              
				SN.GDS_RMK                                   	AS PKG_MARK, 
				SN.CATG_CD,                                                                             
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CATGTP' 
					AND SN.CATG_CD 		= MSTD.S_CD 
				)                    							AS CATG_NM,
				SN.CG_TP_CD,                                                                            
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CGTP' 
					AND S_CD_USE 		= 'Y' 
					AND S_CD 			= SN.CG_TP_CD
				)       										AS CGTPNM,
				SN.CMDT_GRP_CD,                                                                         
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'CMDTGRP' 
					AND S_CD_USE 		= 'Y' 
					AND  S_CD			= SN.CMDT_GRP_CD
				) 												AS CMDTGRPNM,
				SN.CMDT_CD,                                                                             
				(SELECT 
					CMDT_DESC 
				FROM 
					TMT_CMDT 			CMDT 
				WHERE 
					CMDT.CMDT_CD 		= SN.CMDT_CD 
					AND CMDT.CMDT_GRP_CD= SN.CMDT_GRP_CD
				)                								AS CMDTNM,
				SN.PKG_TP_CD,                                                                           
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD 				= 'MT' 
					AND M_CD 			= 'PKGTP' 
					AND S_CD_USE 		= 'Y' 
					AND S_CD 			= SN.PKG_TP_CD
				)     											AS PKGTPNM,
				SN.IMDG                                 		AS IMDGCLASS,
				SN.UNNO                                			AS UNNO,
				SN.CG_WGT                  						AS WGT,
				SN.CG_VOL                						AS VOL,
				SN.PKG_QTY,
				SN.DELV_TP_CD,
				SN.TSPT_TP_CD,
				SN.FWRD,                                                                                 
				SN.SHIPG_AGNCY                               	AS SHIPG_AGENT,
				SN.CNSNE,
				SN.SHPR,                                                                                
				SN.POR                              		AS POR,
				SN.POD                               		AS POD,  
				SN.POL                              		AS POL,
				SN.FDEST,
				SN.DOMESTIC_CHK
			FROM 
				TMT_SHIPG_NOTE 									SN

			UNION

			SELECT 
				BL.VSL_CALL_ID,                                                                            
				'I'                                 			AS OPE_CLASS_CD,
				BL.MF_DOC_ID,                                                                           
				BL.BL_NO,                                                                                
				NULL,                                                                                     
				BL.BL_NO                                 		AS CG_NO,
				'BL.PKG_NO'										AS PKG_NO,                                                                                 
				'BL.PKG_MARK'									AS PKG_MARK,                                                                            
				BL.CATG_CD,                                                                            
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 		MSTD 
				WHERE 
					L_CD  				= 'MT' 
					AND M_CD  			= 'CATGTP' 
					AND BL.CATG_CD		= MSTD.S_CD 
				)          										AS CATGNM,
				BL.CG_TP_CD,                                                                            
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD  				= 'MT' 
					AND M_CD  			= 'CGTP' 
					AND S_CD_USE  		= 'Y' 
					AND  S_CD  			= BL.CG_TP_CD
				) 												AS CGTPNM,
				BL.CMDT_GRP_CD,                                                                         
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD  				= 'MT' 
					AND M_CD  			= 'CMDTGRP' 
					AND S_CD_USE  		= 'Y' 
					AND  S_CD  			= BL.CMDT_GRP_CD
				) 												AS CMDTGRPNM,
				BL.CMDT_CD,                                                                             
				(SELECT 
					CMDT_DESC 
				FROM 
					TMT_CMDT CMDT 
				WHERE 
					CMDT.CMDT_CD  		= BL.CMDT_CD 
					AND CMDT.CMDT_GRP_CD= BL.CMDT_GRP_CD
				)									           	AS CMDTNM,
				BL.PKG_TP_CD,                                                                          
				(SELECT 
					S_CD_NM 
				FROM 
					TMT_CD_MSTD 
				WHERE 
					L_CD  				= 'MT' 
					AND M_CD  			= 'PKGTP' 
					AND S_CD_USE  		= 'Y' 
					AND  S_CD  			= BL.PKG_TP_CD
				)     											AS PKGTPNM,
				BL.IMDG_CLASS                                  	AS IMDGCLASS,
				BL.UNNO                                    		AS UNNO,
				BL.CG_WGT,
				BL.CG_VOL,
				BL.PKG_QTY,
				BL.DELV_TP_CD,
				BL.TSPT_TP_CD,
				BL.FWRD,                                                                                 
				'BL.SHIPG_AGENT'								AS SHIPG_AGENT,                                                                      
				BL.CNSNE,                                                                               
				BL.SHPR,
				NULL                                         	AS POR,
				BL.POD,
				BL.POL,
				BL.FDEST,
				BL.DOMESTIC_CHK
			FROM 
				TMT_BL 											BL 
		) 														CG 
			ON SCH.VSL_CALL_ID 									= CG.VSL_CALL_ID
		INNER JOIN 
			TMT_MF 												MF 
				ON SCH.VSL_CALL_ID 								= MF.VSL_CALL_ID 
				AND CG.MF_DOC_ID 								= MF.MF_DOC_ID
		LEFT JOIN (
			SELECT 
				VSL_CALL_ID,
				OPE_CLASS_CD,
				CG_NO,
				DELV_TP_CD,
				STRING_AGG(LOC_TP_CD, ',') 
					WITHIN GROUP(ORDER BY LOC_TP_CD) 			AS WH_TP_CD,
				MIN(HDL_IN_ST_DT)  								AS HDL_IN_ST_DT
			FROM (
				SELECT 
					MIN(JOB_NO) 								AS JOB_NO,
					JOB.JOB_PURP_CD,
					JOB.JOB_TP_CD,			
					CASE
						WHEN 
							(CG_MST.BL_NO IS NOT NULL
							OR CG_MST.BL_NO <![CDATA[<>]]> '')
								THEN 'I'
						ELSE 'E'
					END 										AS OPE_CLASS_CD,
					ISNULL(CG_MST.BL_NO, CG_MST.SHIPG_NOTE_NO) 	AS CG_NO,
					CG_MST.BL_NO,
					CG_MST.SHIPG_NOTE_NO,
					JOB.DELV_TP_CD,
					JOB.VSL_CALL_ID,
					SUM(JOB.CG_VOL) 							AS MSRMT,
					SUM(JOB.PKG_QTY) 							AS PKG_QTY,
					SUM(JOB.CG_WGT)   							AS WGT,
					MAX(JOB.WORK_END_DT) 						AS WORK_END_DT,
					MIN(JOB.WORK_ST_DT) 						AS WORK_ST_DT,
					MIN(CG_MST.GATE_IN_DT)    					AS GATE_IN_DT,
					MAX(CG_MST.GATE_OUT_DT)   					AS GATE_OUT_DT,
					MIN(CG_MST.HDL_IN_ST_DT)  					AS HDL_IN_ST_DT,
					MAX(CG_MST.HDL_IN_END_DT) 					AS HDL_IN_END_DT,
					MIN(CG_MST.HDL_OUT_ST_DT) 					AS HDL_OUT_ST_DT,
					MAX(CG_MST.HDL_OUT_END_DT)    				AS HDL_OUT_END_DT,
					MIN(CG_MST.LOAD_ST_DT)    					AS LOAD_ST_DT,
					MAX(CG_MST.LOAD_END_DT)   					AS LOAD_END_DT,
					MIN(CG_MST.DIS_ST_DT) 						AS DIS_ST_DT,
					MAX(CG_MST.DIS_END_DT)    					AS DIS_END_DT,
					MAX(JOB.SHFT_DT) 							AS SHFT_DT,
					MAX(JOB.SHFT_ID) 							AS SHFT_ID,
					MAX(TO_LOC_ID) 								AS TO_LOC_ID,
					MAX(JOB.TSPT_TP_CD) 						AS TSPT_TP_CD,
					JOB.OPE_CLASS_CD       						AS CATG_CD,
					LOC.LOC_TP_CD,
					JOB.RHDL_MODE
				FROM 
					TMT_JOB 									JOB
				INNER JOIN 
					TMT_CG_MST 									CG_MST 
						ON CG_MST.VSL_CALL_ID 					= JOB.VSL_CALL_ID 
						AND JOB.CG_NO 							= CG_MST.CG_NO
				INNER JOIN 
					TMT_LOC_DEF LOC 
						ON LOC.LOC_ID = 
							SUBSTRING(
								JOB.TO_LOC_ID, 0,  
								PATINDEX('%[-(]%', JOB.TO_LOC_ID)
							)
						AND LOC.LOC_DIV_CD 						= 'WHO'
				WHERE
					( 
						( JOB.JOB_PURP_CD = 'AW' 				AND JOB.JOB_TP_CD = 'DS' )
						OR ( JOB.JOB_PURP_CD = 'GW' 			AND JOB.JOB_TP_CD = 'LF' )
					)
					AND ISNULL(JOB.RC_CO_CD, 'NR') 				<![CDATA[<>]]> 'CC'
					AND JOB.TO_LOC_ID IS NOT NULL
					AND NOT (JOB.JOB_CO_CD 						= 'D'
							AND JOB.JOB_PURP_CD 				<![CDATA[<>]]>  'WW' )
					AND JOB.VSL_CALL_ID 						= #{vslCallId} 
					AND ISNULL(
						CG_MST.BL_NO, 
						CG_MST.SHIPG_NOTE_NO
					) 											= #{blNo}
				GROUP BY
					JOB.VSL_CALL_ID,
					JOB.JOB_PURP_CD,
					JOB.JOB_TP_CD,
					JOB.OPE_CLASS_CD,
					JOB.DELV_TP_CD,
					CG_MST.SHIPG_NOTE_NO,
					CG_MST.BL_NO,
					LOC.LOC_TP_CD,
					JOB.RHDL_MODE
			) TEMPT
			GROUP BY
				VSL_CALL_ID,
				OPE_CLASS_CD,
				DELV_TP_CD,
				CG_NO
		)														 WH 
			ON WH.VSL_CALL_ID 									= SCH.VSL_CALL_ID 
			AND WH.CG_NO 										= CG.CG_NO 
			AND CG.OPE_CLASS_CD 								= WH.OPE_CLASS_CD
		WHERE	
			SCH.VSL_CALL_ID 									= #{vslCallId} 
		  	AND CG.OPE_CLASS_CD 								= #{opeClassCd}
			<if test="blNo != '' and blNo != null ">
                AND CG.MF_DOC_ID 								= #{masterBL}
				AND CG.CG_NO 									= #{blNo}
			</if>
		  	AND ( /* BILL-025 Cash Collection before ATB of Vessel */
                (CG.DELV_TP_CD 									IN ('B', 'D')) 
				OR (
					CG.OPE_CLASS_CD 							= 'I' 
					AND CG.DELV_TP_CD 							= 'I' 
					AND (
						SCH.ATB 								IS NOT NULL
						AND SCH.ATB 							<![CDATA[<>]]> ''
					)
				) 
				OR (
					CG.OPE_CLASS_CD 							= 'E' 
					AND CG.DELV_TP_CD 							= 'I' 
					AND (
						WH.HDL_IN_ST_DT 						IS NOT NULL
						AND WH.HDL_IN_ST_DT 					<![CDATA[<>]]> ''
					)
				) 
            )
		ORDER BY 
			CG.CG_TP_CD ASC
	</select>
	
	 <select id="selectTargetDocumentProcessingCharge" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
		/* tariffcodegeneration.selectTargetDocumentProcessingCharge */
		WITH 
			BLSN AS (
				SELECT 
					SN.VSL_CALL_ID,
					'E' 										AS OPE_CLASS_CD,
					SN.MF_DOC_ID,
					NULL 										AS BL_NO,
					SN.SHIPG_NOTE_NO,
					SN.SHIPG_NOTE_NO 							AS CG_NO,
					SN.PKG_NO,
					SN.GDS_RMK 									AS PKG_MARK,
					SN.CATG_CD,
					dbo.F_CM_CODE_NM(
						'MT', 
						'CATGTP', 
						SN.CATG_CD
					) 											AS CATG_NM,
					SN.CG_TP_CD,
					dbo.F_CM_CODE_NM(
						'MT', 
						'CGTP', 
						SN.CG_TP_CD
					) 											AS CGTPNM,
					SN.CMDT_GRP_CD,
					dbo.F_CM_CODE_NM(
						'MT', 
						'CMDTGRP', 
						SN.CMDT_GRP_CD
					) 											AS CMDTGRPNM,
					SN.CMDT_CD,
					(SELECT 
						CMDT_DESC
					FROM 
						TMT_CMDT 			CMDT
					WHERE     
						CMDT.CMDT_CD 		= SN.CMDT_CD
						AND CMDT.CMDT_GRP_CD= SN.CMDT_GRP_CD
					) 											AS CMDTNM,
					SN.PKG_TP_CD,
					dbo.F_CM_CODE_NM(
						'MT', 
						'PKGTP', 
						SN.PKG_TP_CD
					) 											AS PKGTPNM,
					SN.IMDG 									AS IMDGCLASS,
					SN.UNNO 									AS UNNO,
					SN.CG_WGT 									AS WGT,
					SN.CG_VOL	 								AS VOL,
					SN.PKG_QTY,
					SN.DELV_TP_CD,
					SN.TSPT_TP_CD,
					SN.FWRD,
					SN.SHIPG_AGNCY 								AS SHIPG_AGENT,
					SN.CNSNE,
					SN.SHPR,
					SN.POR 										AS POR,
					SN.POD 										AS POD,
					SN.POL 										AS POL,
					SN.FDEST,
					SN.DOMESTIC_CHK
				FROM 
					TMT_SHIPG_NOTE 								SN
				WHERE 
					VSL_CALL_ID 								= #{vslCallId}

				UNION

				SELECT 
					BL.VSL_CALL_ID,
					'I' 										AS OPE_CLASS_CD,
					BL.MF_DOC_ID,
					BL.BL_NO,
					NULL,
					BL.BL_NO 									AS CG_NO,
					'BL.PKG_NO'									AS PKG_NO,							-- Invalid Column
					'BL.PKG_MARK'								AS PKG_MARK,						-- Invalid Column
					BL.CATG_CD,
					dbo.F_CM_CODE_NM(
						'MT', 
						'CATGTP', 
						BL.CATG_CD
					) 											AS CATGNM,
					BL.CG_TP_CD,
					dbo.F_CM_CODE_NM(
						'MT', 
						'CGTP', 
						BL.CG_TP_CD
					) 											AS CGTPNM,
					BL.CMDT_GRP_CD,
					dbo.F_CM_CODE_NM(
						'MT', 
						'CMDTGRP', 
						BL.CMDT_GRP_CD
					) 											AS CMDTGRPNM,
					BL.CMDT_CD,
					(SELECT 
						CMDT_DESC
					FROM 
						TMT_CMDT 			CMDT
					WHERE     
						CMDT.CMDT_CD 		= BL.CMDT_CD
						AND CMDT.CMDT_GRP_CD= BL.CMDT_GRP_CD
					) 											AS CMDTNM,
					BL.PKG_TP_CD,
					dbo.F_CM_CODE_NM(
						'MT', 
						'PKGTP', 
						BL.PKG_TP_CD
					) 											AS PKGTPNM,
					BL.IMDG_CLASS 								AS IMDGCLASS,
					BL.UNNO 									AS UNNO,
					BL.CG_WGT,
					BL.CG_VOL,
					BL.PKG_QTY,
					BL.DELV_TP_CD,
					BL.TSPT_TP_CD,
					BL.FWRD,
					'BL.SHIPG_AGENT'							AS SHIPG_AGENT,
					BL.CNSNE,
					BL.SHPR,
					NULL 										AS POR,
					BL.POD,
					BL.POL,
					BL.FDEST,
					BL.DOMESTIC_CHK
				FROM 
					TMT_BL 										BL
				WHERE 
					VSL_CALL_ID 								= #{vslCallId}
			),
			
			DOCUMENT_INFO AS (
				SELECT 
					*
				FROM 
					(SELECT 
						DOC.*,
						ROW_NUMBER ()
							OVER(
								PARTITION BY 
									MF_DOC_ID 
								ORDER BY 
									WGT DESC
							) 									AS seqnum
		            FROM 
						BLSN DOC
					) TEMPT
				WHERE 
					seqnum = 1
			),
			WH_OPERATION AS (  
				SELECT 
					VSL_CALL_ID,
					OPE_CLASS_CD,
					CG_NO,
					DELV_TP_CD,
					STRING_AGG(LOC_TP_CD, ',') 
						WITHIN GROUP(ORDER BY LOC_TP_CD) 		AS WH_TP_CD,
					MIN(HDL_IN_ST_DT) 							AS HDL_IN_ST_DT
				FROM (  
					SELECT 
						MIN(JOB_NO) 							AS JOB_NO,
						JOB.JOB_PURP_CD,
						JOB.JOB_TP_CD,
						CASE
							WHEN (
								CG_MST.BL_NO IS NOT NULL
								OR CG_MST.BL_NO <![CDATA[<>]]> ''
							) THEN 'I'
							ELSE 'E'
						END 									AS OPE_CLASS_CD,
						ISNULL(
							CG_MST.BL_NO, 
							CG_MST.SHIPG_NOTE_NO
						) 										AS CG_NO,
						CG_MST.BL_NO,
						CG_MST.SHIPG_NOTE_NO,
						JOB.DELV_TP_CD,
						JOB.VSL_CALL_ID,
						SUM(JOB.CG_VOL) 						AS MSRMT,
						SUM(JOB.PKG_QTY) 						AS PKG_QTY,
						SUM(JOB.CG_WGT) 						AS WGT,
						MAX(JOB.WORK_END_DT) 					AS WORK_END_DT,
						MIN(JOB.WORK_ST_DT) 					AS WORK_ST_DT,
						MIN(CG_MST.GATE_IN_DT) 					AS GATE_IN_DT,
						MAX(CG_MST.GATE_OUT_DT) 				AS GATE_OUT_DT,
						MIN(CG_MST.HDL_IN_ST_DT) 				AS HDL_IN_ST_DT,
						MAX(CG_MST.HDL_IN_END_DT) 				AS HDL_IN_END_DT,
						MIN(CG_MST.HDL_OUT_ST_DT) 				AS HDL_OUT_ST_DT,
						MAX(CG_MST.HDL_OUT_END_DT) 				AS HDL_OUT_END_DT,
						MIN(CG_MST.LOAD_ST_DT) 					AS LOAD_ST_DT,
						MAX(CG_MST.LOAD_END_DT) 				AS LOAD_END_DT,
						MIN(CG_MST.DIS_ST_DT) 					AS DIS_ST_DT,
						MAX(CG_MST.DIS_END_DT) 					AS DIS_END_DT,
						MAX(JOB.SHFT_DT) 						AS SHFT_DT,
						MAX(JOB.SHFT_ID) 						AS SHFT_ID,
						MAX(TO_LOC_ID) 							AS TO_LOC_ID,
						MAX(JOB.TSPT_TP_CD) 					AS TSPT_TP_CD,
						JOB.OPE_CLASS_CD 						AS CATG_CD,
						LOC.LOC_TP_CD,
						JOB.RHDL_MODE
					FROM 
						TMT_JOB 								JOB
					INNER JOIN 
						TMT_CG_MST 								CG_MST
							ON CG_MST.VSL_CALL_ID 				= JOB.VSL_CALL_ID
							AND JOB.CG_NO 						= CG_MST.CG_NO
					INNER JOIN 
						TMT_LOC_DEF LOC
							ON LOC.LOC_ID =
								SUBSTRING (
									JOB.TO_LOC_ID,
									0,
									PATINDEX('%[-(]%', JOB.TO_LOC_ID)
								)
							AND LOC.LOC_DIV_CD 					= 'WHO'
					WHERE
						(   
							(JOB.JOB_PURP_CD 					= 'AW'
							AND JOB.JOB_TP_CD 					= 'DS'
							)
							OR (    
								JOB.JOB_PURP_CD 				= 'GW'
								AND JOB.JOB_TP_CD 				= 'LF'
							)
						)
						AND ISNULL(JOB.RC_CO_CD, 'NR') 			<![CDATA[<>]]> 'CC'
						AND (
							JOB.TO_LOC_ID 						IS NOT NULL
							AND JOB.TO_LOC_ID 					<![CDATA[<>]]> ''
						)
						AND NOT (    
							JOB.JOB_CO_CD 						= 'D'
							AND JOB.JOB_PURP_CD 				<![CDATA[<>]]> 'WW'
						)
						AND JOB.VSL_CALL_ID 					= #{vslCallId}
					GROUP BY 
						JOB.VSL_CALL_ID,
						JOB.JOB_PURP_CD,
						JOB.JOB_TP_CD,
						JOB.OPE_CLASS_CD,
						JOB.DELV_TP_CD,
						CG_MST.SHIPG_NOTE_NO,
						CG_MST.BL_NO,
						LOC.LOC_TP_CD,
						JOB.RHDL_MODE
					)											TEMPT
				GROUP BY 
					VSL_CALL_ID,
					OPE_CLASS_CD,
					DELV_TP_CD,
					CG_NO
			)
		SELECT
			CG.OPE_CLASS_CD 									AS OPE_CLASS,                       /* Opearation */
			CG.CATG_CD 											AS CATG_CD,                   		/* C1 - Category */
			'N' 												AS RHDL_MODE,                  		/* C2 - Rehandle */
			CASE CG.DELV_TP_CD
				WHEN 'B' THEN 'D'
				ELSE CG.DELV_TP_CD
			END 												AS DELIVERY_TYPE, 					/* C3 - Delivery Mode */
			SUBSTRING(CG.POL, 1, 2) 							AS POL,
			SUBSTRING(CG.POD, 1, 2) 							AS POD,
			CASE 
				WHEN CG.DOMESTIC_CHK = 'Y' 
					THEN 'D'
				ELSE 'I'
			END 												AS TRADE_TYPE, 						/* C4 - Trade Type */
			CG.CG_TP_CD 										AS CARGO_TYPE,                      /* C7 - Cargo Type */
			CG.CMDT_GRP_CD 										AS COMMODITY_GROUP,         		/* C8 - Commodity Group */
			CG.CMDT_CD 											AS COMMODITY,             			/* C9 - Commodity */
			CG.PKG_TP_CD 										AS PACKAGE_TYPE,                	/* C10 - Package Type */
			CG.TSPT_TP_CD 										AS MODE_OF_OPR,                 	/* C12 - Mode of OPR */
			CG.CG_NO 											AS CARGO_NO,
			CG.WGT 												AS CG_WGT,
			CG.VOL 												AS CG_MSRMT,
			CG.PKG_QTY 											AS PKG_QTY,
			CG.WGT 												AS DOC_WGT,
			CG.VOL 												AS DOC_MSRMT,
			CG.PKG_QTY 											AS DOC_PKG_QTY,
			CG.BL_NO 											AS BL_NO,
			CG.SHIPG_AGENT 										AS SHIPG_AGNT,
			CG.FWRD 											AS FWR_AGNT,
			CG.SHPR 											AS SHPR,
			CG.CNSNE 											AS CNSNE,
			(SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_PTNR
			WHERE 
				PTNR_CODE 				= CG.SHIPG_AGENT
				AND PTNR_TYPE 			= 'SHA'
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
				)
			UNION
			SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_AGENCY_INFO
			WHERE 
				AGENCY_CODE 			= CG.SHIPG_AGENT
				AND PTNR_TYPE 			= 'SHA'
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
				)
			) 													AS SHIPG_AGENT_PAY_TP,
			(SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_PTNR
			WHERE 
				PTNR_CODE 				= CG.FWRD 
				AND PTNR_TYPE			= 'FWD'
			)													AS FWD_PAY_TP,
			(SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_PTNR
			WHERE 
				PTNR_CODE 				= CG.SHPR 
				AND PTNR_TYPE 			= 'SHP'
			) 													AS SHPR_PAY_TP,
			(SELECT 
				PAYMENT_TYPE
			FROM 
				TMT_PTNR
			WHERE 
				PTNR_CODE 				= CG.CNSNE 
				AND PTNR_TYPE 			= 'CNS'
			) 													AS CNS_PAY_TP,
			dbo.F_GET_CMDT_DESC (CG.CMDT_CD) 					AS DESCR,
			CG.VSL_CALL_ID,
			ISNULL(#{scrId}, 'PFI') 							AS SCR_ID,
			CASE #{scrId}
				WHEN 'PFI' THEN 'CSH'
				ELSE 'INV'
			END 												AS IV_PRFX,
			CG.CG_NO 											AS REF_NO,
			CG.MF_DOC_ID 										AS REF_NO2,
			SCH.ATB 											AS ATB,
			SCH.ATC 											AS ATC,
			CASE
				WHEN 
					CASE CG.OPE_CLASS_CD
						WHEN 'I' THEN SCH.ATC
						ELSE ''
					END IS NOT NULL
					THEN
						CASE
							WHEN CONVERT(DATE, SCH.ATC, 103)
								BETWEEN CONVERT(DATE, SCH.ATB, 103)
									AND CONVERT(DATE, SCH.ATB + ISNULL(#{osFreeDays}, 3), 103)
							THEN
								FORMAT(
									CASE CG.OPE_CLASS_CD
										WHEN 'I' THEN SCH.ATC
										ELSE ''
									END, 
									'yyyyMMddHHmm'
								)
							ELSE
								FORMAT(
									SCH.ATB + ISNULL(#{osFreeDays}, 3), 
									'yyyyMMddHHmm'
								)
						END
				WHEN 
					CASE CG.OPE_CLASS_CD
						WHEN 'I' THEN SCH.ATB
						ELSE ''
					END IS NOT NULL
					THEN
						FORMAT(SCH.ATB, 'yyyyMMddHHmm')
				ELSE
					FORMAT(ISNULL(SCH.ETB, SCH.ETA), 'yyyyMMddHHmm')
			END 												AS CARGO_IM_ST,
			CASE
				WHEN 
					CASE CG.OPE_CLASS_CD
						WHEN 'E' THEN WH.HDL_IN_ST_DT
						ELSE ''
					END IS NOT NULL
				THEN
					FORMAT(WH.HDL_IN_ST_DT, 'yyyyMMddHHmm')
				ELSE
					FORMAT(ISNULL(SCH.ETB, SCH.ETA), 'yyyyMMddHHmm')
			END 												AS CARGO_EX_ST,
			CASE
				WHEN WH.DELV_TP_CD = CG.DELV_TP_CD
					THEN
						CASE
							WHEN CHARINDEX(WH.WH_TP_CD, 'CS') > 0 
								THEN 'CS'
							WHEN CHARINDEX(WH.WH_TP_CD, 'OY') > 0 
								THEN 'OY'
							WHEN CHARINDEX(WH.WH_TP_CD, 'OS') > 0 
								THEN 'OS'
						END
				ELSE
					NULL
			END 												AS WH_TP_CD
			<!-- Invalid Column
			MF.CRCY_CD
			-->
		FROM 	
			TMT_VSL_SCH 										SCH
		INNER JOIN 
			DOCUMENT_INFO 										CG 
				ON SCH.VSL_CALL_ID 								= CG.VSL_CALL_ID
		INNER JOIN 
			TMT_MF 												MF 
				ON SCH.VSL_CALL_ID 								= MF.VSL_CALL_ID 
				AND CG.MF_DOC_ID 								= MF.MF_DOC_ID
		LEFT JOIN 
			WH_OPERATION 										WH 
				ON WH.VSL_CALL_ID 								= SCH.VSL_CALL_ID 
				AND WH.CG_NO 									= CG.CG_NO 
				AND CG.OPE_CLASS_CD 							= WH.OPE_CLASS_CD
		WHERE     
			SCH.VSL_CALL_ID 									= #{vslCallId}
			<if test="opeClassCd != '' and opeClassCd != null ">
				AND CG.OPE_CLASS_CD 							= #{opeClassCd}
			</if>
			<if test="masterBL != '' and masterBL != null ">
				AND CG.MF_DOC_ID 								= #{masterBL}
			</if>
			<if test="blNo != '' and blNo != null ">
				AND CG.CG_NO 									= #{blNo}
			</if>
			
			<if test="scrId == 'PFI'">
				AND ( /* BILL-025 Cash Collection before ATB of Vessel scrId */
					( CG.DELV_TP_CD 							IN ('B', 'D'))
					OR (    
						CG.OPE_CLASS_CD 						= 'I'
						AND CG.DELV_TP_CD 						= 'I'
						AND (
							SCH.ATB 							IS NOT NULL
							AND SCH.ATB 						<![CDATA[<>]]> ''
						)
					)
					OR (    
						CG.OPE_CLASS_CD 						= 'E'
						AND CG.DELV_TP_CD 						= 'I'
						AND (
							WH.HDL_IN_ST_DT 					IS NOT NULL
							AND WH.HDL_IN_ST_DT 				<![CDATA[<>]]> ''
						)
					)
				)
			</if>      	
		ORDER BY 
			CG.CG_TP_CD ASC
	</select>
	
	<select id="selectExistedDocumentCharge" parameterType="tariffcodeGeneratorParm" resultType="InvoiceDataItem">
    	SELECT TOP(1) /* tariffcodegeneration.selectExistedDocumentCharge */ 
		    IV_DATA.VSL_CALL_ID 								AS VSLCALLID,
		    IV_DATA.GATHER_NO  									AS GATHERNO,
		    TRF.TRF_TP_CD										AS TRFTPCD,
		    IV_DATA.TRF_CD										AS TRFCD,
		    IV_DATA.SUB_TRF_CD									AS SUBTRFCD,
		    IV_DATA.REF_NO2										AS REFNO2,
		    IV_DATA.REF_NO1										AS REFNO1
		FROM 
			TMT_B_IV_DATA 										IV_DATA
		INNER JOIN 
			TMT_B_TRF_CD 										TRF 
			ON IV_DATA.TRF_CD 									= TRF.TRF_CD 
			AND IV_DATA.SUB_TRF_CD 								= TRF.SUB_TRF_CD
		WHERE  
			TRF.TRF_TP_CD 										= 'DP'
			AND IV_DATA.VSL_CALL_ID 							= #{vslCallId}
			AND IV_DATA.REF_NO2 								= #{masterBL}
			AND IV_DATA.STAT_CD 								NOT IN ('GT', 'IC')
			<!-- 		  
			AND IV_DATA.STAT_CD IN ('GT', 'PC', 'SM', 'IV') 
			-->
    </select>
    
    <select id="selectGatheredPortHandlingForDPC" parameterType="tariffcodeGeneratorParm" resultType="InvoiceDataItem">
    	SELECT /* tariffcodegeneration.selectGatheredPortHandlingForDPC */ 
		    GATHER_NO       									AS GATHERNO,
		    TRF_TP_CD       									AS TRFTPCD,
		    IV_DATA.TRF_CD          							AS TRFCD,
		    IV_DATA.SUB_TRF_CD      							AS SUBTRFCD,
		    IV_DATA.TRF_DESCR       							AS TRFDESCER,
		    IV_DATA.PAYER           							AS PAYER,
		    IV_DATA.BILL_TP_CD      							AS BILLTPCD,
		    IV_DATA.VSL_CALL_ID     							AS VSLCALLID,
		    STAT_CD         									AS STATCD,
		    GATHER_DT       									AS GATHERDT,
		    UNIT1_VAL       									AS UNIT1VAL,
		    UNIT2_VAL       									AS UNIT2VAL,
		    UNIT3_VAL       									AS UNIT3VAL,
		    APLY_RATE       									AS APLYRATE,
		    APLY_AMT        									AS APLYAMT,
		    STD_RATE        									AS STDRATE,
		    IV_PRFX         									AS IVPRFX,
		    IV_NO           									AS IVNO,
		    REF_NO1         									AS REFNO1,
		    REF_NO2         									AS REFNO2,
		    CAL_FM_YMD      									AS CALFMYMD,
		    CAL_TO_YMD      									AS CALTOYMD,
		    PKG_TRF_NM      									AS PKGTRFNM,
		    ADHOC_YN        									AS ADHOCYN,
		    REVS_RATE       									AS REVSRATE,
		    REVS_AMT        									AS REVSAMT,
		    REVS_UNIT1_VAL  									AS REVSUNIT1VAL,
		    REVS_UNIT2_VAL  									AS REVSUNIT2VAL,
		    REVS_UNIT3_VAL  									AS REVSUNIT3VAL,
		    AREA            									AS AREA,
		    <!-- Invalid Column 
		    SVC_ST_DT       									AS SVCDTTO,
		    SVC_END_DT      									AS SVCDTFROM,
		    JOB_NO          									AS JOBNO,
		    CG_NO           									AS CGNO,
		    -->
		    IV_DATA.COST_CENT_CD    							AS COSTCENTCD,
		     <!-- Invalid Column 
		    REF_NO3         									AS REFNO3,
		    REF_NO4         									AS REFNO4,
		    -->
		    SCR_ID          									AS SCRID,
		    TOTAL_AMT       									AS TOTALAMT,
		    <!-- Invalid Column 
		    GST_PERCENT     									AS GSTPERCENT,
		    GST_VALUE       									AS GSTVALUE,
		    IV_DATA.GST_TYPE        							AS GSTTYPE,
		    GST_AMT         									AS GSTAMT,
		    FRGN_AMT        									AS FRGNAMT,
		    FRGN_GST_AMT    									AS FRGNGSTAMT,
		    TOTAL_FRGN      									AS TOTALFRGN,
		    -->
		    PAYER_TP_CD     									AS PAYERTPCD
		FROM 
			TMT_B_IV_DATA 										IV_DATA
		INNER JOIN 
			TMT_B_TRF_CD 										TRF 
			ON IV_DATA.TRF_CD 									= TRF.TRF_CD 
			AND IV_DATA.SUB_TRF_CD 								= TRF.SUB_TRF_CD
		INNER JOIN (
		    SELECT 
		        VSL_CALL_ID,
		        'I' 											AS OPE_CLASS_CD,
		        CATG_CD,
		        MF_DOC_ID,
		        BL_NO,  
		        NULL 											AS SHIPG_NOTE_NO,
		        BL_NO  											AS BLSN,
		        CG_TP_CD,
		        CMDT_GRP_CD,
		        CMDT_CD,
		        PKG_TP_CD,
		        'SHIPG_AGENT'									AS SHIPG_AGENT,
		        FWRD,
		        CNSNE,
		        SHPR,
		        POL,
		        POD,
		        NULL         									AS POR,
		        FDEST,
		        DOMESTIC_CHK 									AS DOMESTIC
		    FROM 
				TMT_BL

		    UNION

		    SELECT 
		        VSL_CALL_ID,
		        'E' 											AS OPE_CLASS_CD,
		        CATG_CD,
		        MF_DOC_ID,
		        NULL 											AS BL_NO,
		        SHIPG_NOTE_NO,
		        SHIPG_NOTE_NO 									AS BLSN,
		        CG_TP_CD,
		        CMDT_GRP_CD,
		        CMDT_CD,
		        PKG_TP_CD,
		        SHIPG_AGNCY 									AS SHIPG_AGENT,
		        FWRD,
		        CNSNE,
		        SHPR,
		        POD 											AS POD,
		        POD  											AS POD,
		        POR 											AS POR,
		        FDEST,
		        DOMESTIC_CHK 									AS DOMESTIC
			FROM 
				TMT_SHIPG_NOTE
		) DOC 
			ON IV_DATA.VSL_CALL_ID 								= DOC.VSL_CALL_ID 
			AND IV_DATA.REF_NO2 								= DOC.MF_DOC_ID 
			AND IV_DATA.REF_NO1 								= DOC.BLSN
		WHERE 
			TRF.TRF_TP_CD 										= 'HG'
			AND IV_DATA.VSL_CALL_ID 							= #{vslCallId}
			AND IV_DATA.REF_NO2 								= #{masterBL}
			AND IV_DATA.REF_NO1 								= #{blNo}
			AND IV_DATA.STAT_CD 								IN ('GT')
    </select>
    
    <select id="selectGenerateServiceOrderForCalculateProformaList" parameterType="tariffServiceOrderGatheredParm" resultType="tariffServiceOrderGatheredItem">
		SELECT /* tariffcodegeneration.selectGenerateServiceOrderForCalculateProformaList */
		    ODR.ODR_NO                                      	AS odrNo,
		    ODR_DTL.SEQ                                         AS odrSeq,
		    ODR.SVC_DT_FM 										AS svcDtFmt,
		    ODR.VSL_CALL_ID                                     AS vslCallId,
		    ODR_DTL.OPE_CLASS_CD                             	AS opeClassCd,
		    ODR_DTL.REQ_MF_DOC_ID    							AS reqMfDocNo,
		    ODR_DTL.COM_MF_DOC_ID    							AS compMfDocNo,
		    ODR_DTL.REQ_DOC_NO   								AS reqCgNo,
		    ODR_DTL.COM_DOC_NO   								AS compCgNo,
		    ODR_DTL.REQ_UNIT_NO                              	AS reqUnitNo,
		    ODR_DTL.COM_UNIT_NO                              	AS compUnitNo,
		    ODR.PAYER                                        	AS payer,
		    ODR.PAY_TP_CD                                    	AS payTpCd,
		    <!-- Invalid Column 
		    ODR.SVC_CD                                       	AS serviceCd,
		    -->
		    TCD.TRF_CD                                       	AS trfCd,
		    TCD.SUB_TRF_CD                                   	AS subTrfCd,
		    TCD.TRF_TP_CD                                    	AS trfTpCd,
		    TCD.DESCR                                       	AS descr,
		    TCD.IV_UNIT1                                    	AS ivUnit1,
		    TCD.IV_UNIT2                                    	AS ivUnit2,
		    TCD.IV_UNIT3                                    	AS ivUnit3,
		    ODR.UNIT                                        	AS reqUnit1,
		    ODR.UNIT1                                       	AS reqUnit2,
		    ODR.UNIT2                                       	AS reqUnit3,
		    ODR.COM_UNIT                                    	AS compUnit1,
		    ODR.COM_UNIT1                                   	AS compUnit2,
		    ODR.COM_UNIT2                                   	AS compUnit3,
		    TRF.TRF_REG_NO                                  	AS trfRegNo,
		    TRF.APLY_YMD                                    	AS aplyYMD,
		    TRF.EXPR_YMD                                    	AS exprYMD,
		    TRF.UNIT_PRC                                    	AS unitPrc,
		    TRF.MIN_VAL1                                    	AS minVal1,
		    TRF.MIN_VAL2                                    	AS minVal2,
		    TRF.MIN_VAL3                                    	AS minVal3,
		    TRF.MAX_AMT                                     	AS maxAmt,
		     <!-- Invalid Column
		    TCD.GST_TP_CD                                   	AS gstTpCd,
		    TCD.GST_RATE                                    	AS gstRate,
		    -->
		    <choose>
				<when test="branchCode == 'MOST_KPGC1'">
					(SELECT TOP(1)
						ERP_COST_CENT 
					FROM 
						TMT_B_COST_CENTER 
					WHERE 
						TRF_CD 			= TCD.TRF_CD 
						AND SUB_TRF_CD 	= TCD.SUB_TRF_CD 
						AND TMNL_CD 	= VSL.TMNL_CD 
					) 											AS erpCostCent
				</when>
				<otherwise>
					TCD.ERP_COST_CENT                 			AS erpCostCent,
				</otherwise>
			</choose>
		    
		    TCD.BILL_TP_CD										AS billTpCd,
		    ODR.STAT_CD                                    		AS statusCd,
		    'PFI'												AS scrId,
		    'CSH' 												AS ivPrfx
		    <!-- Invalid Column
		    IV_DATA.SYS_CLONE_ID        						AS parentGatherNo,
		    IV_DATA.REF_NO4										AS refNo4,
		    ISNULL(ODR.PAYER_TP_CD, 'FWD')						AS payerTpCd
		    -->
		FROM 
			TMT_SVC_ODR 										ODR
		INNER JOIN 
			TMT_SVC_ODR_DTL 									ODR_DTL 
			ON ODR.ODR_NO 										= ODR_DTL.ODR_NO
		INNER JOIN 
			TMT_B_TRF_CD 										TCD 
				ON 1 = 1
				 <!-- Invalid Column
				ON ODR.SVC_CD 										= TCD.SVC_CD 
				-->
		LEFT JOIN (
		    SELECT 
				*
		    FROM 
				TMT_B_TRF
			WHERE SYSDATETIME() 
				BETWEEN CONVERT(DATE, APLY_YMD, 112) 
					AND  CONVERT(DATE, EXPR_YMD, 112)
		) 														TRF 
			ON TCD.TRF_CD 										= TRF.TRF_CD 
			AND TCD.SUB_TRF_CD 									= TRF.SUB_TRF_CD
		LEFT JOIN (
	        SELECT 
				*
	        FROM 
				TMT_B_IV_DATA
	        WHERE 
				STAT_CD 										IN ('PC', 'VF', 'SM', 'IV')
				 <!-- Invalid Column
	          	AND REF_NO4 									= 'PFI'
	          	-->
	    ) 														IV_DATA 
	    	ON 1 = 1
	    	 <!-- Invalid Column  
			ON ODR.ODR_NO 										= IV_DATA.SVC_ID 
			AND ODR_DTL.SEQ 									= IV_DATA.SVC_SEQ
			-->
		LEFT OUTER JOIN 
			TMT_VSL_SCH VSL 
				ON ODR.VSL_CALL_ID 								= VSL.VSL_CALL_ID
		WHERE 
			ODR.VSL_CALL_ID 									= #{vslCallId}
		  AND ODR.PAY_TP_CD 									= #{payTpCd}
		  AND ODR.STAT_CD 										IN ('AP', 'CP')
		  AND (
			(IV_DATA.STAT_CD IS NULL 							OR IV_DATA.STAT_CD = '')
			OR IV_DATA.STAT_CD 									= 'IC'
		  )
	</select>
	
	<select id="selectInvoiceDataItems" parameterType="tariffcodeGeneratorParm"	resultType="invoiceDataItem">
    	/* tariffcodegeneration.selectInvoiceDataItems */ 
    	WITH 
			SCH_INFO AS (
				SELECT 
					FORMAT (
						CASE A.LOC_CD
							WHEN 'CT'  THEN B.ATB
							WHEN 'BBT' THEN B.ATB
							WHEN 'ANT' THEN B.ATB
							WHEN 'CRT' THEN B.ATB
							ELSE B.ATA
						END,
						'yyyyMMdd'
					) 											AS EXPECTED_DATE
				FROM 
					TMT_BERTH_LOC 								A, 
					TMT_VSL_SCH 								B
				WHERE 
					A.BERTH_CD 									= B.BERTH_LOC 
					AND B.VSL_CALL_ID 							= #{vslCallId}
			),

		    TARGET_TRF_RATE AS (
				SELECT 
					T.TRF_CD,
		                T.SUB_TRF_CD,
		                T.UNIT_PRC,
		                <!-- Invalid Column 
		                T.CRCY_CD,
		                -->
		                T.MIN_AMT
				FROM 
					TMT_B_TRF 									T 
				LEFT OUTER JOIN 
					SCH_INFO V 
						ON 1 = 1
				WHERE 
					V.EXPECTED_DATE 
						BETWEEN T.APLY_YMD 
						AND T.EXPR_YMD
			)

		SELECT 
			I.VSL_CALL_ID 										AS vslCallId,
	       	T.TRF_TP_CD 										AS trfTpCd,
	       	I.TRF_CD 											AS trfCd,
	      	I.SUB_TRF_CD 										AS subTrfCd,
	       	I.TRF_DESCR 										AS trfDescr,
	       	'GT' 												AS statCd,
	      	I.SCR_ID 											AS scrId,
	      	I.REF_NO1 											AS refNo,
	       	I.REF_NO2 											AS refNo2,
	       	I.COST_CENT_CD 										AS costCentCd,
	       	<!-- Invalid Column
			I.ERP_COST_CENT 									AS financialCode,
	       	-->
	       	I.IV_PRFX 											AS ivPrfx,
	      	I.BILL_TP_CD 										AS billTpCd,
	       	I.PAYER 											AS payer,
	       	I.PAYER_TP_CD 										AS payerTpCd,
	       	<!-- Invalid Column
	       	FORMAT(I.SVC_ST_DT, 'yyyyMMddHHmm') 				AS svcDtFrom,
	       	FORMAT(I.SVC_END_DT, 'yyyyMMddHHmm') 				AS svcDtTo,
	       	FORMAT(I.EXP_DT ,'yyyyMMddHHmm') 					AS expectedDeliveryDay,
	      	I.FREE_DAYS 										AS applyFreeDays,
	       	I.DELV_TP_CD 										AS delvTpCd,
	       	I.CRCY_CD 											AS currency,
	       	I.GST_TYPE 											AS gstType,
	       	I.GST_PERCENT 										AS gstPercent,
	       	-->
	       	R.MIN_AMT 											AS minAmount,
	       	I.TOTAL_AMT 										AS totalAmt,
	       	I.VSL_CALL_ID + '/' + I.REF_NO2 					AS groupingFields,
	       	I.STAFF_CD 										AS userId
		FROM 
			TMT_B_IV_DATA 										I
		INNER JOIN 
			TARGET_TRF_RATE 									R
				ON I.TRF_CD 									= R.TRF_CD 
				AND I.SUB_TRF_CD 								= R.SUB_TRF_CD
		INNER JOIN 
			TMT_B_TRF_CD 										T
				ON I.TRF_CD 									= T.TRF_CD 
				AND I.SUB_TRF_CD 								= T.SUB_TRF_CD
		WHERE 
			T.TRF_TP_CD 										IN ('HG')
			AND I.STAT_CD										NOT IN ('IC')
			AND I.VSL_CALL_ID = #{vslCallId}
			<if test="masterBL != null and masterBL != ''">
				AND I.REF_NO2 									= #{masterBL}
			</if>
			<if test="scrId != null and scrId != ''">
				AND I.SCR_ID 									= #{scrId}
			</if>
		ORDER BY 
		 	REF_NO2      
    </select>
    
    <select id="selectPartnerTrfRateInfo" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeGeneratorMap">
		WITH 
			SCH_INFO AS (
				SELECT 
					FORMAT (
						CASE A.LOC_CD
							WHEN 'CT'  THEN B.ATB
							WHEN 'BBT' THEN B.ATB
							WHEN 'ANT' THEN B.ATB
							WHEN 'CRT' THEN B.ATB
							ELSE B.ATA
						END,
						'yyyyMMdd'
					) 											AS EXPECTED_DATE
				FROM 
					TMT_BERTH_LOC 								A, 
					TMT_VSL_SCH 								B
				WHERE     
					A.BERTH_CD 									= B.BERTH_LOC
					AND B.VSL_CALL_ID 							= #{vslCallId}
			)
		SELECT 	
			T.TRF_CD, 
			T.SUB_TRF_CD, 
			T.UNIT_PRC, 
			T.PTNR_CD 											AS PAYER
		FROM 	
			TMT_B_TRF 											T 
		LEFT OUTER JOIN 
			SCH_INFO 											V 
				ON 1 = 1
		WHERE 	
			T.PRC_TP_CD 										= 'P'
			AND V.EXPECTED_DATE 
				BETWEEN T.APLY_YMD 
					AND T.EXPR_YMD
			<!-- Invalid Column
				AND ISNULL(T.CRCY_CD, 'AED') 						= 'AED'
			-->
			<if test="whereSQL != null and whereSQL != ''">
				${whereSQL}
			</if>
	</select>
	
	<insert id="insertItems"  parameterType="invoiceDataItem">
		<selectKey order="BEFORE" resultType="invoiceDataItem" keyProperty="gatherNo" >
			SELECT 
				(SELECT 
					'MOST'
					+'_'
					+ REPLACE(
						FORMAT (CAST (ISNULL(MAX (SUBSTRING (GATHER_NO, 6, 6)), '0') AS NUMERIC(10,0)) + 1, '000000'),
						' ',
						''
					) 
					+ '_'
					+ FORMAT (GETDATE(), 'yyyyMMdd') 			AS gatherNo 
				FROM  
					TMT_B_IV_DATA 
				WHERE 
					GATHER_NO LIKE 
						'MOST%' + FORMAT (GETDATE(), 'yyyyMMdd')
				) 												AS GATHERNO
		</selectKey>
		INSERT /* tariffcodegenerator.insertItems */
		INTO TMT_B_IV_DATA (
			SHIP_CALL_NO,
			TRF_CD,
			SUB_TRF_CD,
			PAYER,
			PAYER_TP_CD,
			GATHER_NO,
			BILL_TP_CD,
			IV_PRFX,
			VSL_CALL_ID,
			TRF_DESCR,
			UNIT1_VAL,
			UNIT2_VAL,
			UNIT3_VAL,
			STAT_CD,
			IV_NO,
			GATHER_DT,
			CAL_FM_YMD,
			CAL_TO_YMD,
			PKG_TRF_NM,
			APLY_RATE,
			APLY_AMT,
			STD_RATE,
			ADHOC_YN,
			REVS_RATE,
			REVS_AMT,
			REVS_UNIT1_VAL,
			REVS_UNIT2_VAL,
			REVS_UNIT3_VAL,
			AREA,
			UPDATE_TIME,
			STAFF_CD,
			VERSION,
			<if test="refNo != null and refNo != ''">
				REF_NO1,
			</if>
			<if test="refNo2 != null and refNo2 != ''">
				REF_NO2,
			</if>
			SCR_ID,
			COST_CENT_CD,
			TAX_TYPE,
		 	TAX_VALUE,
		 	TAX_AMT,
			TOTAL_AMT,
			EXP_DT,
			SVC_ST_DT,
			SVC_END_DT			
			<!-- Invalid Column
			SYTM_ID,
			SYTM_USE_ID,
			DMY_VSL_CALL_YN,
			ERP_COST_CENT,
			FREE_DAYS,
			SVC_ID,
			SVC_SEQ,
			GST_TYPE,
			GST_PERCENT,
			GST_AMT,
			FRGN_AMT,
			FRGN_GST_AMT,
			TOTAL_FRGN,
			CG_NO,
			JOB_NO,
			DELV_TP_CD,
			SYS_CLONE_ID,
			SSR_NO,
			SSR_SEQ,
			STRG_SEQ,
			CRCY_CD,
			ERP_LINE_NO,
			-->
		) VALUES (
			#{scn},
			#{trfCd},
			#{subTrfCd},
			#{payer},
			#{payerTpCd},
			#{gatherNo},
			#{billTpCd},
			#{ivPrfx}, 	
			#{vslCallId}, 	 	
			#{trfDescr}, 	 	 	
			ISNULL(TRY_CONVERT(NUMERIC(15, 3), #{unit1Val}), 0),  	 	 
			ISNULL(TRY_CONVERT(NUMERIC(15, 3), #{unit2Val}), 0),    	 	 
			ISNULL(TRY_CONVERT(NUMERIC(15, 3), #{unit3Val}), 0),	  	 	 
			#{statCd}, 	 	 	
			#{ivNo}, 	 	 		
			CASE
				WHEN (
					#{gatherDt} IS NOT NULL
					AND #{gatherDt} <![CDATA[<>]]> ''
				)
					THEN TRY_CONVERT(DATE, #{gatherDt}, 103)
				ELSE SYSDATETIME()
			END,
			#{calFmYmd},
			#{calToYmd},
			#{pkgTrfNm},	 	 	
			TRY_CONVERT(NUMERIC(15, 3), #{aplyRate}), 	 	 
			ISNULL(TRY_CONVERT(NUMERIC(15, 3), #{aplyAmt}), 0), 	 	 
			TRY_CONVERT(NUMERIC(15, 3), #{stdRate}),
			#{adhocYn},	  	 	 
			TRY_CONVERT(NUMERIC(15, 3), #{revsRate}),
			ISNULL(TRY_CONVERT(NUMERIC(15, 3), #{revsAmt}), 0), 	 	 
			TRY_CONVERT(NUMERIC(15, 3), #{revsUnit1Val}), 
			TRY_CONVERT(NUMERIC(15, 3), #{revsUnit2Val}),
			TRY_CONVERT(NUMERIC(15, 3), #{revsUnit3Val}),
			#{area},
			SYSDATETIME(),
			#{userId},
			#{newVersion},
			<if test="refNo != null and refNo != ''">
				#{refNo},
			</if>
			<if test="refNo2 != null and refNo2 != ''">
				#{refNo2},
			</if>
			<choose>
				<when test="scrId != null and scrId != ''"> 
					#{scrId},
				</when>
				<otherwise>
					'OPE',
				</otherwise>
			</choose>
			#{costCentCd},
			#{gstType},
			ISNULL(TRY_CONVERT(NUMERIC(15,3), #{gstPercent}), 0),
			TRY_CONVERT(NUMERIC(15,3), #{gstAmt}),
			TRY_CONVERT(NUMERIC(15,3), #{totalAmt}),
			<choose>
				<when test="expectedDeliveryDay != null and expectedDeliveryDay != ''"> 
					CONVERT(
						DATETIME, 
						LEFT(#{expectedDeliveryDay}, 8) 
							+ ' ' 
							+ SUBSTRING(#{expectedDeliveryDay}, 9, 2)
							+ ':' 
							+ RIGHT(#{expectedDeliveryDay}, 2), 103
					),
				</when>
				<otherwise>
					NULL,
				</otherwise>
			</choose>
			<choose>
				<when test="svcDtFrom != null and svcDtFrom != ''">
					CONVERT(DATETIME, LEFT(#{svcDtFrom}, 8) + ' ' + SUBSTRING(#{svcDtFrom}, 9, 2)+ ':' + RIGHT(#{svcDtFrom}, 2), 103),
				</when>
				<otherwise>NULL,</otherwise>
			</choose>
			<choose>
				<when test="svcDtTo != null and svcDtTo != ''"> 
					CONVERT(DATETIME, LEFT(#{svcDtTo}, 8) + ' ' + SUBSTRING(#{svcDtTo}, 9, 2)+ ':' + RIGHT(#{svcDtTo}, 2), 103)
				</when>
				<otherwise>
					NULL
				</otherwise>
			</choose>
			<!-- Invalid Column
			#{dmyVslCallYn},
			#{financialCode},
			#{applyFreeDays},
			#{svcId},
			#{svcSeq},
			#{gstType},
			#{gstPercent},
			#{gstAmt},
			ISNULL(CONVERT(NUMERIC(15, 3), #{aplyAmt}),0),
			#{gstAmt},
			#{totalAmt},
			#{cgNo},
			#{jobNo},
			CONVERT(DATETIME, LEFT(#{expectedDeliveryDay}, 8) + ' ' + SUBSTRING(#{expectedDeliveryDay}, 9, 2)+ ':' + RIGHT(#{expectedDeliveryDay}, 2), 103),
			#{delvTpCd},
			<choose>
				<when test='refNo4 == "PFI" '> 
					#{gatherNo},
				</when>
				<otherwise>
					#{parentGatherNo},
				</otherwise>
			</choose>
			#{ssrNo},
			#{ssrSeq},
			#{strgSeq},
			ISNULL(#{currency}, 'AED'),
			#{erpLineNo},
			-->
		)
	</insert>
	
	<select id="selectFreeStorageDays" parameterType="tariffCodeStorageDayParm" resultMap="freeStorageDays">
	    /* tariffcodegeneration.selectFreeStorageDays */
	    SELECT TOP(1)
			ISNULL(FREE_DD,0) 									AS FREEDAYS,
			ISNULL(INCLD_SUN_YN,'N') 							AS WEEKEND1_YN,
			ISNULL(INCLD_SAT_YN,'N') 							AS WEEKEND2_YN,
			ISNULL(INCLD_HLDAY_YN,'N') 							AS HOLIDAY_YN,
			(SELECT 
				ISNULL (COUNT (*), 0) 
			FROM 
				TMT_HLDAY 
			WHERE 
				CONVERT(DATETIME, HLDAY_YMD, 112) 
					BETWEEN 
							CONVERT(
								DATETIME, 
								LEFT(#{fromDate}, 8) 
								+ ' ' 
								+ SUBSTRING(#{fromDate}, 9, 2) 
								+ ':' 
								+ RIGHT(#{fromDate}, 2), 
								112
							)
						AND 
							CONVERT(
								DATETIME, 
								LEFT(#{toDate}, 8) 
								+ ' ' 
								+ SUBSTRING(#{toDate}, 9, 2) 
								+ ':' 
								+ RIGHT(#{toDate}, 2), 
								112
							)
			) 													AS HOLIDAYS
		FROM    
			TMT_B_FREE_DAY
		WHERE   
			PTNR_CD 											IN ('*', #{ptnrCode})
			AND (
				OPE_CLASS_CD 									IN ('*', #{catgCd}) 
				OR OPE_CLASS_CD 								IS NULL
				OR OPE_CLASS_CD 								= ''
			)
			AND (
				CG_TP_CD 										IN( '*', #{cgtpCd}) 
				OR CG_TP_CD 									IS NULL
			)
			AND (
				CMDT_CD  										IN( '*', #{cmdtCd}) 
				OR CMDT_CD 										IS NULL
				OR CMDT_CD 										= ''
			)
			<!-- Invalid Column 
			AND (
				WH_TP_CD 										IN ('*', #{whTpCd}) 
				OR WH_TP_CD 									IS NULL
				OR WH_TP_CD 									= ''
			)
			-->
			AND CONVERT(
					DATETIME, 
					LEFT(#{toDate}, 8) 
					+ ' ' 
					+ SUBSTRING(#{toDate}, 9, 2) 
					+ ':' 
					+ RIGHT(#{toDate}, 2), 
					112
				)
					BETWEEN CONVERT(DATE, APLY_YMD, 103) 
						AND CONVERT(DATE, EXPR_YMD, 103)
		ORDER BY 
			CG_TP_CD DESC, 
			CMDT_CD DESC
    </select>
    
   	<select id="selectGenerateOverStorageForSettlementProformalist" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeOverStorageItemMap"> 
	SELECT /* triffCodeGenerator.selectGenerateOverStorageForSettlementProformalist */
	    JOB.VSL_CALL_ID                                     AS VSL_CALL_ID,  
	    DOC.OPE_CLASS_CD  									AS OPE_CLASS,
	    JOB.OPE_CLASS_CD  									AS CATG_CD,
	    ISNULL(JOB.RHDL_MODE, 'N') 							AS RHDL_MODE, 
	    JOB.DELV_TP_CD										AS DELIVERY_TYPE,
	    SUBSTRING(DOC.POL, 1, 2) 							AS POL,
	    SUBSTRING(DOC.POD, 1, 2)							AS POD,
		CASE DOC.DOMESTIC_CHK
			WHEN 'Y' THEN 'D'
			ELSE 'I'
		END													AS TRADE_TYPE, 						/* C4 - Trade Type */
	    DOC.CG_TP_CD      									AS CARGO_TYPE,
	    DOC.CMDT_GRP_CD       								AS COMMODITY_GROUP,
	    DOC.CMDT_CD       									AS COMMODITY, 
	    JOB.TSPT_TP_CD 										AS MODE_OF_OPR,
	    DOC.PKG_TP_CD 										AS PKG_TP_CD,
	    JOB.CG_NO        	 								AS CARGO_NO,
	    JOB.JOB_PURP_CD   									AS JOB_PURP_CD,
		CASE JOB.JOB_PURP_CD
			WHEN 'AW' 
				THEN 
					JOB.CG_WGT 
					+ JOB.CG_WGT 
					- SUM(JOB.CG_WGT) OVER()
			WHEN 'GW'
				THEN 
					JOB.CG_WGT 
					+ JOB.CG_WGT 
					- SUM(JOB.CG_WGT) OVER()
			WHEN 'WA' THEN 0
			WHEN 'WG' THEN 0
			ELSE JOB.CG_WGT 
		END 												AS CG_WGT,
		CASE JOB.JOB_PURP_CD
			WHEN 'AW' 
				THEN 
					JOB.CG_VOL 
					+ JOB.CG_VOL 
					- SUM(JOB.CG_VOL) OVER()
			WHEN 'GW'
				THEN 
					JOB.CG_VOL 
					+ JOB.CG_VOL 
					- SUM(JOB.CG_VOL) OVER()
			WHEN 'WA' THEN 0
			WHEN 'WG' THEN 0
			ELSE JOB.CG_VOL 
		END 												AS CG_VOL,
		CASE JOB.JOB_PURP_CD
			WHEN 'AW' 
				THEN 
					JOB.PKG_QTY 
					+ JOB.PKG_QTY 
					- SUM(JOB.PKG_QTY) OVER()
			WHEN 'GW'
				THEN 
					JOB.PKG_QTY 
					+ JOB.PKG_QTY 
					- SUM(JOB.PKG_QTY) OVER()
			WHEN 'WA' THEN 0
			WHEN 'WG' THEN 0
			ELSE JOB.PKG_QTY 
		END 												AS PKG_QTY,
	    DOC.WGT     										AS DOC_WGT,
	    DOC.VOL	    										AS DOC_MSRMT,
	    DOC.PKG_QTY											AS DOC_PKG_QTY,
	    FORMAT(JOB.LOAD_ST_DT, 'yyyyMMddHHmm') 				AS LOAD_ST_DT,
	    FORMAT(JOB.LOAD_END_DT, 'yyyyMMddHHmm') 			AS LOAD_END_DT,
	    FORMAT(JOB.DIS_ST_DT, 'yyyyMMddHHmm') 				AS DIS_ST_DT,
	    FORMAT(JOB.DIS_END_DT, 'yyyyMMddHHmm') 				AS DIS_END_DT,
	    FORMAT(JOB.WORK_ST_DT, 'yyyyMMddHHmm') 				AS WORK_ST_DT,
	    FORMAT(JOB.WORK_END_DT, 'yyyyMMddHHmm')				AS WORK_END_DT,
	    FORMAT(SCH.ATA,'yyyyMMddHHmm') 						AS ATA,
	    FORMAT(SCH.ATD,'yyyyMMddHHmm') 						AS ATD,  
	    JOB.HDL_IN_ST_DT 						   			AS HDL_IN_TIME,
	    JOB.HDL_OUT_END_DT 					   				AS HDL_OUT_TIME,
	    CASE 
			WHEN 
				CASE DOC.OPE_CLASS_CD
					WHEN 'I' THEN SCH.ATC
					ELSE ''
				END IS NOT NULL 
				THEN 
					CASE 
						WHEN 
							CONVERT(DATE, SCH.ATC) 
								BETWEEN CONVERT(DATE, SCH.ATB) 
									AND CONVERT(
											DATE, 
											SCH.ATB 
											+ ISNULL(#{osFreeDays}, 3)
										)
							THEN 
								FORMAT(
									CASE DOC.OPE_CLASS_CD
										WHEN 'I' THEN  SCH.ATC
										ELSE ''
									END,
									'yyyyMMddHHmm'
								) 
						ELSE 
							FORMAT(
								SCH.ATB + ISNULL(#{osFreeDays}, 3),
								'yyyyMMddHHmm'
							) 
					END 
	        ELSE 
	            FORMAT(SCH.ATB,'yyyyMMddHHmm') 
	    END 												AS CARGO_IM_ST,
	    FORMAT(
			CASE DOC.OPE_CLASS_CD
				WHEN 'I' THEN JOB.HDL_OUT_END_DT
				ELSE ''
			END,
			'yyyyMMddHHmm'
		) 													AS CARGO_IM_END, 
	    CASE
	        WHEN
				CASE DOC.OPE_CLASS_CD
					WHEN 'E' THEN JOB.HDL_IN_ST_DT
					ELSE ''
				END IS NOT NULL 
	            	THEN FORMAT(
							JOB.HDL_IN_ST_DT, 
							'yyyyMMddHHmm'
						)
	    END 												AS CARGO_EX_ST,
	    FORMAT(
			CASE DOC.OPE_CLASS_CD
				WHEN 'E' THEN JOB.LOAD_END_DT
				ELSE ''
			END,
			'yyyyMMddHHmm'
		) 													AS CARGO_EX_END,
	    CASE 
			WHEN 
				CASE DOC.OPE_CLASS_CD
					WHEN 'B' 
						THEN 
							JOB.DIS_ST_DT 
							+ ISNULL(#{osFreeDays}, 3)
					ELSE ''
				END IS NOT NULL
				THEN
					CASE 
						WHEN  
							CASE DOC.OPE_CLASS_CD
								WHEN 'B' 
									THEN 
										JOB.DIS_ST_DT 
										+ ISNULL(#{osFreeDays}, 3)
								ELSE ''
							END <![CDATA[<]]> SCH.ATC 
							THEN 
								FORMAT(
									CASE DOC.OPE_CLASS_CD
										WHEN 'B' 
											THEN 
												JOB.DIS_ST_DT 
												+ ISNULL(#{osFreeDays}, 3)
										ELSE ''
									END,
									'yyyyMMddHHmm'
								) 
						ELSE 
							FORMAT(SCH.ATC,'yyyyMMddHHmm') 
					END 
	    END 																		AS CARGO_BOTH_ST, 
	    FORMAT(
			CASE DOC.OPE_CLASS_CD
				WHEN 'B' THEN JOB.HDL_OUT_END_DT
				ELSE ''
			END,
			'yyyyMMddHHmm'
		) 													AS CARGO_BOTH_END,   
	    JOB.LOC_TP_CD   									AS WH_TP_CD,
	    JOB.TO_LOC_ID 										AS TO_LOC_ID,
	    JOB.BL_NO 											AS BL_NO, 
	    JOB.SHIPG_NOTE_NO 									AS SHIPG_NOTE_NO, 
	    PART.SA_CORP_ID       								AS SHIPG_AGNT,
	    DOC.FWRD         									AS FWR_AGNT,
	    DOC.SHPR             								AS SHPR,
	    DOC.CNSNE            								AS CNSNE,
	    (SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_PTNR 
		WHERE 
			PTNR_CODE 				= PART.SA_CORP_ID 
			AND PTNR_TYPE 			= 'SHA' 
			AND (
				PAYMENT_TYPE 		IS NOT NULL
				AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
			)
		UNION SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_AGENCY_INFO 
		WHERE 
			AGENCY_CODE 			= PART.SA_CORP_ID 
			AND PTNR_TYPE 			= 'SHA' 
			AND (
				PAYMENT_TYPE 		IS NOT NULL
				AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
			)
		) 													AS SHIPG_AGENT_PAY_TP,
	    (SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_PTNR 
		WHERE 
			PTNR_CODE 				= DOC.FWRD 
			AND PTNR_TYPE 			= 'FWD'
		) 													AS FWD_PAY_TP,
	    (SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_PTNR 
		WHERE 
			PTNR_CODE 				= DOC.SHPR 
			AND PTNR_TYPE 			= 'SHP'
		) 													AS SHPR_PAY_TP,
	    (SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_PTNR 
		WHERE 
			PTNR_CODE 				= DOC.CNSNE 
			AND PTNR_TYPE 			= 'CNS'
		) 													AS CNS_PAY_TP,
	    JOB.SHFT_DT											AS SHFT_DT,
	    JOB.SHFT_NM 										AS SHFT_NM,
	    ISNULL(
			JOB.HDL_IN_END_DT, 
			(SELECT TOP(1)
				J.WORK_END_DT
			FROM 
				TMT_JOB J 
			WHERE 
				J.FNL_OPE_YN 		= 'Y'
				AND J.JOB_PURP_CD 	IN ('GW', 'AW')
				AND J.VSL_CALL_ID 	= JOB.VSL_CALL_ID
				AND J.CG_NO 		= JOB.CG_NO
	        )
		) 													AS HDL_IN_END_DT,
		
		FORMAT(
			CASE JOB.JOB_PURP_CD
				WHEN 'AW' THEN CONVERT(DATETIME, #{estDt}, 103)
				WHEN 'GW' THEN CONVERT(DATETIME, #{estDt}, 103)
				ELSE JOB.WORK_END_DT
			END,
			'yyyyMMddHHMM'
		) 													AS EXPECTED_DELV_DT,				<!--BILL-036-->
		MF_DOC.FREE_DAYS,
	    'PFI'      											AS SCR_ID,
	    JOB.CG_NO 											AS REF_NO,
	    DOC.MF_DOC_ID 										AS REF_NO2,
	    JOB_NO
	FROM (
	 	SELECT 
			MIN(JOB_NO) 									AS JOB_NO,
			JOB.JOB_PURP_CD,
			JOB.JOB_TP_CD,
			ISNULL(CGM.BL_NO, CGM.SHIPG_NOTE_NO) 			AS CG_NO,
			CGM.BL_NO,
			CGM.SHIPG_NOTE_NO,
			JOB.DELV_TP_CD,
			JOB.VSL_CALL_ID,
			CASE 
				WHEN (
					CGM.BL_NO IS NOT NULL
					AND CGM.BL_NO <![CDATA[<>]]> ''
				)
					THEN 'I'
				ELSE 'E'
			END 											AS OPE_CLASS_CD,
			JOB.OPE_CLASS_CD            					AS CATG_CG,
			SUM(JOB.CG_VOL) 								AS CG_VOL,
			SUM(JOB.PKG_QTY) 								AS PKG_QTY,
			SUM(JOB.CG_WGT)   								AS CG_WGT,
			MAX(JOB.WORK_END_DT) 							AS WORK_END_DT,
			MIN(JOB.WORK_ST_DT) 							AS WORK_ST_DT,
			MAX(JOB.SHFT_DT) 								AS SHFT_DT,
			MAX(JOB.SHFT_ID) 								AS SHFT_ID,
			LOC.LOC_TP_CD,
			JOB.RHDL_MODE,
			MAX(TO_LOC_ID) 									AS TO_LOC_ID,
			MAX(JOB.TSPT_TP_CD) 							AS TSPT_TP_CD,
			MIN(CGM.GATE_IN_DT)    							AS GATE_IN_DT,
			MAX(CGM.GATE_OUT_DT)   							AS GATE_OUT_DT,
			MIN(CGM.HDL_IN_ST_DT)  							AS HDL_IN_ST_DT,
			MAX(CGM.HDL_IN_END_DT) 							AS HDL_IN_END_DT,
			MIN(CGM.HDL_OUT_ST_DT) 							AS HDL_OUT_ST_DT,
			MAX(CGM.HDL_OUT_END_DT)    						AS HDL_OUT_END_DT,
			MIN(CGM.LOAD_ST_DT)    							AS LOAD_ST_DT,
			MAX(CGM.LOAD_END_DT)   							AS LOAD_END_DT,
			MIN(CGM.DIS_ST_DT) 								AS DIS_ST_DT,
			MAX(CGM.DIS_END_DT)    							AS DIS_END_DT,
			MAX(SHF.SHFT_NM) 								AS SHFT_NM
		FROM 
			TMT_JOB 										JOB
		INNER JOIN 
			TMT_CG_MST CGM 
				ON JOB.VSL_CALL_ID 							= CGM.VSL_CALL_ID 
				AND JOB.CG_NO 								= CGM.CG_NO
		INNER JOIN 
			TMT_LOC_DEF 									LOC 
				ON LOC.LOC_ID 								= SUBSTRING(JOB.TO_LOC_ID, 0, PATINDEX('%[-(]%', JOB.TO_LOC_ID))
				AND LOC.LOC_DIV_CD 							= 'WHO'
		LEFT OUTER JOIN 
			TMT_SHFT 										SHF  
				ON JOB.SHFT_ID 								= SHF.SHFT_ID 
				AND SHF.VLD_YN								= 'Y'
		WHERE
	            ( 
	                ( 
						JOB.JOB_PURP_CD 					= 'AW' 
						AND JOB.JOB_TP_CD 					= 'DS' 
					)
	                OR ( JOB.JOB_PURP_CD 					= 'GW' 
					AND JOB.JOB_TP_CD 						= 'LF' 
					)
	            )
	            AND ISNULL(JOB.RC_CO_CD, 'NR') 				<![CDATA[<>]]> 'CC'
	            AND (
					JOB.TO_LOC_ID 							IS NOT NULL
					AND JOB.TO_LOC_ID 						<![CDATA[<>]]> ''
				)
	            AND NOT ( 
					JOB.JOB_CO_CD 							= 'D'
					AND JOB.JOB_PURP_CD 					<![CDATA[<>]]> 'WW' 
				)
	            AND JOB.VSL_CALL_ID 						= #{vslCallId}
	            AND ISNULL(CGM.BL_NO, CGM.SHIPG_NOTE_NO) 	= #{blNo}
	        GROUP BY
	            JOB.VSL_CALL_ID,
	            JOB.JOB_PURP_CD,
	            JOB.JOB_TP_CD,
	            JOB.OPE_CLASS_CD,
	            JOB.DELV_TP_CD,
	            CGM.BL_NO, 
				CGM.SHIPG_NOTE_NO,
	            LOC.LOC_TP_CD,
	            JOB.RHDL_MODE

	        UNION

	        SELECT 
	            JOB_NO,
	            JOB.JOB_PURP_CD,
	            JOB.JOB_TP_CD,
	            ISNULL(CGM.BL_NO, CGM.SHIPG_NOTE_NO) 		AS CG_NO,
	            CGM.BL_NO,
	            CGM.SHIPG_NOTE_NO,
	            JOB.DELV_TP_CD,
	            JOB.VSL_CALL_ID,
	            CASE 
					WHEN (
						CGM.BL_NO IS NOT NULL
						AND CGM.BL_NO <![CDATA[<>]]> ''
					)
						THEN 'I'
					ELSE 'E'
				END 										AS OPE_CLASS_CD,
	            JOB.OPE_CLASS_CD            				AS CATG_CG,
	            JOB.CG_VOL       							AS CG_VOL,
	            JOB.PKG_QTY       							AS PKG_QTY,
	            JOB.CG_WGT         							AS CG_WGT,
	            JOB.WORK_END_DT,
	            JOB.WORK_ST_DT,
	            JOB.SHFT_DT,
	            JOB.SHFT_ID,
	            LOC.LOC_TP_CD,
	            JOB.RHDL_MODE,
	            TO_LOC_ID,
	            JOB.TSPT_TP_CD,
	            CGM.GATE_IN_DT          					AS GATE_IN_DT,
	            CGM.GATE_OUT_DT         					AS GATE_OUT_DT,
	            CGM.HDL_IN_ST_DT        					AS HDL_IN_ST_DT,
	            CGM.HDL_IN_END_DT       					AS HDL_IN_END_DT,
	            CGM.HDL_OUT_ST_DT       					AS HDL_OUT_ST_DT,
	            CGM.HDL_OUT_END_DT          				AS HDL_OUT_END_DT,
	            CGM.LOAD_ST_DT          					AS LOAD_ST_DT,
	            CGM.LOAD_END_DT         					AS LOAD_END_DT,
	            CGM.DIS_ST_DT       						AS DIS_ST_DT,
	            CGM.DIS_END_DT          					AS DIS_END_DT,
	            SHF.SHFT_NM       							AS SHFT_NM
	        FROM 
				TMT_JOB       								JOB
	        INNER JOIN 
				TMT_CG_MST 									CGM 
					ON JOB.VSL_CALL_ID 						= CGM.VSL_CALL_ID 
					AND JOB.CG_NO 							= CGM.CG_NO
	        INNER JOIN 
				TMT_LOC_DEF 								LOC 
					ON LOC.LOC_ID 							= SUBSTRING(JOB.TO_LOC_ID, 0,  PATINDEX('%[-(]%', JOB.TO_LOC_ID))
				 	AND LOC.LOC_DIV_CD 						= 'WHO'
	        LEFT OUTER JOIN 
				TMT_SHFT 									SHF  
					ON JOB.SHFT_ID 							= SHF.SHFT_ID 
					AND SHF.VLD_YN							= 'Y'
	        WHERE
	            (
	                ( 
						JOB.JOB_PURP_CD 					= 'WG' 
						AND JOB.JOB_TP_CD 					= 'LO' 
					)
	                OR ( 
						JOB.JOB_PURP_CD 					= 'WA' 
						AND JOB.JOB_TP_CD 					= 'LD' 
					)
	            )
	            AND ISNULL(JOB.RC_CO_CD, 'NR') 				<![CDATA[<>]]> 'CC'
	            AND (
					JOB.TO_LOC_ID 							IS NOT NULL
					AND JOB.TO_LOC_ID 						<![CDATA[<>]]> ''
				)
	            AND NOT ( 
					JOB.JOB_CO_CD 							= 'D'
	                AND JOB.JOB_PURP_CD 					<![CDATA[<>]]> 'WW' 
				)
	            AND JOB.VSL_CALL_ID 						= #{vslCallId}
	            AND ISNULL(CGM.BL_NO, CGM.SHIPG_NOTE_NO) 	= #{blNo}
	    ) 													JOB 
	INNER JOIN (
		SELECT 
			SN.VSL_CALL_ID,                                                                            
			'E'                                       		AS OPE_CLASS_CD,
			SN.MF_DOC_ID,                                                                           
			NULL                                           	AS BL_NO,
			SN.SHIPG_NOTE_NO,                                                                        
			SN.SHIPG_NOTE_NO                               	AS CG_NO,
			SN.PKG_NO,                                                                              
			SN.GDS_RMK                                    	AS PKG_MARK, 
			SN.CATG_CD,                                                                             
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 		MSTD 
			WHERE 
				L_CD 				= 'MT' 
				AND M_CD 			= 'CATGTP' 
				AND SN.CATG_CD 		= MSTD.S_CD 
			) 												AS CATG_NM,
			SN.CG_TP_CD,                                                                            
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 
			WHERE 
				L_CD 				= 'MT' 
				AND M_CD 			= 'CGTP' 
				AND S_CD_USE 		= 'Y' 
				AND S_CD 			= SN.CG_TP_CD
			) 								      			AS CGTPNM,
			SN.CMDT_GRP_CD,                                                                         
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 
			WHERE 
				L_CD 				= 'MT' 
				AND M_CD 			= 'CMDTGRP' 
				AND S_CD_USE 		= 'Y' 
				AND S_CD 			= SN.CMDT_GRP_CD
			) 												AS CMDTGRPNM,
			SN.CMDT_CD,                                                                             
			(SELECT 
				CMDT_DESC 
			FROM 
				TMT_CMDT 			CMDT 
			WHERE 
				CMDT.CMDT_CD 		= SN.CMDT_CD 
				AND CMDT.CMDT_GRP_CD= SN.CMDT_GRP_CD
			) 								               AS CMDTNM,
			SN.PKG_TP_CD,                                                                           
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 
			WHERE 
				L_CD 				= 'MT' 
				AND M_CD 			= 'PKGTP' 
				AND S_CD_USE 		= 'Y' 
				AND S_CD 			= SN.PKG_TP_CD
			) 								    			AS PKGTPNM,
			SN.IMDG                               			AS IMDGCLASS,
			SN.UNNO                                   		AS UNNO,
			SN.CG_WGT                  						AS WGT,
			SN.CG_VOL                						AS VOL,
			SN.PKG_QTY,
			SN.DELV_TP_CD,
			SN.TSPT_TP_CD,
			SN.FWRD,
			SN.SHIPG_AGNCY                        			AS SHIPG_AGENT,
			SN.CNSNE,
			SN.SHPR,
			SN.POR                             				AS POR,
			SN.POD                              			AS POD,
			SN.POL                             				AS POL,
			SN.FDEST,
			SN.DOMESTIC_CHK
		FROM 
			TMT_SHIPG_NOTE 									SN

		UNION

		SELECT 
			BL.VSL_CALL_ID,                                                                            
			'I'                                      		AS OPE_CLASS_CD,
			BL.MF_DOC_ID,                                                                           
			BL.BL_NO,                                                                                
			NULL,                                                                                     
			BL.BL_NO                                   		AS CG_NO,
			'BL.PKG_NO'										AS PKG_NO,                                                                                 
			'BL.PKG_MARK'									AS PKG_MARK,	                                                                            
			BL.CATG_CD,                                                                             
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 		MSTD 
			WHERE 
				L_CD 				= 'MT' 
				AND M_CD 			= 'CATGTP' 
				AND BL.CATG_CD 		= MSTD.S_CD 
			) 								        		AS CATGNM,
			BL.CG_TP_CD,                                                                            
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 
			WHERE 
				L_CD 				= 'MT' 
				AND M_CD 			= 'CGTP' 
				AND S_CD_USE 		= 'Y' 
				AND S_CD 			= BL.CG_TP_CD
			) 												AS CGTPNM,
			BL.CMDT_GRP_CD,                                                                         
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 
			WHERE 
				L_CD 				= 'MT' 
				AND M_CD 			= 'CMDTGRP' 
				AND S_CD_USE 		= 'Y' 
				AND  S_CD 			= BL.CMDT_GRP_CD
			) 												AS CMDTGRPNM,
			BL.CMDT_CD,                                                                             
			(SELECT 
				CMDT_DESC 
			FROM 
				TMT_CMDT 			CMDT 
			WHERE 
				CMDT.CMDT_CD 		= BL.CMDT_CD 
				AND CMDT.CMDT_GRP_CD= BL.CMDT_GRP_CD
			) 								               AS CMDTNM,
			BL.PKG_TP_CD,                                                                           
			(SELECT 
				S_CD_NM 
			FROM 
				TMT_CD_MSTD 
			WHERE 
				L_CD 				= 'MT' 
				AND M_CD 			= 'PKGTP' 
				AND S_CD_USE 		= 'Y' 
				AND S_CD 			= BL.PKG_TP_CD
			) 								    			AS PKGTPNM,
			BL.IMDG_CLASS                               	AS IMDGCLASS,
			BL.UNNO                                      	AS UNNO,
			BL.CG_WGT,
			BL.CG_VOL,
			BL.PKG_QTY,
			BL.DELV_TP_CD,
			BL.TSPT_TP_CD,
			BL.FWRD,                                                                                 
			'BL.SHIPG_AGENT'								AS SHIPG_AGENT,                                                                         
			BL.CNSNE,                                                                               
			BL.SHPR,
			NULL                                   			AS POR,
			BL.POD,
			BL.POL,
			BL.FDEST,
			BL.DOMESTIC_CHK
		FROM 
			TMT_BL 											BL 
	) 														DOC 
		ON JOB.VSL_CALL_ID 									= DOC.VSL_CALL_ID 
		AND JOB.CG_NO 										= DOC.CG_NO 
		AND JOB.OPE_CLASS_CD 								= DOC.OPE_CLASS_CD
	INNER JOIN 
		TMT_MF 												MF_DOC 
			ON DOC.VSL_CALL_ID 								= MF_DOC.VSL_CALL_ID 
			AND DOC.MF_DOC_ID 								= MF_DOC.MF_DOC_ID
	LEFT OUTER JOIN 
		TMT_VSL_SCH  										SCH   
			ON SCH.VSL_CALL_ID 								= JOB.VSL_CALL_ID
	LEFT OUTER JOIN 
		TMT_VSL_PART 										PART  
			ON SCH.VSL_CD 									= PART.VSL_CD
	WHERE    
		JOB.CG_NO NOT IN (  
			SELECT DISTINCT 
				B.CG_NO 
			FROM    
				TMT_INV_LOC     							B,
				TMT_JOB 									D, 
				(SELECT  
					E.FM_YMD    							AS FM_YMD, 
					E.TO_YMD    							AS TO_YMD, 
					F.CD_VAL    							AS CD_VAL, 
					E.TNNT      							AS TNNT 
				FROM    
					TMT_RENT    							E 
				INNER JOIN 
					TMT_RENT_DTL   							F 
						ON E.CONTT_NO 						= F.CONTT_NO 
						AND   E.REF_NO   					= F.REF_NO 
				WHERE   
					F.ITEM_DIV_CD   						= 'LO'
				) 											RENT,
				TMT_CG_MST      							MST   
			WHERE   
				B.JOB_NO 									= D.JOB_NO 
				AND B.VSL_CALL_ID 							= D.VSL_CALL_ID   
				AND B.LOC_ID        						= RENT.CD_VAL
				AND B.CG_NO         						= MST.CG_NO
				AND B.VSL_CALL_ID   						= MST.VSL_CALL_ID                            
				AND MST.FWR_AGNT    						= RENT.TNNT
				AND MST.VSL_CALL_ID 						= #{vslCallId}
				AND ( 
					D.WORK_END_DT 							<![CDATA[>=]]> CONVERT(DATE, RENT.FM_YMD, 112) 
					AND D.WORK_END_DT 						<![CDATA[<=]]> CONVERT(DATE, RENT.TO_YMD, 112)
				)
			
			UNION ALL

			SELECT  
				DISTINCT MST.CG_NO
			FROM    
				TMT_JOB 									D, 
				(SELECT  
					E.FM_YMD    							AS FM_YMD, 
					E.TO_YMD    							AS TO_YMD, 
					F.CD_VAL    							AS CD_VAL, 
					E.TNNT      							AS TNNT 
				FROM    
					TMT_RENT    							E 
				INNER JOIN 
					TMT_RENT_DTL   							F 
						ON 	E.CONTT_NO 						= F.CONTT_NO 
						AND E.REF_NO   						= F.REF_NO 
				WHERE   
					F.ITEM_DIV_CD   						= 'CM'
				) 											RENT,
				TMT_CG_MST      							MST   
			WHERE  
				MST.CMDT_CD     							= RENT.CD_VAL 
				AND MST.FWR_AGNT    						= RENT.TNNT
				AND MST.VSL_CALL_ID 						= #{vslCallId}
				AND ( 
					D.WORK_END_DT 							<![CDATA[>=]]> CONVERT(DATE, RENT.FM_YMD, 112) 
					AND D.WORK_END_DT 						<![CDATA[<=]]> CONVERT(DATE, RENT.TO_YMD, 112)
				)                                                   
			)
		AND JOB.VSL_CALL_ID 								= #{vslCallId}   
		<if test="blNo != '' and blNo != null ">
			AND DOC.OPE_CLASS_CD 							= #{opeClassCd}
			AND DOC.MF_DOC_ID 								= #{masterBL}
			AND DOC.CG_NO 									= #{blNo}
		</if>
</select>

	<select id ="selectGenerateHGandSTchargelist"	parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeGeneratorItemMap">
	/* TariffCodeGenerator.selectGenerateHGandSTchargelist */
	WITH JOBS AS (
	    SELECT 
	        J.VSL_CALL_ID,
	        ISNULL(SHIPG_NOTE_NO, BL_NO) 					AS CG_NO,
	        J.OPE_CLASS_CD,
	        JOB_TP_CD,
	        JOB_PURP_CD,
	        J.DELV_TP_CD,
	        SUM(J.CG_WGT)  									AS CG_WGT,
	        SUM(J.CG_VOL) 									AS CG_VOL,
	        SUM(J.PKG_QTY) 									AS PKG_QTY,
	        MIN(WORK_ST_DT)    	 							AS WORK_ST_DT,
	        MAX(WORK_END_DT)   	 							AS WORK_END_DT,
	        MIN(JOB_NO) 									AS JOB_NO,
	        MIN(GATE_TXN_NO)  								AS GATE_TXN_NO,
	        BL_NO,
	        SHIPG_NOTE_NO,
	        MAX(J.TSPT_TP_CD)    							AS TSPT_TP_CD,
	        MAX(MARK_NO)    								AS MARK_NO,
	        MIN(GATE_IN_DT)     							AS GATE_IN_DT,
	        MAX(GATE_OUT_DT)    							AS GATE_OUT_DT,
	        MIN(HDL_IN_ST_DT)   							AS HDL_IN_ST_DT,
	        MAX(HDL_IN_END_DT)  							AS HDL_IN_END_DT,
	        MIN(HDL_OUT_ST_DT)  							AS HDL_OUT_ST_DT,
	        MAX(HDL_OUT_END_DT)     						AS HDL_OUT_END_DT,
	        MIN(LOAD_ST_DT)     							AS LOAD_ST_DT,
	        MAX(LOAD_END_DT)    							AS LOAD_END_DT,
	        MIN(DIS_ST_DT)  								AS DIS_ST_DT,
	        MAX(DIS_END_DT)     							AS DIS_END_DT,
	        MAX(J.PKG_TP_CD)  								AS PKG_TP_CD,
	        MAX(J.DMG_YN)     								AS DMG_YN,
	        MAX(J.RHDL_MODE)  								AS RHDL_MODE,
	        MAX(CG_TP_CD)   								AS CG_TP_CD,
	        MAX(CMDT_CD)    								AS CMDT_CD,
	        MIN(TMNL_IN_DT)     							AS TMNL_IN_DT,
	        MAX(TMNL_OUT_DT)    							AS TMNL_OUT_DT,
	        MAX(PREV_LOC_ID)    							AS PREV_LOC_ID,
	        MAX(CURR_LOC_ID)    							AS CURR_LOC_ID,
	        MAX(NX_LOC_ID)  								AS NX_LOC_ID,
	        MAX(SHIPG_AGNT)     							AS SHIPG_AGNT,
	        MAX(FWR_AGNT)   								AS FWR_AGNT,
	        MAX(SHPR)   									AS SHPR,
	        MAX(SHPR_NM)    								AS SHPR_NM,
	        MAX(SHPR_ADDR)  								AS SHPR_ADDR,
	        MAX(CNSNE)  									AS CNSNE,
	        MAX(CNSNE_NM)   								AS CNSNE_NM,
	        MAX(CNSNE_ADDR)     							AS CNSNE_ADDR,
	        MAX(CNTRY_OF_ORG)   							AS CNTRY_OF_ORG,
	        MAX(PORT_OF_LOAD)   							AS PORT_OF_LOAD,
	        MAX(PORT_OF_DIS)    							AS PORT_OF_DIS,
	        MAX(FDEST)  									AS FDEST,
	        MAX(J.RMK)    									AS RMK,
	        MAX(WH_FNL_DELV_YN)     						AS WH_FNL_DELV_YN,
	        SUM(J.LD_DMG_QTY)     							AS LD_DMG_QTY,
	        SUM(J.LD_DMG_MT)  								AS LD_DMG_MT,
	        SUM(J.LD_DMG_M3)  								AS LD_DMG_M3,
	        SUM(BILL_WGT)   								AS BILL_WGT,
	        SUM(BILL_MSRMT)     							AS BILL_MSRMT,
	        SUM(BILL_PKG_QTY)   							AS BILL_PKG_QTY,
	        SUM(BILL_WGT_D)     							AS BILL_WGT_D,
	        SUM(BILL_MSRMT_D)   							AS BILL_MSRMT_D,
	        SUM(BILL_PKG_QTY_D)     						AS BILL_PKG_QTY_D,
	        SUM(BILL_WGT_V)     							AS BILL_WGT_V,
	        SUM(BILL_MSRMT_V)   							AS BILL_MSRMT_V,
	        SUM(BILL_PKG_QTY_V)     						AS BILL_PKG_QTY_V,
	        MAX(DO_NO)  									AS DO_NO,
	        MAX(CMDT_GRP_CD)    							AS CMDT_GRP_CD,
	        MAX(J.REPKG_TP_CD)    							AS REPKG_TP_CD,
	        MIN(GR_NO)  									AS GR_NO
	    FROM 
			TMT_JOB  										J
	    LEFT JOIN 
			TMT_CG_MST  									CG 
				ON J.VSL_CALL_ID 							= CG.VSL_CALL_ID 
				AND J.CG_NO  								= CG.CG_NO
		WHERE 
			1 = 1
			AND JOB_PURP_CD  								IN ('VA', 'AV', 'VG', 'GV')
			AND J.VSL_CALL_ID  								= #{vslCallId}
		GROUP BY 
			JOB_TP_CD, 
			J.VSL_CALL_ID, 
			JOB_PURP_CD, 
			J.DELV_TP_CD, 
			J.OPE_CLASS_CD, 
			BL_NO, 
			SHIPG_NOTE_NO
	), 
	WH_JOB AS (
		SELECT 
	        VSL_CALL_ID,
	        JOB_PURP_CD,
	        CG_NO,
	        DELV_TP_CD,
	        LOC.LOC_TP_CD,
	        SUM(CG_WGT) 									AS CG_WGT,
			SUM(CG_VOL) 									AS CG_VOL,
			SUM(PKG_QTY) 									AS PKG_QTY
	    FROM 
			TMT_JOB 										J
	    INNER JOIN 
			TMT_LOC_DEF  									LOC 
				ON LOC.LOC_ID = 
					SUBSTRING(
						J.TO_LOC_ID, 
						0,  
						PATINDEX('%[-(]%', J.TO_LOC_ID)
					)
				AND LOC.LOC_DIV_CD 							= 'WHO'
	    WHERE 
			JOB_PURP_CD 									IN ('AW')
	      	AND J.VSL_CALL_ID 								= #{vslCallId}
	    GROUP BY 
			VSL_CALL_ID,
	        JOB_PURP_CD,
	        CG_NO,
	        LOC.LOC_TP_CD,
	        DELV_TP_CD

	    UNION

	    SELECT 
	        J.VSL_CALL_ID,
	        JOB_PURP_CD,
	        GR.SHIPG_NOTE_NO 								AS CG_NO,
	        DELV_TP_CD,
	        LOC.LOC_TP_CD,
	        SUM(J.CG_WGT),
	        SUM(J.CG_VOL),
	        SUM(J.PKG_QTY)
	    FROM 
			TMT_JOB 										J
	    INNER JOIN 
			TMT_LOC_DEF 									LOC 
				ON LOC.LOC_ID = 
					SUBSTRING(
						J.TO_LOC_ID, 
						0,  
						PATINDEX('%[-(]%', J.TO_LOC_ID)
					)
	    		AND LOC.LOC_DIV_CD = 'WHO'
	    LEFT JOIN 
			TMT_GR 											GR 
				ON J.VSL_CALL_ID 							= GR.VSL_CALL_ID 
				AND J.CG_NO 								= GR.GR_NO
	    WHERE 
			JOB_PURP_CD 									IN ('GW')
	      	AND J.VSL_CALL_ID 								= #{vslCallId}
	    GROUP BY
			J.VSL_CALL_ID,
	        JOB_PURP_CD,
	        GR.SHIPG_NOTE_NO,
	        LOC.LOC_TP_CD,
	        DELV_TP_CD
	)

	SELECT 
		MF_DOC.OP_CLASS_CD 									AS OPE_CLASS, 						/* OPE_CALSS */
	    CG.OPE_CLASS_CD 									AS CATG_CD,   						/* C1  - Category */
	    ISNULL(CG.RHDL_MODE, 'N') 							AS RHDL_MODE, 						/* C2  - Rehandle */
	    CG.DELV_TP_CD 										AS DELIVERY_TYPE, 					/* C3  - Delivery Mode */
	    DOC.POL,
	    DOC.POD,			
		CASE DOC.DOMESTIC
			WHEN 'Y' THEN 'D'
			ELSE 'I'
		END 												AS TRADE_TYPE,						/* C4  - Trade Type */
	    DOC.CG_TP_CD 										AS CARGO_TYPE,  					/* C7  - Cargo Type */
	    DOC.CMDT_GRP_CD 									AS COMMODITY_GROUP,					/* C8  - Commodity Group */
	    DOC.CMDT_CD 										AS COMMODITY,						/* C9  - Commodity */
	    DOC.PKG_TP_CD 										AS PACKAGE_TYPE,					/* C10 - Package Type */
	    CG.TSPT_TP_CD 										AS MODE_OF_OPR,						/* C12 - Mode of OPR    */
		CG.JOB_TP_CD										AS OPR_TP_CD,						/* C14 - Operation Type */
           CG.JOB_PURP_CD,
		CG.DMG_YN 											AS DAMAGED,							/* C - Damaged  */
		CASE 
			WHEN  
				CASE MF_DOC.OP_CLASS_CD
					WHEN 'I' THEN SCH.ATC
					ELSE ''
				END IS NOT NULL 
                THEN 
                   	CASE 
				   		WHEN 
							CONVERT(DATE, SCH.ATC, 103) 
								BETWEEN CONVERT(DATE, SCH.ATB, 103)
								AND CONVERT(DATE, SCH.ATB + ISNULL(#{osFreeDays}, 3), 103)
							THEN 
								FORMAT(
									CASE MF_DOC.OP_CLASS_CD
										WHEN 'I' THEN SCH.ATC
										ELSE ''
									END
									,'yyyyMMddHHmm'
								) 
                      ELSE 
                          FORMAT(SCH.ATB + ISNULL(#{osFreeDays}, 3),'yyyyMMddHHmm') 
                   END 
               ELSE 
                    FORMAT(SCH.ATB,'yyyyMMddHHmm') 
		END 												AS CARGO_IM_ST, 			/* O6 - CARGO OVER Storage (START)   */
		FORMAT(
			CASE CG.OPE_CLASS_CD
				WHEN 'I' THEN CG.HDL_OUT_END_DT
				ELSE ''
			END,
			'yyyyMMddHHmm'
		) 													AS CARGO_IM_END,  			/* O6 - CARGO OVER Storage (END)   */
		CASE 
			WHEN 
				CASE CG.OPE_CLASS_CD
					WHEN 'E' THEN CG.HDL_IN_ST_DT + ISNULL(#{osFreeDays}, 3)
					ELSE ''
				END IS NOT NULL
					THEN
						CASE 
							WHEN  
								CASE CG.OPE_CLASS_CD
									WHEN 'E' THEN CG.HDL_IN_ST_DT + ISNULL(#{osFreeDays}, 3)
									ELSE ''
								END <![CDATA[<]]> SCH.ATC 
							THEN 
							FORMAT(
								CASE CG.OPE_CLASS_CD
									WHEN 'E' THEN CG.HDL_IN_ST_DT + ISNULL(#{osFreeDays}, 3)
									ELSE ''
								END
								,'yyyyMMddHHmm') 
							ELSE 
							FORMAT(SCH.ATC,'yyyyMMddHHmm') 
		    END 
		END 												AS CARGO_EX_ST, 					/* O6 - CARGO OVER Storage (START)   */
		FORMAT(
			CASE CG.OPE_CLASS_CD
				WHEN 'E' THEN CG.LOAD_END_DT
				ELSE ''
			END,
			'yyyyMMddHHmm'
		) 													AS CARGO_EX_END,  					/* O6 - CARGO OVER Storage (END)   */
		CASE 
			WHEN 
				CASE CG.OPE_CLASS_CD
					WHEN 'B' 
						THEN 
							CG.DIS_ST_DT 
							+ ISNULL(#{osFreeDays}, 3)
					ELSE ''
				END IS NOT NULL
					THEN
						CASE 
							WHEN  
								CASE CG.OPE_CLASS_CD
									WHEN 'B' 
										THEN 
											CG.DIS_ST_DT 
											+ ISNULL(#{osFreeDays}, 3)
									ELSE ''
								END <![CDATA[<]]> SCH.ATC 
								THEN 
									FORMAT(
										CASE CG.OPE_CLASS_CD
											WHEN 'B' 
												THEN 
													CG.DIS_ST_DT 
													+ ISNULL(#{osFreeDays}, 3)
											ELSE ''
										END,
										'yyyyMMddHHmm'
									) 
						ELSE 
							FORMAT(SCH.ATC,'yyyyMMddHHmm') 
						END 
		END 												AS CARGO_BOTH_ST, 					/* O6 - CARGO OVER Storage (START)   */
		FORMAT(
			CASE CG.OPE_CLASS_CD
				WHEN 'B' THEN CG.HDL_OUT_END_DT
				ELSE ''
			END,
			'yyyyMMddHHmm'
		) 													AS CARGO_BOTH_END,  				/* O6 - CARGO OVER Storage (END)   */  
	    (SELECT 
			WH_LOC_TP 
		FROM 
			TMT_INV_LOC 
		WHERE 
			VSL_CALL_ID 			= CG.VSL_CALL_ID 
			AND CG_NO 				= CG.CG_NO 
			AND UPDATE_TIME IN ( /* C6 - W/H Type   */   
				SELECT 
					MAX(UPDATE_TIME) 
				FROM 
					TMT_INV_LOC 
				WHERE 
					VSL_CALL_ID 	= CG.VSL_CALL_ID 
					AND CG_NO 		= CG.CG_NO 
					AND (
						WH_LOC_TP 	IS NOT NULL
						AND WH_LOC_TP <![CDATA[<>]]> ''
					)
			) 
		GROUP BY 
			WH_LOC_TP
		) 													AS WH_LOC_TP,
	    CG.CG_NO 											AS CARGO_NO,
	    CG.CG_WGT 											AS CG_WGT,
	    CG.CG_VOL 											AS CG_MSRMT,
	    CG.PKG_QTY 											AS PKG_QTY,
	    CG.HDL_IN_ST_DT 									AS HDL_IN_TIME,
	    CG.HDL_OUT_END_DT 									AS HDL_OUT_TIME,
	    CG.BL_NO 											AS BL_NO,
	    CG.SHIPG_NOTE_NO 									AS SHIPG_NOTE_NO,
    	VP.SA_CORP_ID 										AS SHIPG_AGNT,
	    DOC.FWRD 											AS FWR_AGNT,
	    DOC.SHPR 											AS SHPR,
	    DOC.CNSNE 											AS CNSNE,
	    (SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_PTNR 
		WHERE 
			PTNR_CODE = VP.SA_CORP_ID 
			AND PTNR_TYPE = 'SHA' 
			AND PAYMENT_TYPE IS NOT NULL
           UNION SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_AGENCY_INFO 
		WHERE 
			AGENCY_CODE = VP.SA_CORP_ID 
			AND PTNR_TYPE = 'SHA' 
			AND PAYMENT_TYPE IS NOT NULL
		) 													AS SHIPG_AGENT_PAY_TP,
           (SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_PTNR 
		WHERE 
			PTNR_CODE = DOC.FWRD 
			AND PTNR_TYPE = 'FWD'
		) 													AS FWD_PAY_TP,
           (SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_PTNR 
		WHERE 
			PTNR_CODE = DOC.SHPR 
			AND PTNR_TYPE = 'SHP'
		) 													AS SHPR_PAY_TP,
           (SELECT 
			PAYMENT_TYPE 
		FROM 
			TMT_PTNR 
		WHERE 
			PTNR_CODE = DOC.CNSNE 
			AND PTNR_TYPE = 'CNS'
		) 													AS CNS_PAY_TP,
	    CG.CURR_LOC_ID 										AS CURR_LOC_ID,
	    REPKG_TP_CD,
	    CG.VSL_CALL_ID,
	    CG.CG_NO 											AS REF_NO,
	    DOC.MF_DOC_ID 										AS REF_NO2,
	    CG.CG_NO 											AS CG_NO,
	    'INV' 												AS IV_PRFX,
	    MF_DOC.FREE_DAYS,
	    CASE 
               WHEN WH_IN_SUMMARY_JOB.DELV_TP_CD = CG.DELV_TP_CD 
				THEN
					CASE 
						WHEN CHARINDEX(
								WH_IN_SUMMARY_JOB.WH_TP_CD, 
								'CS'
							) > 0 THEN 'CS'
						WHEN CHARINDEX(
								WH_IN_SUMMARY_JOB.WH_TP_CD, 
								'OY'
							) > 0 THEN 'OY'
						WHEN CHARINDEX(
								WH_IN_SUMMARY_JOB.WH_TP_CD, 
								'OS'
							) > 0 THEN 'OS'
					END
         		ELSE NULL
          END 													AS WH_TP_CD
          <!-- Invalid column
          MF_DOC.CRCY_CD
           -->
	FROM (
	    SELECT 
	        JOBS.VSL_CALL_ID,
	        JOBS.CG_NO,
	        JOBS.OPE_CLASS_CD,
	        JOB_TP_CD,
	        JOB_PURP_CD,
	        DELV_TP_CD,	
	        JOBS.PKG_QTY - ISNULL(RH.PKG_QTY , 0) 			AS PKG_QTY,
	        JOBS.CG_VOL - ISNULL(RH.CG_VOL , 0) 			AS CG_VOL,
	        JOBS.CG_WGT - ISNULL(RH.CG_WGT , 0) 			AS CG_WGT,
	        WORK_ST_DT,
	        WORK_END_DT,
	        JOBS.JOB_NO,
	        GATE_TXN_NO,
	        BL_NO,
	        SHIPG_NOTE_NO,
	        TSPT_TP_CD,
	        MARK_NO,
	        GATE_IN_DT,
	        GATE_OUT_DT,
	        HDL_IN_ST_DT,
	        HDL_IN_END_DT,
	        HDL_OUT_ST_DT,
	        HDL_OUT_END_DT,
	        LOAD_ST_DT,
	        LOAD_END_DT,
	        DIS_ST_DT,
	        DIS_END_DT,
	        PKG_TP_CD,
	        DMG_YN,
	        CG_TP_CD,
	        CMDT_CD,
	        TMNL_IN_DT,
	        TMNL_OUT_DT,
	        PREV_LOC_ID,
	        CURR_LOC_ID,
	        NX_LOC_ID,
	        SHIPG_AGNT,
	        FWR_AGNT,
	        SHPR,
	        SHPR_NM,
	        SHPR_ADDR,
	        CNSNE,
	        CNSNE_NM,
	        CNSNE_ADDR,
	        CNTRY_OF_ORG,
	        PORT_OF_LOAD,
	        PORT_OF_DIS,
	        FDEST,
	        RMK,
	        WH_FNL_DELV_YN,
	        LD_DMG_QTY,
	        LD_DMG_MT,
	        LD_DMG_M3,
	        BILL_WGT,
	        BILL_MSRMT,
	        BILL_PKG_QTY,
	        BILL_WGT_D,
	        BILL_MSRMT_D,
	        BILL_PKG_QTY_D,
	        BILL_WGT_V,
	        BILL_MSRMT_V,
	        BILL_PKG_QTY_V,
	        DO_NO,
	        CMDT_GRP_CD,
	        REPKG_TP_CD,
	        GR_NO,
	        RHDL_NO,
	        ORG_REF_NO,
	        NX_VSL_CALL_ID,
	        NX_REF_NO,
	        RH.OPE_CLASS_CD 								AS NX_OPE_CLASS_CD,
	        STS_YN,
	        ORG_GR_NO,
			CASE JOBS.RHDL_MODE
				WHEN 'T' THEN 'C'
				ELSE JOBS.RHDL_MODE
			END 											AS RHDL_MODE,
	        CG_CO_CD,
	        SP_CA_CO_CD,
	        NX_CG_NO,
	        RHDL_GROUP_NO,
	        ORG_MF_DOC_ID,
	        NX_MF_DOC_ID
	    FROM 
			JOBS
	    LEFT JOIN 
			TMT_RHDL_CG 									RH 
			ON JOBS.VSL_CALL_ID 							= RH.VSL_CALL_ID 
			AND JOBS.CG_NO 									= RH.ORG_REF_NO

	    UNION ALL

	    SELECT
	        JOBS.VSL_CALL_ID,
	        JOBS.CG_NO,
	        JOBS.OPE_CLASS_CD,
	        JOB_TP_CD,
	        JOB_PURP_CD,
	        DELV_TP_CD,
	        RH.PKG_QTY 										AS PKG_QTY,
	        RH.CG_VOL 										AS CG_VOL,
	        RH.CG_WGT 										AS CG_WGT,
	        WORK_ST_DT,
	        WORK_END_DT,
	        JOBS.JOB_NO,
	        GATE_TXN_NO,
	        BL_NO,
	        SHIPG_NOTE_NO,
	        TSPT_TP_CD,
	        MARK_NO,
	        GATE_IN_DT,
	        GATE_OUT_DT,
	        HDL_IN_ST_DT,
	        HDL_IN_END_DT,
	        HDL_OUT_ST_DT,
	        HDL_OUT_END_DT,
	        LOAD_ST_DT,
	        LOAD_END_DT,
	        DIS_ST_DT,
	        DIS_END_DT,
	        PKG_TP_CD,
	        DMG_YN,
	        CG_TP_CD,
	        CMDT_CD	,
	        TMNL_IN_DT,
	        TMNL_OUT_DT,
	        PREV_LOC_ID,
	        CURR_LOC_ID,
	        NX_LOC_ID,
	        SHIPG_AGNT,
	        FWR_AGNT,
	        SHPR,
	        SHPR_NM,
	        SHPR_ADDR,
	        CNSNE,
	        CNSNE_NM,
	        CNSNE_ADDR,
	        CNTRY_OF_ORG,
	        PORT_OF_LOAD,
	        PORT_OF_DIS,
	        FDEST,
	        RMK,
	        WH_FNL_DELV_YN,
	        LD_DMG_QTY,
	        LD_DMG_MT,
	        LD_DMG_M3,
	        BILL_WGT,
	        BILL_MSRMT,
	        BILL_PKG_QTY,
	        BILL_WGT_D,
	        BILL_MSRMT_D,
	        BILL_PKG_QTY_D,
	        BILL_WGT_V,
	        BILL_MSRMT_V,
	        BILL_PKG_QTY_V,
	        DO_NO,
	        CMDT_GRP_CD,
	        REPKG_TP_CD,
	        GR_NO,
	        RHDL_NO,
	        ORG_REF_NO,
	        NX_VSL_CALL_ID,
	        NX_REF_NO,
	        RH.OPE_CLASS_CD  								AS NX_OPE_CLASS_CD,
	        STS_YN,
	        ORG_GR_NO,
	        RH.RHDL_MODE 									AS RHDL_MODE,
	        CG_CO_CD,
	        SP_CA_CO_CD,
	        NX_CG_NO,
	        RHDL_GROUP_NO,
	        ORG_MF_DOC_ID,
	        NX_MF_DOC_ID
	    FROM 
			JOBS 
	    INNER JOIN 
			TMT_RHDL_CG 									RH 
			ON JOBS.VSL_CALL_ID 							= RH.VSL_CALL_ID 
			AND JOBS.CG_NO 									= RH.ORG_REF_NO
	    WHERE 
			RH.OPE_CLASS_CD 								= 'T'
	) 														CG
	INNER JOIN (
		SELECT 
   			VSL_CALL_ID,
           	'I' 											AS OPE_CLASS_CD,
           	CATG_CD,
           	MF_DOC_ID,
           	BL_NO  ,
           	NULL 											AS SHIPG_NOTE_NO,
           	BL_NO  											AS BLSN,
           	CG_TP_CD,
           	CMDT_GRP_CD,
           	CMDT_CD,
           	PKG_TP_CD,
           	'SHIPG_AGENT'									AS SHIPG_AGENT,
           	FWRD,
           	CNSNE,
           	SHPR,
           	POL,
   			POD,
   			NULL         									AS POR,
   			FDEST,
   			DOMESTIC_CHK 									AS DOMESTIC
  		FROM 
			TMT_BL
     	WHERE 
			VSL_CALL_ID 									= #{vslCallId}

   		UNION

    	SELECT 
            VSL_CALL_ID,
            'E' 											AS OPE_CLASS_CD,
            CATG_CD,
            MF_DOC_ID,
            NULL 											AS BL_NO,
            SHIPG_NOTE_NO,
            SHIPG_NOTE_NO 									AS BLSN,
            CG_TP_CD,
            CMDT_GRP_CD,
            CMDT_CD,
            PKG_TP_CD,
            SHIPG_AGNCY 									AS SHIPG_AGENT,
            FWRD,
            CNSNE,
            SHPR,
            POD 											AS POD,
		    POD  											AS POD,
		    POR 											AS POR,
		    FDEST,
		    DOMESTIC_CHK 									AS DOMESTIC
        FROM 
			TMT_SHIPG_NOTE
       	WHERE 
			VSL_CALL_ID 									= #{vslCallId}
       ) 													DOC 
			ON CG.VSL_CALL_ID 								= DOC.VSL_CALL_ID 
			AND CG.CG_NO 									= DOC.BLSN
	INNER JOIN 
		TMT_MF 												MF_DOC 
			ON DOC.VSL_CALL_ID 								= MF_DOC.VSL_CALL_ID 
			AND DOC.MF_DOC_ID 								= MF_DOC.MF_DOC_ID
	LEFT JOIN 
		TMT_VSL_SCH 										SCH 
			ON CG.VSL_CALL_ID 								= SCH.VSL_CALL_ID
	LEFT JOIN 
		TMT_VSL_PART 										VP 
			ON SCH.VSL_CD 									= VP.VSL_CD
	LEFT JOIN (
		SELECT
		    VSL_CALL_ID,
		    DELV_TP_CD,
		    CG_NO,
		    STRING_AGG(LOC_TP_CD, ',') 
				WITHIN GROUP(ORDER BY LOC_TP_CD) 			AS WH_TP_CD
		FROM 
			WH_JOB
		GROUP BY
		    VSL_CALL_ID,
		    DELV_TP_CD,
		    CG_NO
	) 														WH_IN_SUMMARY_JOB 
		ON CG.VSL_CALL_ID 									= WH_IN_SUMMARY_JOB.VSL_CALL_ID 
		AND CG.CG_NO 										= WH_IN_SUMMARY_JOB.CG_NO
	WHERE 
		1 = 1
		<if test="searchType == 'PFI'  ">
			AND DOC.OPE_CLASS_CD 							= #{opeClassCd}
			AND CG.CG_NO 									= #{blNo}
		</if>
	ORDER BY 
		CG.CG_NO, 
		CG.DELV_TP_CD
</select>

	<select id="selectGenerateServiceOrderForSettlementProformaList" parameterType="tariffServiceOrderGatheredParm" resultType="tariffServiceOrderGatheredItem">
		SELECT /* tariffCodeGenerator.selectGenerateServiceOrderForSettlementProformaList */
		    ODR.ODR_NO                                        	AS odrNo,
		    ODR_DTL.SEQ                                        	AS odrSeq,
		    ODR.SVC_DT_FM 										AS svcDtFmt,
		    ODR.VSL_CALL_ID                                    	AS vslCallId,
		    ODR_DTL.OPE_CLASS_CD                                       AS opeClassCd,
			CASE ODR.DOC_CHK
				WHEN 'Y' THEN ODR_DTL.REQ_MF_DOC_ID
				ELSE NULL
			END 												AS reqMfDocNo,
			CASE ODR.DOC_CHK
				WHEN 'Y' THEN ODR_DTL.COM_MF_DOC_ID
				ELSE NULL
			END 												AS compMfDocNo,
			CASE ODR.UNIT_NO_CHK
				WHEN 'Y' THEN ODR_DTL.REQ_DOC_NO
				ELSE NULL
			END 												AS reqCgNo,
			CASE ODR.UNIT_NO_CHK
				WHEN 'Y' THEN ODR_DTL.COM_DOC_NO
				ELSE NULL
			END 												AS compCgNo,
		    ODR_DTL.REQ_UNIT_NO                               	AS reqUnitNo,
		    ODR_DTL.COM_UNIT_NO                               	AS compUnitNo,
		    ODR.PAYER                                         	AS payer,
		    ODR.PAY_TP_CD                                     	AS payTpCd,
		    ODR.SVC_CD                                        	AS serviceCd,
		    TCD.TRF_CD                                        	AS trfCd,
		    TCD.SUB_TRF_CD                                    	AS subTrfCd,
		    TCD.TRF_TP_CD                                     	AS trfTpCd,
		    TCD.DESCR                                         	AS descr,
		    TCD.IV_UNIT1                                      	AS ivUnit1,
		    TCD.IV_UNIT2                                      	AS ivUnit2,
		    TCD.IV_UNIT3                                      	AS ivUnit3,
		    IV_DATA.UNIT1_VAL                                 	AS reqUnit1,
		    IV_DATA.UNIT2_VAL                                 	AS reqUnit2,
		    IV_DATA.UNIT3_VAL                                 	AS reqUnit3,
		    ODR.COM_UNIT                                      	AS compUnit1,
		    ODR.COM_UNIT1                                     	AS compUnit2,
		    ODR.COM_UNIT2                                     	AS compUnit3,
		    TRF.TRF_REG_NO                                    	AS trfRegNo,
		    TRF.APLY_YMD                                      	AS aplyYMD,
		    TRF.EXPR_YMD                                      	AS exprYMD,
		    TRF.UNIT_PRC                                      	AS unitPrc,
		    TRF.MIN_VAL1                                      	AS minVal1,
		    TRF.MIN_VAL2                                      	AS minVal2,
		    TRF.MIN_VAL3                                      	AS minVal3,
		    TRF.MAX_AMT                                       	AS maxAmt,
		    TCD.GST_TP_CD                                     	AS gstTpCd,
		    TCD.GST_RATE                                      	AS gstRate,
		    <choose>
				<when test="branchCode == 'MOST_KPGC1'">
					(
						SELECT TOP(1)
							ERP_COST_CENT 
						FROM 
							TMT_B_COST_CENTER 
						WHERE 
							TRF_CD 			= TCD.TRF_CD 
							AND SUB_TRF_CD 	= TCD.SUB_TRF_CD 
							AND TMNL_CD 	= VSL.TMNL_CD
					) 											AS erpCostCent,
				</when>
				<otherwise>
					TCD.ERP_COST_CENT                    		AS erpCostCent,
				</otherwise>
			</choose>
		    TCD.BILL_TP_CD										AS billTpCd,
		    ODR.STAT_CD                                     	AS statusCd,
		    'PFI'												AS scrId,
		    'CSH' 												AS ivPrfx,
		    IV_DATA.SYS_CLONE_ID        						AS parentGatherNo,
		    IV_DATA.REF_NO4										AS refNo4,
		    ISNULL(ODR.PAYER_TP_CD, 'FWD')						AS payerTpCd
		FROM 
			TMT_SVC_ODR 										ODR
		INNER JOIN 
			TMT_SVC_ODR_DTL 									ODR_DTL 
			ON ODR.ODR_NO 										= ODR_DTL.ODR_NO
		INNER JOIN 
			TMT_B_TRF_CD 										TCD 
			ON ODR.SVC_CD 										= TCD.SVC_CD 
		LEFT JOIN (
		    SELECT 
				*
		    FROM 
				TMT_B_TRF
		    WHERE 
				SYSDATETIME() 
					BETWEEN CONVERT(DATE, APLY_YMD, 112) 
					AND  CONVERT(DATE, EXPR_YMD, 112)
		) 														TRF 
			ON TCD.TRF_CD 										= TRF.TRF_CD 
			AND TCD.SUB_TRF_CD 									= TRF.SUB_TRF_CD
		LEFT JOIN (
			SELECT 
				SVC_ID,
				SVC_SEQ,
				SYS_CLONE_ID,
				SUM(UNIT1_VAL) 									AS UNIT1_VAL,
				SUM(UNIT2_VAL) 									AS UNIT2_VAL,
				SUM(UNIT3_VAL) 									AS UNIT3_VAL,
				MAX(REF_NO4) 									AS REF_NO4
			FROM 
				TMT_B_IV_DATA
			WHERE 
				STAT_CD 										IN ('PC', 'SM', 'IV')
			GROUP BY 
				SVC_ID, 
				SVC_SEQ, 
				SYS_CLONE_ID
	    ) 														IV_DATA 
			ON ODR.ODR_NO 										= IV_DATA.SVC_ID 
			AND ODR_DTL.SEQ 									= IV_DATA.SVC_SEQ
		LEFT OUTER JOIN 
			TMT_VSL_SCH VSL 
				ON ODR.VSL_CALL_ID								= VSL.VSL_CALL_ID
		WHERE 
			ODR.VSL_CALL_ID 									= #{vslCallId}
		  	AND ODR.PAY_TP_CD 									= #{payTpCd}
		  	AND ODR.STAT_CD 									IN ('CP')
	</select>
	
	<!-- MMC Settlement -->
		
	<select id="selectGenerateOverStorageForCalculateProformalist" parameterType="tariffcodeGeneratorParm"	resultMap="tariffCodeOverStorageItemMap">
		SELECT /* tariffCodeGenerator.selectGenerateOverStorageForCalculateProformalist */
		    JOB.VSL_CALL_ID                             		AS VSL_CALL_ID,  
		    DOC.OPE_CLASS_CD  									AS OPE_CLASS,
		    JOB.OPE_CLASS_CD  									AS CATG_CD,
		    ISNULL(JOB.RHDL_MODE, 'N') 							AS RHDL_MODE, 
		    JOB.DELV_TP_CD										AS DELIVERY_TYPE,
		    SUBSTRING(DOC.POL, 1, 2) 							AS POL,
		    SUBSTRING(DOC.POD, 1, 2)							AS POD,
			CASE DOC.DOMESTIC_CHK
				WHEN 'Y' THEN 'D'
				ELSE 'I'
			END													AS TRADE_TYPE, 						/* C4 - Trade Type */
		    DOC.CG_TP_CD      									AS CARGO_TYPE,
		    DOC.CMDT_GRP_CD       								AS COMMODITY_GROUP,
		    DOC.CMDT_CD       									AS COMMODITY, 
		    JOB.TSPT_TP_CD 										AS MODE_OF_OPR,
		    DOC.PKG_TP_CD 										AS PKG_TP_CD,
		    JOB.CG_NO        	 								AS CARGO_NO,
		    JOB.JOB_PURP_CD   									AS JOB_PURP_CD,
		    JOB.WGT   								     		AS CG_WGT,
		    JOB.MSRMT 					                  		AS CG_MSRMT,
		    JOB.PKG_QTY  	                             		AS PKG_QTY,
		    DOC.WGT     										AS DOC_WGT,
		    DOC.VOL	    										AS DOC_MSRMT,
		    DOC.PKG_QTY											AS DOC_PKG_QTY,
		    FORMAT(JOB.LOAD_ST_DT, 'yyyyMMddHHmm') 				AS LOAD_ST_DT,
		    FORMAT(JOB.LOAD_END_DT, 'yyyyMMddHHmm') 			AS LOAD_END_DT,
		    FORMAT(JOB.DIS_ST_DT, 'yyyyMMddHHmm') 				AS DIS_ST_DT,
		    FORMAT(JOB.DIS_END_DT, 'yyyyMMddHHmm') 				AS DIS_END_DT,
		    FORMAT(JOB.WORK_ST_DT, 'yyyyMMddHHmm') 				AS WORK_ST_DT,
		    FORMAT(JOB.WORK_END_DT, 'yyyyMMddHHmm')				AS WORK_END_DT,
		    FORMAT(SCH.ATA,'yyyyMMddHHmm') 						AS ATA,
		    FORMAT(SCH.ATD,'yyyyMMddHHmm') 						AS ATD,  
		    JOB.HDL_IN_ST_DT 						   			AS HDL_IN_TIME,
		    JOB.HDL_OUT_END_DT 					   				AS HDL_OUT_TIME,
		    CASE 
				WHEN 
					CASE DOC.OPE_CLASS_CD
						WHEN 'I' THEN SCH.ATC
						ELSE ''
					END IS NOT NULL 	
						THEN 
							CASE 
								WHEN 
									CONVERT(DATETIME, SCH.ATC, 103)
										BETWEEN CONVERT(DATETIME, SCH.ATB, 103)
										AND CONVERT(DATETIME, DATEADD(DAY, ISNULL(#{osFreeDays}, 3), SCH.ATB), 103)
								THEN 
									FORMAT(
										CASE DOC.OPE_CLASS_CD
											WHEN 'I' THEN SCH.ATC
											ELSE ''
										END,
										'yyyyMMddHHmm'
									) 
								ELSE 
									FORMAT(
										DATEADD(DAY, ISNULL(#{osFreeDays}, 3), SCH.ATB),
										'yyyyMMddHHmm'
									) 
							END 
		        ELSE 
		            FORMAT(SCH.ATB,'yyyyMMddHHmm') 
		    END 												AS CARGO_IM_ST,
		    FORMAT(
				CASE DOC.OPE_CLASS_CD
					WHEN 'I' THEN JOB.HDL_OUT_END_DT
					ELSE ''
				END,
				'yyyyMMddHHmm'
			) 													AS CARGO_IM_END, 
		    CASE
		        WHEN 
					CASE DOC.OPE_CLASS_CD
						WHEN 'E' THEN JOB.HDL_IN_ST_DT
						ELSE ''
					END IS NOT NULL 
		            	THEN FORMAT(JOB.HDL_IN_ST_DT, 'yyyyMMddHHmm')
		    END 												AS CARGO_EX_ST,
		    FORMAT(
				CASE DOC.OPE_CLASS_CD
					WHEN 'E' THEN JOB.LOAD_END_DT
					ELSE ''
				END,
				'yyyyMMddHHmm'
			) 													AS CARGO_EX_END,
		    CASE 
				WHEN 
					CASE DOC.OPE_CLASS_CD
						WHEN 'B' 
							THEN 
								JOB.DIS_ST_DT 
								+ ISNULL(#{osFreeDays}, 3)
						ELSE ''
					END IS NOT NULL
						THEN
							CASE 
								WHEN 
									CASE DOC.OPE_CLASS_CD
										WHEN 'B' 
											THEN 
												JOB.DIS_ST_DT 
												+ ISNULL(#{osFreeDays}, 3)
										ELSE ''
									END <![CDATA[<]]> SCH.ATC 
										THEN 
											FORMAT(
												CASE DOC.OPE_CLASS_CD
													WHEN 'B' 
														THEN 
															DATEADD(DAY, ISNULL(#{osFreeDays}, 3), JOB.DIS_ST_DT)
													ELSE ''
												END,
												'yyyyMMddHHmm'
											) 
									ELSE 
										FORMAT(
											SCH.ATC,
											'yyyyMMddHHmm'
										) 
							END 
		    END 												AS CARGO_BOTH_ST, 
		    FORMAT(
				CASE DOC.OPE_CLASS_CD
					WHEN 'B' THEN JOB.HDL_OUT_END_DT
					ELSE ''
				END,
				'yyyyMMddHHmm'
			) 													AS CARGO_BOTH_END,   
		    JOB.LOC_TP_CD   									AS WH_TP_CD,
		    JOB.TO_LOC_ID 										AS TO_LOC_ID,
		    JOB.BL_NO 											AS BL_NO, 
		    JOB.SHIPG_NOTE_NO 									AS SHIPG_NOTE_NO, 
		    DOC.SHIPG_AGENT       								AS SHIPG_AGNT,
		    DOC.FWRD         									AS FWR_AGNT,
		    DOC.SHPR             								AS SHPR,
		    DOC.CNSNE            								AS CNSNE,
		    (SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.SHIPG_AGENT 
				AND PTNR_TYPE 			= 'SHA' 
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
				)
			UNION 
			SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_AGENCY_INFO 
			WHERE 
				AGENCY_CODE 			= DOC.SHIPG_AGENT 
				AND PTNR_TYPE 			= 'SHA' 
				AND (
					PAYMENT_TYPE 		IS NOT NULL
					AND PAYMENT_TYPE 	<![CDATA[<>]]> ''
				)
			) 													AS SHIPG_AGENT_PAY_TP,
		    (SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.FWRD 
				AND PTNR_TYPE 			= 'FWD'
			) 													AS FWD_PAY_TP,
		    (SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.SHPR 
				AND PTNR_TYPE			= 'SHP'
			) 													AS SHPR_PAY_TP,
		    (SELECT 
				PAYMENT_TYPE 
			FROM 
				TMT_PTNR 
			WHERE 
				PTNR_CODE 				= DOC.CNSNE 
				AND PTNR_TYPE 			= 'CNS'
			) 													AS CNS_PAY_TP,
		    JOB.SHFT_DT											AS SHFT_DT,
		    JOB.SHFT_NM 										AS SHFT_NM,
		    ISNULL(
				JOB.HDL_IN_END_DT, 
				(SELECT TOP(1)
					J.WORK_END_DT
				FROM 
					TMT_JOB 			J 
				WHERE 
					J.FNL_OPE_YN 		= 'Y'
					AND J.JOB_PURP_CD 	IN ('GW', 'AW')
					AND J.VSL_CALL_ID	= JOB.VSL_CALL_ID
					AND J.CG_NO 		= JOB.CG_NO
				)
			) 													AS HDL_IN_END_DT,
		    <choose>
		        <when test="estDt != null and estDt != '' ">
		            FORMAT(
						CONVERT(DATETIME, #{estDt}, 103), 
						'yyyyMMddHHmm'
					) 											AS EXPECTED_DELV_DT,
		        </when>
		        <otherwise>
		            ''  										AS EXPECTED_DELV_DT,
		        </otherwise>
		    </choose>
		    MF_DOC.FREE_DAYS,
		    'PFI'      											AS SCR_ID,
		    JOB.CG_NO 											AS REF_NO,
		    DOC.MF_DOC_ID 										AS REF_NO2,
		    JOB_NO
		FROM (
			SELECT 
				MIN(JOB_NO) 									AS JOB_NO,
				JOB.JOB_PURP_CD,
				JOB.JOB_TP_CD,
				ISNULL(CGM.BL_NO, CGM.SHIPG_NOTE_NO) 			AS CG_NO,
				CGM.BL_NO,
				CGM.SHIPG_NOTE_NO,
				JOB.DELV_TP_CD,
				JOB.VSL_CALL_ID,
				CASE
					WHEN (
						CGM.BL_NO IS NOT NULL
						AND CGM.BL_NO <![CDATA[<>]]> ''
					) 
						THEN 'I'
					ELSE 'E'
				END 											AS OPE_CLASS_CD,
				JOB.OPE_CLASS_CD            					AS CATG_CG,
				SUM(JOB.CG_VOL) 								AS MSRMT,
				SUM(JOB.PKG_QTY) 								AS PKG_QTY,
				SUM(JOB.CG_WGT)   								AS WGT,
				MAX(JOB.WORK_END_DT) 							AS WORK_END_DT,
				MIN(JOB.WORK_ST_DT) 							AS WORK_ST_DT,
				MAX(JOB.SHFT_DT) 								AS SHFT_DT,
				MAX(JOB.SHFT_ID) 								AS SHFT_ID,
				LOC.LOC_TP_CD,
				JOB.RHDL_MODE,
				MAX(TO_LOC_ID) 									AS TO_LOC_ID,
				MAX(JOB.TSPT_TP_CD) 							AS TSPT_TP_CD,
				MIN(CGM.GATE_IN_DT)    							AS GATE_IN_DT,
				MAX(CGM.GATE_OUT_DT)   							AS GATE_OUT_DT,
				MIN(CGM.HDL_IN_ST_DT)  							AS HDL_IN_ST_DT,
				MAX(CGM.HDL_IN_END_DT) 							AS HDL_IN_END_DT,
				MIN(CGM.HDL_OUT_ST_DT) 							AS HDL_OUT_ST_DT,
				MAX(CGM.HDL_OUT_END_DT)    						AS HDL_OUT_END_DT,
				MIN(CGM.LOAD_ST_DT)    							AS LOAD_ST_DT,
				MAX(CGM.LOAD_END_DT)   							AS LOAD_END_DT,
				MIN(CGM.DIS_ST_DT) 								AS DIS_ST_DT,
				MAX(CGM.DIS_END_DT)    							AS DIS_END_DT,
				MAX(SHF.SHFT_NM) 								AS SHFT_NM
			FROM 
				TMT_JOB 										JOB
			INNER JOIN 
				TMT_CG_MST 										CGM 
					ON JOB.VSL_CALL_ID 							= CGM.VSL_CALL_ID 
					AND JOB.CG_NO 								= CGM.CG_NO
			INNER JOIN 
				TMT_LOC_DEF LOC 
					ON LOC.LOC_ID 								= SUBSTRING(JOB.TO_LOC_ID, 0, PATINDEX('%[-(]%', JOB.TO_LOC_ID))
					AND LOC.LOC_DIV_CD							= 'WHO'
			LEFT OUTER JOIN 
				TMT_SHFT SHF  
					ON JOB.SHFT_ID 								= SHF.SHFT_ID 
					AND SHF.VLD_YN								= 'Y'
			WHERE
				( 
					( 
						JOB.JOB_PURP_CD 						= 'AW' 
						AND JOB.JOB_TP_CD 						= 'DS' 
					)
				OR ( 
					JOB.JOB_PURP_CD 							= 'GW' 
					AND JOB.JOB_TP_CD 							= 'LF' 
				)
				)
				AND ISNULL(JOB.RC_CO_CD, 'NR') 					<![CDATA[<>]]> 'CC'
				AND (
					JOB.TO_LOC_ID 								IS NOT NULL
					AND JOB.TO_LOC_ID 							<![CDATA[<>]]> ''
				)
				AND NOT ( 
					JOB.JOB_CO_CD 								= 'D' 
					AND JOB.JOB_CO_CD 							<![CDATA[<>]]> 'WW' 
				)
				AND JOB.VSL_CALL_ID 							= #{vslCallId}
				AND ISNULL(CGM.BL_NO, CGM.SHIPG_NOTE_NO) 		= #{blNo}
			GROUP BY
				JOB.VSL_CALL_ID,
				JOB.JOB_PURP_CD,
				JOB.JOB_TP_CD,
				JOB.OPE_CLASS_CD,
				JOB.DELV_TP_CD,
				CGM.BL_NO, 
				CGM.SHIPG_NOTE_NO,
				LOC.LOC_TP_CD,
				JOB.RHDL_MODE
		    ) 													JOB 
		    INNER JOIN (
				SELECT 
					SN.VSL_CALL_ID,                                                                            
					'E'                                 		AS OPE_CLASS_CD,
					SN.MF_DOC_ID,                                                                           
					NULL                                   		AS BL_NO,
					SN.SHIPG_NOTE_NO,                                                                       
					SN.SHIPG_NOTE_NO              				AS CG_NO,
					SN.PKG_NO,                                                                              
					SN.GDS_RMK                              	AS PKG_MARK, 
					SN.CATG_CD,                                                                             
					(SELECT 
						S_CD_NM 
					FROM 
						TMT_CD_MSTD 	MSTD 
					WHERE 
						L_CD 			= 'MT' 
						AND M_CD 		= 'CATGTP' 
						AND SN.CATG_CD 	= MSTD.S_CD 
					)                    						AS CATG_NM,
					SN.CG_TP_CD,                                                                            
					(SELECT 
						S_CD_NM 
					FROM 
						TMT_CD_MSTD 
					WHERE 
						L_CD 			= 'MT' 
						AND M_CD 		= 'CGTP' 
						AND S_CD_USE 	= 'Y' 
						AND  S_CD 		= SN.CG_TP_CD
					)       									AS CGTPNM,
					SN.CMDT_GRP_CD,                                                                         
					(SELECT 
						S_CD_NM 
					FROM 
						TMT_CD_MSTD 
					WHERE 
						L_CD 			= 'MT' 
						AND M_CD 		= 'CMDTGRP' 
						AND S_CD_USE 	= 'Y' 
						AND  S_CD 		= SN.CMDT_GRP_CD
					) 											AS CMDTGRPNM,
					SN.CMDT_CD,                                                                             
					(SELECT 
						CMDT_DESC 
					FROM 
						TMT_CMDT CMDT 
					WHERE 
						CMDT.CMDT_CD 	= SN.CMDT_CD 
						AND CMDT.CMDT_GRP_CD = SN.CMDT_GRP_CD
					)                							AS CMDTNM,
					SN.PKG_TP_CD,                                                                           
					(SELECT 
						S_CD_NM 
					FROM 
						TMT_CD_MSTD 
					WHERE 
						L_CD 			= 'MT' 
						AND M_CD 		= 'PKGTP' 
						AND S_CD_USE 	= 'Y' 
						AND  S_CD 		= SN.PKG_TP_CD
					)     										AS PKGTPNM,
					SN.IMDG                                  	AS IMDGCLASS,
					SN.UNNO                                  	AS UNNO,
					SN.CG_WGT                  					AS WGT,
					SN.CG_VOL                					AS VOL,
					SN.PKG_QTY,
					SN.DELV_TP_CD,
					SN.TSPT_TP_CD,
					SN.FWRD,                                                                                 
					SN.SHIPG_AGNCY                          	AS SHIPG_AGENT,
					SN.CNSNE,
					SN.SHPR,                                                                                
					SN.POR                          			AS POR,
					SN.POD                            			AS POD,
					SN.POL                            			AS POL,
					SN.FDEST,
					SN.DOMESTIC_CHK
				FROM 
					TMT_SHIPG_NOTE 								SN

				UNION

				SELECT 
					BL.VSL_CALL_ID,                                                                            
					'I'                                			AS OPE_CLASS_CD,
					BL.MF_DOC_ID,                                                                           
					BL.BL_NO,                                                                                
					NULL,                                                                                     
					BL.BL_NO                              		AS CG_NO,
					'BL.PKG_NO'									AS PKG_NO,
					'BL.PKG_MARK'								AS PKG_MARK,                                                                     
					BL.CATG_CD,                                                                             
					(SELECT 
						S_CD_NM 
					FROM 
						TMT_CD_MSTD 	MSTD 
					WHERE 
						L_CD 			= 'MT' 
						AND M_CD 		= 'CATGTP' 
						AND BL.CATG_CD 	= MSTD.S_CD 
					)                    						AS CATGNM,
					BL.CG_TP_CD,                                                                            
					(SELECT 
						S_CD_NM 
					FROM 
						TMT_CD_MSTD 
					WHERE 
						L_CD			= 'MT' 
						AND M_CD 		= 'CGTP' 
						AND S_CD_USE 	= 'Y' 
						AND  S_CD 		= BL.CG_TP_CD
					) 											AS CGTPNM,
					BL.CMDT_GRP_CD,                                                                         
					(SELECT 
						S_CD_NM 
					FROM 
						TMT_CD_MSTD 
					WHERE 
						L_CD 			= 'MT' 
						AND M_CD 		= 'CMDTGRP' 
						AND S_CD_USE 	= 'Y' 
						AND  S_CD 		= BL.CMDT_GRP_CD
					) 											AS CMDTGRPNM,
					BL.CMDT_CD,                                                                             
					(SELECT 
						CMDT_DESC 
					FROM 
						TMT_CMDT 		CMDT 
					WHERE 
						CMDT.CMDT_CD 	= BL.CMDT_CD 
						AND CMDT.CMDT_GRP_CD = BL.CMDT_GRP_CD
					)                							AS CMDTNM,
					BL.PKG_TP_CD,                                                                           
					(SELECT 
						S_CD_NM 
					FROM 
						TMT_CD_MSTD 
					WHERE 
						L_CD 			= 'MT' 
						AND M_CD 		= 'PKGTP' 
						AND S_CD_USE 	= 'Y' 
						AND  S_CD 		= BL.PKG_TP_CD
					)     										AS PKGTPNM,
					BL.IMDG_CLASS                        		AS IMDGCLASS,
					BL.UNNO                             		AS UNNO,
					BL.CG_WGT,
					BL.CG_VOL,
					BL.PKG_QTY,
					BL.DELV_TP_CD,
					BL.TSPT_TP_CD,
					BL.FWRD,                                                                                 
					'BL.SHIPG_AGENT'							AS SHIPG_AGENT,                                                                         
					BL.CNSNE,                                                                               
					BL.SHPR,
					NULL                                  		AS POR,
					BL.POD,
					BL.POL,
					BL.FDEST,
					BL.DOMESTIC_CHK
				FROM 
					TMT_BL 										BL 
		    ) 													DOC 
				ON JOB.VSL_CALL_ID 								= DOC.VSL_CALL_ID 
				AND JOB.CG_NO 									= DOC.CG_NO 
				AND JOB.OPE_CLASS_CD 							= DOC.OPE_CLASS_CD
		    INNER JOIN 
				TMT_MF 											MF_DOC 
					ON DOC.VSL_CALL_ID 							= MF_DOC.VSL_CALL_ID 
					AND DOC.MF_DOC_ID 							= MF_DOC.MF_DOC_ID
		    LEFT OUTER JOIN 
				TMT_VSL_SCH  									SCH   
					ON SCH.VSL_CALL_ID 							= JOB.VSL_CALL_ID
		    LEFT OUTER JOIN 
				TMT_VSL_PART 									PART  
					ON SCH.VSL_CD 								= PART.VSL_CD
		WHERE    
			JOB.CG_NO NOT IN (  
				SELECT DISTINCT 
					B.CG_NO 
				FROM    
					TMT_INV_LOC     							B,
					TMT_JOB    									D, 
					(SELECT  
						E.FM_YMD    							AS FM_YMD, 
						E.TO_YMD    							AS TO_YMD, 
						F.CD_VAL    							AS CD_VAL, 
						E.TNNT      							AS TNNT 
						FROM    
							TMT_RENT    						E 
						INNER JOIN 
							TMT_RENT_DTL						F 
								ON E.CONTT_NO 					= F.CONTT_NO 
								AND   E.REF_NO   				= F.REF_NO 
						WHERE   
							F.ITEM_DIV_CD   					= 'LO'
					) 											RENT,
						TMT_CG_MST      						MST   
				WHERE   
					B.JOB_NO 									= D.JOB_NO 
					AND B.VSL_CALL_ID 							= D.VSL_CALL_ID   
					AND B.LOC_ID        						= RENT.CD_VAL
					AND B.CG_NO        							= MST.CG_NO
					AND B.VSL_CALL_ID   						= MST.VSL_CALL_ID                            
					AND MST.FWR_AGNT    						= RENT.TNNT
					AND MST.VSL_CALL_ID 						= #{vslCallId}
					AND ( 
						D.WORK_END_DT 							<![CDATA[>=]]> CONVERT(DATE, RENT.FM_YMD, 112) 
						AND D.WORK_END_DT 						<![CDATA[<=]]> CONVERT(DATE, RENT.TO_YMD, 112)
					)
				
				UNION ALL

				SELECT DISTINCT 
					MST.CG_NO
				FROM    
					TMT_JOB 									D, 
					(SELECT  
						E.FM_YMD    							AS FM_YMD, 
						E.TO_YMD    							AS TO_YMD, 
						F.CD_VAL    							AS CD_VAL, 
						E.TNNT      							AS TNNT 
					FROM    
						TMT_RENT    							E 
					INNER JOIN 
						TMT_RENT_DTL   							F 
							ON E.CONTT_NO 						= F.CONTT_NO 
							AND E.REF_NO   						= F.REF_NO 
					WHERE   
						F.ITEM_DIV_CD   = 'CM'
					) 											RENT,
						TMT_CG_MST      						MST   
				WHERE   
					MST.CMDT_CD     							= RENT.CD_VAL 
					AND MST.FWR_AGNT    						= RENT.TNNT
					AND MST.VSL_CALL_ID 						= #{vslCallId}
					AND( 
						D.WORK_END_DT 							<![CDATA[>=]]> CONVERT(DATE, RENT.FM_YMD, 112) 
						AND D.WORK_END_DT 						<![CDATA[<=]]> CONVERT(DATE, RENT.TO_YMD, 112)
					)                                                   
			)
			AND JOB.JOB_PURP_CD 								IN ('GW', 'AW')
			AND JOB.VSL_CALL_ID 								= #{vslCallId}   
			<if test="blNo != '' and blNo != null ">
				AND DOC.OPE_CLASS_CD 							= #{opeClassCd}
				AND DOC.MF_DOC_ID 								= #{masterBL}
				AND DOC.CG_NO 									= #{blNo}
			</if>             
	</select>
	
	<select id="selectOverStorageInvoiceItemsForProformalist"  parameterType="tariffcodeGeneratorParm" resultType="InvoiceDataItem">
		/*selectOverStorageInvoiceItemsForProformalist*/
		WITH 
			FREE_STRG_DATE AS (
				SELECT 
					MIN(
						CASE
		                   	WHEN ISNULL(I.FREE_DAYS, 0) = 0 
						   		THEN I.SVC_ST_DT
		                   	ELSE 
								DATEADD(DAY, ISNULL(I.FREE_DAYS, 0) - 1, I.SVC_ST_DT)
		                END
					) 											AS FREE_OS_END_DT
				FROM 
					TMT_B_IV_DATA 								I
				INNER JOIN 
					TMT_B_TRF_CD 								T
						ON I.TRF_CD 							= T.TRF_CD 
						AND I.SUB_TRF_CD 						= T.SUB_TRF_CD
				WHERE     
					T.TRF_TP_CD 								= 'OS'
					AND I.VSL_CALL_ID 							= #{vslCallId}
					AND REF_NO1 								= #{blNo}
					AND REF_NO2 								= #{masterBL}
					AND STAT_CD 								IN ('IV', 'PC', 'SM', 'VF')
			),

			OPR_INFO AS (  
				SELECT 
					I.VSL_CALL_ID,
					B.MF_DOC_ID,
					B.BL_NO 									AS BLSN,
					MAX (J.WORK_END_DT) 						AS WORK_END_DT,
					SUM (I.CG_WGT) 								AS WGT,
					SUM (I.PKG_QTY) 							AS PKG_QTY,
					SUM (I.CG_VOL) 								AS MSRMT
				FROM 
					TMT_INV_LOC 								I
				INNER JOIN 
					TMT_BL B
						ON I.VSL_CALL_ID 						= B.VSL_CALL_ID 
						AND I.CG_NO 							= B.BL_NO
				LEFT OUTER JOIN 
					TMT_JOB 									J 
						ON I.JOB_NO 							= J.JOB_NO
				WHERE 
					I.VSL_CALL_ID 								= #{vslCallId} 
					AND B.BL_NO 								= #{blNo}
				GROUP BY 
					I.VSL_CALL_ID, 
					B.MF_DOC_ID, 
					B.BL_NO

				UNION

				SELECT 
					I.VSL_CALL_ID,
					S.MF_DOC_ID,
					S.SHIPG_NOTE_NO 							AS BLSN,
					MAX(J.WORK_END_DT) 							AS WORK_END_DT,
					SUM(I.CG_WGT) 								AS WGT,
					SUM(I.PKG_QTY) 								AS PKG_QTY,
					SUM(I.CG_VOL) 								AS MSRMT
				FROM 
					TMT_INV_LOC 								I
				INNER JOIN 
					TMT_GR 										G
						ON I.VSL_CALL_ID 						= G.VSL_CALL_ID 
						AND I.CG_NO 							= G.GR_NO
				INNER JOIN 
					TMT_SHIPG_NOTE 								S
						ON S.VSL_CALL_ID 						= G.VSL_CALL_ID
						AND S.SHIPG_NOTE_NO 					= G.SHIPG_NOTE_NO
				LEFT OUTER JOIN 
					TMT_JOB J 							
						ON I.JOB_NO 							= J.JOB_NO
				WHERE     
					I.VSL_CALL_ID 								= #{vslCallId}
		   			AND G.SHIPG_NOTE_NO 						= #{blNo}
				GROUP BY 
					I.VSL_CALL_ID, 
					S.MF_DOC_ID, 
					S.SHIPG_NOTE_NO
		        
		        UNION
		        	SELECT 	
						VSL_CALL_ID,
						MF_DOC_ID,
						CG_NO 									AS BLSN,
						MAX(OUT_DTM) 
							OVER(PARTITION BY 
									VSL_CALL_ID, 
									MF_DOC_ID, 
									CG_NO
							) 									AS WORK_END_DT,
						CASE 
							WHEN 
								(OUT_DTM IS NOT NULL
								AND OUT_DTM <![CDATA[<>]]> '') 
									THEN 0 
							ELSE DOC_WGT 
						END 									AS WGT,
						CASE 
							WHEN 
								(OUT_DTM IS NOT NULL
								AND OUT_DTM <![CDATA[<>]]> '')  
									THEN 0 
							ELSE 1 
						END 									AS PKG_QTY,
						CASE 
							WHEN 
								(OUT_DTM IS NOT NULL
								AND OUT_DTM <![CDATA[<>]]> '')  
									THEN 0 
							ELSE CBM 
						END 									AS MSRMT
					FROM 	
						TMT_RORO_MST
					WHERE 	
						VSL_CALL_ID 							=  #{vslCallId} 
						AND CG_NO 								= #{blNo}
			)

		SELECT 
			SUM (APLY_AMT) 										AS APLYAMT,
			SUM (UNIT2_VAL) 									AS UNIT2VAL,
			FORMAT(MAX (EXP_DT), 'yyyyMMddHHmm') 				AS EXPECTEDDELIVERYDAY,
			FORMAT(MIN (FREE_OS_END_DT), 'yyyyMMddHHmm') 		AS FREESTORAGEENDDATE,
			MAX (GATHER_NO) 									AS GATHERNO,
			CASE
				WHEN (
					MAX (ISNULL(J.WGT, 0)) = 0
					AND MAX (ISNULL(J.PKG_QTY, 0)) = 0
					AND MAX (ISNULL(J.MSRMT, 0)) = 0
				)
				THEN
					FORMAT(MAX (J.WORK_END_DT), 'yyyyMMddHHmm')
				ELSE
					NULL
			END 												AS DELIVEREDDATE
		FROM 
			TMT_B_IV_DATA 										I
		LEFT JOIN 
			TMT_B_TRF_CD 										T
			ON 	T.TRF_CD 										= I.TRF_CD 
			AND T.SUB_TRF_CD 									= I.SUB_TRF_CD
		LEFT JOIN 
			FREE_STRG_DATE 
				ON 1 = 1
		LEFT JOIN 
			OPR_INFO 											J
			ON 	I.VSL_CALL_ID 									= J.VSL_CALL_ID
			AND I.REF_NO1 										= J.BLSN
			AND I.REF_NO2 										= J.MF_DOC_ID
		 WHERE     
		 	I.VSL_CALL_ID 										= #{vslCallId}
			AND I.REF_NO1 										= #{blNo}
			AND I.REF_NO2 										= #{masterBL}
			AND T.TRF_TP_CD 									= 'OS'
			AND I.STAT_CD 										IN ('IV', 'PC', 'SM', 'VF')
			AND I.SCR_ID 										= 'PFI'
	</select>
	
    <select id="selectStorageDays" parameterType="tariffCodeStorageDayParm" resultMap="storageDays">
    	DECLARE 
    		@fromDate 	DATE 									= CONVERT(DATE, LEFT(#{fromDate}, 8), 112),
    		@toDate  	DATE									= CONVERT(DATE, LEFT(#{toDate}, 8), 112)
		SELECT /* tariffcodegeneration.selectStorageDays */  
			COUNT (1) 											AS DAY_DIFF /*1 : sunday, 2:Monday, 3:Tuseday, 4:Wendnesday, 5:Thurseday,6: Fri, 7: Sat*/
  		FROM (
  			SELECT 
				DATEADD(DAY, NUMBER, @fromDate) 				AS Date
			FROM 
				master..spt_values
			WHERE 
				type 											= 'P' 
			    AND NUMBER 										<![CDATA[<=]]> DATEDIFF(DAY, @fromDate, @toDate)
			<if test="whereSQL != null and whereSQL != ''">
				${whereSQL}
			</if>
		) TEMPT
    </select>
	
</mapper>
