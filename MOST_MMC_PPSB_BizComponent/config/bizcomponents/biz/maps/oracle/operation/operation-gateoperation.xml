<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gateoperation">
	 <select id="selectCargoInfoForGateIn"  parameterType="gateOperationParm" resultType="gateOperationItem">
	 WITH 
	 SDO_ACT_LOCATION AS 
	 (  SELECT I.LOC_ID, I.VSL_CALL_ID, I.CG_NO
                 FROM TMT_INV_LOC I
                      INNER JOIN TMT_BL B
                         ON I.VSL_CALL_ID = B.VSL_CALL_ID AND I.CG_NO = B.BL_NO
             GROUP BY I.LOC_ID, I.VSL_CALL_ID, I.CG_NO
               HAVING SUM (I.CG_WGT) > 0 OR SUM (I.PKG_QTY) > 0),
      
      SDO_CUSTOMS_RELEASE AS
        (
            SELECT    BL.VSL_CALL_ID,
                    BL.MF_DOC_ID,
                    CASE
                          WHEN CUS.DOC_NO IS NULL THEN 'HOLD'
                          ELSE 'RELEASE'
                    END AS status
            FROM     TMT_BL BL
                        LEFT OUTER JOIN TMT_CUSTOMS_RELEASE CUS
                    ON     CUS.VSL_CALL_ID = BL.VSL_CALL_ID
                        AND CUS.DOC_NO = BL.MF_DOC_ID
            WHERE   NVL(CUS.BONDED_WH_YN, 'N') = 'N'
                    <if test="vslCallId != null and vslCallId != ''">
                        AND BL.VSL_CALL_ID = #{vslCallId}
                    </if>
                    <if test="blNo != null and blNo != ''">
                        AND BL.BL_NO = #{blNo}
                    </if>
        ),
        
        GR_WH_PLAN AS
        (
            SELECT  VSL_CALL_ID,
                    MAX(PLAN_LOC_ID) AS PLAN_LOC_ID,
                    SHIPG_NOTE_NO
            FROM    TMT_SPC_REQ
            WHERE   STAT_CD = 'CNF'
                    AND SHIPG_NOTE_NO IS NOT NULL
            GROUP BY VSL_CALL_ID, SHIPG_NOTE_NO
        ),
        
        GR_CUSTOMS_RELEASE AS
        (
            SELECT    SN.VSL_CALL_ID,
                    SN.MF_DOC_ID,
                    CASE
                          WHEN CUS.DOC_NO IS NULL THEN 'HOLD'
                          ELSE 'RELEASE'
                    END AS status
            FROM     TMT_SHIPG_NOTE SN
                        LEFT OUTER JOIN TMT_CUSTOMS_RELEASE CUS
                    ON     CUS.VSL_CALL_ID = SN.VSL_CALL_ID
                        AND CUS.DOC_NO = SN.MF_DOC_ID
            WHERE   NVL(CUS.BONDED_WH_YN, 'N') = 'N'
                    <if test="vslCallId != null and vslCallId != ''">
                        AND SN.VSL_CALL_ID = #{vslCallId}
                    </if>
                    <if test="shipgNoteNo != null and shipgNoteNo != ''">
                        AND SN.SHIPG_NOTE_NO = #{shipgNoteNo}
                    </if>
        ),
        
        <!-- Table to check SDO existed Gate out or not -->
        SDO_EXIST_OPE AS
        (SELECT DISTINCT
        		VSL_CALL_ID,
        		CG_NO,
        		SDO_NO
         FROM TMT_JOB
         WHERE JOB_TP_CD = 'GO'),
         
         <!-- Table to check GR existed Gate out or not -->
         GR_EXIST_OPE AS
        (SELECT DISTINCT
        		VSL_CALL_ID,
        		CG_NO
         FROM TMT_JOB
         WHERE JOB_TP_CD = 'GO'),
         
         <!-- Table to check SDO has done operation or not -->
         SDO_EXIST_OPE_DIRECT_INDIRECT AS
        (SELECT DISTINCT
        		VSL_CALL_ID,
        		CG_NO,
        		SDO_NO
         FROM TMT_JOB
         WHERE (JOB_TP_CD = 'DS' AND JOB_PURP_CD = 'VG') 
         		OR (JOB_TP_CD = 'LO' AND JOB_PURP_CD = 'WG' AND SDO_NO IS NOT NULL)),
         
         <!-- Table to check GR has done operation or not -->
         GR_EXIST_OPE_DIRECT_INDIRECT_RTS AS
        (SELECT DISTINCT
        		VSL_CALL_ID,
        		CG_NO
         FROM TMT_JOB
         WHERE (JOB_TP_CD = 'LD' AND JOB_PURP_CD = 'GV') 
         		OR (JOB_TP_CD = 'LF' AND JOB_PURP_CD = 'GW') 
         		OR (JOB_TP_CD = 'LO' AND JOB_PURP_CD = 'WG' AND SDO_NO IS NULL))      
	 
		SELECT  DISTINCT 
                S.VSL_CALL_ID   						AS vslCallId,
                S.BL_NO 								AS blNo,
                S.DO_NO 								AS doNo,
                S.SDO_NO 								AS sdoNo,
                ''										AS shipgNoteNo,
                ''										AS grNo,
                NVL(S.D_QTY, 0) +  NVL(S.I_QTY, 0)   	AS pkgQty,
                NVL(S.D_MT, 0) +  NVL(S.I_MT, 0)   		AS wgt,
                NVL(S.D_M3, 0) +  NVL(S.I_M3, 0)   		AS msrmt,
                B.CMDT_CD   							AS cmdtCd,
                F_GET_CMDT_DESC(B.CMDT_CD) 				AS cmdtNm,
                S.DELV_TP_CD    						AS delvTpCd,
                F_CM_001('MT', 'DELVTP', S.DELV_TP_CD) 	AS delvTpNm,
                CASE S.DELV_TP_CD
                    WHEN 'D' THEN V.BERTH_LOC
                    ELSE (SELECT LISTAGG (LOC_ID, ', ') WITHIN GROUP (ORDER BY LOC_ID)
                           FROM SDO_ACT_LOCATION
                           WHERE VSL_CALL_ID = S.VSL_CALL_ID AND CG_NO = D.BL_NO)
                END 									AS locId,
                B.PKG_TP_CD 							AS pkgTpCd,
                B.CATG_CD 								AS opeClassCd,
                B.CATG_CD								AS catgCd,
                F_CM_001('MT', 'CATGTP', B.CATG_CD)     AS catgNm,
                B.MF_DOC_ID 							AS mfDocId,
                ''										AS bookingNo,
                NVL(C.REPKG_TP_CD, B.PKG_TP_CD) 		AS rePkgTpCd,
                CASE WHEN B.DOMESTIC_CHK = 'Y' THEN 'RELEASE'  
                	 ELSE CASE WHEN CUS.STATUS IS NOT NULL THEN CUS.STATUS
                	 		   ELSE ''
                	 	  END
                END	 									AS CUSTOMSRELEASESTATUS,
                B.CG_TP_CD 								AS cgTpCd,
                A.LORRY_NO								AS lorryNo,
                (SELECT A.DRIVER_ID FROM TMT_DRIVER_MST D WHERE A.DRIVER_ID = D.DRIVER_ID AND ROWNUM = 1) AS driverId,
                (SELECT D.DRIVER_NM FROM TMT_DRIVER_MST D WHERE D.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1) AS driverNm,
		        (SELECT D.LICS_NO FROM TMT_DRIVER_MST D WHERE D.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1) AS liscNo,
            	(SELECT TO_CHAR(D.LICS_EXPR_YMD, 'DD/MM/YYYY') FROM TMT_DRIVER_MST D WHERE D.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1) AS expdate,
            	(SELECT MST.PTNR_CD
	             FROM TMT_TRUCK_MST MST
	             WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1) AS tsptr,
	             F_GET_PARTNER_INFO ((SELECT MST.PTNR_CD
	             					  FROM TMT_TRUCK_MST MST
	             					  WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1), 'ENG_SNM') AS tsptCompNm,
	             CGSDO.CHECKIN_TIME AS agChkInTime,
	             CGSDO.GATE_TXN_NO AS gateTxnNo
                
        FROM    TMT_DO_DTL S
        
                INNER JOIN TMT_DO D
                    ON  S.VSL_CALL_ID = D.VSL_CALL_ID
                        AND S.BL_NO = D.BL_NO
                        AND S.DO_NO = D.DO_NO  
                            
                INNER JOIN TMT_BL B
                    ON  S.VSL_CALL_ID = B.VSL_CALL_ID
                        AND S.BL_NO = B.BL_NO
                
                LEFT OUTER JOIN TMT_ASSIGN_TRANSPORT A 
                    ON  S.VSL_CALL_ID = A.VSL_CALL_ID
                        AND S.BL_NO = A.BL_NO
                        AND S.SDO_NO = A.SDO_NO
                        
                LEFT OUTER JOIN TMT_VSL_SCH V 
                    ON  S.VSL_CALL_ID = V.VSL_CALL_ID
                    
                LEFT OUTER JOIN TMT_CG_MST C
                      ON S.VSL_CALL_ID = C.VSL_CALL_ID AND S.BL_NO = C.CG_NO
                      
                LEFT OUTER JOIN SDO_CUSTOMS_RELEASE CUS
                      ON CUS.VSL_CALL_ID = S.VSL_CALL_ID
                        AND CUS.MF_DOC_ID = B.MF_DOC_ID
                        
                LEFT OUTER JOIN SDO_EXIST_OPE OPESDO
                	  ON  A.VSL_CALL_ID = OPESDO.VSL_CALL_ID
                        AND A.BL_NO = OPESDO.CG_NO
                        AND A.SDO_NO = OPESDO.SDO_NO
                 
                LEFT OUTER JOIN TMT_CG_ARRV_DELV CGSDO
		            	ON A.VSL_CALL_ID = CGSDO.VSL_CALL_ID
		            		AND A.SDO_NO = CGSDO.SDO_NO
		            		AND A.LORRY_NO = CGSDO.LORRY_NO
		            		
		        LEFT OUTER JOIN SDO_EXIST_OPE_DIRECT_INDIRECT OPESDO2
                	  ON  S.VSL_CALL_ID = OPESDO2.VSL_CALL_ID
                        AND S.BL_NO = OPESDO2.CG_NO
                        AND S.SDO_NO = OPESDO2.SDO_NO
                    
        WHERE   A.SDO_NO IS NOT NULL 
        		AND A.LORRY_NO IS NOT NULL AND OPESDO.SDO_NO IS NULL
        		AND 
	        		(SELECT MST.PTNR_CD
		             FROM TMT_TRUCK_MST MST
		             WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1) IS NOT NULL
        		AND CGSDO.GATE_IN_DT IS NULL AND OPESDO2.SDO_NO IS NULL
        		AND B.CG_TP_CD NOT IN ('RCV')
                <if test="lorryNo != null and lorryNo != ''">
                    AND A.LORRY_NO = #{lorryNo}
                </if>
                <if test="vslCallId != null and vslCallId != ''">
                    AND S.VSL_CALL_ID = #{vslCallId}
                </if>
                <if test="subDoNo != null and subDoNo != ''">
                    AND S.SDO_NO = #{subDoNo}
                </if>
                <if test="blNo != null and blNo != ''">
                    AND S.BL_NO = #{blNo}
                </if>
                
         UNION ALL
         
         SELECT  DISTINCT
                G.VSL_CALL_ID   						AS vslCallId,
                ''										AS blNo,
                ''										AS doNo,
                ''										AS sdoNo,
                G.SHIPG_NOTE_NO 						AS shipgNoteNo,
                G.GR_NO 								AS grNo,
                G.PKG_QTY   							AS pkgQty,
                G.CG_WGT    							AS wgt,
                G.CG_VOL    							AS msrmt,              
                G.CMDT_CD   							AS cmdtCd,
                F_GET_CMDT_DESC(G.CMDT_CD) 				AS cmdtNm,
                S.DELV_TP_CD    						AS delvTpCd,
                F_CM_001('MT', 'DELVTP', S.DELV_TP_CD) 	AS delvTpNm,
                DECODE (S.DELV_TP_CD, 'D', V.BERTH_LOC, P.PLAN_LOC_ID) AS locId,
                S.PKG_TP_CD 							AS pkgTpCd,
                S.CATG_CD 								AS opeClassCd,
                S.CATG_CD								AS catgCd,
                F_CM_001('MT', 'CATGTP', S.CATG_CD)     AS CATGNM,
                '' 										AS mfDocId,               
                S.MF_DOC_ID     						AS bookingNo,
                NVL(C.REPKG_TP_CD, S.PKG_TP_CD) 		AS rePkgTpCd,
                CASE WHEN S.DOMESTIC_CHK = 'Y' THEN 'RELEASE'  
                	 ELSE CASE WHEN CUS.STATUS IS NOT NULL THEN CUS.STATUS
                	 		   ELSE ''
                	 	  END
                END 									AS CUSTOMSRELEASESTATUS,
                S.CG_TP_CD 								AS cgTpCd,
                A.LORRY_NO								AS lorryNo,
                (SELECT A.DRIVER_ID FROM TMT_DRIVER_MST D WHERE A.DRIVER_ID = D.DRIVER_ID AND ROWNUM = 1) AS driverId,
                (SELECT D.DRIVER_NM FROM TMT_DRIVER_MST D WHERE D.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1) AS driverNm,
		        (SELECT D.LICS_NO FROM TMT_DRIVER_MST D WHERE D.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1) AS liscNo,
            	(SELECT TO_CHAR(D.LICS_EXPR_YMD, 'DD/MM/YYYY') FROM TMT_DRIVER_MST D WHERE D.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1) AS expdate,
            	(SELECT MST.PTNR_CD
	             FROM TMT_TRUCK_MST MST
	             WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1) AS tsptr,
	             F_GET_PARTNER_INFO ((SELECT MST.PTNR_CD
	             					  FROM TMT_TRUCK_MST MST
	             					  WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1), 'ENG_SNM') AS tsptCompNm,
	             CGGR.CHECKIN_TIME AS agChkInTime,
	             CGGR.GATE_TXN_NO AS gateTxnNo
                
        FROM    TMT_GR G
        
                INNER JOIN TMT_SHIPG_NOTE S
                    ON  G.VSL_CALL_ID = S.VSL_CALL_ID
                        AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
                        
                LEFT OUTER JOIN TMT_ASSIGN_TRANSPORT A 
                	ON  G.VSL_CALL_ID = A.VSL_CALL_ID
	                    AND G.SHIPG_NOTE_NO = A.SHIPG_NOTE_NO
	                    AND G.GR_NO = A.GR_NO

                LEFT OUTER JOIN TMT_VSL_SCH V 
                    ON  G.VSL_CALL_ID = V.VSL_CALL_ID
                    
                LEFT OUTER JOIN GR_WH_PLAN P 
                    ON  G.VSL_CALL_ID = P.VSL_CALL_ID
                        AND G.SHIPG_NOTE_NO = P.SHIPG_NOTE_NO 
                        
                LEFT OUTER JOIN TMT_CG_MST C
                      ON G.VSL_CALL_ID = C.VSL_CALL_ID AND G.GR_NO = C.CG_NO
                      
                  LEFT OUTER JOIN GR_CUSTOMS_RELEASE CUS
                      ON CUS.VSL_CALL_ID = S.VSL_CALL_ID
                        AND CUS.MF_DOC_ID = S.MF_DOC_ID
                        
                 LEFT OUTER JOIN GR_EXIST_OPE OPEGR
                	  ON  A.VSL_CALL_ID = OPEGR.VSL_CALL_ID
                        AND A.GR_NO = OPEGR.CG_NO
                        
                LEFT OUTER JOIN TMT_CG_ARRV_DELV CGGR
		            	ON A.VSL_CALL_ID = CGGR.VSL_CALL_ID
		            		AND A.GR_NO = CGGR.GR_NO
		            		AND A.LORRY_NO = CGGR.LORRY_NO
		            		
		         LEFT OUTER JOIN GR_EXIST_OPE_DIRECT_INDIRECT_RTS OPEGR2
                	  ON  G.VSL_CALL_ID = OPEGR2.VSL_CALL_ID
                        AND G.GR_NO = OPEGR2.CG_NO
                    
        WHERE   A.GR_NO IS NOT NULL 
        		AND A.LORRY_NO IS NOT NULL AND OPEGR.CG_NO IS NULL
        		AND 
	        		(SELECT MST.PTNR_CD
		             FROM TMT_TRUCK_MST MST
		             WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1) IS NOT NULL
        		 AND CGGR.GATE_IN_DT IS NULL AND CASE WHEN G.RHDL_MODE IS NOT NULL THEN NULL ELSE OPEGR2.CG_NO END IS NULL
        		 AND S.CG_TP_CD NOT IN ('RCV')	
        		<if test="grNo != null and grNo != ''">
                    AND A.GR_NO = #{grNo}
                </if> 		
        		<if test="lorryNo != null and lorryNo != ''">
                    AND A.LORRY_NO = #{lorryNo}
                </if>               
                <if test="vslCallId != null and vslCallId != ''">
                    AND G.VSL_CALL_ID = #{vslCallId}
                </if>
                <if test="shipgNoteNo != null and shipgNoteNo != ''">
                    AND G.SHIPG_NOTE_NO = #{shipgNoteNo}
                </if>
	</select>
	 
	 <select id="selectCargoInfoForGateOut"  parameterType="gateOperationParm" resultType="gateOperationItem">
		WITH HDL_JOB AS (
		    SELECT	DISTINCT VSL_CALL_ID, CG_NO, GATE_TXN_NO, CG_WGT, PKG_QTY, CG_VOL, JOB_TP_CD
		    FROM 	TMT_JOB 
		    WHERE 	GATE_TXN_NO IS NOT NULL
		    		AND JOB_PURP_CD NOT IN ('IO') 
<!-- 		    		AND ROWNUM =1 -->
					<if test="lorryNo != null and lorryNo != ''">
						AND LORRY_NO = #{lorryNo}
					</if>
					<if test="vslCallId != null and vslCallId != ''">
						AND VSL_CALL_ID = #{vslCallId}
					</if>
		),
		
		LORRY_OPERATED_WGT AS
		(SELECT VSL_CALL_ID,
				CG_NO,
				GATE_TXN_NO,
				LORRY_NO,
				SUM(NVL(CG_WGT, 0)) AS CG_WGT,
				SUM(NVL(CG_VOL, 0)) AS CG_VOL,
				SUM(NVL(PKG_QTY, 0)) AS PKG_QTY
		 FROM TMT_JOB 
		 WHERE GATE_TXN_NO IS NOT NULL AND JOB_PURP_CD NOT IN ('IO', 'OI')
		 		<if test="lorryNo != null and lorryNo != ''">
					AND LORRY_NO = #{lorryNo}
				</if>
				<if test="vslCallId != null and vslCallId != ''">
					AND VSL_CALL_ID = #{vslCallId}
				</if>
		 GROUP BY VSL_CALL_ID,
				  CG_NO,
				  LORRY_NO,
				  GATE_TXN_NO),
		
		SDO_EXIST_OPE AS
        (SELECT DISTINCT
        		VSL_CALL_ID,
        		CG_NO,
        		SDO_NO
         FROM TMT_JOB
         WHERE JOB_TP_CD = 'GO'),
         
         GR_EXIST_OPE AS
        (SELECT DISTINCT
        		VSL_CALL_ID,
        		CG_NO
         FROM TMT_JOB
         WHERE JOB_TP_CD = 'GO')
		
		SELECT  
				DISTINCT 
		        A.VSL_CALL_ID           AS vslCallId,
		        A.CG_NO                 AS cgNo,
		        A.LORRY_NO              AS lorryNo,
		        TO_CHAR (A.GATE_IN_DT, 'DD/MM/YYYY HH24:MI') AS gateInDate,
		        A.GATE_TXN_NO           AS gateTxnNo,
		        A.CMDT_CD               AS cmdtCd,
		        F_GET_CMDT_DESC(A.CMDT_CD) AS cmdtNm,
		        OPEWGT.CG_WGT                AS wgt,
		        OPEWGT.CG_VOL                AS msrmt,
		        OPEWGT.PKG_QTY               AS pkgQty,
		        A.GATE_TXN_NO 			AS gateTxnNo,
		        A.SDO_NO 				AS sdoNo,
		        S.SHIPG_NOTE_NO			AS shipgNoteNo,
		        S.MF_DOC_ID				AS bookingNo,
                A.GR_NO 				AS grNo,
                D.BL_NO					AS blNo,
                D.DO_NO					AS doNo,
                B.MF_DOC_ID				AS mfDocId,
                NVL(D.DELV_TP_CD, S.DELV_TP_CD) AS delvTpCd,
                NVL(B.CATG_CD, S.CATG_CD) AS opeClassCd,
                NVL(B.CATG_CD, S.CATG_CD) AS catgCd,
                F_CM_001('MT', 'CATGTP', NVL(B.CATG_CD, S.CATG_CD))     AS catgNm,
                A.CG_IN_OUT_CD 			AS cgInOutCd,
                NVL(C.REPKG_TP_CD, C.PKG_TP_CD) AS rePkgTpCd,
                NVL(B.PKG_TP_CD, S.PKG_TP_CD) AS pkgTpCd
                ,CASE WHEN A.SDO_NO IS NOT NULL
                	THEN (SELECT DECODE(COUNT(*), 0, DECODE(B.DOMESTIC_CHK, 'N', 'HOLD', 'RELEASED'), 'RELEASED') FROM TMT_CUSTOMS_RELEASE C1 WHERE C1.VSL_CALL_ID = A.VSL_CALL_ID AND C1.DOC_NO = B.MF_DOC_ID AND NVL(C1.BONDED_WH_YN, 'N') = 'N')
                	ELSE (SELECT DECODE(COUNT(*), 0, DECODE(S.DOMESTIC_CHK, 'N', 'HOLD', 'RELEASED'), 'RELEASED') FROM TMT_CUSTOMS_RELEASE C1 WHERE C1.VSL_CALL_ID = A.VSL_CALL_ID AND C1.DOC_NO = S.MF_DOC_ID AND NVL(C1.BONDED_WH_YN, 'N') = 'N')
                	END AS  CUSTOMSRELEASESTATUS,
                TO_CHAR(A.GATE_IN_DT, 'DD/MM/YYYY HH24:MI') 			 AS gateInDt,
                
                CASE WHEN A.SDO_NO IS NOT NULL THEN
                		(SELECT TSDO.DRIVER_ID FROM TMT_DRIVER_MST DD WHERE TSDO.DRIVER_ID = DD.DRIVER_ID AND ROWNUM = 1)
                		ELSE
                		(SELECT TGR.DRIVER_ID FROM TMT_DRIVER_MST DD WHERE TGR.DRIVER_ID = DD.DRIVER_ID AND ROWNUM = 1)
                END  AS driverId,
                
                CASE WHEN A.SDO_NO IS NOT NULL THEN
                	(SELECT DD.DRIVER_NM FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = TSDO.DRIVER_ID AND ROWNUM=1)
                	ELSE 
                	(SELECT DD.DRIVER_NM FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = TGR.DRIVER_ID AND ROWNUM=1)
                END AS driverNm,
                
                CASE WHEN A.SDO_NO IS NOT NULL THEN
		        	(SELECT DD.LICS_NO FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = TSDO.DRIVER_ID AND ROWNUM=1)
		        	ELSE
		        	(SELECT DD.LICS_NO FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = TGR.DRIVER_ID AND ROWNUM=1)
		        END AS liscNo,
		        
		        CASE WHEN A.SDO_NO IS NOT NULL THEN
            		(SELECT TO_CHAR(DD.LICS_EXPR_YMD, 'DD/MM/YYYY') FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = TSDO.DRIVER_ID AND ROWNUM=1)
            		ELSE
            		(SELECT TO_CHAR(DD.LICS_EXPR_YMD, 'DD/MM/YYYY') FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = TGR.DRIVER_ID AND ROWNUM=1)
            	END AS expdate,
            	
	            (SELECT MST.PTNR_CD
		            FROM TMT_TRUCK_MST MST
		            WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1) AS tsptr,
		            F_GET_PARTNER_INFO ((SELECT MST.PTNR_CD
		             					 FROM TMT_TRUCK_MST MST
		             					 WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1), 'ENG_SNM') AS tsptCompNm,
		        CASE WHEN A.SDO_NO IS NOT NULL THEN TO_CHAR(WBSDO.SECOND_WGT_DT, 'DD/MM/YYYY')
            		ELSE TO_CHAR(WBGR.SECOND_WGT_DT, 'DD/MM/YYYY')
            	END AS secondWgtDt
		        
		FROM    TMT_CG_ARRV_DELV A
				LEFT OUTER JOIN HDL_JOB J
		          ON     A.VSL_CALL_ID = J.VSL_CALL_ID
		             AND A.CG_NO = J.CG_NO
		             AND A.GATE_TXN_NO = J.GATE_TXN_NO
		        LEFT OUTER JOIN TMT_CG_MST C
          			ON A.VSL_CALL_ID = C.VSL_CALL_ID AND A.CG_NO = C.CG_NO
		        LEFT OUTER JOIN TMT_DO_DTL D ON A.VSL_CALL_ID = D.VSL_CALL_ID AND A.SDO_NO = D.SDO_NO AND A.CG_NO = D.BL_NO
                LEFT OUTER JOIN TMT_BL B ON B.VSL_CALL_ID = D.VSL_CALL_ID AND B.BL_NO = D.BL_NO
                LEFT OUTER JOIN TMT_GR G ON A.VSL_CALL_ID = G.VSL_CALL_ID AND A.GR_NO = G.GR_NO AND A.CG_NO = G.GR_NO
                LEFT OUTER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
                LEFT OUTER JOIN TMT_ASSIGN_TRANSPORT TSDO ON TSDO.VSL_CALL_ID = A.VSL_CALL_ID AND TSDO.SDO_NO = A.SDO_NO
                LEFT OUTER JOIN TMT_ASSIGN_TRANSPORT TGR ON TGR.VSL_CALL_ID = A.VSL_CALL_ID AND TGR.GR_NO = A.GR_NO
                LEFT OUTER JOIN GR_EXIST_OPE OPEGR ON A.VSL_CALL_ID = OPEGR.VSL_CALL_ID AND A.GR_NO = OPEGR.CG_NO
				LEFT OUTER JOIN SDO_EXIST_OPE OPESDO ON A.VSL_CALL_ID = OPESDO.VSL_CALL_ID AND A.CG_NO = OPESDO.CG_NO AND A.SDO_NO = OPESDO.SDO_NO
				LEFT OUTER JOIN TMT_WEIGHTBRIDGE WBSDO ON WBSDO.VSL_CALL_ID = A.VSL_CALL_ID AND WBSDO.SDO_NO = A.SDO_NO AND WBSDO.GATE_TICKET_NO = A.GATE_TXN_NO
                LEFT OUTER JOIN TMT_WEIGHTBRIDGE WBGR ON WBGR.VSL_CALL_ID = A.VSL_CALL_ID AND WBGR.GR_NO = A.GR_NO AND WBGR.GATE_TICKET_NO = A.GATE_TXN_NO 
                LEFT OUTER JOIN LORRY_OPERATED_WGT OPEWGT ON OPEWGT.VSL_CALL_ID = A.VSL_CALL_ID AND OPEWGT.GATE_TXN_NO = A.GATE_TXN_NO AND OPEWGT.CG_NO = A.CG_NO AND OPEWGT.LORRY_NO = A.LORRY_NO
		WHERE   A.GATE_TXN_NO IS NOT NULL
				AND CASE 
						WHEN A.SDO_NO IS NOT NULL THEN OPESDO.SDO_NO
						ELSE OPEGR.CG_NO
					END IS NULL
		        AND A.GATE_OUT_DT IS NULL
		        AND A.GATE_IN_DT IS NOT NULL
		        AND CASE
		              WHEN A.CG_TP_CD IN('LQD') THEN J.CG_VOL
		              ELSE J.CG_WGT
		           END > 0
		        AND CASE WHEN B.CG_TP_CD IS NOT NULL THEN  B.CG_TP_CD
		        		ELSE S.CG_TP_CD	
		        	END NOT IN ('RCV')		
		        AND J.JOB_TP_CD = 'GI'	
		        <if test="lorryNo != null and lorryNo != ''">
					AND A.LORRY_NO = #{lorryNo}
				</if>
				<if test="vslCallId != null and vslCallId != ''">
					AND A.VSL_CALL_ID = #{vslCallId}
				</if>
				<if test="gateTxnNo != null and gateTxnNo != ''">
					AND A.GATE_TXN_NO = #{gateTxnNo}
				</if>
	</select>
	 
	 <select id="selectCargoArrivalDelivery"  parameterType="gateOperationParm" resultType="gateOperationItem">
		SELECT 	
  			   	CG_NO                CGNO,
				CG_IN_OUT_CD         CGINOUTCD,
				SEQ                  SEQ,
				CG_WGT                  WGT,
				CG_WGT_UNIT             WGTUNIT,
				CG_VOL                MSRMT,
				CG_VOL_UNIT           MSRMTUNIT,
				PKG_QTY              PKGQTY,
				PKG_TP_CD            PKGTPCD,
				CMDT_CD              CMDTCD,
				CG_TP_CD             CGTPCD,
<!-- 				DG_CG_IDT            DGCGIDT, -->
				GATE_IN_DT           GATEINDT,
				GATE_OUT_DT          GATEOUTDT,
				TSPT_TP_CD           TSPTTPCD,
				FNL_YN               FNLYN,
				GR_NO                GRNO,
				LOC_ID               LOCID,
				RMK                  RMK,
				LORRY_NO             LORRYNO,
				GATE_PASS_NO         GATEPASSNO,
				GATE_PASS_ISSUE_DT   GATEPASSISSUEDT,
				ISSUE_CNT            ISSUECNT,
				GATE_TXN_NO			GATETXNNO,
				UPDATE_TIME               UPDDT,
				STAFF_CD          UPDUSERID,
				VERSION              VERSION
		FROM 	TMT_CG_ARRV_DELV
		WHERE
		 		1 = 1
			 	<if test="vslCallId != null and vslCallId != ''">
					AND VSL_CALL_ID = #{vslCallId}
				</if>
				<if test="cgNo != null and cgNo != ''">
					AND CG_NO = #{cgNo}
				</if>
				<if test="cgNo != null and cgNo != ''">
					AND CG_IN_OUT_CD = #{cgNo}
				</if>
				<if test="grNo != null and grNo != ''">
					AND GR_NO = #{grNo}
				</if>
				<if test="sdoNo != null and sdoNo != ''">
					AND SDO_NO = #{sdoNo}
				</if>
				<if test="lorryNo != null and lorryNo != ''">
					AND LORRY_NO = #{lorryNo}
				</if>
				<if test="driverId != null and driverId != ''">
					AND DRIVER_ID = #{driverId}
				</if>
	</select>
	 
	 <select id="selectCargoLorryGateIn"  parameterType="gateOperationParm" resultType="gateOperationItem">
		/*cargoArrvDelv.selectGateInData*/
		SELECT 	*
		FROM 	(
					SELECT 
							A.CG_NO                CGNO,
							A.CG_IN_OUT_CD         CGINOUTCD,
							A.SEQ                  SEQ,
							CASE
						          WHEN A.CG_IN_OUT_CD = 'O' AND A.GATE_PASS_NO IS NOT NULL
						          THEN
						             J.CG_WGT
						          WHEN A.CG_IN_OUT_CD = 'O' AND A.GATE_PASS_NO IS NULL
						          THEN
						             A.CG_WGT
						          WHEN A.CG_IN_OUT_CD = 'I'
						          THEN
						             A.CG_WGT
						          ELSE
						             0
						       END
						          AS WGT,
							CASE
				                  WHEN A.CG_IN_OUT_CD = 'O' AND A.GATE_PASS_NO IS NOT NULL
				                  THEN
				                     J.PKG_QTY
				                  WHEN A.CG_IN_OUT_CD = 'O' AND A.GATE_PASS_NO IS NULL
				                  THEN
				                     A.PKG_QTY
				                  WHEN A.CG_IN_OUT_CD = 'I'
				                  THEN
				                     A.PKG_QTY
				                  ELSE
				                     0
				               END
				                  AS PKGQTY,
			       			NVL(A.CMDT_CD, (SELECT B.CMDT_CD AS CMDTCD
                                     FROM TMT_BL B
                                    WHERE B.VSL_CALL_ID = A.VSL_CALL_ID
                                      AND B.BL_NO = A.CG_NO
                                      AND ROWNUM = 1))              CMDTCD,
			       			TO_CHAR(A.GATE_IN_DT, 'DD/MM/YYYY HH24:MI')           GATEINDT,
			       			A.GATE_PASS_NO gatePassNo,
			       			A.VSL_CALL_ID vslCallId,
			       			A.DRIVER_ID driverId,
			       			(SELECT DRIVER_NM FROM TMT_DRIVER_MST WHERE DRIVER_ID = A.DRIVER_ID AND ROWNUM = 1) driverNm,
			       			(SELECT LICS_NO FROM TMT_DRIVER_MST WHERE DRIVER_ID = A.DRIVER_ID AND ROWNUM = 1) licsNo,
			       			(SELECT TO_CHAR(LICS_EXPR_YMD, 'DD/MM/YYYY HH24:MI') FROM TMT_DRIVER_MST WHERE DRIVER_ID = A.DRIVER_ID  AND ROWNUM = 1) licsExprYmd,
			       			ROW_NUMBER () OVER (ORDER BY A.GATE_IN_DT DESC, A.SEQ DESC) RN
			       			,DECODE (
		                  		A.CG_IN_OUT_CD,
		                  		'O', (SELECT 	(SELECT 	C.PTNR_CD
		                                  			FROM 	TMT_TRUCK_MST C
		                                 			WHERE   C.LORRY_NO = #{lorryNo}
		                                       				AND INSTR (B.TSPTR, C.PTNR_CD) > 0
		                                       				AND ROWNUM = 1)
		                          		FROM 	TMT_BL B
		                         		WHERE   B.VSL_CALL_ID = A.VSL_CALL_ID
		                               			AND B.BL_NO = A.CG_NO
		                               			AND ROWNUM = 1),
		                  		'I', (SELECT 	(SELECT 	C.PTNR_CD
		                                  			FROM 	TMT_TRUCK_MST C
		                                 			WHERE   C.LORRY_NO = #{lorryNo}
		                                       				AND INSTR (B.TSPT_COMP, C.PTNR_CD) > 0
		                                       				AND ROWNUM = 1)
		                          		FROM 	TMT_SHIPG_NOTE B
		                         		WHERE   B.VSL_CALL_ID = A.VSL_CALL_ID
		                               			AND B.SHIPG_NOTE_NO = C.SHIPG_NOTE_NO
		                               			AND ROWNUM = 1),
		                  		NULL)
		                 		AS TSPTR,
		               		(SELECT 	P.ENG_SNM
		                  		FROM 	TMT_PTNR P
		                 		WHERE   P.PTNR_TYPE = 'TRK'
		                       			AND P.PTNR_CODE =
				                              (DECODE (
				                                  A.CG_IN_OUT_CD,
				                                  'O', (SELECT (SELECT C.PTNR_CD
				                                                  FROM TMT_TRUCK_MST C
				                                                 WHERE     C.LORRY_NO =
				                                                              #{lorryNo}
				                                                       AND INSTR (B.TSPTR,
				                                                                  C.PTNR_CD) >
				                                                              0
				                                                       AND ROWNUM = 1)
				                                          FROM TMT_BL B
				                                         WHERE     B.VSL_CALL_ID =
				                                                      A.VSL_CALL_ID
				                                               AND B.BL_NO = A.CG_NO
				                                               AND ROWNUM = 1),
				                                  'I', (SELECT (SELECT C.PTNR_CD
				                                                  FROM TMT_TRUCK_MST C
				                                                 WHERE     C.LORRY_NO =
				                                                              #{lorryNo}
				                                                       AND INSTR (
				                                                              B.TSPT_COMP,
				                                                              C.PTNR_CD) > 0
				                                                       AND ROWNUM = 1)
				                                          FROM TMT_SHIPG_NOTE B
				                                         WHERE     B.VSL_CALL_ID =
				                                                      A.VSL_CALL_ID
				                                               AND B.SHIPG_NOTE_NO =
				                                                      C.SHIPG_NOTE_NO
				                                               AND ROWNUM = 1),
				                                  NULL)))
				                  AS TSPTCOMPNM
			FROM 	TMT_CG_ARRV_DELV A, TMT_JOB J, TMT_CG_MST C
			WHERE 	A.LORRY_NO = #{lorryNo} 
					AND A.JOB_NO =  J.JOB_NO(+)
				
					AND A.VSL_CALL_ID = C.VSL_CALL_ID
		            AND A.CG_NO = C.CG_NO
		               
			        AND A.GATE_IN_DT IS NOT NULL
			        AND A.GATE_CD_OUT IS NULL
			        AND (SYSDATE - A.GATE_IN_DT) &lt;= 30
	     )
	     WHERE RN = 1
	</select>
	
	<select id="selectCargoGateInCheck"   parameterType="gateOperationParm" resultType="gateOperationItem">
		SELECT 	/*cargoArrvDelv.selectArrvDelvIsCheck*/
					'1' AS VALIDCHECK,
					SEQ AS SEQ,
					LORRY_NO AS LORRYNO 
		FROM 	TMT_CG_ARRV_DELV AD
		WHERE 	AD.CG_IN_OUT_CD = #{cgInOutCd}
		 	 	AND AD.CG_NO = #{cgNo}
				<if test="vslCallId != null and vslCallId != ''">
					AND AD.VSL_CALL_ID = #{vslCallId}
				</if>
				<if test="lorryNo != null and lorryNo != ''">
					AND AD.LORRY_NO = #{lorryNo}
				</if>
				AND AD.GATE_OUT_DT IS NULL
				AND AD.GATE_CD_OUT IS NULL
		ORDER BY SEQ DESC 
		FETCH NEXT 1 ROWS ONLY
	</select>	
	
	<select id="selectCargoGateOutCheck"   parameterType="gateOperationParm" resultType="gateOperationItem">
		SELECT	/*selectIsGateOut*/
	  			'1' AS VALIDCHECK,
	  			SEQ AS SEQ 
		FROM 	TMT_CG_ARRV_DELV AD
		WHERE 	AD.CG_IN_OUT_CD = #{cgInOutCd}
		 	 	AND AD.CG_NO = #{cgNo}
				AND AD.GATE_TXN_NO = #{gateTxnNo}
				<if test="vslCallId != null and vslCallId != ''">
					AND AD.VSL_CALL_ID = #{vslCallId}
				</if>
				AND ROWNUM = 1
	 </select>
	 
	 <select id="selectROROGateOutItems"   parameterType="gateOperationParm" resultType="gateOperationItem">
	 	WITH HDL_JOB AS (
		    SELECT	DISTINCT VSL_CALL_ID, CG_NO, GATE_TXN_NO, CG_WGT, PKG_QTY, CG_VOL
		    FROM 	TMT_JOB 
		    WHERE 	GATE_TXN_NO IS NOT NULL
		    		AND JOB_PURP_CD NOT IN ('IO') 
<!-- 		    		AND ROWNUM =1 -->
					<if test="lorryNo != null and lorryNo != ''">
						AND LORRY_NO = #{lorryNo}
					</if>
					<if test="driverId != null and driverId != ''">
						AND DRIVER_ID = #{driverId}
					</if>
					<if test="vslCallId != null and vslCallId != ''">
						AND VSL_CALL_ID = #{vslCallId}
					</if>
		),
		LORRY_OPERATED_WGT
	     AS (  SELECT VSL_CALL_ID,
	                  CG_NO,
	                  GATE_TXN_NO,
	                  <if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
	                  	DRIVER_ID,
	                  </if>
	                  <if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
	                   	LORRY_NO,
	                  </if>
	                  SUM (NVL (CG_WGT, 0)) AS CG_WGT,
	                  SUM (NVL (CG_VOL, 0)) AS CG_VOL,
	                  SUM (NVL (PKG_QTY, 0)) AS PKG_QTY
	             FROM TMT_JOB
	            WHERE     1=1
	                  AND JOB_PURP_CD NOT IN ('IO', 'OI')
	                  <if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
		         		AND DRIVER_ID IS NOT NULL
		        	  </if>
		        	   <if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
                  		AND LORRY_NO IS NOT NULL
                 </if>
	         GROUP BY VSL_CALL_ID, CG_NO, GATE_TXN_NO
		         <if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
		         	, DRIVER_ID
		        </if>
		        <if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
                  	,LORRY_NO
                 </if>
	        ),
		SDO_EXIST_OPE AS
        (SELECT DISTINCT
        		VSL_CALL_ID,
        		CG_NO,
        		SDO_NO
         FROM TMT_JOB
         WHERE JOB_TP_CD = 'GO'),
         
         GR_EXIST_OPE AS
        (SELECT DISTINCT
        		VSL_CALL_ID,
        		CG_NO
         FROM TMT_JOB
         WHERE JOB_TP_CD = 'GO')
		
		SELECT  
				DISTINCT 
		        A.VSL_CALL_ID           AS vslCallId,
		        (SELECT VSL_NM
		          FROM TMT_VSL_PART P INNER JOIN TMT_VSL_SCH S ON P.VSL_CD = S.VSL_CD
		         WHERE S.VSL_CALL_ID = A.VSL_CALL_ID)
		          AS VSLNM,
		        A.CG_NO                 AS cgNo,
		        <if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
		        	A.LORRY_NO              AS lorryNo,
		        </if>
		        TO_CHAR (A.GATE_IN_DT, 'DD/MM/YYYY HH24:MI') AS gateInDate,
		        A.GATE_TXN_NO           AS gateTxnNo,
		        A.CMDT_CD               AS cmdtCd,
		        F_GET_CMDT_DESC(A.CMDT_CD) AS cmdtNm,
		        OPEWGT.CG_WGT AS wgt,
		        OPEWGT.CG_VOL AS msrmt,
		        OPEWGT.PKG_QTY AS pkgQty,
		        A.GATE_TXN_NO 			AS gateTxnNo,
		        CASE 
		        	WHEN A.SDO_NO IS NOT NULL THEN (SELECT NVL (REGEXP_COUNT (JO.CHAS_NO, ',') + 1, 0) AS CHAS_NO
								                     FROM TMT_JOB JO
								                    WHERE     JO.VSL_CALL_ID = A.VSL_CALL_ID
								                          AND JO.JOB_PURP_CD IN ('AW','WG')
								                          AND JO.CG_NO = A.CG_NO
								                          AND ROWNUM = 1
								                 GROUP BY JO.VSL_CALL_ID, JO.CG_NO, JO.CHAS_NO)
					WHEN A.GR_NO IS NOT NULL THEN (SELECT COUNT (R.CHAS_NO)
									             FROM TMT_RORO_MST R
									            WHERE     R.VSL_CALL_ID = A.VSL_CALL_ID
									                  AND R.GR_NO = A.CG_NO
									                  AND R.IX_CD = 'X')
				END AS NOOFVIN,
		        BR.BRAND_NM AS BRANDNM,
		        M.MODEL_NM AS MODELNM,
		        A.SDO_NO 				AS sdoNo,
		        S.SHIPG_NOTE_NO			AS shipgNoteNo,
		        S.MF_DOC_ID				AS bookingNo,
                A.GR_NO 				AS grNo,
                D.BL_NO					AS blNo,
                D.DO_NO					AS doNo,
                B.MF_DOC_ID				AS mfDocId,
                NVL(D.DELV_TP_CD, S.DELV_TP_CD) AS delvTpCd,
                NVL(B.CATG_CD, S.CATG_CD) AS opeClassCd,
                NVL(B.CATG_CD, S.CATG_CD) AS catgCd,
                F_CM_001('MT', 'CATGTP', NVL(B.CATG_CD, S.CATG_CD))     AS catgNm,
                A.CG_IN_OUT_CD 			AS cgInOutCd,
                G.PKG_TP_CD AS rePkgTpCd,
                NVL(B.PKG_TP_CD, S.PKG_TP_CD) AS pkgTpCd
                ,CASE WHEN A.SDO_NO IS NOT NULL
                	THEN (SELECT DECODE(COUNT(*), 0, 'HOLD', 'RELEASED') FROM TMT_CUSTOMS_RELEASE C1 WHERE C1.VSL_CALL_ID = A.VSL_CALL_ID AND C1.DOC_NO = B.MF_DOC_ID AND NVL(C1.BONDED_WH_YN, 'N') = 'N')
                	ELSE (SELECT DECODE(COUNT(*), 0, 'HOLD', 'RELEASED') FROM TMT_CUSTOMS_RELEASE C1 WHERE C1.VSL_CALL_ID = A.VSL_CALL_ID AND C1.DOC_NO = S.MF_DOC_ID AND NVL(C1.BONDED_WH_YN, 'N') = 'N')
                	END AS  CUSTOMSRELEASESTATUS,
                TO_CHAR(A.GATE_IN_DT, 'DD/MM/YYYY HH24:MI') 			 AS gateInDt,
                <if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
	                A.DRIVER_ID AS driverId,
	                CASE WHEN A.SDO_NO IS NOT NULL THEN
	                	(SELECT DD.DRIVER_NM FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1)
	                	ELSE 
	                	(SELECT DD.DRIVER_NM FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1)
	                END AS driverNm,
	                CASE WHEN A.SDO_NO IS NOT NULL THEN
			        	(SELECT DD.LICS_NO FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1)
			        	ELSE
			        	(SELECT DD.LICS_NO FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1)
			        END AS licsNo,
			        CASE WHEN A.SDO_NO IS NOT NULL THEN
	            		(SELECT TO_CHAR(DD.LICS_EXPR_YMD, 'DD/MM/YYYY') FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1)
	            		ELSE
	            		(SELECT TO_CHAR(DD.LICS_EXPR_YMD, 'DD/MM/YYYY') FROM TMT_DRIVER_MST DD WHERE DD.DRIVER_ID = A.DRIVER_ID AND ROWNUM=1)
	            	END AS licsExprYmd,
            	</if>
	            (SELECT MST.PTNR_CD
		            FROM TMT_TRUCK_MST MST
		            WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1) AS tsptr,
		            F_GET_PARTNER_INFO ((SELECT MST.PTNR_CD
		             					 FROM TMT_TRUCK_MST MST
		             					 WHERE A.LORRY_NO = MST.LORRY_NO AND ROWNUM = 1), 'ENG_SNM') AS tsptCompNm,
          		A.LOC_ID locId
		FROM    TMT_CG_ARRV_DELV A
				LEFT OUTER JOIN HDL_JOB J
		          ON     A.VSL_CALL_ID = J.VSL_CALL_ID
		             AND A.CG_NO = J.CG_NO
		             AND A.GATE_TXN_NO = J.GATE_TXN_NO
		        LEFT OUTER JOIN TMT_RORO_MST C ON A.VSL_CALL_ID = C.VSL_CALL_ID AND A.CG_NO = C.CG_NO
		        LEFT OUTER JOIN TMT_BL B ON B.VSL_CALL_ID = A.VSL_CALL_ID AND B.BL_NO = A.CG_NO AND B.BL_NO = C.CG_NO
       			LEFT OUTER JOIN TMT_DO_DTL D ON B.VSL_CALL_ID = D.VSL_CALL_ID 
		       								AND B.BL_NO = D.BL_NO
		             						AND D.SDO_NO = A.SDO_NO 
             	LEFT OUTER JOIN TMT_GR G ON A.VSL_CALL_ID = G.VSL_CALL_ID AND A.GR_NO = G.GR_NO AND G.GR_NO = C.GR_NO
               <!--  AND A.CG_NO = G.GR_NO  -->
                LEFT OUTER JOIN TMT_SHIPG_NOTE S ON G.VSL_CALL_ID = S.VSL_CALL_ID AND G.SHIPG_NOTE_NO = S.SHIPG_NOTE_NO
                LEFT OUTER JOIN TMT_ASSIGN_TRANSPORT TSDO ON TSDO.VSL_CALL_ID = A.VSL_CALL_ID AND TSDO.SDO_NO = A.SDO_NO
                LEFT OUTER JOIN TMT_ASSIGN_TRANSPORT TGR ON TGR.VSL_CALL_ID = A.VSL_CALL_ID AND TGR.GR_NO = A.GR_NO
                LEFT OUTER JOIN GR_EXIST_OPE OPEGR ON A.VSL_CALL_ID = OPEGR.VSL_CALL_ID AND A.GR_NO = OPEGR.CG_NO
				LEFT OUTER JOIN SDO_EXIST_OPE OPESDO ON A.VSL_CALL_ID = OPESDO.VSL_CALL_ID AND A.CG_NO = OPESDO.CG_NO AND A.SDO_NO = OPESDO.SDO_NO
        		LEFT OUTER JOIN TMT_BRAND BR ON C.BRAND_CD = BR.BRAND_CD
           		LEFT OUTER JOIN TMT_BRAND_DTL M ON C.MODEL_CD = M.MODEL_CD AND C.BRAND_CD = M.BRAND_CD
           		LEFT OUTER JOIN LORRY_OPERATED_WGT OPEWGT ON OPEWGT.VSL_CALL_ID = A.VSL_CALL_ID AND OPEWGT.CG_NO = A.CG_NO 
           		<if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
           			AND OPEWGT.DRIVER_ID = A.DRIVER_ID
           		</if>
           		<if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
           			AND OPEWGT.LORRY_NO = A.LORRY_NO
           		</if>
        WHERE   A.GATE_TXN_NO IS NOT NULL
				<!-- AND CASE 
						WHEN A.SDO_NO IS NOT NULL THEN OPESDO.SDO_NO
						ELSE OPEGR.CG_NO
					END IS NULL -->
		        AND A.GATE_OUT_DT IS NULL
		        AND A.GATE_IN_DT IS NOT NULL
       			AND A.CG_TP_CD IN ('RCV')
		        AND J.CG_WGT > 0
		        <if test="lorryNo != null and lorryNo != ''">
					AND A.LORRY_NO = #{lorryNo}
				</if>
				<if test="driverId != null and driverId != ''">
					AND A.DRIVER_ID = #{driverId}
				</if>
				<if test="vslCallId != null and vslCallId != ''">
					AND A.VSL_CALL_ID = #{vslCallId}
				</if>
				<if test="gateTxnNo != null and gateTxnNo != ''">
					AND A.GATE_TXN_NO = #{gateTxnNo}
				</if>
				<if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
					AND A.LORRY_NO IS NOT NULL
				</if>
				<if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
					AND A.DRIVER_ID IS NOT NULL
				</if>
	 </select>
	 
	 <select id="selectROROGateInItems"   parameterType="gateOperationParm" resultType="gateOperationItem">
		 WITH 
		     BL_ACT_LOCATION AS 
		     (  SELECT I.TO_LOC_ID LOC_ID, I.VSL_CALL_ID, I.CG_NO
		                 FROM TMT_JOB I
		                      INNER JOIN TMT_BL B
		                         ON I.VSL_CALL_ID = B.VSL_CALL_ID AND I.CG_NO = B.BL_NO
		                         AND I.JOB_PURP_CD = 'AW'),
		     BL_CUSTOMS_RELEASE AS
		        (
		            SELECT    BL.VSL_CALL_ID,
		                    BL.MF_DOC_ID,
		                    CASE
		                          WHEN CUS.DOC_NO IS NULL THEN 'HOLD'
		                          ELSE 'RELEASE'
		                    END AS status
		            FROM     TMT_BL BL
		                        LEFT OUTER JOIN TMT_CUSTOMS_RELEASE CUS
		                    ON     CUS.VSL_CALL_ID = BL.VSL_CALL_ID
		                        AND CUS.DOC_NO = BL.MF_DOC_ID
		            WHERE   NVL(CUS.BONDED_WH_YN, 'N') = 'N'
		        )
		 SELECT DISTINCT
	       AST.VSL_CALL_ID AS VSLCALLID,
	       (SELECT VSL_NM
	          FROM TMT_VSL_PART P INNER JOIN TMT_VSL_SCH S ON P.VSL_CD = S.VSL_CD
	         WHERE S.VSL_CALL_ID = BL.VSL_CALL_ID)
	          AS VSLNM,
	        <if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
		       AST.DRIVER_ID driverId,
		       DR.DRIVER_NM driverNm,
       		   DR.LICS_NO licsNo,
      		   TO_CHAR(DR.LICS_EXPR_YMD, 'DD/MM/YYYY') licsExprYmd,
		    </if>
		    <if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
	       		AST.LORRY_NO lorryNo,
	       	</if>
	       BL.MF_DOC_ID AS MFDOCID,
	       '' AS BOOKINGNO,
	       '' AS SHIPGNOTENO,
	       BL.BL_NO AS BLNO,
	       DO.DO_NO AS DONO,
	       S.SDO_NO AS SDONO,
	       '' GRNO,
	       S.TSPT_COMP AS TSPTR,
	       (SELECT COUNT (R.CHAS_NO)
	          FROM TMT_RORO_MST R
	         WHERE     R.VSL_CALL_ID = BL.VSL_CALL_ID
	               AND R.CG_NO = BL.BL_NO
	               AND R.SDO_NO = S.SDO_NO
	               AND R.IX_CD = 'I')
	          AS NOOFVIN,
	       BR.BRAND_NM AS BRANDNM,
	       M.MODEL_NM AS MODELNM,
	       CASE 
	           WHEN REQ.PLAN_LOC_ID IS NOT NULL THEN REQ.PLAN_LOC_ID
	           ELSE (SELECT LISTAGG (LOC_ID, ', ') WITHIN GROUP (ORDER BY LOC_ID)
	              FROM BL_ACT_LOCATION
	            WHERE VSL_CALL_ID = BL.VSL_CALL_ID AND CG_NO = BL.BL_NO)
	       END AS LOCID,
	       S.WGT,
	       S.MSRMT,
	       S.pkgQty,
	       BL.CATG_CD AS CATGCD,
	       BL.CG_TP_CD AS CGTPCD,
	       REQ_TP_CD AS REQTPCD,
	       DECODE (REQ_TP_CD,  'SPA', 'Space',  'MOV', 'Movement',  'Space')
	          AS REQTPNM
	  FROM TMT_ASSIGN_TRANSPORT AST
	       LEFT OUTER JOIN TMT_DRIVER_MST DR ON AST.DRIVER_ID = DR.DRIVER_ID
	       LEFT OUTER JOIN TMT_BL BL
	          ON BL.VSL_CALL_ID = AST.VSL_CALL_ID AND BL.BL_NO = AST.BL_NO
	       LEFT OUTER JOIN TMT_DO DO
	          ON (BL.VSL_CALL_ID = DO.VSL_CALL_ID AND BL.BL_NO = DO.BL_NO)
	       LEFT OUTER JOIN TMT_SPC_REQ REQ
	          ON (BL.VSL_CALL_ID = REQ.VSL_CALL_ID AND BL.BL_NO = REQ.BL_NO)
	       LEFT OUTER JOIN TMT_RORO_MST VIN
              ON     BL.VSL_CALL_ID = VIN.VSL_CALL_ID AND BL.BL_NO = VIN.CG_NO
           LEFT OUTER JOIN TMT_BRAND BR
              ON VIN.BRAND_CD = BR.BRAND_CD
           LEFT OUTER JOIN TMT_BRAND_DTL M
              ON     VIN.MODEL_CD = M.MODEL_CD AND VIN.BRAND_CD = M.BRAND_CD
	       LEFT OUTER JOIN
	       (  SELECT SUM (NVL (DODT.I_QTY, 0)) TOTAL_VIN,
		      		 NVL (DODT.D_MT,0)  + NVL (DODT.I_MT,0) WGT,
	                 NVL (DODT.D_QTY,0)  + NVL (DODT.I_QTY,0) pkgQty,
	                 NVL (DODT.D_M3,0)  + NVL (DODT.I_M3,0) MSRMT,
	                 DODT.VSL_CALL_ID,
	                 DODT.BL_NO,
	                 DODT.DO_NO,
	                 DODT.SDO_NO,
	                 DODT.TSPT_COMP,
	                 TO_CHAR (DODT.EST_ARRV_DT, 'DD/MM/YYYY HH24:MI')
	                    AS EST_ARRV_DT
	            FROM TMT_DO_DTL DODT
	        GROUP BY DODT.VSL_CALL_ID,
	                 DODT.BL_NO,
	                 DODT.DO_NO,
	                 DODT.SDO_NO,
	                 DODT.EST_ARRV_DT,
	                 DODT.TSPT_COMP, DODT.D_MT, DODT.I_MT, DODT.D_QTY, DODT.I_QTY, DODT.D_M3, DODT.I_M3) S
	          ON     BL.VSL_CALL_ID = S.VSL_CALL_ID
	             AND BL.BL_NO = S.BL_NO
	             AND DO.DO_NO = S.DO_NO
	             AND S.SDO_NO = AST.SDO_NO
	 WHERE 1=1
	 		AND BL.CG_TP_CD IN ('RCV')
	 		AND S.SDO_NO IS NOT NULL
	 		<if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
	 			AND AST.LORRY_NO IS NOT NULL	
		 		<if test="lorryNo != null and lorryNo != ''">
					AND AST.LORRY_NO = #{lorryNo}
				</if>
			</if>
			<if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
				AND AST.DRIVER_ID IS NOT NULL
				<if test="driverId != null and driverId != ''">
					AND AST.DRIVER_ID = #{driverId}
				</if>
			</if>
			
	UNION ALL 
	SELECT DISTINCT
	       SN.VSL_CALL_ID AS VSLCALLID,
	       (SELECT VSL_NM
	          FROM TMT_VSL_PART P INNER JOIN TMT_VSL_SCH S ON P.VSL_CD = S.VSL_CD
	         WHERE S.VSL_CALL_ID = SN.VSL_CALL_ID)
	          AS VSLNM,
	         <if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
		       AST.DRIVER_ID driverId,
		       DR.DRIVER_NM driverNm,
		       DR.LICS_NO licsNo,
      		   TO_CHAR(DR.LICS_EXPR_YMD, 'DD/MM/YYYY') licsExprYmd,
		    </if>
		    <if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
	       		AST.LORRY_NO lorryNo,
	       	</if>
	       '' AS MFDOCID,
	       SN.MF_DOC_ID AS BOOKINGNO,
	       SN.SHIPG_NOTE_NO AS SHIPGNOTENO,
	       '' AS BLNO,
	       '' AS DONO,
	       '' AS SDONO,
	       GR.GR_NO GRNO,
	       SN.TSPT_COMP AS TSPTR,
	       (SELECT COUNT (R.CHAS_NO)
	          FROM TMT_RORO_MST R
	         WHERE     R.VSL_CALL_ID = SN.VSL_CALL_ID
	               AND R.CG_NO = SN.SHIPG_NOTE_NO
	               AND R.GR_NO = GR.GR_NO
	               AND R.IX_CD = 'X')
	          AS NOOFVIN,
	       BR.BRAND_NM AS BRANDNM,
	       M.MODEL_NM MODELNM,
	       REQ.PLAN_LOC_ID AS LOCID,
	       GR.CG_WGT AS WGT,
	       GR.CG_VOL AS MSRMT,
	       GR.PKG_QTY AS pkgQty,
	       SN.CATG_CD AS CATGCD,
	       SN.CG_TP_CD AS CGTPCD,
	       REQ_TP_CD AS REQTPCD,
	       DECODE (REQ_TP_CD,  'SPA', 'Space',  'MOV', 'Movement',  'Space')
	          AS REQTPNM
	  FROM TMT_ASSIGN_TRANSPORT AST
	       LEFT OUTER JOIN TMT_DRIVER_MST DR ON AST.DRIVER_ID = DR.DRIVER_ID
	       LEFT OUTER JOIN TMT_SHIPG_NOTE SN
	          ON SN.VSL_CALL_ID = AST.VSL_CALL_ID AND SN.SHIPG_NOTE_NO = AST.SHIPG_NOTE_NO
	       LEFT OUTER JOIN TMT_GR GR
	            ON AST.VSL_CALL_ID = GR.VSL_CALL_ID AND SN.SHIPG_NOTE_NO = GR.SHIPG_NOTE_NO AND GR.GR_NO = AST.GR_NO
	       LEFT OUTER JOIN TMT_SPC_REQ REQ
	          ON (SN.VSL_CALL_ID = REQ.VSL_CALL_ID AND SN.SHIPG_NOTE_NO = REQ.SHIPG_NOTE_NO)
	       LEFT OUTER JOIN TMT_RORO_MST VIN
              ON    SN.VSL_CALL_ID = VIN.VSL_CALL_ID AND SN.SHIPG_NOTE_NO = VIN.CG_NO
           LEFT OUTER JOIN TMT_BRAND BR
              ON VIN.BRAND_CD = BR.BRAND_CD
           LEFT OUTER JOIN TMT_BRAND_DTL M
              ON     VIN.MODEL_CD = M.MODEL_CD AND VIN.BRAND_CD = M.BRAND_CD
	 WHERE  SN.STAT_CD = 'AP' 
	 	AND SN.CG_TP_CD IN ('RCV')
	 	<if test="searchType != null and  searchType != '' and searchType eq 'TRUCK'.toString()">
	 			AND AST.LORRY_NO IS NOT NULL	
		 		<if test="lorryNo != null and lorryNo != ''">
					AND AST.LORRY_NO = #{lorryNo}
				</if>
			</if>
			<if test="searchType != null and  searchType != '' and searchType eq 'DRIVER'.toString()">
				AND AST.DRIVER_ID IS NOT NULL
				<if test="driverId != null and driverId != ''">
					AND AST.DRIVER_ID = #{driverId}
				</if>
			</if>
	 </select>
	 
	 <select id="selectGCGateInItems"   parameterType="gateOperationParm" resultType="gateOperationItem">
		 SELECT DISTINCT
	       AST.VSL_CALL_ID AS VSLCALLID,
	       (SELECT VSL_NM
	          FROM TMT_VSL_PART P INNER JOIN TMT_VSL_SCH S ON P.VSL_CD = S.VSL_CD
	         WHERE S.VSL_CALL_ID = BL.VSL_CALL_ID)
	          AS VSLNM,
	       AST.DRIVER_ID as driverId,
	       DR.DRIVER_NM as driverNm,
	       AST.LORRY_NO,
	       F_CM_012('MT','DELVTP',BL.DELV_TP_CD) AS DELVTPNM,
	       BL.MF_DOC_ID AS MFDOCID,
	       '' AS BOOKINGNO,
	       '' AS SHIPGNOTENO,
	       BL.BL_NO AS BLNO,
	       DO.DO_NO AS DONO,
	       S.SDO_NO AS SDONO,
	       '' GRNO,
	       S.TSPT_COMP AS TSPTR,
	       PLAN_LOC_ID AS LOCID,
	       BL.CG_WGT AS WGT,
	       BL.CG_VOL AS MSRMT,
	       BL.PKG_QTY AS pkgQty,
	       BL.CATG_CD AS CATGCD,
		   F_CM_012('MT','CATGTP', MAX(BL.CATG_CD)) AS catgNm,
	       BL.CG_TP_CD AS CGTPCD,
	       BL.CMDT_CD AS CMDTCD,
		  (SELECT CMDT_DESC FROM TMT_CMDT WHERE CMDT_CD = BL.CMDT_CD) AS cmdtNm
	  FROM TMT_ASSIGN_TRANSPORT AST
	       LEFT OUTER JOIN TMT_DRIVER_MST DR ON AST.DRIVER_ID = DR.DRIVER_ID
	       LEFT OUTER JOIN TMT_BL BL
	          ON BL.VSL_CALL_ID = AST.VSL_CALL_ID AND BL.BL_NO = AST.BL_NO
	       LEFT OUTER JOIN TMT_DO DO
	          ON (BL.VSL_CALL_ID = DO.VSL_CALL_ID AND BL.BL_NO = DO.BL_NO)
	       LEFT OUTER JOIN TMT_SPC_REQ REQ
	          ON (BL.VSL_CALL_ID = REQ.VSL_CALL_ID AND BL.BL_NO = REQ.BL_NO)
	       LEFT OUTER JOIN
	       (  SELECT SUM (NVL (DODT.I_QTY, 0)) TOTAL_VIN,
	                 DODT.VSL_CALL_ID,
	                 DODT.BL_NO,
	                 DODT.DO_NO,
	                 DODT.SDO_NO,
	                 DODT.TSPT_COMP,
	                 TO_CHAR (DODT.EST_ARRV_DT, 'DD/MM/YYYY HH24:MI')
	                    AS EST_ARRV_DT
	            FROM TMT_DO_DTL DODT
	        GROUP BY DODT.VSL_CALL_ID,
	                 DODT.BL_NO,
	                 DODT.DO_NO,
	                 DODT.SDO_NO,
	                 DODT.EST_ARRV_DT,
	                 DODT.TSPT_COMP) S
	          ON     BL.VSL_CALL_ID = S.VSL_CALL_ID
	             AND BL.BL_NO = S.BL_NO
	             AND DO.DO_NO = S.DO_NO
	 WHERE 1=1
	 		AND BL.CG_TP_CD NOT IN ('RCV')
	 		<if test="lorryNo != null and lorryNo != ''">
				AND AST.LORRY_NO = #{lorryNo}
			</if>
			<if test="driverId != null and driverId != ''">
				AND AST.DRIVER_ID = #{driverId}
			</if>
		group by  AST.VSL_CALL_ID,
                  BL.VSL_CALL_ID,
                  AST.DRIVER_ID,
                  DR.DRIVER_NM,
                  AST.LORRY_NO,
                  BL.DELV_TP_CD,
                  BL.MF_DOC_ID,
                  BL.BL_NO,
                  DO.DO_NO,
                  S.SDO_NO,
                  S.TSPT_COMP,
                  PLAN_LOC_ID,
                  BL.CG_WGT,
                  BL.CG_VOL,
                  BL.PKG_QTY,
                  BL.CATG_CD,
                  BL.CG_TP_CD,
                  BL.CMDT_CD
	UNION ALL 
	SELECT DISTINCT
	       SN.VSL_CALL_ID AS VSLCALLID,
	       (SELECT VSL_NM
	          FROM TMT_VSL_PART P INNER JOIN TMT_VSL_SCH S ON P.VSL_CD = S.VSL_CD
	         WHERE S.VSL_CALL_ID = SN.VSL_CALL_ID)
	          AS VSLNM,
	       AST.DRIVER_ID,
	       DR.DRIVER_NM,
	       AST.LORRY_NO,
	       F_CM_012('MT','DELVTP',SN.DELV_TP_CD) AS DELVTPNM,
	       '' AS MFDOCID,
	       SN.MF_DOC_ID AS BOOKINGNO,
	       SN.SHIPG_NOTE_NO AS SHIPGNOTENO,
	       '' AS BLNO,
	       '' AS DONO,
	       '' AS SDONO,
	       GR.GR_NO GRNO,
	       SN.TSPT_COMP AS TSPTR,
	       PLAN_LOC_ID AS LOCID,
	       SN.CG_WGT AS WGT,
	       SN.CG_VOL AS MSRMT,
	       SN.PKG_QTY AS pkgQty,
	       SN.CATG_CD AS CATGCD,
		   F_CM_012('MT','CATGTP', MAX(SN.CATG_CD)) AS CATGNM,
	       SN.CG_TP_CD AS CGTPCD,
	       SN.CMDT_CD AS CMDTCD,
		  (SELECT CMDT_DESC FROM TMT_CMDT WHERE CMDT_CD = SN.CMDT_CD) AS cmdtNm
	  FROM TMT_ASSIGN_TRANSPORT AST
	       LEFT OUTER JOIN TMT_DRIVER_MST DR ON AST.DRIVER_ID = DR.DRIVER_ID
	       LEFT OUTER JOIN TMT_SHIPG_NOTE SN
	          ON SN.VSL_CALL_ID = AST.VSL_CALL_ID AND SN.SHIPG_NOTE_NO = AST.SHIPG_NOTE_NO
	       LEFT OUTER JOIN TMT_GR GR
	            ON AST.VSL_CALL_ID = GR.VSL_CALL_ID AND SN.SHIPG_NOTE_NO = GR.SHIPG_NOTE_NO
	       LEFT OUTER JOIN TMT_SPC_REQ REQ
	          ON (SN.VSL_CALL_ID = REQ.VSL_CALL_ID AND SN.SHIPG_NOTE_NO = REQ.SHIPG_NOTE_NO)
	 WHERE  SN.STAT_CD = 'AP' 
	 	AND SN.CG_TP_CD NOT IN ('RCV')
	 	<if test="lorryNo != null and lorryNo != ''">
				AND AST.LORRY_NO = #{lorryNo}
		</if>
		<if test="driverId != null and driverId != ''">
			AND AST.DRIVER_ID = #{driverId}
		</if>
		group by  AST.VSL_CALL_ID,
                  SN.VSL_CALL_ID,
                  AST.DRIVER_ID,
                  DR.DRIVER_NM,
                  AST.LORRY_NO,
                  SN.DELV_TP_CD,
                  SN.MF_DOC_ID,
                  SN.SHIPG_NOTE_NO,
                  GR.GR_NO,
                  SN.TSPT_COMP,
                  PLAN_LOC_ID,
                  SN.CG_WGT,
                  SN.CG_VOL,
                  SN.PKG_QTY,
                  SN.CATG_CD,
                  SN.CG_TP_CD,
                  SN.CMDT_CD
	 </select>
	 
	 
	 <select id="selectGateTxnNo"  parameterType="gateOperationParm" resultType="gateOperationItem">
		SELECT 
				('G' || TO_CHAR (SYSDATE, 'YYMMDD')
						|| (SELECT NVL (
						               TRIM (
						                   TO_CHAR (SUBSTR (MAX (GATE_TXN_NO), -4, 4) + 1,
						                            '0000')),
						               '0001')
						      FROM TMT_CG_ARRV_DELV
						      WHERE GATE_TXN_NO LIKE CONCAT('G', TO_CHAR (SYSDATE, 'YYMMDD'))  || '%')
				) 
					AS GATETXNNO 
		FROM DUAL
	</select>
	
		<select id="selectJobGateInOut"   parameterType="gateOperationParm" resultType="gateOperationItem">
		SELECT 
				VSL_CALL_ID AS VSLCALLID,
				CG_NO AS CGNO,
				LORRY_NO AS LORRYNO
		FROM 	TMT_JOB JB
		WHERE	JB.VSL_CALL_ID = #{vslCallId}
		 		AND JB.CG_NO = #{cgNo}
		 		AND JB.JOB_TP_CD = #{jobTpCd}
		 		AND JB.JOB_PURP_CD = #{jobPurpCd}
		 		AND JB.LORRY_NO = #{lorryNo}
		 		AND JB.GATE_TXN_NO = #{gateTxnNo}
	 </select>
	 <insert id="insertCargoGateInItems"  parameterType="gateOperationItem">
		INSERT INTO TMT_CG_ARRV_DELV
		/*insertGateIntems*/
		(
			VSL_CALL_ID
			,CG_NO
			,CG_IN_OUT_CD
			,SEQ
			,GATE_IN_DT
			,GATE_OUT_DT
			,LORRY_NO
			,UPDATE_TIME
			,STAFF_CD
			,GATE_CD
			,VERSION
			,CG_WGT
			,PKG_QTY
			,CG_VOL
			,CMDT_CD
			,DRIVER_ID
			,GATE_TXN_NO
			,GR_NO
			,SDO_NO
			,LOC_ID
			,CG_TP_CD
		) 
		VALUES 
		(
			#{vslCallId}
			,#{cgNo}
			,#{cgInOutCd}
			,(SELECT NVL(TO_NUMBER(MAX(SEQ)), 0)+1 
			 FROM  	TMT_CG_ARRV_DELV
			 WHERE 	CG_NO = #{cgNo} AND VSL_CALL_ID = #{vslCallId})
			,TO_DATE(#{gateInDt}, 'DD/MM/YYYY HH24:MI')
			,TO_DATE(#{gateOutDt}, 'DD/MM/YYYY HH24:MI')
			,#{lorryNo}
			,SYSDATE
			,#{userId}
			,#{gateCd}
			,#{newVersion}
			,#{wgt}
			,#{pkgQty}
			,#{msrmt}
			,#{cmdtCd}
			,#{driverId}
			,#{gateTxnNo}
			,#{grNo}
			,#{sdoNo}
			,#{locId}
			,#{cgTpCd}
		)
	</insert>
	
	<update id="updateCargoGateInItems"  parameterType="gateOperationItem">
	 	UPDATE	TMT_CG_ARRV_DELV
		SET 	GATE_IN_DT = TO_DATE(#{gateInDt}, 'DD/MM/YYYY HH24:MI'),
		        UPDATE_TIME = SYSDATE,
		        STAFF_CD = #{userId}
		        ,GATE_CD =#{gateCd}
		        ,VERSION =#{newVersion}
		        ,DRIVER_ID=#{driverId}
		        ,CG_IN_OUT_CD =#{cgInOutCd}
		        ,CG_WGT = NVL(#{wgt},0) 
			 	,CG_VOL = NVL(#{msrmt},0) 
			 	,PKG_QTY = NVL(#{pkgQty},0)
		 WHERE	VSL_CALL_ID=#{vslCallId} 
				AND CG_NO=#{cgNo}
				AND GATE_TXN_NO = #{gateTxnNo}
				AND LORRY_NO = #{lorryNo}
	</update>
	
	<update id="updateCargoGateOutItems"  parameterType="gateOperationItem">
		UPDATE	TMT_CG_ARRV_DELV /*updateGateOutItems*/
		SET
			 	GATE_OUT_DT = TO_DATE(#{gateOutDt}, 'DD/MM/YYYY HH24:MI')
				,UPDATE_TIME = SYSDATE
				,STAFF_CD = #{userId}
				,GATE_CD_OUT = #{gateCd}
				,VERSION =#{newVersion}
				,CG_IN_OUT_CD =#{cgInOutCd}
		 WHERE	GATE_TXN_NO = #{gateTxnNo}
				<if test="gatePassNo != null and gatePassNo != ''"> 
					AND GATE_PASS_NO = TRIM(#{gatePassNo})
				</if>
	</update>
	
	<insert id="insertGOJobItems"  parameterType="gateOperationItem">
		<selectKey order="BEFORE" resultType="cargoDischargingItem" keyProperty="jobNo" >
			SELECT 
				('J' || TO_CHAR(SYSDATE, 'YYMMDD') 
					 || (SELECT NVL(TRIM(To_CHAR(SUBSTR(MAX(JOB_NO) ,-9,9)+1, '000000000')),'000000000') 
					  FROM  TMT_JOB)) AS jobNo
			 FROM DUAL
		</selectKey>
		INSERT INTO TMT_JOB(
			JOB_NO,
			JOB_TP_CD,
			WORK_ST_DT,
			WORK_END_DT,
			PKG_QTY,
			CG_VOL,
			CG_WGT,
			STAT_CD,
			CG_NO,
			VSL_CALL_ID,
			JOB_PURP_CD,
			JOB_GROUP,
			DMG_YN,
			RHDL_MODE,
			SHU_YN,
			OPE_CLASS_CD,
			DELV_TP_CD,
			PKG_TP_CD,
			TSPT_TP_CD,
			LORRY_NO,
			DRIVER_ID,
			GATE_TXN_NO,
			UPDATE_TIME,
			STAFF_CD,
			VERSION,
			RMK,
			JOB_CO_CD,
			SDO_NO,
			SHFT_ID,
			SHFT_DT,
			REPKG_TYPE_CD,
			CHAS_NO
		) VALUES (
			 #{jobNo},
			 #{jobTpCd}, 
			 TO_DATE(#{jobDt}, 'DD/MM/YYYY HH24:MI'),
			 TO_DATE(#{jobDt}, 'DD/MM/YYYY HH24:MI'),
			 NVL(#{pkgQty},0), 
			 NVL(#{msrmt},0), 
			 NVL(#{wgt},0), 
			 #{statCd}, 
			 #{cgNo}, 
			 #{vslCallId}, 
			 #{jobPurpCd}, 
			 (SELECT NVL(MAX(TO_NUMBER(S.JOB_GROUP)),0)+1 AS JOBGROUP FROM TMT_JOB S),
			 DECODE(#{dmgYn},NULL,'N','true','Y','false','N','Y','Y','N','N'),
			 #{rhdlMode}, 
			 DECODE(#{shuYn},NULL,'N','true','Y','false','N','Y','Y','N','N'),
			 #{catgCd},
			 #{delvTpCd},
			 #{pkgTpCd},
			 #{tsptTpCd},
			 #{lorryNo},
			 #{driverId},
			 #{gateTxnNo},
			 SYSDATE,
			 #{userId},
			 #{newVersion},
			 #{rmk},
			 'G',
			 #{sdoNo},
			 F_GET_SHIFT_CD(TO_DATE(#{jobDt}, 'DD/MM/YYYY HH24:MI'), 'CD'),
			 TO_DATE(#{jobDt}, 'DD/MM/YYYY HH24:MI'),
			 #{rePkgTpCd}
			 <if test="sdoNo != null and sdoNo != ''"> 
			 	,(SELECT LISTAGG(CHAS_NO, ', ') WITHIN GROUP (ORDER BY CHAS_NO) 
                    FROM (SELECT DISTINCT CHAS_NO 
                            FROM TMT_RORO_MST 
                            WHERE VSL_CALL_ID = #{vslCallId}
                            AND CG_NO = #{cgNo}
                            AND SDO_NO = #{sdoNo}))
             </if>
             <if test="grNo != null and grNo != ''"> 
			 	,(SELECT LISTAGG(CHAS_NO, ', ') WITHIN GROUP (ORDER BY CHAS_NO) 
                    FROM (SELECT DISTINCT CHAS_NO 
                            FROM TMT_RORO_MST 
                            WHERE VSL_CALL_ID = #{vslCallId}
                            AND CG_NO = #{shipgNoteNo}
                            AND GR_NO = #{grNo}))
             </if>
		)
	</insert>
	
	<update id="updateGOJobItems"  parameterType="gateOperationItem">
		UPDATE	TMT_JOB
		   SET
				WORK_ST_DT 	= TO_DATE(#{jobDt}, 'DD/MM/YYYY HH24:MI'),
				WORK_END_DT = TO_DATE(#{jobDt}, 'DD/MM/YYYY HH24:MI'),
				PKG_QTY 	= NVL(#{pkgQty},0),
				CG_VOL 		= NVL(#{msrmt},0),
				CG_WGT 		= NVL(#{wgt},0),
				UPDATE_TIME = SYSDATE,
				VERSION 	= #{newVersion},
				STAFF_CD = #{userId}
		WHERE 	
				VSL_CALL_ID =  #{vslCallId}
				AND CG_NO =  #{cgNo}
				AND JOB_TP_CD = #{jobTpCd}
				AND JOB_PURP_CD = #{jobPurpCd}
				AND LORRY_NO =  #{lorryNo}
				AND GATE_TXN_NO = #{gateTxnNo}
				AND GATE_TXN_NO IS NOT NULL
	</update>
	
	<update id="updateGIROROItems" parameterType="gateOperationItem">
		UPDATE TMT_RORO_MST
		SET  GATE_IN_DTM =  TO_DATE(#{gateInDt}, 'DD/MM/YYYY HH24:MI'),
			 TRUCK_NO = #{lorryNo},
			 DRIVER_ID = #{driverId},
			 STAFF_CD = #{userId},
			 UPDATE_TIME = SYSDATE
		WHERE 1=1 
			<if test="sdoNo != null and sdoNo != ''"> 
				AND SDO_NO = #{sdoNo}
			</if>
			<if test="grNo != null and grNo != ''"> 
				AND GR_NO = #{grNo}
			</if>
	</update>
	
	
	<update id="updateROROGateoutItems"  parameterType="gateOperationItem">
		UPDATE TMT_RORO_MST
		SET  GATE_OUT_DTM =  TO_DATE(#{gateOutDt}, 'DD/MM/YYYY HH24:MI'),
			 TRUCK_NO = #{lorryNo},
			 DRIVER_ID = #{driverId},
			 STAFF_CD = #{userId},
			 UPDATE_TIME = SYSDATE
		WHERE 1=1 
			<if test="sdoNo != null and sdoNo != ''"> 
				AND SDO_NO = #{sdoNo}
			</if>
			<if test="grNo != null and grNo != ''"> 
				AND GR_NO = #{grNo}
			</if>
	</update>
	
	
	<update id="updateROROArrvDelvItems"  parameterType="gateOperationItem">
		UPDATE	TMT_CG_ARRV_DELV /*updateGateOutItems*/
		SET
			 	GATE_OUT_DT = TO_DATE(#{gateOutDt}, 'DD/MM/YYYY HH24:MI')
				,UPDATE_TIME = SYSDATE
				,STAFF_CD = #{userId}
				,GATE_CD_OUT = #{gateCd}
				,VERSION =#{newVersion}
		 WHERE	GATE_TXN_NO = #{gateTxnNo}
				<if test="gatePassNo != null and gatePassNo != ''"> 
					AND GATE_PASS_NO = TRIM(#{gatePassNo})
				</if>
				<if test="lorryNo != null and lorryNo != ''"> 
					AND LORRY_NO = #{lorryNo}
				</if>
				<if test="driverId != null and driverId != ''"> 
					AND DRIVER_ID = #{driverId}
				</if>
	</update>
	
	<update id="updateCirPrintItem"  parameterType="gateOperationItem">
		UPDATE	TMT_CG_ARRV_DELV
		   SET
				CIR_PRINT_YN 	= #{printCirYn},
				UPDATE_TIME = SYSDATE,
				VERSION 	= #{newVersion},
				STAFF_CD = #{userId}
		WHERE 	
				VSL_CALL_ID =  #{vslCallId}
				AND CG_NO =  #{cgNo}
				AND GATE_TXN_NO = #{gateTxnNo}
				AND LORRY_NO =  #{lorryNo}
	</update>
	
</mapper>
