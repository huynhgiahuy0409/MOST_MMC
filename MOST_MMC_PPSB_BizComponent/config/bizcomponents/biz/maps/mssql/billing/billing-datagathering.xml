<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dataGathering">

	<resultMap type="dataGetheringItem" id="DataGetheringItemMap">
		<result property="vslCallId" 		column="vslCallId" />
		<result property="atb" 				column="ATB" />
		<result property="atw" 				column="ATW" />
		<result property="atc" 				column="ATC" />
		<result property="atu" 				column="ATU" />
		<result property="berth" 			column="BERTH" />
		<result property="cargoType" 		column="CARGO_TYPE" />
		<result property="warehouseId"		column="WAREHOUSE_ID" />
		<result property="imRecclCd" 		column="IM_RECONCILE_STATE" />
		<result property="exRecclCd" 		column="EX_RECONCILE_STATE" />
		<result property="status" 			column="STATUS" />
		<result property="gatheredDate" 	column="GATHERD_DATE" />
		<result property="gatheringStaff" 	column="GATHERGING_STAFF" />
		<result property="marineCharge" 	column="MARINECHARGE" />
		<result property="payer" 			column="PAYER" />
		<result property="shippingAgent" 	column="SAGENT" />
		<result property="version" 			column="VERSION" />
		<result property="scn" 				column="SCN" />
	</resultMap>
	<resultMap type="gatheredDataItem" 	id="GatheredDataItemMap">
		<result property="rowNum" 			column="NO" />
		<result property="vslCallId" 		column="vslCallId" />
		<result property="bbtCheck" 		column="BBT_CHECK" />
		<result property="waiverDescr" 		column="WAIVER_DESCR" />
		<result property="payer" 			column="PAYER" />
		<result property="payerName" 		column="PAYER_NAME" />
		<result property="prefix" 			column="PRE_FIX" />
		<result property="tariffType" 		column="TARIFF_TYPE" />
		<result property="tariffTypeName" 	column="TARIFF_TYPE_NAME" />
		<result property="tariffCode" 		column="TARIFF_CODE" />
		<result property="subTariffCode" 	column="SUB_TARIFF_CODE" />
		<result property="tariffDesc" 		column="TARIFF_DESC" />
		<result property="costCentreCode" 	column="COST_CENTRE_CODE" />
		<result property="unit1" 			column="UNIT1" />
		<result property="unit2" 			column="UNIT2" />
		<result property="unit3" 			column="UNIT3" />
		<result property="aplyRate" 		column="APLY_RATE" />
		<result property="aplyAmt" 			column="APLY_AMT" />
		<result property="aplyAmtUSD" 		column="APLY_AMT_USD" />
		<result property="stdRate" 			column="STD_RATE" />
		<result property="status" 			column="STATUS" />
		<result property="statusCd" 		column="STATUSCD" />
		<result property="invoiceNo" 		column="INVOICE_NO" />
		<result property="refNo" 			column="REF_NO" />
		<result property="adhocyn" 			column="ADHOC_YN" />
		<result property="version" 			column="VERSION" />
		<result property="costcenter" 		column="COST_CENTRE_CODE" />
		<result property="gatherNo" 		column="GATHER_NO" />
		<result property="scrId" 			column="SCR_ID" />
		<result property="totalAmt"			column="TOTAL_AMT" />
		<result property="gstType" 			column="TAX_TYPE" />
		<result property="gstValue" 		column="TAX_VALUE" />
		<result property="gstAmt" 			column="TAX_AMT" />
		<result property="gstRegNo" 		column="GST_REG_NO" />
		<result property="comRegNo" 		column="COMP_REG_NO" />
		<result property="tmnlNm" 			column="TMNL_NM" />
		<result property="gstPercent" 		column="TAX_PERCENT" />
		<result property="rowNum" 			column="ROWNUM" />
	</resultMap>
	<resultMap type="gatheredDataItem" id="ExchangeDataItemMap">
		<result property="exchag" 			column="EXCHG_VAL" />
		<result property="aplyDate" 		column="ST_YMD" />
	</resultMap>
	<resultMap type="gatheredDataItem" id="CostCenterDataItemMap">
		<result property="costCentreCode" 	column="COST_CENTRE_CODE" />
	</resultMap>
	<resultMap type="gatheredDataItem" id="RefNoDataItemMap">
		<result property="refNo" column="REF_NO" />
	</resultMap>
	<resultMap type="dataGetheringItem" id="VesselInfoItemMap">
		<result property="vesselID" 		column="VESSEL_ID" />
		<result property="vesselName" 		column="VESSEL_NAME" />
		<result property="saCode" 			column="SA_CODE" />
		<result property="saName" 			column="SA_NAME" />
		<result property="dpSaCd" 			column="D_SA_CODE" />
		<result property="dpSaName" 		column="D_SA_NAME" />
		<result property="vesselType" 		column="VESSEL_TYPE" />
		<result property="vslServiceType" 	column="VSL_SERVICE_TYPE" />
		<result property="loa" 				column="LOA" />
		<result property="dwt" 				column="DWT" />
		<result property="grt" 				column="QRT" />
		<result property="berthNo" 			column="BERTH_NO" />
		<result property="atb" 				column="ATB" />
		<result property="atw" 				column="ATW" />
		<result property="atc" 				column="ATC" />
		<result property="atu" 				column="ATU" />
		<result property="berthingHours" 	column="BERTHING_HOURS" />
		<result property="acceptableDelay" 	column="ACCEPT_TABLE_DELAY" />
		<result property="oneStDouble" 		column="ONE_ST_DOUBLE" />
		<result property="twoNdDouble" 		column="TWO_ND_DOUBLE" />
		<result property="threeRdDouble" 	column="THREE_RD_DOUBLE" />
		<result property="doubleBanking" 	column="DOUBLE_BANKING" />
		<result property="arrivalTimeInMonthAsScheduled" column="ARRIVAL_TIME_SCHEDULED" />
		<result property="arrivalTimeInMonth" column="ARRIVAL_TIME" />
		<result property="secondAcceptDelay" column="SE_APT_DLY" />
		<result property="normalAcceptDelay" column="NR_APT_DLY" />
		<result property="remark" 			 column="REMARK" />
		<result property="purpCall" 		 column="PURP_CALL" />
	</resultMap>
	<resultMap type="dataGetheringItem" id="CargoInfoItemMap">
		<result property="category" 		column="CATEGORY" />
		<result property="delivery" 		column="DELIVERY" />
		<result property="cargoType" 		column="CARGO_TYPE" />
		<result property="commodity" 		column="COMMODITY" />
		<result property="dgClass" 			column="DG_CLASS" />
		<result property="packageType" 		column="PACKAGE_TYPE" />
		<result property="transportType" 	column="TRANSPORT_TYPE" />
		<result property="tonnage" 			column="TONNAGE" />
		<result property="pkgQty" 			column="PKG_QTY" />
		<result property="wgt" 				column="WGT" />
		<result property="tariffCode" 		column="TARIFF_CODE" />
		<result property="subTariffCode" 	column="SUB_TARIFF_CODE" />
		<result property="tariffDesc" 		column="TARIFF_DESC" />
		<result property="referenceNo" 		column="REFERENCE_NO" />
		<result property="operationNo" 		column="OPERATION_NO" />
		<result property="unit1" 			column="UNIT1" />
		<result property="unit2" 			column="UNIT2" />
		<result property="unit3" 			column="UNIT3" />
		<result property="workDate" 		column="WORK_DATE" />
		<result property="shft" 			column="SHFT" />
		<result property="opWgt" 			column="OP_WGT" />
		<result property="opMsrmt" 			column="OP_MSRMT" />
		<result property="opPkgQty" 		column="OP_PKG_QTY" />
	</resultMap>
	<resultMap type="dataGetheringItem" id="CargoSumInfoItemMap">
		<result property="referenceNo" 		column="REFERENCE_NO" />
		<result property="jobTpCd" 			column="JOB_TP_CD" />
		<result property="docMsrmt" 		column="DOC_MSRMT" />
		<result property="docWgt" 			column="DOC_WGT" />
		<result property="docPkgQty" 		column="DOC_PKG_QTY" />
		<result property="blMsrmt" 			column="BL_MSRMT" />
		<result property="blWgt" 			column="BL_WGT" />
		<result property="blPkgQty" 		column="BL_PKG_QTY" />
		<result property="opMsrmt" 			column="OP_MSRMT" />
		<result property="opWgt" 			column="OP_WGT" />
		<result property="opPkgQty" 		column="OP_PKG_QTY" />
		<result property="packageType" 		column="PKG_TP_CD" />
		<result property="commodity" 		column="CMDT_CD" />
		<result property="fwrAgnt" 			column="FWR_AGNT" />
		<result property="delivery" 		column="ACTL_DELV_TP_CD" />

	</resultMap>
	<resultMap type="dataGetheringItem" id="EquipmentInfoItemMap">
		<result property="equType" 			column="EQU_TYPE" />
		<result property="date" 			column="OPERATED_DATE" />
		<result property="shift" 			column="SHIFT" />
		<result property="capacity" 		column="CAPACITY" />
		<result property="gearType" 		column="GEAR_TYPE" />
		<result property="fromTime" 		column="FROM_TIME" />
		<result property="toTime" 			column="TO_TIME" />
		<result property="totalHrs" 		column="TOTAL_HRS" />
		<result property="nos" 				column="NOS" />
		<result property="trfCd" 			column="TRF_CD" />
		<result property="subTrfCd" 		column="SUB_TRF_CD" />
		<result property="trfDescr" 		column="TRF_DESCR" />
		<result property="cgTpCd" 			column="CG_TP_CD" />
		<result property="payer" 			column="PAYER" />
		<result property="costct" 			column="COST_CENT_CD" />
	</resultMap>
	<resultMap type="gatheredDataItem" id="PayerInfoDataItemMap">
		<result property="payer" 			column="PAYER" />
	</resultMap>
	<resultMap type="dataGetheringItem" id="VslShiftInforItemMap">
		<result property="atb" 				column="ATB" />
		<result property="atw" 				column="ATW" />
		<result property="atc" 				column="ATC" />
		<result property="atu" 				column="ATU" />
	</resultMap>
	<resultMap type="dataGetheringItem" id="DetailItemMap">
		<result property="vslCallId" 		column="VSL_CALL_ID" />
		<result property="remark" 			column="REMARK" />
	</resultMap>
	<resultMap type="dataGetheringItem" id="MegaInfoItemMap">
		<result property="megaNo" 			column="MEGA_NO" />
		<result property="workDt" 			column="WORK_DT" />
		<result property="shift" 			column="SHIFT" />
		<result property="submitDt" 		column="SUBMIT_DT" />
		<result property="megaStatus" 		column="MEGA_STATUS" />
		<result property="payer" 			column="PAYER" />
		<result property="apprvDt" 			column="APPRV_DT" />
		<result property="penalty" 			column="PENALTY" />
	</resultMap>
	
	<select id="selectDataGathering" parameterType="dataGatheringParm"	resultMap="DataGetheringItemMap">
		SELECT /* datagathering.selectDataGathering */
			*
		FROM 
			(SELECT 
				ROW_NUMBER () OVER (ORDER BY VSL_CALL_ID) 		AS RN,
				SCH.SHIP_CALL_NO								AS SCN,
               	VSL_CALL_ID 									AS VSLCALLID,
               	FORMAT (ATB, 'dd/MM/yyyy HH:mm') 				AS ATB,
               	FORMAT (ATW, 'dd/MM/yyyy HH:mm') 				AS ATW,
               	FORMAT (ATC, 'dd/MM/yyyy HH:mm') 				AS ATC,
               	FORMAT (ATU, 'dd/MM/yyyy HH:mm') 				AS ATU,
               	BERTH_LOC 										AS BERTH,
               	ARRV_SA_ID 										AS SAGENT,
               	ISNULL (ISNULL ( (SELECT TOP 1
                                        MST.CG_TP_CD
                                   FROM TMT_CG_MST MST
                                  WHERE MST.VSL_CALL_ID = SCH.VSL_CALL_ID),
                               (SELECT TOP 1
                                       MST.CG_TP_CD
                                  FROM TMT_LQDCG_OPE MST
                                 WHERE MST.VSL_CALL_ID = SCH.VSL_CALL_ID)),
                       ''
              	) 												AS CARGO_TYPE,
               	(SELECT TOP 1
	           		CASE
	                  	WHEN LOC_ID IS NULL THEN ''
	                  	ELSE
	                     	SUBSTRING (
	                     		LOC_ID,
	                          	1,
	                         	CHARINDEX ('-', LOC_ID) - 1
	                      	)
	               	END
           		FROM 
           			TMT_INV_LOC
        		WHERE 
        			VSL_CALL_ID = SCH.VSL_CALL_ID
        		) 												AS WAREHOUSE_ID,
              	DBO.F_GET_INV_STATUS (VSL_CALL_ID) 				AS STATUS,
		               CASE
		                  WHEN EXISTS
		                          (SELECT OPE_CLASS_CD
		                             FROM TMT_CG_MST
		                            WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                  AND OPE_CLASS_CD = 'I'
		                           UNION
		                           SELECT CATG_CD
		                             FROM TMT_RORO_MST
		                            WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                  AND CATG_CD = 'I')
		                  THEN
		                     CASE
		                        WHEN EXISTS
		                                (SELECT *
		                                   FROM TMT_B_RECCL
		                                  WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                        AND IM_RECCL_CD = 'Y')
		                        THEN
		                           'Verified'
		                        ELSE
		                           'Unverified'
		                     END
		                  WHEN EXISTS
		                          (SELECT VSL_CALL_ID
		                             FROM TMT_LQDCG_OPE
		                            WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                  AND JOB_TP_CD IN ('DS', 'SD', 'TD'))
		                  THEN
		                     CASE
		                        WHEN EXISTS
		                                (SELECT *
		                                   FROM TMT_B_RECCL
		                                  WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                        AND IM_RECCL_CD = 'Y')
		                        THEN
		                           'Verified'
		                        ELSE
		                           'Unverified'
		                     END
		                  ELSE
		                     ''
		               END
		                  AS IM_RECONCILE_STATE,
		               CASE
		                  WHEN EXISTS
		                          (SELECT OPE_CLASS_CD
		                             FROM TMT_CG_MST
		                            WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                  AND OPE_CLASS_CD = 'E'
		                           UNION
		                           SELECT CATG_CD
		                             FROM TMT_RORO_MST
		                            WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                  AND CATG_CD = 'E')
		                  THEN
		                     CASE
		                        WHEN EXISTS
		                                (SELECT *
		                                   FROM TMT_B_RECCL
		                                  WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                        AND EX_RECCL_CD = 'Y')
		                        THEN
		                           'Verified'
		                        ELSE
		                           'Unverified'
		                     END
		                  WHEN EXISTS
		                          (SELECT VSL_CALL_ID
		                             FROM TMT_LQDCG_OPE
		                            WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                  AND JOB_TP_CD IN ('LD', 'SL', 'TL'))
		                  THEN
		                     CASE
		                        WHEN EXISTS
		                                (SELECT *
		                                   FROM TMT_B_RECCL
		                                  WHERE     VSL_CALL_ID = SCH.VSL_CALL_ID
		                                        AND EX_RECCL_CD = 'Y')
		                        THEN
		                           'Verified'
		                        ELSE
		                           'Unverified'
		                     END
		                  ELSE
		                     ''
		               END
		                  AS EX_RECONCILE_STATE,
		               (SELECT TOP 1
		                       'Y'
		                  FROM TMT_B_IV_DATA B
		                 WHERE B.VSL_CALL_ID = SCH.VSL_CALL_ID AND SUB_TRF_CD = 'NIL')
		                  AS MARINECHARGE,
		               (SELECT TOP 1
		                       PAYER
		                  FROM TMT_B_IV_DATA B
		                 WHERE B.VSL_CALL_ID = SCH.VSL_CALL_ID)
		                  AS PAYER,
		               (SELECT TOP 1
		                       FORMAT (GATHER_DT, 'dd/MM/yyyy HH:mm')
		                  FROM TMT_B_IV_DATA
		                 WHERE VSL_CALL_ID = SCH.VSL_CALL_ID)
		                  AS GATHERD_DATE,
		               (SELECT TOP 1
		                       STAFF_CD
		                  FROM TMT_B_IV_DATA
		                 WHERE VSL_CALL_ID = SCH.VSL_CALL_ID)
		                  AS GATHERGING_STAFF,
		               (SELECT TOP 1
		                       VERSION
		                  FROM TMT_B_IV_DATA
		                 WHERE VSL_CALL_ID = SCH.VSL_CALL_ID)
		                  AS VERSION
			FROM 	
				TMT_VSL_SCH SCH
		    WHERE 	
		    	SCH.BERTH_LOC IN 
		    		(SELECT 
		    			BERTH_CD
                   	FROM 
                   		TMT_BERTH_LOC
             		WHERE 
             			LOC_CD = 'BBT'
             		)
         	<if test="vslCallId != null and vslCallId != ''">
				AND	SCH.VSL_CALL_ID = #{vslCallId}
			</if>
			<if test="scn != null and scn != ''">
				AND	SCH.SHIP_CALL_NO = #{scn}
			</if>
			<if test="isCancelVsl == 'true'">
				AND	ATB IS NULL AND DATE_ADD(D, 0.25, ETA) <![CDATA[<]]> GETDATE()
			   	<if test="fromAtu != null and fromAtu != ''">
			    	AND	ETA BETWEEN CONVERT(DATETIME, #{fromAtu} + ' 00:00:00', 103) AND CONVERT(DATETIME, #{toAtu} + ' 23:59:59', 103)
			 	</if>
			    <if test="fromAtb != null and fromAtb != ''">
			    	AND	ETA BETWEEN CONVERT(DATETIME, #{fromAtb} + ' 00:00:00', 103) AND CONVERT(DATETIME, #{toAtb} + ' 23:59:59', 103)
			    </if>
		   	</if>
			<if test="isCancelVsl != 'true'">
				<if test="fromAtu != null and fromAtu != ''">
			 		AND	ATU BETWEEN CONVERT(DATETIME, #{fromAtu} + ' 00:00:00', 103) AND CONVERT(DATETIME, #{toAtu} + ' 23:59:59', 103)
				</if>
			    <if test="fromAtb != null and fromAtb != ''">
			    	AND ATB BETWEEN CONVERT(DATETIME, #{fromAtb} + ' 00:00:00', 103) AND CONVERT(DATETIME, #{toAtb} + ' 23:59:59', 103)
			    </if>
			</if>
		                                  
		) A1	
		WHERE 	
			1 = 1
	 		<if test="status != null and status != ''">
         			AND STATUS = ( SELECT S_CD_NM FROM TMT_CD_MSTD WHERE M_CD = 'IVSTAT' AND S_CD = #{status} ) 
			</if>
			<if test="cargoType != null and cargoType != ''">
   				AND CARGO_TYPE = #{cargoType}
			</if>
			AND RN >= #{startRow} AND RN <![CDATA[<=]]> #{endRow} 
	</select>
	
	<select id="selectGatheredDataForProofSheetCount" resultType="java.lang.String">
        SELECT /* gathering.selectGatheredDataForProofSheetCount */
   			COUNT(*)
   		FROM 
			(<include refid="getGatheredData"/>)	AS TEMPTABLE
	</select>
	
	<select id="selectGatheredDataForProofSheet" resultMap="GatheredDataItemMap">
		<if test="pageNo != 0"> 
			SELECT 
             	* 
           	FROM 
           		(SELECT 
           			inner_query.*, 
           			ROW_NUMBER() OVER (ORDER BY PAYER, GATHER_NO) row_num 
       			FROM ( 
		</if>
				<include refid="getGatheredData"/>
		<if test="pageNo != 0"> 
				)inner_query 
			)inner_query 
			WHERE 
				inner_query.row_num <![CDATA[>]]> (CAST(CASE WHEN #{pageNo} = '0' THEN '1'ELSE #{pageNo} END AS INT) -1)* CAST(#{sizePerPage} AS INT)
		  		AND inner_query.row_num <![CDATA[<=]]> CAST(CASE WHEN #{pageNo} = '0' THEN '1'ELSE #{pageNo} END AS INT) * CAST(#{sizePerPage} AS INT)
		</if>
	</select>
	
	<sql id="getGatheredData">
		SELECT 
			* 
		FROM ( 
			SELECT /*DataGathering DataGathering.getGatheredData BL11601*/ 
				CASE WHEN STAT_CD='WV' THEN 'true' ELSE 'false' END AS BBT_CHECK
				,DAT.WAIVER_DESCR 									AS WAIVER_DESCR
				,DAT.VSL_CALL_ID 									AS VSLCALLID
				,DAT.PAYER 											AS PAYER
				,DBO.F_GET_PTNR_SNM(DAT.PAYER) 						AS PAYER_NAME
				,DAT.IV_PRFX 										AS PRE_FIX
				,CD.TRF_TP_CD 										AS TARIFF_TYPE
				,DBO.F_CM_CODE_NM ('MT', 'TRFTP', CD.TRF_TP_CD) 	AS TARIFF_TYPE_NAME
				,DAT.TRF_CD 										AS TARIFF_CODE
				,CD.SUB_TRF_CD 										AS SUB_TARIFF_CODE
				,DAT.TRF_DESCR 										AS TARIFF_DESC
				,ISNULL(DAT.ERP_COST_CENT, CD.ERP_COST_CENT) 		AS ERP_COST_CENT
				,ISNULL(DAT.UNIT1_VAL, 0) 							AS UNIT1
				,ISNULL(DAT.UNIT2_VAL, 0) 							AS UNIT2
				,ISNULL(DAT.UNIT3_VAL, 0) 							AS UNIT3
				,ISNULL(DAT.APLY_RATE, 0) 							AS APLY_RATE
				,ISNULL(DAT.APLY_AMT, 0) 							AS APLY_AMT
				,ISNULL(STD_RATE, 0)								AS STD_RATE
				,DBO.F_CM_CODE_NM ('MT','IVSTAT',DAT.STAT_CD) 		AS STATUS
				,STAT_CD 											AS STATUSCD
				,IV_NO 												AS INVOICE_NO
	        	,CASE DAT.SCR_ID 
	        		WHEN 'SSR' 
	        		THEN (SELECT TOP 1 
							REF_NO
						FROM 
							TMT_B_SSR 
						WHERE 
							VSL_CALL_ID = #{vslCallId} 
							AND DAT.REF_NO2 = SSR_NO)
	                ELSE DAT.REF_NO1 END  							AS REF_NO
				,DAT.ADHOC_YN 										AS ADHOC_YN
				,DAT.VERSION 										AS VERSION
				,DAT.SYTM_ID 										AS SYTM_ID
				,GATHER_NO
				,SCR_ID
				,CASE 
					WHEN ISNULL (TOTAL_AMT, 0) = 0 THEN APLY_AMT
		         	ELSE ISNULL (TOTAL_AMT, 0)
		         END 												AS TOTAL_AMT
				,DAT.TAX_TYPE 										AS TAX_TYPE
				,DAT.TAX_VALUE 										AS TAX_VALUE
				,''  												AS TAX_PERCENT
				,ISNULL(DAT.TAX_AMT, 0) 							AS TAX_AMT
				,DAT.REF_NO1
	        	,DAT.REF_NO2
			FROM 
				TMT_B_IV_DATA DAT 
			INNER JOIN 
				TMT_B_TRF_CD CD 
			ON 
				DAT.TRF_CD 			= CD.TRF_CD 
				AND DAT.SUB_TRF_CD 	= CD.SUB_TRF_CD
			WHERE 	
				DAT.VSL_CALL_ID 	= #{vslCallId} 
				AND ( DAT.SCR_ID 	= 'OPE' 
					OR DAT.SCR_ID 	= 'STR' 
					OR DAT.SCR_ID 	= 'WHR' 
					OR DAT.SCR_ID 	='FW' 
					OR DAT.SCR_ID IS NULL
					OR (DAT.SCR_ID 	= 'SSR' AND DAT.REF_NO2 IN ( SELECT SSR_NO FROM TMT_B_SSR WHERE VSL_CALL_ID = #{vslCallId})
					)
				) 
				AND DAT.SYTM_USE_ID = 'MT' 
				AND DAT.STAT_CD NOT IN ('WV', 'IV', 'IC') 
				<if test="list != null">
					AND DAT.GATHER_NO IN
					<foreach collection="list" open="(" close=")" separator=",">
						#{item}
					</foreach>
				</if>
				<if test="payer != null and payer != ''">
					AND DAT.PAYER = #{payer}
				</if>
				<if test="userRefNo != null and userRefNo != ''">
					AND DAT.REF_NO2 = #{userRefNo}
				</if>
				<if test="cgNo != null and cgNo != ''">
					AND DAT.REF_NO1 = #{cgNo}
				</if>
				<if test="adhoc != null and adhoc != ''">
					AND ISNULL(DAT.ADHOC_YN, 'N') = #{adhoc}
				</if>
				<if test="rptSearch != null">
					<if test="rptSearch == 'Y'">
						AND DAT.STAT_CD != 'WV'
					</if>
				</if>
				<if test="costCenterCd != null and costCenterCd != ''">
					AND ISNULL(DAT.COST_CENT_CD, '') = #{costCenterCd}
				</if>
				<if test="tariffTypeCd != null and tariffTypeCd != ''">
					AND CD.TRF_TP_CD = #{tariffTypeCd}
				</if>
				<if test="refNo != null and refNo != ''">
					WHERE 
						REF_NO = #{refNo}
				</if>
		<!-- ORDER BY PAYER, GATHER_NO -->
	</sql>
	
	<select id="selectDataGatheringDetail" parameterType="dataGatheringParm" resultMap="DetailItemMap">
		SELECT /*dataGathering.selectDataGatheringDetail*/
			VSL_CALL_ID 				AS vslCallId, 
			ISNULL(RMK,' ')				AS REMARK,
			#{payer} 					AS PAYER, 
			'OPE' 						AS SCR_ID 
		FROM 
			TMT_B_VSL_SCH_INFO 
		WHERE
			VSL_CALL_ID = #{vslCallId}
	</select>
	
	<select id="selectGatheredData" resultMap="GatheredDataItemMap">
		SELECT /*dataGathering.selectGatheredData*/
			ROW_NUMBER() OVER(ORDER BY DAT.GATHER_NO) 				AS NO
			,CASE WHEN STAT_CD='WV' THEN 'true' ELSE 'false' END 	AS BBT_CHECK
			,DAT.WAIVER_DESCR 										AS WAIVER_DESCR
			,DAT.VSL_CALL_ID 										AS vslCallId
			,DAT.PAYER 												AS PAYER
			,'' 													AS PAYER_NAME
			,DAT.IV_PRFX 											AS PRE_FIX
			,CD.TRF_TP_CD 											AS TARIFF_TYPE
			,DBO.F_CM_CODE_NM ('MT', 'TRFTP', CD.TRF_TP_CD) 		AS TARIFF_TYPE_NAME
			,DAT.TRF_CD 											AS TARIFF_CODE
			,CD.SUB_TRF_CD 											AS SUB_TARIFF_CODE
			,DAT.TRF_DESCR 											AS TARIFF_DESC
			,ISNULL(DAT.COST_CENT_CD, '') 							AS COST_CENTRE_CODE
			,ISNULL(DAT.UNIT1_VAL,0) 								AS UNIT1
			,ISNULL(DAT.UNIT2_VAL,0) 								AS UNIT2
			,ISNULL(DAT.UNIT3_VAL,0) 								AS UNIT3
			,ISNULL(DAT.APLY_RATE, 0) 								AS APLY_RATE
			,ISNULL(DAT.APLY_AMT, 0) 								AS APLY_AMT
			,ISNULL(STD_RATE,0) 									AS STD_RATE
			,CASE 
				WHEN DAT.STAT_CD='VF' THEN 'Verified' 
				WHEN DAT.STAT_CD='GT' OR DAT.STAT_CD='ST' THEN 'Gathered' 
				WHEN DAT.STAT_CD='WV' THEN 'Waived' 
				WHEN DAT.STAT_CD='IV' THEN 'Invoiced' 
				ELSE 'Paid' END 									AS STATUS
			,'' 													AS STATUSCD
			,IV_NO 													AS INVOICE_NO
	        ,CASE DAT.SCR_ID 
				WHEN 'SSR' THEN (SELECT TOP 1 REF_NO
							FROM 
								TMT_B_SSR
							WHERE
								VSL_CALL_ID 	= #{vslCallId}
								AND DAT.REF_NO2 = SSR_NO
								AND PAY_TP_CD 	= 'C')
	            ELSE DAT.REF_NO1 END  								AS REF_NO
			,DAT.ADHOC_YN 											AS ADHOC_YN
			,DAT.VERSION 											AS VERSION
			,GATHER_NO
			,CASE SCR_ID 
				WHEN 'PRF' THEN 'Proforma' 
				WHEN 'OPE' THEN 'Operation' 
				WHEN 'SSR' THEN 'SSR/Add Hoc' 
				ELSE 'Add Hoc' 
			END 													AS SCR_ID
			,CASE 
				WHEN ISNULL (TOTAL_AMT, 0) = 0 THEN APLY_AMT
	         	ELSE ISNULL (TOTAL_AMT, 0)
	        END 													AS TOTAL_AMT
			,DAT.TAX_TYPE 											AS TAX_TYPE
			,DAT.TAX_VALUE 											AS TAX_VALUE
			,DAT.TAX_AMT 											AS TAX_AMT 
			,'' 													AS GST_REG_NO
			,'' 													AS TAX_PERCENT
		FROM 
			TMT_B_IV_DATA DAT 
		INNER JOIN 
			TMT_B_TRF_CD CD 
		ON 
			DAT.TRF_CD 			= CD.TRF_CD 
			AND DAT.SUB_TRF_CD 	= CD.SUB_TRF_CD 
		WHERE 
			DAT.VSL_CALL_ID = #{vslCallId}
			AND ( DAT.SCR_ID = 'OPE'
				OR DAT.SCR_ID = 'STR'
				OR DAT.SCR_ID = 'FW'
				OR DAT.SCR_ID ='VSL'
				OR DAT.SCR_ID IS NULL 
				OR (DAT.SCR_ID = 'SSR' AND REF_NO2 IN ( SELECT SSR_NO FROM TMT_B_SSR WHERE VSL_CALL_ID = #{vslCallId} AND PAY_TP_CD = 'C') )
				OR (DAT.SCR_ID = 'PRF' AND DAT.STAT_CD = 'VF')
				) 
			<if test="payer != null and payer != ''">
				AND	DAT.PAYER = #{payer}
			</if>
			<if test="userRefNo != null and userRefNo != ''">
				AND DAT.REF_NO2 = #{userRefNo} 
			</if>
			<if test="cgNo != null and cgNo != ''">
				AND DAT.REF_NO1 = #{cgNo}
			</if>
		ORDER BY 
			DAT.PAYER, DAT.IV_PRFX
	</select>
	
	<select id="selectVesselInformation" resultMap="VesselInfoItemMap">
		SELECT /*dataGathering.selectVesselInformation*/
			PART.VSL_CD 										AS VESSEL_ID,
			PART.VSL_NM 										AS VESSEL_NAME,
			SCH.ARRV_SA_ID 										AS SA_CODE,
			(SELECT TOP 1 
				ENG_SNM
			FROM
				TMT_AGENCY_INFO 
			WHERE 
				AGENCY_CODE = SCH.DEPR_SA_ID) 					AS SA_NAME,
			SCH.DEPR_SA_ID 										AS D_SA_CODE,
			(SELECT TOP 1
				ENG_SNM 
			FROM 
				TMT_AGENCY_INFO 
			WHERE
				AGENCY_CODE = SCH.DEPR_SA_ID) 					AS D_SA_NAME,
			STD.S_CD_NM 										AS VESSEL_TYPE,
			DBO.F_INTERVAL_OF_HOUR ('', SCH.ATU, SCH.ATB) 		AS BERTHING_HOURS,
			PART.VSL_TP3_TRADE 									AS VSL_SERVICE_TYPE,
			PART.LOA 											AS LOA,
			PART.DWT 											AS DWT,
			PART.GRT 											AS QRT,
			SCH.BERTH_LOC 										AS BERTH_NO,
			FORMAT (SCH.ATB, 'dd/MM/yyyy HH:mm') 				AS ATB,
			FORMAT (SCH.ATW, 'dd/MM/yyyy HH:mm') 				AS ATW,
			FORMAT (SCH.ATC, 'dd/MM/yyyy HH:mm') 				AS ATC,
			FORMAT (SCH.ATU, 'dd/MM/yyyy HH:mm') 				AS ATU,
			'' 													AS REMARK,
			DBO.F_CM_CODE_NM ('MT', 'POC', SCH.PURP_CALL) 		AS PURP_CALL
		FROM 	
			TMT_VSL_SCH SCH 
		INNER JOIN 
			TMT_VSL_PART PART 
		ON 
			SCH.VSL_CD 			= PART.VSL_CD 
		LEFT OUTER JOIN
			TMT_CD_MSTD STD 
		ON 
			STD.S_CD 			= PART.VSL_TP
        WHERE 	
			STD.M_CD 			= 'VSLTP' 
			AND  VSL_CALL_ID 	= #{vslCallId}
	</select>
	
	<select id="selectCargoInformation" resultMap="CargoInfoItemMap">
		SELECT /*dataGathering.selectCargoInformation*/
			DBO.F_CM_CODE_NM ('MT', 'CATGTP', IV.OPE_CLASS_CD) 	AS CATEGORY,
			DBO.F_CM_CODE_NM ('MT', 'DELVTP', IV.DELV_TP_CD) 	AS DELIVERY,
			DBO.F_CM_CODE_NM ('MT', 'CGTP', IV.CG_TP_CD)		AS CARGO_TYPE,
			CMDT_DESC 											AS COMMODITY,
			IV.DG_CLASS 										AS DG_CLASS,
			PKG_TP_CD 											AS PACKAGE_TYPE,
			DBO.F_CM_CODE_NM ('MT', 'TSPTTP', IV.TSPT_TP_CD) 	AS TRANSPORT_TYPE,
			TRF_CD 												AS TARIFF_CODE,
			SUB_TRF_CD 											AS SUB_TARIFF_CODE,
			TRF_DESCR 											AS TARIFF_DESC,
			CASE 
				WHEN WORK_YMD IS NULL
					THEN 
						CASE 
							WHEN SHIPG_NOTE_NO IS NULL THEN BL_NO 
							ELSE SHIPG_NOTE_NO 
						END
				ELSE NULL 
			END 												AS REFERENCE_NO,
			CG_NO 												AS OPERATION_NO,
			ISNULL (UNIT1_VAL, 0) 								AS UNIT1,
			ISNULL (UNIT2_VAL, 0) 								AS UNIT2,
			ISNULL (UNIT3_VAL, 0) 								AS UNIT3,
			CASE 
				WHEN WORK_YMD IS NULL THEN NULL 
				ELSE
					SUBSTRING (WORK_YMD, 7, 2)
					+ '/'
					+ SUBSTRING (WORK_YMD, 5, 2)
					+ '/'
					+ SUBSTRING (WORK_YMD, 1, 4) END 			AS WORK_DATE,
			ISNULL (SHFT_NM, '') 								AS SHFT
		FROM 	
			TMT_B_IV_DATA_DTL IV
		LEFT OUTER JOIN 
			TMT_SHFT SHT 
		ON 
			SHT.SHFT_ID 		= IV.SHFT_ID 
			AND SHT.VLD_YN 		= 'Y'
		INNER JOIN 
			TMT_CMDT CD
		ON 
			CD.CMDT_CD 			= IV.CMDT_CD
	 	WHERE 	
			VSL_CALL_ID 		= #{vslCallId} 
			AND GATHER_TP_CD 	= 'CG'
	</select>
	
	<select id="selectCargoSumInformation" resultMap="CargoSumInfoItemMap">
		WITH OPERATION_DATA AS
		(
	    	SELECT 
	    		ISNULL (SHIPG_NOTE_NO, BL_NO) 								AS REFERENCE_NO,
				CASE
					WHEN OPE_CLASS_CD = 'E' THEN 
						(SELECT 
							SUM (CG_VOL)
						FROM 	
							TMT_SHIPG_NOTE SN
						WHERE
							SN.VSL_CALL_ID 			= IV.VSL_CALL_ID
							AND SN.SHIPG_NOTE_NO 	= IV.SHIPG_NOTE_NO)
					ELSE (SELECT 
							SUM (ISNULL(CG_WGT, 0))
						FROM 
							TMT_BL BL
						WHERE 
							BL.VSL_CALL_ID 	= IV.VSL_CALL_ID
							AND BL.BL_NO 	= IV.BL_NO)
				END 														AS DOC_MSRMT,
				CASE
					WHEN OPE_CLASS_CD = 'E' THEN 
						(SELECT 
							SUM (CG_WGT)
						FROM
							TMT_SHIPG_NOTE SN
						WHERE 
							SN.VSL_CALL_ID = IV.VSL_CALL_ID
							AND SN.SHIPG_NOTE_NO = IV.SHIPG_NOTE_NO)
					ELSE
						(SELECT 
							SUM (ISNULL (CG_VOL, 0))
						FROM
							TMT_BL BL
						WHERE 
							BL.VSL_CALL_ID 			= IV.VSL_CALL_ID
							AND BL.BL_NO 			= IV.BL_NO)
				END 														AS DOC_WGT,
				CASE
					WHEN OPE_CLASS_CD = 'E' THEN
						(SELECT
							SUM (PKG_QTY)
						FROM 
							TMT_SHIPG_NOTE SN
						WHERE 
							SN.VSL_CALL_ID 			= IV.VSL_CALL_ID
							AND SN.SHIPG_NOTE_NO 	= IV.SHIPG_NOTE_NO)
					ELSE
						(SELECT 
							SUM (ISNULL (PKG_QTY, 0))
						FROM 
							TMT_BL BL
						WHERE 
							BL.VSL_CALL_ID 			= IV.VSL_CALL_ID
							AND BL.BL_NO 			= IV.BL_NO)
				END 														AS DOC_PKG_QTY,
                SUM (BILL_MSRMT_V) 											AS OP_MSRMT,
                SUM (BILL_WGT_V) 											AS OP_WGT,
                SUM (BILL_PKG_QTY_V) 										AS OP_PKG_QTY,
                SUM (ISNULL(BILL_MSRMT, 0) + ISNULL(BILL_MSRMT_D, 0)) 		AS BL_MSRMT,
                SUM (ISNULL(BILL_WGT, 0) + ISNULL(BILL_WGT_D, 0)) 			AS BL_WGT,
                SUM (ISNULL(BILL_PKG_QTY, 0) + ISNULL(BILL_PKG_QTY_D, 0)) 	AS BL_PKG_QTY,
                '' 															AS JOB_TP_CD,
                PKG_TP_CD,
                CMDT_CD,
                FWR_AGNT,
				ACTL_DELV_TP_CD
			FROM 
				TMT_CG_MST IV
			WHERE
				VSL_CALL_ID = #{vslCallId}
			GROUP BY 
				IV.VSL_CALL_ID,
				SHIPG_NOTE_NO,
				BL_NO,
                OPE_CLASS_CD,
                PKG_TP_CD,
                CMDT_CD,
                FWR_AGNT,
                ACTL_DELV_TP_CD
				
			UNION ALL
			SELECT 
				OPE_TP 														AS REFERENCE_NO,
                0 															AS DOC_MSRMT,
                0 															AS DOC_WGT,
                0 															AS DOC_PKG_QTY,
                SUM (TON_HDL_AMT) 											AS OP_MSRMT,
                0 															AS OP_WGT,
                0 															AS OP_PKG_QTY,
                SUM (BILL_WGT) 												AS BL_MSRMT,
                0 															AS BL_WGT,
                0 															AS BL_PKG_QTY,
                JOB_TP_CD 													AS JOB_TP_CD,
                PKG_TP_CD,
                CMDT_CD,
                TK_OPR 														AS FWR_AGNT,
                '' 															AS ACTL_DELV_TP_CD
			FROM 
				TMT_LQDCG_OPE
			WHERE 
				VSL_CALL_ID = #{vslCallId}
			GROUP BY
				VSL_CALL_ID,
                OPE_TP,
                JOB_TP_CD,
                PKG_TP_CD,
                CMDT_CD,
                TK_OPR
				
			UNION ALL
			SELECT 
				CASE 
					WHEN STS_OP_TP = 'LD' THEN 'E' 
					ELSE 'I'
				END 														AS REFERENCE_NO,
                0 															AS DOC_MSRMT,
                0 															AS DOC_WGT,
                0 															AS DOC_PKG_QTY,
                ISNULL(MT, 0) 												AS OP_MSRMT,
                ISNULL(M3, 0) 												AS OP_WGT,
                ISNULL(QTY, 0)												AS OP_PKG_QTY,
                0 															AS BL_MSRMT,
                0 															AS BL_WGT,
                0 															AS BL_PKG_QTY,
                STS_OP_TP 													AS JOB_TP_CD,
                PKG_TP_CD 													AS PKG_TP_CD,
                CMDT_CD 													AS CMDT_CD,
                ARRV_SA_ID 													AS FWR_AGNT,
                '' 															AS ACTL_DELV_TP_CD
			FROM 
				TMT_STS STS
			INNER JOIN
				TMT_VSL_SCH SCH 
			ON 
				SCH.VSL_CALL_ID = STS.NEXT_CAL_CALL_ID
			WHERE 
				NEXT_CAL_CALL_ID = #{vslCallId}
				
			UNION ALL
			SELECT 
				'Total Amount' 												AS REFERENCE_NO,
				CASE
					WHEN OPE_CLASS_CD IN ('E', 'T') THEN
						(SELECT 
							SUM (CG_VOL)
						FROM 	
							TMT_SHIPG_NOTE SN
						WHERE 
							SN.VSL_CALL_ID = IV.VSL_CALL_ID
							AND SN.CATG_CD = OPE_CLASS_CD)
					ELSE
						(SELECT 
							SUM (ISNULL(CG_WGT, 0))
						FROM 
							TMT_BL BL
						WHERE 
							BL.VSL_CALL_ID = IV.VSL_CALL_ID)
				END 														AS DOC_MSRMT,
				CASE
					WHEN OPE_CLASS_CD IN ('E', 'T') THEN
						(SELECT
							SUM (CG_WGT)
						FROM 
							TMT_SHIPG_NOTE SN
						WHERE 
							SN.VSL_CALL_ID = IV.VSL_CALL_ID
							AND SN.CATG_CD = OPE_CLASS_CD)
					ELSE
						(SELECT 
							SUM (ISNULL(CG_VOL, 0))
						FROM 
							TMT_BL BL
						WHERE
							BL.VSL_CALL_ID = IV.VSL_CALL_ID)
				END 														AS DOC_WGT,
				CASE
					WHEN OPE_CLASS_CD IN ('E', 'T') THEN
						(SELECT 
							SUM (PKG_QTY)
						FROM 
							TMT_SHIPG_NOTE SN
						WHERE 
							SN.VSL_CALL_ID = IV.VSL_CALL_ID
							AND SN.CATG_CD = OPE_CLASS_CD)
					ELSE 
						(SELECT 
							SUM (ISNULL(PKG_QTY, 0))
						FROM 
							TMT_BL BL
						WHERE 
							BL.VSL_CALL_ID = IV.VSL_CALL_ID)
				END 														AS DOC_PKG_QTY,
                SUM (BILL_MSRMT_V) 											AS OP_MSRMT,
                SUM (BILL_WGT_V) 											AS OP_WGT,
                SUM (BILL_PKG_QTY_V) 										AS OP_PKG_QTY,
                SUM (ISNULL(BILL_MSRMT, 0) + ISNULL(BILL_MSRMT_D, 0)) 		AS BL_MSRMT,
                SUM (ISNULL(BILL_WGT, 0) + ISNULL(BILL_WGT_D, 0)) 			AS BL_WGT,
                SUM (ISNULL(BILL_PKG_QTY, 0) + ISNULL(BILL_PKG_QTY_D, 0)) 	AS BL_PKG_QTY,
                OPE_CLASS_CD 												AS JOB_TP_CD,
                '' 															AS PKG_TP_CD,
                '' 															AS CMDT_CD,
                '' 															AS FWR_AGNT,
                '' 															AS ACTL_DELV_TP_CD
			FROM
				TMT_CG_MST IV
			WHERE 
				VSL_CALL_ID = #{vslCallId}
			GROUP BY 
				IV.VSL_CALL_ID, 
				OPE_CLASS_CD
				
			UNION ALL
			SELECT 
				'Total Amount' 												AS REFERENCE_NO,
                 0 															AS DOC_MSRMT,
                 0 															AS DOC_WGT,
                 0 															AS DOC_PKG_QTY,
                 SUM (ISNULL(TON_HDL_AMT, 0)) 								AS OP_MSRMT,
                 0 															AS OP_WGT,
                 0 															AS OP_PKG_QTY,
                 SUM (ISNULL(BILL_WGT, 0)) 									AS BL_MSRMT,
                 0 															AS BL_WGT,
                 0 															AS BL_PKG_QTY,
                 '' 														AS JOB_TP_CD,
                 '' 														AS PKG_TP_CD,
                 '' 														AS CMDT_CD,
                 '' 														AS FWR_AGNT,
                 '' 														AS ACTL_DELV_TP_CD
			FROM 
				TMT_LQDCG_OPE
			WHERE 
				VSL_CALL_ID = #{vslCallId}
			GROUP BY 
				VSL_CALL_ID
				
			UNION ALL
			SELECT 
				'Total Amount' 												AS REFERENCE_NO,
                 0 															AS DOC_MSRMT,
                 0 															AS DOC_WGT,
                 0 															AS DOC_PKG_QTY,
                 ISNULL(SUM (MT), 0) 										AS OP_MSRMT,
                 ISNULL(SUM (M3), 0) 										AS OP_WGT,
                 ISNULL(SUM (QTY), 0) 										AS OP_PKG_QTY,
                 0 															AS BL_MSRMT,
                 0 															AS BL_WGT,
                 0 															AS BL_PKG_QTY,
                 '' 														AS JOB_TP_CD,
                 '' 														AS PKG_TP_CD,
                 ''															AS CMDT_CD,
                 '' 														AS FWR_AGNT,
                 ''															AS ACTL_DELV_TP_CD
			FROM 
				TMT_STS STS
			WHERE 
				NEXT_CAL_CALL_ID = #{vslCallId}
		)
		
		SELECT 	/*dataGathering.selectCargoSumInformation*/
			REFERENCE_NO,
			JOB_TP_CD,
			ISNULL (DOC_MSRMT, 0) 											AS DOC_MSRMT,
			ISNULL (DOC_WGT, 0) 											AS DOC_WGT,
			ISNULL (DOC_PKG_QTY, 0) 										AS DOC_PKG_QTY,
			ISNULL (BL_MSRMT, 0) 											AS BL_MSRMT,
			ISNULL (BL_WGT, 0) 												AS BL_WGT,
			ISNULL (BL_PKG_QTY, 0) 											AS BL_PKG_QTY,
			ISNULL (OP_MSRMT, 0) 											AS OP_MSRMT,
			ISNULL (OP_WGT, 0) 												AS OP_WGT,
			ISNULL (OP_PKG_QTY, 0) 											AS OP_PKG_QTY,
			PKG_TP_CD,
			CMDT_DESC 														AS CMDT_CD,
			FWR_AGNT,
			ACTL_DELV_TP_CD
	    FROM 	
			OPERATION_DATA IV
		LEFT OUTER JOIN 
			TMT_CMDT CD 
		ON
			CD.CMDT_CD = IV.CMDT_CD
		WHERE 	
			OP_MSRMT > 0 OR OP_WGT > 0 OR OP_PKG_QTY > 0
		ORDER BY
			REFERENCE_NO ASC
	</select>
	
	<select id="selectEquipmentInformation" resultMap="EquipmentInfoItemMap">
		SELECT /*dataGathering.selectEquipmentInformation*/
		   CASE IV.EQ_TP_CD WHEN  'GR' THEN 'GE' ELSE IV.EQ_TP_CD END AS EQU_TYPE,
		   FORMAT (CONVERT (DATE, WORK_YMD, 112), 'dd/MM/yyyy') AS OPERATED_DATE,
		   SHFT_NM AS SHIFT,
		   CAP.CAPA_DESCR AS CAPACITY,
		   '' AS GEAR_TYPE,
		   FORMAT (EQ_ST_DT, 'dd/MM/yyyy HH:mm') AS FROM_TIME,
		   FORMAT (EQ_END_DT, 'dd/MM/yyyy HH:mm') AS TO_TIME,
		   ISNULL(WORK_HR, 0) AS TOTAL_HRS,
		   EQ_QTY AS NOS,
		   IV.TRF_CD,
		   IV.SUB_TRF_CD,
		   IV.TRF_DESCR,
		   IV.CG_TP_CD,
		   IV.PAYER,
		   DAT.COST_CENT_CD
		FROM 
			TMT_B_IV_DATA_DTL IV
		INNER JOIN 
			TMT_SHFT SHF 
		ON 
			SHF.SHFT_ID = IV.SHFT_ID
		INNER JOIN
			TMT_B_IV_DATA DAT 
		ON
			DAT.GATHER_NO = IV.GATHER_NO
		LEFT OUTER JOIN 
			TMT_EQ_CAPA CAP 
		ON 
			CAP.CAPA_CD = IV.CAPA_CD
		WHERE 
			GATHER_TP_CD = 'EQ' 
			AND IV.VSL_CALL_ID = #{vslCallId}
	</select>
	
	<select id="selectPayerData" resultMap="PayerInfoDataItemMap">
		SELECT 	/*dataGathering.selectPayerData*/
			DAT.PAYER AS PAYER 
		FROM 	
			TMT_B_IV_DATA DAT 
		INNER JOIN 
			TMT_B_TRF_CD CD 
		ON 
			DAT.TRF_CD 			= CD.TRF_CD 
			AND DAT.SUB_TRF_CD 	= CD.SUB_TRF_CD
		WHERE 	
			DAT.VSL_CALL_ID 	= #{vslCallId}
			<if test="scr_id != null and scr_id != ''">
				AND	SCR_ID IN (#{scr_id})
			</if>
		GROUP BY 
			DAT.PAYER
        ORDER BY 
			DAT.PAYER
	</select>
	
	<select id="selectValidVslSchedule" parameterType="dataGatheringParm" resultType="dataGetheringItem">
		SELECT /*dataGathering.selectValidVslSchedule*/
			CASE WHEN COUNT(*) =  0 THEN 'N' ELSE 'Y' END AS isValidated 
		FROM 	
			TMT_VSL_SCH
		WHERE
			VSL_CALL_ID = #{vslCallId}
	</select>
	
	<update id="applyDataGatheringDetail" parameterType="dataGetheringItem">
		UPDATE /*dataGathering.applyDataGatheringDetail*/
			TMT_B_IV_DATA 
		SET 
			STAT_CD 		= #{status}, 
			WAIVER_DESCR 	= #{waiverDescr}, 
			VERSION 		= #{newVersion}, 
			STAFF_CD 		= #{userId},
			UPDATE_TIME 	= GETDATE() 
		WHERE 	
			VSL_CALL_ID 	= #{vslCallId} 
			AND GATHER_NO 	= #{gatherNo} 
	</update>
	
	<delete id="applyGatheredDelete" parameterType="dataGetheringItem">
		DELETE 	
			TMT_B_IV_DATA 
		WHERE
			VSL_CALL_ID 	= #{vslCallId}
			<if test="cargoNo != null and cargoNo != ''">
				AND REF_NO2 = #{cargoNo}
			</if>
			<if test="workDate != null and workDate != ''">
				AND REF_NO3 = #{workDate}
			</if>
			AND SCR_ID 		= 'OPE' 
			AND STAT_CD 	= 'GT'
	</delete>
	
	<delete id="applyGatheredDtlDelete" parameterType="dataGetheringItem">
		DELETE 
			TMT_B_IV_DATA_DTL 
		WHERE
			VSL_CALL_ID 	= #{vslCallId}
			<if test="cargoNo != null and cargoNo != ''">
				AND	CG_NO 	= #{cargoNo}
			</if>
			<if test="workDate != null and workDate != ''">
				AND	WORK_YMD = #{workDate}
			</if>
	</delete>

</mapper>
