Ext.define('MOST.view.configuration.EquipmentConfiguration', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.app-equipmentconfiguration',
	
	requires: [
	    'Ext.grid.plugin.Exporter',
	    'Ext.grid.plugin.Clipboard',
		'Ext.grid.filters.Filters',
		'Ext.grid.selection.SpreadsheetModel'
	],
	
	detailViewAlias: 'app-equipmentconfigurationdetail',
	controller: 'equipment',
	
	viewModel: {
		type: 'equipment'
	},
	
	listeners: {
		afterrender: 'onLoad'
	},
	
	/**
	 * =========================================================================================================================
	 * CONSTANT START
	 */
	MAIN_GRID_REF_NAME: 'refequipmentGrid',  // Main Grid Name 
	MAIN_STORE_NAME: 'equipmentGridList',    // Main Store Name
	
	/**
	 * CONSTANT END
	 * =========================================================================================================================
	 */
	
	layout: {
		type: 'vbox', 
		align: 'stretch' 
	},
	
	initComponent: function() {
		var me = this;
		
		Ext.apply(me, {
			layout: {
				type: 'vbox', 
				align: 'stretch' 
			},
			items: [
				{
					xtype: 'tsb-datagrid',
					reference: me.MAIN_GRID_REF_NAME,
					flex: 1,
					plugins: [
						'gridexporter',
						'gridfilters',
						'clipboard'
					],
					bind: {
						store: '{' + me.MAIN_STORE_NAME + '}'
					},
					selModel: {
						type: 'spreadsheet',
						cellSelect: false
					},
					listeners : {
						celldblclick: 'onDblClick',
						pagingSearch:'onSearch'
					},
					columns: {
						defaults: {
		            		style : 'text-align:center',
		            		align: 'center'
		            	},
		            	items: GridUtil.getGridColumns('Equipment')
					}
				}
			],
			
			dockedItems:[
				{
					xtype : 'container',
					style: { "background-color":"white" },
					layout: {
						type: 'hbox',
					},
					defaults: {
						margin: '1 1 1 1'
					},
	                items: [
	                	{
							xtype: 'tbfill'
		                },{
		 					xtype: 'button',
		 					itemId:'inquiryItemId',
		 					reference:'refBtnRetrieve',
		 					text: ViewUtil.getLabel('search'),
							iconCls: 'x-fa fa-search',
							cls: 'search-button', 
		 					listeners: {
		 						click: 'onSearch'
		 					}
		                },{
		 					xtype: 'button',
		 					itemId:'createItemId',
		 					reference:'refBtnCreate',
							text:  ViewUtil.getLabel('add'),
							ui: 'create-button',
							iconCls: 'x-fa fa-plus',
							listeners: {
								click: 'onGridAdd'
							}
						},{
							xtype: 'button',
							itemId:'deleteItemId',
							reference:'refBtnDelete',
							text: ViewUtil.getLabel('remove'),
							ui: 'delete-button',
							iconCls: 'x-fa fa-minus',
							listeners: {
								click: 'onGridRemove'
							}
						},{
							xtype: 'button',
							itemId: 'exportToExcelButton',
							text: ViewUtil.getLabel('exportToExcel'),
							iconCls: 'excel-button-image', 
							cls: 'excel-button', 
							listeners: {
								click: {
									fn: 'onExportExcelPdfWithServer',
									args:[me.MAIN_GRID_REF_NAME, true]
								}
							}
						},{
							xtype: 'button',
							itemId: 'exportToPdfButton',
							text: ViewUtil.getLabel('exportToPdf'),
							iconCls: 'x-fa fa-file-pdf-o',
							cls: 'excel-button',
							listeners: {
								click: {
									fn: 'onExportExcelPdfWithServer',
									args:[me.MAIN_GRID_REF_NAME, false]
								}
							}
						},{
							xtype: 'button',
							cls: 'column-setting-button',
							iconCls: 'x-fa fa-columns',
							text: ViewUtil.getLabel('column'),
							listeners: {
								click: 'onColumnSettingPopup',
								args: [me.MAIN_GRID_REF_NAME]
							}
						}
					]
				},{
                	xtype: 'toolbar',
    				enableOverflow: true,
    				padding : '0 0 0 0',
    				defaults: {
    					labelAlign: 'right',
    				},
    				items:[
    					{
    						xtype: 'searchfieldset',
    						title: ViewUtil.getLabel('search'),
    						autoScroll: true,
    						collapsible:true,
    						flex:1,
    						layout: {
    							type: 'vbox',
    							align: 'stretch'
    						},
    						defaults:{
    							margin: '0 0 5 0'
    						},
    						items:[
    							{
	        						xtype:'container',
	        						layout:{
	        							type:'hbox'
	        						},
	        						defaults:{
	        							labelAlign: 'right',
	        							labelWidth: 80,
	        							margin: '0 0 0 0'
	        						},
	        						items:[
	        							{
	        								xtype: 'combo',
	        								reference: 'ctlEqTp',
	        								labelWidth: 100,
	        								width: 300,
	        								fieldLabel: ViewUtil.getLabel('eqTp'),
	        								queryMode: 'local',
	        								bind: {
	        									store: '{equipmentTypeCombo}',
	        									value: '{theSearch.eqTpCd}'
	        								},
	        								displayField: 'scdNm',
	        								valueField: 'scd',
	        								editable: false
	        							},{

	        								xtype: 'partnercdfield',
	        								labelWidth: 100,
	        			   					width: 300,
	        			   					fieldLabel: ViewUtil.getLabel('eqContractor'),
	        			   					emptyText: me.lblEqContractor,
	        			   					reference: 'ctlPartnerCdField',
	        			   					params:{
	        			   						ptnrType: CodeConstants.CM_PTNRTP_CTT
	        			   					},
	        			   					bind: {
	        			   						value: '{theSearch.contractor}'
	        			   					}
	        							
	        							},{
	        			   					xtype: 'combo',
	        			   					reference: 'ctlEquipmentUsed',
	        			   					labelWidth: 60,
	        			   					width: 150,
	        			   					fieldLabel: ViewUtil.getLabel('eqUseYN'),
	        			   					queryMode: 'local',
	        								bind: {
	        			    	    		 	store: '{equipmentUsedYn}',
	        			    	    		 	value: '{theSearch.useYN}'
	        			    	    		},
	        			   					displayField: 'codeName',
	        			   					valueField: 'code',
	        			   					editable: false,
	        							}
	        						]
	    						},{
		    						xtype:'container',
		    						layout:{
		    							type:'hbox'
		    						},
		    						defaults:{
		    							labelAlign: 'right',
		    							labelWidth: 80,
		    							margin : '5 0 0 0'
		    						},
		    						items:[
		    							{
		    								xtype: 'combo',
		    			   					reference: 'ctlLocation',
		    			   					labelWidth: 100,
		    			   					width: 300,
		    			   					fieldLabel: ViewUtil.getLabel('eqLoc'),
		    			   					queryMode: 'local',
		    								 bind: {
		    			    	    		 	store: '{equipmentLocationCombo}',
		    			    	    		 	value: '{theSearch.loc}'
		    			    	    		 },
		    			   					displayField: 'locNm',
		    			   					valueField: 'locId',
		    			   					editable: false,
		    							},{
		    								xtype: 'combo',
		    			   					reference: 'ctlManufact',
		    			   					labelWidth: 100,
		    			   					width: 300,
		    			   					fieldLabel: ViewUtil.getLabel('eqManufact'),
		    			   					queryMode: 'local',
		    								bind: {
		    			    	    		 	store: '{equipmentManufactCombo}',
		    			    	    		 	value: '{theSearch.mkrCd}'
		    			    	    		 },
		    			   					displayField: 'scdNm',
		    			   					valueField: 'scd',
		    			   					editable: false
		    							}
		    						]
		    					}
	    					]
    					}
    				]
				}
			]
		});
		
		me.callParent();
	}
});