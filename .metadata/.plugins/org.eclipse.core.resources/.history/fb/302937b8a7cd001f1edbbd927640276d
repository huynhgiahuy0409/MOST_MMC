package com.tsb.most.biz.rest.planning;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.tsb.most.biz.dataitem.planning.BerthPlanItem;
import com.tsb.most.biz.parm.planning.SearchBerthPlanParm;
import com.tsb.most.framework.bizparm.base.InsertItemsBizParm;
import com.tsb.most.framework.bizparm.base.UpdateItemsBizParm;
import com.tsb.most.framework.dataitem.DataItemList;
import com.tsb.most.framework.exception.ServiceException;
import com.tsb.most.framework.response.RestResponse;
import com.tsb.most.rest.base.RestBaseController;

@Controller
@RequestMapping("/v1/berthplan")
public class BerthPlanController extends RestBaseController {
	@RequestMapping(value = "/berthstructure", method = RequestMethod.GET)
	@ResponseBody
	public RestResponse selectBerthInfoList(SearchBerthPlanParm berthPlanParm)  throws ServiceException, Exception {
		RestResponse res = new RestResponse();
		Object result = invokeService("MOST.berthPlan.selectBerthInfoList",berthPlanParm);
		
		res.setData(((DataItemList)result).getCollection());
		
		return res;
	}
	
	@RequestMapping(value = "/bittcodes", method = RequestMethod.GET)
	@ResponseBody
	public RestResponse selectDrawBittList(SearchBerthPlanParm bittListParm)  throws ServiceException, Exception {
		RestResponse res = new RestResponse();
		Object result = invokeService("MOST.berthPlan.selectDrawBittList",bittListParm);
		
		res.setData(((DataItemList)result).getCollection());
		
		return res;
	}	

	@RequestMapping(value = "/sftplans", method = RequestMethod.GET)
	@ResponseBody
	public RestResponse selectShftPlanList(SearchBerthPlanParm berthPlanParm)  throws ServiceException, Exception {
		RestResponse res = new RestResponse();
		Object result = invokeService("MOST.berthPlan.selectShftPlanList",berthPlanParm);
		
		res.setData(((DataItemList)result).getCollection());
		
		return res;
	}	
	
	@RequestMapping(value = "/plans", method = RequestMethod.GET)
	@ResponseBody
	public RestResponse selectBerthPlanList(SearchBerthPlanParm berthPlanParm)  throws ServiceException, Exception {
		RestResponse res = new RestResponse();
		Object result = invokeService("MOST.berthPlan.selectBerthPlanList",berthPlanParm);
		
		res.setData(((DataItemList)result).getCollection());
		
		return res;
	}
	
	@RequestMapping(value = "/plans", method = RequestMethod.POST)
	@ResponseBody
	public void insertItems(@RequestBody BerthPlanItem item) throws ServiceException, Exception {
		DataItemList insertItems = new DataItemList();
		InsertItemsBizParm insertParm = new InsertItemsBizParm();
		RestResponse res = new RestResponse();
		
		insertItems.add(item);
		insertParm.setInsertItems(insertItems);
		
		Object result = invokeService("MOST.berthPlan.insertItems",insertParm);
		res.setData(((DataItemList)result).getCollection());
	}
	
	@RequestMapping(value = "/plans/{id}", method = RequestMethod.PUT)
	@ResponseBody
	public void updateItems(@PathVariable("id") String id, @RequestBody BerthPlanItem item) throws ServiceException, Exception {
		DataItemList updateItems = new DataItemList();
		UpdateItemsBizParm updateParm = new UpdateItemsBizParm();
		RestResponse res = new RestResponse();
		
		updateItems.add(item);
		updateParm.setUpdateItems(updateItems);
		
		Object result = invokeService("MOST.berthPlan.updateItems",updateParm);
		res.setData(((DataItemList)result).getCollection());
	}
}