{
	"data": [
		/************** Code *****************/
		{
		
		
			"key": "SystemCode",
			"items": [ 	
 				{ "header" : ViewUtil.getLabel('lcd'), "dataIndex": "lcd", "width": 100, "align":"center", "caption":"lcd", "style" : "text-align:center", "reference": "refSystemCodeId", "maxLength":"10","filter": "list", 
 				  "editor" : {
 							"xtype": "textaplyYmdfield", 
 							"allowBlank": true, 
 							"maxLength": "10", 
 							"enforceMaxLength" : true, 
 							"allowOnlyWhitespace": false, 
 							"listeners":{ 
 								"blur": function(){ 
 									this.setValue(this.getValue().toUpperCase()); 
 								} 
 							},
 							"activeError": "important" 
 						} 
			
 				}, 
				{ "header": ViewUtil.getLabel('name'), "dataIndex": "lcdNm", "width": 160, "align":"center", "caption":"lcdNm", "style" : "text-align:center", "reference": "refSystemCodeNm", "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"allowBlank": false,
							"maxLength": "50",
							"enforceMaxLength": true,
							"allowOnlyWhitespace": false
						}
				},
				{ "header": ViewUtil.getLabel('description'), "dataIndex": "lcdDesc", "width": 100, "align":"center", "caption":"lcdDesc", "style" : "text-align:center", "reference": "refSystemCodeDesc", "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"maxLength":"100",
							"enforceMaxLength" : true
						}
				},
				{ "header": ViewUtil.getLabel('useyn'), "dataIndex": "useYn", "width": 100, "align":"center", "caption":"useYn", "style" : "text-align:center", "reference": "refuseYn", "filter": "string",
				  "editor":{  
							"xtype": "combo",
							"bind": {
								"store":"{yesNoCombo}",
							},
							"valueField": "code",
							"displayField": "codeName",
							"queryMode": "local"
						}
				},
				{ "header": ViewUtil.getLabel('version'), "dataIndex": "version", "width": 100, "align":"center", "caption":"version", "style" : "text-align:center", "reference": "refVersion", "filter": "string"},
				{ "header": ViewUtil.getLabel('updatedBy'), "dataIndex": "updatedBy", "width": 100, "align":"center", "caption":"updatedBy", "style" : "text-align:center", "reference": "refupdatedBy", "filter": "string"},
				{ "header": ViewUtil.getLabel('updatedTime'), "dataIndex": "updatedDate", "width": 100, "align":"center", "caption":"updatedDate", "style" : "text-align:center", "reference": "refupdatedDate", "filter": "string"}
				
			]
		},
		{
			"key": "UNLocationCode",
			"items": [
				{ 
					"header": ViewUtil.getLabel('countryName'), 
					"dataIndex": "cntryCd", 
					"width": 200, 
					"align":"center", 
					"caption":"cntryCd", 
					"style" : "text-align:center", 
					"reference": "refColCountryName", 
					"filter": "string", 
	 				"editor" : {
						"xtype": "combobox", 
						"allowBlank": false, 
						"maxLength": "50", 
						"enforceMaxLength" : true, 
						"allowOnlyWhitespace": false, 
						"bind": {
								"store":'{countryCombo}',
						},
						"displayField": "cntryNm",
                    	"valueField": "cntryCd",
						"listeners":{ 
							"blur": function(){ 
								if(this.getValue()){
									this.setValue(this.getValue().toUpperCase());
								}
							} 
						},
						"activeError": "important",
						"queryMode": "local",
						"editable": true,
		   				"forceSelection": true, 
		   				"typeAhead": true,
					} 
 				}, 
 				{
					"header": ViewUtil.getLabel('portCode'),
					"dataIndex": "portCd", "width": 100,
					"align":"center", "caption":"portCd",
					"style" : "text-align:center",
					"reference": "refColPortCode",
					"filter": "string",
	 				"editor" : {
						"xtype": "textfield", 
						"allowBlank": false, 
						"maxLength": "3", 
						"enforceMaxLength" : true, 
						"allowOnlyWhitespace": false, 
						"listeners":{ 
							"blur": function(){ 
								this.setValue(this.getValue().toUpperCase()); 
							} 
						},
						"maskRe": /[A-Za-z]/,
						"activeError": "important" 
					} 
 				},
				{
					"header": ViewUtil.getLabel('portName'),
					"dataIndex": "portNm",
					"width": 200,
					"align": "left",
					"caption": "portNm",
					"style": "text-align:center",
					"reference": "refColPortName",
					"filter": "string",
					"editor": {
						"xtype": "textfield",
						"allowBlank": false,
						"maxLength": "100",
						"maskRe": /[a-zA-Z0-9_&-\\ ]/,
						"enforceMaxLength": true,
						"allowOnlyWhitespace": false,
						"listeners": {
							"blur": function(){ this.setValue(this.getValue().toUpperCase()); }
						},
						"activeError": "important"
					}
				},
				{
					"header": ViewUtil.getLabel('portVal'),
					"dataIndex": "portVal",
					"width": 150,
					"align": "center",
					"caption": "portVal",
					"style": "text-align:center",
					"reference": "refPortVal",
					"filter": "string",
					"editor": {
						"xtype": "textfield",
						"maxLength": "5",
						"enforceMaxLength" : true, 
					}
				},
				{
					"header": ViewUtil.getLabel('insuser'),
					"dataIndex": "insUserId",
					"width": 150,
					"align": "center",
					"caption": "insUserId",
					"style": "text-align:center",
					"reference": "refInsUserId",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('logUserPassInsertDate'),
					"dataIndex": "insDtm",
					"width": 200,
					"align": "center",
					"caption": "insDtm",
					"style": "text-align:center",
					"reference": "refInsDtm",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('upduser'),
					"dataIndex": "updatedDate",
					"width": 150,
					"align": "center",
					"caption": "updUserId",
					"style": "text-align:center",
					"reference": "refUpdUserId",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('saUpdtDate'),
					"dataIndex": "updatedDate",
					"width": 150,
					"align": "center",
					"caption": "updatedDate",
					"style": "text-align:center",
					"reference": "refupdatedDate",
					"filter": "string"
				}
			]
		},
		{
		
			"key": "BerthWharfLocation",
			"items": [
				{
					"header": ViewUtil.getLabel('berthcode'),
					"dataIndex": "berthCd",
					"width": 120,
					"align": "center",
					"caption": "berthCd",
					"style": "text-align:center",
					"reference": "refBerthCd",
					"filter": "list",
					"editor": {
						"allowBlank": false,
						"maxLength": "4",
						"enforceMaxLength": true,
						"listeners": {
							"blur": function(){ this.setValue(this.getValue().toUpperCase()); }
						},
						"activeError": "important",
					}
				},
				{
					"header": ViewUtil.getLabel('berthname'),
					"dataIndex": "berthNm",
					"width": 200,
					"align": "center",
					"caption": "berthNm",
					"style": "text-align:center",
					"reference": "refberthNm",
					"filter": "string",
					"editor": {
						"allowBlank": false,
						"activeError": "important"
					}
				},
				{
					"header": ViewUtil.getLabel('areaLocation'),
					"reference": "BerthArea",
					"dataIndex": "locCd",
					"filter" : "list",
					"align": "center",
					"width": 200,
					"editor":{
						"xtype": "combo",
						"reference": "refCboBerthArea",
						"bind": {
							"store": '{terminalCombo}' 
						 },
						
						"displayField": "scdNm",
						"valueField": "scd",
						"allowBlank": false,
						"activeError": "important",
						"editable": false,
						"disabled": false,
				    }
				},
				{
					"header": ViewUtil.getLabel('berthtype'),
					"dataIndex": "berthTp",
					"width": 200,
					"align": "center",
					"caption": "berthTp",
					"style": "text-align:center",
					"reference": "refBerthTp",
					"filter": "list",
					"editor": {
						"xtype": "combo",
						"allowBlank": false, 
						"maxLength": "100", 
						"enforceMaxLength" : true, 
						"allowOnlyWhitespace": false,
						"editable": false,
						"displayField": "scdNm",
						"valueField": "scd",
						"activeError": "important",
						"bind":{
							"store": '{berthTypeCombo}'
						}
					}
				},
				{
					"header": ViewUtil.getLabel('positionstart'),
					"dataIndex": "pstSta",
					"width": 120,
					"align": "center",
					"caption": "pstSta",
					"style": "text-align:center",
					"reference": "refPstSta",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 12,
						"maskRe": /[-0-9.]/,
						"allowOnlyWhitespace": false,
						"activeError": "important",
						"allowBlank": false
					}
				},
				{
					"header": ViewUtil.getLabel('positionend'),
					"dataIndex": "pstEnd",
					"width": 120,
					"align": "center",
					"caption": "pstEnd",
					"style": "text-align:center",
					"reference": "refPstEnd",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 12,
						"maskRe": /[0-9.]/,
						"allowOnlyWhitespace": false,
						"activeError": "important",
						"allowBlank": false
					}
				},
				{
					"header": ViewUtil.getLabel('length'),
					"dataIndex": "length",
					"width": 120,
					"align": "center",
					"caption": "length",
					"style": "text-align:center",
					"reference": "refLenght",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 12,
						"maskRe": /[0-9.]/,
						"allowOnlyWhitespace": false,
						"activeError": "important",
						"allowBlank": false
					}
				},
				{
					"header": ViewUtil.getLabel('bollardWharfMark'),
					"dataIndex": "bollardWharfMark",
					"width": 120,
					"align": "center",
					"caption": "length",
					"style": "text-align:center",
					"reference": "refBollardWharfMark",
					"filter": "string",
					"readOnly": true
				},
				{
					"header": ViewUtil.getLabel('berthDepthConfiguration'),
					"dataIndex": "berthDepth",
					"width": 120,
					"align": "center",
					"caption": "length",
					"style": "text-align:center",
					"reference": "refBerthDepthConfiguration",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 12,
						"maskRe": /^\d*\.?\d{0,3}$/,
						"allowOnlyWhitespace": false,
						"validator": function(value) {
							return /^\d*\.?\d{0,3}$/.test(value) ? true : 'Value must have up to three decimal places';
						}
					}
				},
				{
					"header": ViewUtil.getLabel('displacement'),
					"dataIndex": "displacement",
					"width": 120,
					"align": "center",
					"caption": "length",
					"style": "text-align:center",
					"reference": "refDisplacement",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 12,
						"maskRe": /^\d*\.?\d{0,3}$/,
						"allowOnlyWhitespace": false,
						"validator": function(value) {
							return /^\d*\.?\d{0,3}$/.test(value) ? true : 'Value must have up to three decimal places';
						}
					}
				},
				//s-CFG-004 Berth Location Configuration 
				{
					"header": ViewUtil.getLabel('horizontal'),
					"dataIndex": "horizontal",
					"width": 80,
					"align": "center",
					"caption": "horizontal",
					"style": "text-align:center",
					"reference": "refHorizontal",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 12,
						"maskRe": /[-0-9.]/,
						"allowOnlyWhitespace": false,
						"activeError": "important"
					}
				},
				{
					"header": ViewUtil.getLabel('vertical'),
					"dataIndex": "vertical",
					"width": 80,
					"align": "center",
					"caption": "vertical",
					"style": "text-align:center",
					"reference": "refRotate",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 12,
						"maskRe": /[-0-9.]/,
						"allowOnlyWhitespace": false,
						"activeError": "important"
					}
				},
				{
					"header": ViewUtil.getLabel('rotate'),
					"dataIndex": "rotate",
					"width": 80,
					"align": "center",
					"caption": "rotate",
					"style": "text-align:center",
					"reference": "refRotate",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 12,
						"maskRe": /[0-9.]/,
						"allowOnlyWhitespace": false,
						"activeError": "important"
					}
				},
				{
					"header": ViewUtil.getLabel('color'),
					"dataIndex": "color",
					"width": 80,
					"align": "center",
					"caption": "color",
					"style": "text-align:center",
					"reference": "refColor",
					"filter": "string",
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
									metaData.style =  'background-color:' + '#' + record.get('color') + '; color:' + '#' + record.get('color');
                                    return value;
                                },
					"editor": {
						"xtype": 'colorfield',
						"reference": 'refBerthColorPicker',
						"hideTrigger": true,
						"bind": {
							"value": '{record.color}'
						},
						"listeners": {
							"afterrender": "updateBackgroundColorForPicker",
							"change": function (colorPicker, new_value, old_value) {
								if (colorPicker.inputEl && colorPicker.inputEl.dom) {
									colorPicker.inputEl.dom.style.backgroundColor = "#" + new_value;
									colorPicker.inputEl.dom.style.color = "#" + new_value;
								}
							}
						}
					},
				}
				//e-CFG-004 Berth Location Configuration 
				/* ,{
					"header": ViewUtil.getLabel('insuser'),
					"dataIndex": "insUserId",
					"width": 150,
					"align": "center",
					"caption": "insUserId",
					"style": "text-align:center",
					"reference": "refInsUserId",
					"filter": "string"
				},
				 {
					"header": ViewUtil.getLabel('logUserPassInsertDate'),
					"dataIndex": "insDtm",
					"width": 200,
					"align": "center",
					"caption": "insDtm",
					"style": "text-align:center",
					"reference": "refInsDtm",
					"filter": "date"
				},
				{
					"header": ViewUtil.getLabel('upduser'),
					"dataIndex": "updUserId",
					"width": 150,
					"align": "center",
					"caption": "updUserId",
					"style": "text-align:center",
					"reference": "refUpdUserId",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('saUpdtDate'),
					"dataIndex": "updDtm",
					"width": 150,
					"align": "center",
					"caption": "updatedDate",
					"style": "text-align:center",
					"reference": "refupdatedDate",
					"filter": "date"
				} */
			]
		},
		{
			"key": "CountryCode",
			"items": [
				{
					"header": ViewUtil.getLabel('countrycode'), "dataIndex": "cntryCd", "reference": "txtCountryCd", "style": "text-align:center", "align": "center", "filter":"list",
					"editor":{
						"xtype": "textfield",
						"maxLength": 2,
						"enforceMaxLength": true,
						"allowBlank": false,
						"allowOnlyWhitespace": false,
					 	"listeners":{
						 "blur": function(){
							 this.setValue(this.getValue().toUpperCase());
						 }
					 }
					},
					"width": 160, "editable": false, "disabled": false, "hidden": false, "hideable": false
				}, {
					"header": ViewUtil.getLabel('countryname'), "dataIndex": "cntryNm", "reference": "txtCountryNm", "style": "text-align:center", "filter":"string",
					"editor":{
						"xtype": "textfield",
						"allowBlank": false,
						"allowOnlyWhitespace": false,
						"listeners":{
						 "blur": function(){
							 this.setValue(this.getValue().toUpperCase());
						 }
					 }
					},
					"width": 200, "editable": false, "disabled": false, "hidden": false, "hideable": false
				}
			]
		},
		{
			"key": "GeneralCode",
			"items": [ 	
 				{ "header" : ViewUtil.getLabel('lcd'), "dataIndex": "lcd", "width": 120, "align":"center", "caption":"lcd", "style" : "text-align:center", "reference": "refSystemCodeId", "enforceMaxLength" : true,"allowOnlyWhitespace" : false,"maxLength":"10","filter": "list",
 				 "editor" : {
 							"xtype": "combo",
 							"bind": {
			           "store": '{systemCodeComboCud}', 
				            },
							"editable": false,
					        "displayField" : "lcdNm",
							"valueField":"lcd",
					        "allowBlank": false,
					        "activeError": "important"
					} 
 				}, 
				{ "header": ViewUtil.getLabel('mcd'), "dataIndex": "mcd", "reference" : "refCodeItemId", "width": 120, "align":"center", "caption":"lcdNm", "maxLength": "10", "enforceMaxLength" : true, "style" : "text-align:center", "allowOnlyWhitespace": false, "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"allowBlank": false,
							"maxLength": "10",
							"enforceMaxLength": true,
							"allowOnlyWhitespace": false,
							"activeError": "important",
							"listeners":{
    								"change": function(){
    									this.setValue(this.getValue().toUpperCase());
    								}
    							}
						}
				},
				{ "header": ViewUtil.getLabel('name'), "dataIndex": "mcdNm", "width": 160, "align":"left", "caption":"name", "style" : "text-align:center", "reference": "codeItemNmId", "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"allowBlank":false
						}
				},
				{ "header": ViewUtil.getLabel('cddesc'), "dataIndex": "mcdDesc", "width": 200, "align":"left", "caption":"cddesc", "reference": "codeItemDescId", "filter": "string",
				  "editor": {
							"xtype": "textfield"
						}
				},
				{ "header": ViewUtil.getLabel('useyn'), "dataIndex": "useYn", "width": 100, "align":"center", "caption":"useyn", "queryMode": "local", "style" : "text-align:center", "reference": "useYnId",
				  "editor": {
							"xtype": "combo",
							"editable": false,
							"bind":{ 
				            	   "store":'{yesNoValue}', 
	            		   		},
							"valueField": "code",
							"displayField": "codeName",
							"queryMode": "local",
							"allowBlank":false
						}
				},
				{ "header": ViewUtil.getLabel('updatedTime'), "dataIndex": "updatedTime", "width": 100, "align":"center", "caption":"updatedDate", "style" : "text-align:center", "reference": "refupdatedDate", "filter": "string",
		 		  "editor": {
							"editable": false,
							"disabled": true
						},
		 		  "exportStyle":{
	            			"alignment": {
	            				"horizontal": "Right"
	            			},
	            			"format": "Short Date"
	            		}
				}
				
			]
		},
		{
		
			"key": "DangerousGoodsCode",
			"items": [ 	
 				{ "header" : ViewUtil.getLabel('unno'), "dataIndex": "unno", "width": 70, "align":"center", "caption":"unno", "style" : "text-align:center", "reference": "refColUnno","editable": false,
 				 "editor" : {
 							"xtype": "textfield",
 							"listeners": {
					            "blur": function() {
									this.setValue(this.getValue().toUpperCase());
								}
				            },
							"maxLength": "4",
					        "enforceMaxLength" : true,
							"allowBlank":false,
					        "allowOnlyWhitespace": false
					} 
 				}, 
				{ "header": ViewUtil.getLabel('gridtitleClass'), "dataIndex": "unnoClass", "reference" : "refColClass", "width": 70, "align":"center", "caption":"gridtitleClass", "style" : "text-align:center", "allowOnlyWhitespace": false, "editable": false,
				  "editor": {
							"xtype": "textfield",
							"allowBlank": false,
							"maxLength": "3",
							"enforceMaxLength": true,
							"allowOnlyWhitespace": false
						}
				},
				{ "header": ViewUtil.getLabel('subtance'), "dataIndex": "substance", "width": 200, "align":"center", "caption":"subtance", "style" : "text-align:center", "reference": "refColSubstance", "filter": "string", "editable": false,
				  "editor": {
							"xtype": "textfield",
							"allowBlank":false,
							"maxLength":"1000",
							"enforceMaxLength":true,
							"autoSelect":true
						}
				},
				{ "header": ViewUtil.getLabel('packingGrp'), "dataIndex": "packingGrp", "width": 100, "align":"center", "caption":"packingGrp", "style" : "text-align:center", "editable": false,
				  "editor": {
							"xtype": "textfield",
							"maxLength" : "5",
							"enforceMaxLength": true
						}
				},
				{ "header": ViewUtil.getLabel('pageNo'), "dataIndex": "pageNo", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "7",
							"enforceMaxLength": true
						}
				},
				{ "header": ViewUtil.getLabel('psa'), "dataIndex": "psa", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "3",
							"enforceMaxLength": true
						},
   				},
				{ "header": ViewUtil.getLabel('emsNo'), "dataIndex": "emsNo", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor": {  
							"xtype": "textfield",
							"maxLength" : "9",
							"enforceMaxLength": true
						},
   				},
				{ "header": ViewUtil.getLabel('subRiskLabel'), "dataIndex": "subRiskLabel", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "255",
							"enforceMaxLength" : true,
							"store": ['Y', 'N'],
							"autoSelect" : true,
							"forceSelection": true
						},
   				},
   				{ "header": ViewUtil.getLabel('flashPoint'), "dataIndex": "flashPoint", "style": "text-align:center", "align": "center", "width": "100", "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "8",
							"enforceMaxLength" : true
						},
   				},
   				{ "header": ViewUtil.getLabel('mFag'), "dataIndex": "mfag", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "10",
							"enforceMaxLength" : true
						},	
   				},
   				{ "header": ViewUtil.getLabel('marinePolu'), "dataIndex": "marinePolu", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "10",
							"enforceMaxLength" : true
						},
   				},
   				{ "header": ViewUtil.getLabel('specReq'), "dataIndex": "specReq", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "3",
							"enforceMaxLength" : true
						},
   				},
   				{ "header": ViewUtil.getLabel('specReqRmk'), "dataIndex": "specReqRmk", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "255",
							"enforceMaxLength" : true
						},
   				},
   				{ "header": ViewUtil.getLabel('remark'), "dataIndex": "remark", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "100",
							"enforceMaxLength" : true
						},
   				},
   				{ "header": ViewUtil.getLabel('lpk'), "dataIndex": "lpk", "style": "text-align:center", "align": "center", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "3",
							"enforceMaxLength" : true
						},
   				},
   				{ "header": ViewUtil.getLabel('fireCode'), "dataIndex": "fireCode", "style": "text-align:center", "align": "center", "filter": "string", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "2",
							"enforceMaxLength" : true
						},
				},
				{ "header": ViewUtil.getLabel('premiumCd'), "dataIndex": "premiumCd", "style": "text-align:center", "align": "center", "filter": "string", "width": 100, "editable": false,
				  "editor":	{  
							"xtype": "textfield",
							"maxLength": "2",
							"enforceMaxLength" : true
						},
   				},
   				{ "header": ViewUtil.getLabel('staffCd'), "dataIndex": "staffCd", "style": "text-align:center", "align": "center", "filter": "string", "width": 100, "editable": false},
   				{ "header": ViewUtil.getLabel('updatedTime'), "dataIndex": "updatedTime", "style": "text-align:center", "align": "center", "filter" : "date", "format": "Y-m-d", "width": 120, "editable": false},
   				{ "header": ViewUtil.getLabel('imdgDiv'), "dataIndex": "imdgDiv", "style": "text-align:center", "align": "left", "width": 120, "editable": false, 
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "1",
							"enforceMaxLength" : true
						}
   				},
   				{ "header": ViewUtil.getLabel('priCode'), "dataIndex": "priCode", "style": "text-align:center", "align": "left", "width": 120, "editable": false, 
				  "editor":	{  
							"xtype": "textfield",
							"maxLength" : "5",
							"enforceMaxLength" : true
						}
 				}, 
			]
		},
		{
			"key": "CommodityCode",
			"items": [ 	
				{ "header": ViewUtil.getLabel('category'), "dataIndex": "cgTp", "reference": "refCgTp", "width": 80, "displayField": "scdNm", "valueField": "scd", "queryMode": "local", "editable": false,
				  "editor": {
							"xtype": "combo",
							"displayField": "scdNm",
							"valueField": "scd",
							"queryMode": "local",
							"matchFieldWidth": false,
							"allowBlank": false,
							"editable": false,
							"bind": {
								"store": '{commodityCodeCategoryCombo}',
							},
						}
				},
				{ "header": ViewUtil.getLabel('cmdtCd'), "dataIndex": "cmdtCd", "reference": "refcmdtCd", "filter": "string", "width": 120,
				  "editor": {
							"xtype": "textfield",
							"maxLength": "10",
							"enforceMaxLength": true,
							"allowBlank": false,
							"allowOnlyWhitespace": false,
							"fieldStyle": "text-transform:uppercase",
							"listeners": {
								"change" : 'onUpperCase'
							}
						},
				},
				{ "header": ViewUtil.getLabel('descr'), "dataIndex": "descr", "reference": "refdescr", "width": 250,
				  "editor": {
							"xtype": "textfield",
							"fieldStyle": "text-transform:uppercase",
							"allowBlank": false,
							"listeners": {
								"change" : 'onUpperCase'
							}
						},
				},
				{ "header": ViewUtil.getLabel('cmdtGrp'), "dataIndex": "cmdtGrp", "reference": "refcmdtGrp", "width": 150,
				  "editor": {
							"xtype": "combo",
							"bind": {
								"store": '{commodityCodeGroupCombo}',
							},
							"displayField": "cmdtGrp",
							"valueField": "cmdtGrp",
							"queryMode": "local",
							"matchFieldWidth": false,
							"editable": false
						}
				},
				{ "header": ViewUtil.getLabel('cmdtGrpCd'), "dataIndex": "cmdtGrpCd", "reference": "refcmdtGrpCd", "width": 120,
				  "editor": {
							"xtype": "combo",
							"bind": {
								"store": '{commodityCodeGroupCdCombo}',
							},
							"allowBlank": false,
							"displayField": "cmdtGrpCd",
							"valueField": "cmdtGrpCd",
							"queryMode": "local",
							"editable": false
						}
				},
				{ "header": ViewUtil.getLabel('unno'), "dataIndex": "unno", "reference": "refunno", "width": 80,
				  "editor": {
							"xtype": "combo",
							"bind": {
								"store": '{commodityCodeImdgCombo}',
							},
							"displayField": "unno",
							"valueField": "unno",
							"queryMode": "local",
							"listeners": {
								"change": 'onChangeUnno'
							}
						},
				},
				{ "header": ViewUtil.getLabel('imdg'), "dataIndex": "imdg", "reference": "refImdg", "width": 60,
				  "editor": {
							"xtype": "textfield",
							"readOnly": true
						}
				},
				{ "header": ViewUtil.getLabel('tonnageCd'), "dataIndex": "tonnageCd", "reference": "reftonnageCd", "fielter": "string", "width": 100,
			      "editor": {
							"xtype": "textfield"
						},
					"hidden": true
				},
				{ "header": ViewUtil.getLabel('staffCode'), "dataIndex": "userId", "reference": "refuserId", "fielter": "string", "width": 100},
				{ "header": ViewUtil.getLabel('updDt'), "xtype": "datecolumn", "dataIndex": "updDt", "reference": "refupdDt", "format": "Y-m-d", "width": 150,
/* 				  "exportRenderer": function(value, record, dataIndex, cell, column){ */
/* 							return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds()); */
/* 						} */
				}
			]
		},
		{
			"key": "CommodityGroupGrid",
			"items": [ 					
				{ 
					"header": ViewUtil.getLabel('cgTpNm'), "dataIndex": "cgTp", "reference": "refCgTp", "width": 80, "displayField": "scdNm", "valueField": "scd", "queryMode": "local", "editable": false,
				},
				{ 
					"header": ViewUtil.getLabel('cmdtGrpCd'), "dataIndex": "cmdtGrpCd", "reference": "refcmdtGrpCd", "width": 200,
				}, 			
				{ 
					"header": ViewUtil.getLabel('commodityGrDes'), "dataIndex": "cmdtGrpDes", "reference": "refdescr", "width": 200,
				},
				{
                    "header": ViewUtil.getLabel('createdBy'), "dataIndex": 'userId', "reference": 'refUserId', "filter": "string", "width": 150, 
                },
				/* { 
                	"header": ViewUtil.getLabel('createdDate'), "dataIndex": 'createdDt', "filter" : "string","width": 150, 
                }, */	
                { 
                	"header": ViewUtil.getLabel('updatedBy'),"dataIndex": "userId","editable": false,"width": 150, "filter" : "string",
                },
       			{ 
       				"header": ViewUtil.getLabel('updatedDate'),"dataIndex": "updateDt","editable": false, "filter": "string", "width": 200,
       			},       	
			]
		},
		{
			"key": "CommodityGrid",
			"items": [ 				
				{ 
					"header": ViewUtil.getLabel('cgTpNm'), "dataIndex": "cgTp", "reference": "refCgTp", "width": 80, "displayField": "scdNm", "valueField": "scd", "queryMode": "local", "editable": false,
				},
				{ 
					"header": ViewUtil.getLabel('cmdtGrpCd'), "dataIndex": "cmdtGrpCd", "reference": "refcmdtGrpCd", "width": 200,
				}, 			
				{ 
					"header": ViewUtil.getLabel('commodityGrDes'), "dataIndex": "cmdtGrp", "reference": "refdescr", "width": 200,
				},
				{ 
					"header": ViewUtil.getLabel('cmdtCd'), "dataIndex": "cmdtCd", "reference": "refcmdtCd", "filter": "string", "width": 120,		 
				},
				{ 
					"header": ViewUtil.getLabel('commodityDes'), "dataIndex": "descr", "reference": "refdescr", "width": 200, "filter": "string",		  
				},
				{ 
					"header": ViewUtil.getLabel('unno'), "dataIndex": "unno", "reference": "refunno", "width": 80,		  
				},
				{ 
					"header": ViewUtil.getLabel('imdg'), "dataIndex": "imdg", "reference": "refImdg", "width": 80,			  
				},
				{ 
					"header": ViewUtil.getLabel('packageTpCd'), "dataIndex": "pkgTpCd", "reference": "refPkgTpCd", "width": 150,			  
				},
				{
                    "header": ViewUtil.getLabel('createdBy'), "dataIndex": 'userId', "reference": 'refUserId', "filter": "string", "width": 120,
                },
                /* { 
                	"header": ViewUtil.getLabel('createdDate'), "dataIndex": 'createdDt', "filter" : "string", "width": 200,
                }, */	
                { 
                	"header": ViewUtil.getLabel('updatedBy'),"dataIndex": "userId","editable": false,"width": 150, "filter" : "string",
                },
       			{ 
       				"header": ViewUtil.getLabel('updatedDate'),"dataIndex": "updateDt","editable": false, "filter": "string", "width": 150,
       			},       	
			]
		},
		{
			"key": "DelayCode",
			"items": [
				{
					"header": ViewUtil.getLabel('DCCategoryCd'),
					"reference": "refdlyCatgCd",
					"dataIndex": "dlyCatgCd",
					"width": 120,
					"editor": {
						"xtype": "combo",
						"bind": {
							"store": '{delayCodeCategoryCodeCombo}'
						},
						"displayField": "comName",
						"valueField": "comCode",
						"editable": false,
						"allowBlank": false,
						"queryMode": "local"
					}
				},
				{
					"header": ViewUtil.getLabel('DCDesc'),
					"dataIndex": "descr",
					"width": 250,
					"editor": {
						"xtype": "textfield",
						"maxLength": 50,
						"enforceMaxLength": true,
						"allowBlank": false,
						"listeners": {
							"change": "onChange"
						}
					}
				},
				{
					"header": ViewUtil.getLabel('DCCode'),
					"reference": "refdlyCd",
					"dataIndex": "dlyCd",
					"filter": "string",
					"width": 110,
					"editor": {
						"xtype": "textfield",
						"maxLength": 4,
						"fieldStyle": "text-transform:uppercase",
						"enforceMaxLength": true,
						"allowBlank": false,
						"listeners": {
							"change": "onChange"
						}
					}
				},
				{
					"header": ViewUtil.getLabel('DCStaffCd'),
					"reference": "refuserId",
					"dataIndex": "userId",
					"filter": "string",
					"width": 120,
				},
				{
					"header": ViewUtil.getLabel('DCAccept'),
					"reference": "refchagYN",
					"dataIndex": "chagYN",
					"filter": "string",
					"width": 100,
					"editor": {
						"xtype": "combo",
						"bind": {
							"store": "{AcceptYnCombo}"
						},
						"displayField": "comName",
						"valueField": "comCode",
						"queryMode": "local",
						"editable": false,
						"allowBlank": false
					}
				},
				{
					"header": ViewUtil.getLabel('DCBulkType'),
					"reference": "refbulkTp",
					"dataIndex": "bulkTp",
					"width": 150,
					"editor": {
						"xtype": "combo",
						"bind": {
							"store": "{delayCodeBulkTypeCombo}"
						},
						"displayField": "comName",
						"valueField": "comCode",
						"queryMode": "local",
						"editable": false,
						"allowBlank": false
					},
					"renderer": "onGridBilkComboRenderer"
				},
				{
					"header": ViewUtil.getLabel('DCUpdateTime'),
					"xtype": "datecolumn",
					"reference": "refupdDt",
					"dataIndex": "updDt",
					//"format": "MOST.config.Locale.getDefaultDateFormatWithNoSeconds()",
					"width": 170,
					// "exportRenderer": function(value, record, dataIndex, cell, column){
					// 	return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					// }
				}
			]
		},
		{
			"key": "CodeMaster",
			"items": [
				{ "header": ViewUtil.getLabel('lcd'), "dataIndex": "lcd", "align":"center", "cellWarp": true, "reference": "refSystemCodeId", "width": 120, "filter": "list",
   				  "editor": {
	   			        	"xtype": "combo",
	   						"bind":{
	   							"store":'{systemCodeComboForGrid}'
	   						},
	   						"emptyText": "Select",
	   						"displayField": "lcdNm",
	   						"valueField": "lcd",
	   						"allowBlank": false,
	   						"listeners": {
	   							"select": 'onSelectSystemCode'
	   						},
	   						"editable": false
	   				},
       			},
       			{ "header": ViewUtil.getLabel('mcd'), "dataIndex": "mcd", "align": "center", "reference": "refCodeId", "width": 200, "queryMode": "local", "filter": "string",
   				  "editor": {
		   				   "xtype": "combo",
		   				   "bind":{
		   					   "store":'{codeComboForGrid}'
		   				   },
		   				   "emptyText": "select",
		   				   "displayField": "mcdNm",
		   				   "valueField": "mcd",
		   				   "allowBlank": false,
		   				   "queryMode": "local",
		   				   "reference": "cmbCodeEditor",
		   				   "editable": false
		   				},
   				},
   				{ "header": ViewUtil.getLabel('scd'), "dataIndex": "scd", "align": "center", "reference": "refDetailCode", "width": 160, "filter": "string",
   				  "editor":	{  
		   					"xtype": "textfield",
		   					"allowBlank": false,
		   					"maxLength": "10",
		   					"enforceMaxLength": true,
		   					"reference": "refTxtDetailCode",
		   					/*listeners: {
								select: 'onOpenUserInquiryPopup'
							},*/
	   					}
       			},
       			{ "header": ViewUtil.getLabel('extendCode'), "dataIndex": "extendCd", "align": "center", "reference": "refExtendCode", "width": 160, "filter": "string",
   				  "editor":	{  
		   					"xtype": "textfield",
		   					"allowBlank": false,
		   					"maxLength": "10",
		   					"enforceMaxLength": true,
		   					"reference": "refTxtExtendCode"
	   					}
       			},
       			{ "header": ViewUtil.getLabel('name'), "dataIndex": "scdNm", "reference": "refScdName", "align": "left", "filter": "string", "width": 200,
   				  "editor":	{  
		   					"xtype": "textfield",
		   					"reference": "refTxtDetailName",
		   					"maxLength": "50",
		   					"allowBlank": false,
		   					"enforceMaxLength" : true  
		   				}
	   			},
	   			{ "header": ViewUtil.getLabel('description'), "dataIndex": "scdDesc", "reference": "refScdDesc", "filter": "string", "align": "left", "width": 300,
   				  "editor":	{  
		   					"xtype": "textfield",
		   					"maxLength" : "100",
		   					"enforceMaxLength" : true  
		   				},
       			},
       			{ 
       				"header": ViewUtil.getLabel('useyn'), "dataIndex": "useYn", "style": "text-align:center", "align": "center", "width": 100,
					"editor": {
						"xtype": "combo",
						"bind":{ 
			            	   "store":'{yesNoValue}', 
			            	   "value": "Y"
            		   		},
						"valueField": "code",
						"displayField": "codeName",
						"queryMode": "local",
						"editabled" : false,
						"enforceMaxLength" : true,
						"autoSelect": true,
						"forceSelection": true
					}
       			},
       			{ "header": ViewUtil.getLabel('updatedBy'),"dataIndex": "updUserId","editable": false,"width": 170},
       			{ "header": ViewUtil.getLabel('updatedTime'),"dataIndex": "updDtm","editable": false, "filter": "date", "width": 200},
			]
		},		
		{
			"key": "BrandCode",
			"items": [
			{
				"header": ViewUtil.getLabel('brandCd'), "dataIndex": "brandCd", "reference": "refBrandCd","filter": "string", "width": 210,
				"editor":{
					"xtype": "textfield",
					"enforceMaxLength": true,
					"allowBlank": false,
					"allowOnlyWhitespace": false,
					"listeners": {
						"change" : 'onChangeUpperCase'
					}
				}
			},
			{
				"header": ViewUtil.getLabel('brandNm'), "dataIndex": "brandNm", "reference": "refBrandNm","filter": "string", "width": 210,
				"editor":{
					"xtype": "textfield",
					"enforceMaxLength": true,
					"allowBlank": false,
					"allowOnlyWhitespace": false,
					"listeners": {
						"change" : 'onChangeUpperCase'
					}
				}
			}]
		},
		{
			"key": "ModelCode",
			"items":  [
			{
				"header": ViewUtil.getLabel('brandCd'), "dataIndex": "brandCd", "filter": "string", "width": 210
			},
			{
				"header": ViewUtil.getLabel('modelCd'), "dataIndex": "modelCd","reference": "refModelCd", "filter": "string", "width": 120,
				"editor":{
					"xtype": "textfield",
					"enforceMaxLength": true,
					"allowBlank": false,
					"allowOnlyWhitespace": false,
					"listeners": {
						"change" : 'onChangeUpperCase'
					}
				}
			},
			{
				"header": ViewUtil.getLabel('modelNm'), "dataIndex": "modelNm","reference": "refModelNm", "filter": "string", "width": 110,
				"editor":{
					"xtype": "textfield",
					"enforceMaxLength": true,
					"allowBlank": false,
					"allowOnlyWhitespace": false,
					"listeners": {
						"change" : 'onChangeUpperCase'
					}
				}
			}]
		},

		/************** Popup *****************/
		{
			"key": "LorrysPopup",
			"items": [
				{
				    "header": ViewUtil.getLabel('gridNo'),
				    "xtype": "rownumberer",
				    "width" : 50,
				    "align" : "center"
				},
				{
				    "header": ViewUtil.getLabel('cd'),
				    "dataIndex": "cd",
				    "reference": "refCd",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('cdNm'),
				    "dataIndex": "cdNm",
				    "reference": "refCdNm",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('ptnrCd'),
				    "dataIndex": "ptnrCd",
				    "reference": "refPtnrCd",
				    "filter": "string",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('companyName'),
				    "dataIndex": "tsptrNm",
				    "reference": "refTsptrNm",
				    "filter": "string",
				    "align": "left",
				    "width": 350
				}
			]
		},
		
		{
			"key": "InGateLorryListPopup",
			"items": [
				{
				    "header":ViewUtil.getLabel('lorryNo'),
				    "dataIndex": "lorryNo",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header":ViewUtil.getLabel('transporter'),
				    "dataIndex": "transportCd",
				    "filter": "string",
				    "width": 150
				},
				{
				    "header":ViewUtil.getLabel('driverNm'),
				    "dataIndex": "driverName",
				    "filter": "string",
				    "width": 150
				},
				{
				    "header":ViewUtil.getLabel('sdoNo'),
				    "dataIndex": "sdoNo",
				    "filter": "string",
				    "width": 150
				},
				{
				    "header":ViewUtil.getLabel('grNo'),
				    "dataIndex": "grNo",
				    "filter": "string",
				    "width": 150
				},
				{
				    "header":ViewUtil.getLabel('autoGateCheckInTime'),
				    "dataIndex": "agChkInTime",
				    "filter": "string",
				    "width": 150
				},
				{
				    "header":ViewUtil.getLabel('agGateInDt'),
				    "dataIndex": "agGateInDt",
				    "filter": "string",
				    "width": 150
				}
				
			]
		},
		{
			"key": "LorryListPopup",
			"items": [
				{
				    "header":ViewUtil.getLabel('lorryNo'),
				    "dataIndex": "lorryNo",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header":ViewUtil.getLabel('transporter'),
				    "dataIndex": "transportCd",
				    "filter": "string",
				    "width": 150
				},
				{
				    "header":ViewUtil.getLabel('driverNm'),
				    "dataIndex": "driverName",
				    "filter": "string",
				    "width": 150
				},
				{
				    "header":ViewUtil.getLabel('autoGateCheckInTime'),
				    "dataIndex": "agChkInTime",
				    "filter": "string",
				    "width": 150
				}
				
			]
		},
		{
			"key": "registrationTruckPopup",
			"items": [
				
				{
				    "header": ViewUtil.getLabel('truckNo'),
				    "dataIndex": "lorryNo",
				    "reference": "refCd",
				    "filter": "string",
				    "width": 140
				},
				{
				    "header": ViewUtil.getLabel('lorryId'),
				    "dataIndex": "lorryId",
				    "reference": "refCdNm",
				    "filter": "string",
				    "width": 170,
				    "hidden": true
				},
				{
				    "header": ViewUtil.getLabel('ptnrCd'),
				    "dataIndex": "ptnrCode",
				    "reference": "refPtnrCd",
				    "filter": "string",
				    "width": 170
				}
			]
		},
		{
			"key": "LorrysMultiPopup",
			"items": [
				{
				    "header": ViewUtil.getLabel('popuplistChk'),
				    "xtype": "checkcolumn",
				    "dataIndex": "chkLorryMulti",
				    "width": 70,
				    "defaultType": "integer",
				    "listeners": {
				         checkchange: "onLorryMultiCheckChange"
				     }
				},
				{
				    "header": ViewUtil.getLabel('truckNo'),
				    "dataIndex": "lorryNo",
				    "reference": "refCd",
				    "filter": "string",
				    "width": 140
				},
				{
				    "header": ViewUtil.getLabel('lorryId'),
				    "dataIndex": "lorryId",
				    "reference": "refCdNm",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('ptnrCd'),
				    "dataIndex": "ptnrCode",
				    "reference": "refPtnrCd",
				    "filter": "string",
				    "width": 170
				}
			]
		},
		{
			"key": "ChassisMultiPopup",
			"items": [
				{
				    "header": ViewUtil.getLabel('popuplistChk'),
				    "xtype": "checkcolumn",
				    "dataIndex": "chkChassisMulti",
				    "width": 70,
				    "defaultType": "integer",
				    "listeners": {
				         checkchange: "onChassisMultiCheckChange"
				     }
				},
				{
				    "header": ViewUtil.getLabel('chassisNo'),
				    "dataIndex": "plateNo",
				    "reference": "refPlateNo",
				    "filter": "string",
				    "width": 140
				},
				{
				    "header": ViewUtil.getLabel('ptnrCd'),
				    "dataIndex": "ptnrCode",
				    "reference": "refPtnrCd",
				    "filter": "string",
				    "width": 170
				}
			]
		},
		
		{
			"key": "ChassisPopup",
			"items": [
				{
				    "header": ViewUtil.getLabel('chassisNo'),
				    "dataIndex": "plateNo",
				    "reference": "refPlateNo",
				    "filter": "string",
				    "width": 140
				},
				{
				    "header": ViewUtil.getLabel('ptnrCd'),
				    "dataIndex": "ptnrCode",
				    "reference": "refPtnrCd",
				    "filter": "string",
				    "width": 170
				}
			]
		},
		
		{
			"key": "AssignmentYardTruckPopup",
			"items": [
				{
				    "header": ViewUtil.getLabel('vslcallid'),
				    "dataIndex": "vslCallId",
				    "filter": "string",
				    "width": 140
				},
				{
				    "header": ViewUtil.getLabel('blNo'),
				    "dataIndex": "blNo",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('SNLSNNo'),
				    "dataIndex": "shipgNoteNo",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('truckNo'),
				    "dataIndex": "lorryNo",
				    "filter": "string",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('chassisNo'),
				    "dataIndex": "plateNo",
				    "filter": "string",
				    "width": 120
				}
			]
		},
		{
			"key": "GoodsReceiptPopupList",
			"items": [
				{
					"header":  ViewUtil.getLabel('bookingNo'),
					"dataIndex": "mfDocId",
					"filter": "string",
					"width": 170
				},
				{
					"header":  ViewUtil.getLabel('sNNo'),
					"dataIndex": "shipgNoteNo",
					"filter": "string",
					"width": 170
				},
				{
					"header":  ViewUtil.getLabel('gRNo'),
					"dataIndex": "grNo",
					"filter": "string",
					"width": 170,
				},
				{
					"header":  ViewUtil.getLabel('vessel'),
					"dataIndex": "vslCallId",
					"filter": "string",
					"width": 170,
				}
			]
		},
		
		{
			"key": "SDOPopupList",
			"items": [
				{
					"header":  ViewUtil.getLabel('mfDocId'),
					"dataIndex": "mfDocId",
					"filter": "string",
					"width": 170
				},
				{
					"header":  ViewUtil.getLabel('LABLNo'),
					"dataIndex": "blNo",
					"filter": "string",
					"width": 170
				},
				{
					"header":  ViewUtil.getLabel('LADONo'),
					"dataIndex": "doNo",
					"filter": "string",
					"width": 170,
				},
				{
					"header":  ViewUtil.getLabel('SDONo'),
					"dataIndex": "sdoNo",
					"filter": "string",
					"width": 170,
				},
				{
					"header":  ViewUtil.getLabel('vessel'),
					"dataIndex": "vslCallId",
					"filter": "string",
					"width": 170,
				}
			]
		},
		
		{
			"key": "GatePassPopupList",
			"items": [
				{
					"header":  ViewUtil.getLabel('gpPopupGatePassNo'),
					"dataIndex": "gatePassNo",
					"filter": "string",
					"width": 170
				},
				{
					"header":  ViewUtil.getLabel('vessel'),
					"dataIndex": "vslCallId",
					"filter": "string",
					"width": 170
				},
				{
					"header":  ViewUtil.getLabel('gpPopupCargoNo'),
					"dataIndex": "cgNo",
					"filter": "string",
					"width": 170,
				},
				{
					"header":  ViewUtil.getLabel('gpPopupLorryNo'),
					"dataIndex": "lorryNo",
					"filter": "string",
					"width": 100,
				}
			]
		},
		{
			"key": "GateTicketNoPopupList",
			"items": [
				{
					"header":  ViewUtil.getLabel('gateTicketNo'),
					"dataIndex": "gateTicketNo",
					"filter": "string",
					"width": 170
				},
				{
					"header":  ViewUtil.getLabel('vessel'),
					"dataIndex": "vslCallId",
					"filter": "string",
					"width": 170
				},
				{
					"header":  ViewUtil.getLabel('gpPopupCargoNo'),
					"dataIndex": "cgNo",
					"filter": "string",
					"width": 170,
				},
				{
					"header":  ViewUtil.getLabel('gpPopupLorryNo'),
					"dataIndex": "lorryNo",
					"filter": "string",
					"width": 100,
				}
			]
		},
		{
			"key": "PackageNoMultiPopup",
			"items": [
				{
				    "header": ViewUtil.getLabel('popuplistChk'),
				    "xtype": "checkcolumn",
				    "dataIndex": "chkMulti",
				    "width": 70,
				    "defaultType": "integer",
				    "listeners": {
				         checkchange: "onMultiCheckChange"
				     }
				},
				{
				    "header": ViewUtil.getLabel('packageNo'),
				    "dataIndex": "packageNo",
				    "filter": "string",
				    "width": 140
				},
				{
				    "header": ViewUtil.getLabel('packageDesc'),
				    "dataIndex": "packageDesc",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('grossWeight'),
				    "dataIndex": "mt",
				    "filter": "string",
				    "width": 80
				},
				{
				    "header": ViewUtil.getLabel('m3'),
				    "dataIndex": "m3",
				    "filter": "string",
				    "width": 80
				},
				{
				    "header": ViewUtil.getLabel('SNLength'),
				    "dataIndex": "length",
				    "filter": "string",
				    "width": 80
				},
				{
				    "header": ViewUtil.getLabel('SNWidth'),
				    "dataIndex": "width",
				    "filter": "string",
				    "width": 80
				},
				{
				    "header": ViewUtil.getLabel('SNHeight'),
				    "dataIndex": "height",
				    "filter": "string",
				    "width": 80
				},
				{
				    "header": ViewUtil.getLabel('remarks'),
				    "dataIndex": "remarks",
				    "filter": "string",
				    "width": 150
				}
			]
		},
		
		{
			"key": "BargeListPopup",
			"items": [
				{
				    "header": ViewUtil.getLabel('bargeNo'),
				    "dataIndex": "bargeNo",
				    "filter": "string",
				    "width": 140
				},
				{
				    "header": ViewUtil.getLabel('vesselname'),
				    "dataIndex": "vslNm",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('atb'),
				    "dataIndex": "atb",
				    "filter": "string",
				    "width": 80
				},
				{
				    "header": ViewUtil.getLabel('atu'),
				    "dataIndex": "atu",
				    "filter": "string",
				    "width": 80
				}
			]
		},

		/************** Configuration *****************/
		{
			"key": "WarehouseDefinition",
			"items": [
				{
					"header": ViewUtil.getLabel('WHId'),
					"dataIndex": "locId",
					"reference": "refLocId",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('WHName'),
					"dataIndex": "locNm",
					"reference": "refLocNm",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('WHType'),
					"dataIndex": "locTpNm",
					"reference": "refLocTpNm",
					"filter": "list",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('WHArea'),
					"dataIndex": "areaId",
					"reference": "refAreaId",
					"filter": "list",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('WHUsage'),
					"dataIndex": "useCd",
					"reference": "refUseCd",
					"filter": "list",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('WHCargoTypeEdible'),
					"xtype": "actioncolumn",
					"dataIndex": "edYn",
					"reference": "refEdYn",
					"hideable": false,
					"width": 80,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.edYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]						
				},
				{
					"header": ViewUtil.getLabel('WHCargoTypeNonEdible'),
					"xtype": "actioncolumn",
					"dataIndex": "nonEdYn",
					"reference": "refNonEdYn",
					"hideable": false,
					"width": 160,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.nonEdYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]	
				},
				{
					"header": ViewUtil.getLabel('dgYn'),
					"xtype": "actioncolumn",
					"dataIndex": "dgYn",
					"reference": "refDgYn",
					"hideable": false,
					"width": 80,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.dgYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]	
				},
				{
					"header": ViewUtil.getLabel('WHLeftX'),
					"dataIndex": "leftX",
					"reference": "refLeftX",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('WHTopY'),
					"dataIndex": "topY",
					"reference": "refTopY",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('WHUsed'),
					"dataIndex": "locUseYn",
					"reference": "refLocUseYn",
					"filter": "list",
					"width": 80
				}
			]
		},
		{
		
			"key": "Equipment",
			"items": [ 	
				{ "header": ViewUtil.getLabel('eqTpCd'), "dataIndex": "eqTpCdNm", "width": 170, "align":"center", "caption":"eqTpCdNm", "style" : "text-align:center", "reference": "refequipmentEqTpCd", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqFacNo'), "dataIndex": "eqFacNo", "width": 170, "align":"center", "caption":"eqFacNo", "style" : "text-align:center", "reference": "refequipmentEqFacNo", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqLoc'), "dataIndex": "loc", "width": 100, "align":"center", "caption":"loc", "style" : "text-align:center", "reference": "refequipmentLoc", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqStatNm'), "dataIndex": "statNm", "width": 170, "align":"center", "caption":"statNm", "style" : "text-align:center", "reference": "refequipmentStatNm", "filter": "string"},
				//{ "header": ViewUtil.getLabel('eqContractor'), "dataIndex": "contractor", "width": 170, "align":"center", "caption":"contractor", "style" : "text-align:center", "reference": "refequipmentContractor", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqMdl'), "dataIndex": "mdl", "width": 170, "align":"center", "caption":"mdl", "style" : "text-align:center", "reference": "refequipmentMdl", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqCapaDescr'), "dataIndex": "capaCd", "width": 170, "align":"center", "caption":"capaCd", "style" : "text-align:center", "reference": "refequipmentCapaDescr", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqAvgHm'), "dataIndex": "avgHm", "width": 100, "align":"center", "caption":"avgHm", "style" : "text-align:center", "reference": "refequipmentAvgHm", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqUseYN'), "dataIndex": "useYN", "width": 100, "align":"center", "caption":"useYN", "style" : "text-align:center", "reference": "refequipmentUseYN", "filter": "string"},
				{ "header": ViewUtil.getLabel('EQDiameter'), "dataIndex": "diameter", "width": 100, "align":"center", "caption":"useYN", "style" : "text-align:center", "reference": "refequipmentUseYN", "filter": "string"},
				{ "header": ViewUtil.getLabel('EQSafetyPressureLimit'), "dataIndex": "safetyLimit", "width": 100, "align":"center", "caption":"useYN", "style" : "text-align:center", "reference": "refequipmentUseYN", "filter": "string"},
			]
		},
		{
		
			"key": "EquipmentDetail",
			"items": [ 	
				{ "header": ViewUtil.getLabel('eqFacCode'), "dataIndex": "eqFacNo", "width": 170, "align":"center", "caption":"eqFacNo", "style" : "text-align:center", "reference": "refEqFacCdDetail", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqType'), "dataIndex": "eqTpCd", "width": 170, "align":"center", "caption":"eqTpCd", "style" : "text-align:center", "reference": "refEqTpDetail", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqFacNm'), "dataIndex": "eqFacNm", "width": 100, "align":"center", "caption":"eqFacNm", "style" : "text-align:center", "reference": "refEqFacNm", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqUsed'), "dataIndex": "useYN", "width": 170, "align":"center", "caption":"useYN", "style" : "text-align:center", "reference": "refUseYN", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqLocation'), "dataIndex": "eqLocation", "width": 170, "align":"center", "caption":"eqLocation", "style" : "text-align:center", "reference": "refEqLocation", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqModel'), "dataIndex": "mdl", "width": 170, "align":"center", "caption":"mdl", "style" : "text-align:center", "reference": "refequipmentMdl", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqManufacturer'), "dataIndex": "eqManufacturer", "width": 170, "align":"center", "caption":"eqManufacturer", "style" : "text-align:center", "reference": "refEqManufacturer", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqProductionYear'), "dataIndex": "pductYear", "width": 100, "align":"center", "caption":"pductYear", "style" : "text-align:center", "reference": "refPductYear", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqSafetyWorkLoadMT'), "dataIndex": "capaCd", "width": 100, "align":"center", "caption":"capaCd", "style" : "text-align:center", "reference": "ctlSafetyWorkLoad", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqAvgHourMeterpermonth'), "dataIndex": "avgHm", "width": 170, "align":"center", "caption":"avgHm", "style" : "text-align:center", "reference": "refAvgHm", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqRegistrationDate'), "dataIndex": "instlYmd", "width": 170, "align":"center", "caption":"instlYmd", "style" : "text-align:center", "reference": "refInstlYmd", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqRemark'), "dataIndex": "rmk", "width": 100, "align":"center", "caption":"rmk", "style" : "text-align:center", "reference": "refRmk", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqContractor'), "dataIndex": "contractor", "width": 170, "align":"center", "caption":"statNm", "style" : "text-align:center", "reference": "refequipmentStatNm", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqStatus'), "dataIndex": "statCd", "width": 170, "align":"center", "caption":"statCd", "style" : "text-align:center", "reference": "refStatCd", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqStoppageReason'), "dataIndex": "stopRsnCd", "width": 170, "align":"center", "caption":"stopRsnCd", "style" : "text-align:center", "reference": "refStopRsnCd", "filter": "string"},
				{ "header": ViewUtil.getLabel('wharfmark'), "dataIndex": "wharfMarkFrom", "width": 170, "align":"center", "caption":"wharfMarkFrom", "style" : "text-align:center", "reference": "refWharfMarkFrom", "filter": "string"},
			]
		},
		{
		
			"key": "EquipmentDetailGrid",
			"items": [ 	
				{ "header": ViewUtil.getLabel('fileName'), "dataIndex": "fileName", "width": 300, "align":"center", "caption":"fileName", "style" : "text-align:center", "reference": "refFileName", "filter": "string"},
				{ "header": ViewUtil.getLabel('fileSize'), "dataIndex": "fileSize", "xtype":"numbercolumn","format":"0,000","width": 170, "align":"center", "caption":"fileSize", "style" : "text-align:center", "reference": "reffileSize", "filter": "string"},
			]
		},
		{
			"key": "CapacityCode",
			"items": [
			{
				"header": ViewUtil.getLabel('capacityEqTpNm'),
				"dataIndex": "eqTpCd",
				"reference": "refEqTpCd",
				"width": 220,
				"editor": {
					"xtype": "combo",
					"bind": {
						"store": '{capacityCodeEquipmentTypeGridCombo}'
					},
					"displayField": "scdNm",
					"valueField": "scd",
					"queryMode": "local",
					"allowBlank": false,
					"editable": false,
				},
			},
			{
				"header": ViewUtil.getLabel('capacityCd'),
				"dataIndex": "capaCd",
				"reference": "refCapaCd",
				"filter": "string",
				"editor": {
					"xtype": "textfield",
					"maxLength": 10,
					"enforceMaxLength": true,
					"allowBlank": false,
					"allowOnlyWhitespace": false,
					"fieldStyle": "text-transform:uppercase",
					"listeners": {
						"change": "onUpperCase"
					}
				},
				"width": 150
			},
			{
				"header": ViewUtil.getLabel('capacityCapaDescr'),
				"dataIndex": "capaDescr",
				"reference": "refCapaDescr",
				"filter": "string",
				"editor": {
					"xtype": "textfield",
					"allowBlank": false,
					"allowOnlyWhitespace": false,
					"fieldStyle": "text-transform:uppercase",
					"listeners": {
						"change": "onUpperCase"
					}
				},
				"width": 220
			},
			{
				"header": ViewUtil.getLabel('capacityCapaQty'),
				"dataIndex": "capaQty",
				"reference": "refCapaQty",
				"editor": {
					"xtype": "numberfield",
					"maxLength": 7,
					"enforceMaxLength" : true,
					//"maskRe": /[0-9]/,
					//"align": "right",
					"formatter": "number('0000,00')",
					
				},
				"width": 100
			},
			{
				"header": ViewUtil.getLabel('capacityUpdateTime'),
				"xtype": "datecolumn",
				"dataIndex": "updTime",
				"reference": "refUpdDt",
				"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				"width": 170,
				"exportRenderer": function(value, record, dataIndex, cell, column){
					return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
				}
			}
			]		
		},
		{
			"key": "DriverLorryRegistrationDriversTabl",
			"items": [
				{
					"header": ViewUtil.getLabel('driverlorryregistrationTransportCode'), "dataIndex": "ptnrCd", "reference": "refPtnrCd", "filter": "string", "width": 170,
					"reference": "refColTransporterCode",
					"editor":{
						"xtype": "textfield",
						"maxLength": 4,
						"enforceMaxLength" : true,
						"allowBlank": false,
						"allowOnlyWhitespace": false,
						"editable": false,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					},
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('driverlorryregistrationTransportName'), "dataIndex": "ptnrNm", "reference": "refPtnrNm", "filter": "string", "width": 170,
					"reference": "refColTransporterName",
					"editor":{
						"xtype": "textfield",
						"maxLength": 175,
						"enforceMaxLength" : true,
						"editable": false,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					},
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "reference": "refDriverId", "filter": "string", "width": 170,
					"reference": "refColDriverId",
					"editor":{
						"xtype": "textfield",
						"maxLength": 20,
						"enforceMaxLength" : true,
						"allowBlank": false,
						"allowOnlyWhitespace": false,
						"maskRe": /[a-zA-Z0-9]/,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('driverNm'), "dataIndex": "driverNm", "reference": "refDriverNm", "filter": "string", "width": 230, "align": "left",
					"editor":{
						"xtype": "textfield",
						"maxLength": 30,
						"enforceMaxLength" : true,
						"allowBlank": false,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('driverlicenseNo'), "dataIndex": "licsNo", "reference": "refLicsNo", "filter": "string", "width": 170,
					"editor":{
						"xtype": "textfield",
						"maxLength": 20,
						"enforceMaxLength" : true,
						"allowBlank": false,
						"allowOnlyWhitespace": false,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('driverNationality'), "dataIndex": "nat", "reference": "refNat", "filter": "string", "width": 200,
					"hidden": true,
					"editor":{
						"xtype": "combo",
						"bind": {
							"store": '{countryCodePopup}'
						},
						"queryMode": "local",
						"displayField": "scdNm",
						"valueField": "scd",
						"listeners": {
							"blur": "onDriversNationalityComboBlur"
						}
					}
				},
				{
					"header": ViewUtil.getLabel('licsExprYmd'), "xtype": "datecolumn", "format": MOST.config.Locale.getShortDate(), "dataIndex": "licsExprYmd", "reference": "refLicsExprYmd", "width": 170,
					"editor": {
						"xtype": "datefield",
						"allowBlank": false,
						"format": MOST.config.Locale.getShortDate()
					},
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remark'), "dataIndex": "remark", "reference": "refRemark", "filter": "string", "width": 230, "align": "left",
					"editor":{
						"xtype": "textfield",
						"maxLength": 30,
						"enforceMaxLength" : true,
					}
				}
			]
		},
		{
			"key": "DriverLorryRegistrationLorriesTabl",
			"items": [
/* 				{ */
/* 					"header": ViewUtil.getLabel('driverNationality'), "dataIndex": "cntryCd", "reference": "refCntryCd", "filter": "string", "width": 200, */
/* 					"editor":{ */
/* 						"xtype": "combo", */
/* 						"bind": { */
/* 							"store": '{commonCodePopup}' */
/* 						}, */
/* 						"queryMode": "local", */
/* 						"displayField": "scdNm", */
/* 						"valueField": "scd", */
/* 						"listeners": { */
/* 							"blur": "onDriversNationalityComboBlur" */
/* 						} */
/* 					} */
/* 				}, */
				{
					"header": ViewUtil.getLabel('driverlorryregistrationTransportCode'), "dataIndex": "ptnrCd", "reference": "refPtnrCd", "filter": "string", "width": 170,
					"editor":{
						"xtype": "combo",
						"reference": "refColTransporterCode",
						"bind": {
							"store": '{partnerCodeListOnly}'
						},
						"queryMode": "local",
						"displayField": "ptnrCode",
						"valueField": "ptnrCode",
						"allowBlank": false,
						"editable": false,
						"listeners": {	
							"select": "onSelectTruckPartnerCode"
						}
					}
				},
				{
					"header": ViewUtil.getLabel('driverlorryregistrationTransportName'), "dataIndex": "ptnrNm", "reference": "refPtnrNm", "filter": "string", "width": 170,
					"editor":{
						"xtype": "textfield",
						"reference": "refColTransporterName",
						"enforceMaxLength" : true,
						"editable": false
						// "listeners":{
						// 	"change": function(){
						// 		var me = this;
						// 		me.setValue(this.getValue().toUpperCase());
						// 	}
						// }
					}
				},
				{
					"header": ViewUtil.getLabel('country'), 
					"dataIndex": "cntryCd", 
					"reference": "refCntryCd", 
					"filter": "string", "width": 80,
					"editor":{
						"xtype": "textfield",
						"maxLength": 5,
						"enforceMaxLength" : true,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('category'), 
					"dataIndex": "category", 
					"reference": "refCategory", 
					"filter": "string", "width": 170,
					"editor":{
						"xtype": "textfield",
						"maxLength": 5,
						"enforceMaxLength" : true,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('lorryNo'), 
					"dataIndex": "lorryNo", 
					"reference": "refLorriesNo", 
					"filter": "string", "width": 170,
					"editor":{
						"xtype": "textfield",
						"maxLength": 10,
						"enforceMaxLength" : true,
						"allowBlank": false,
						"allowOnlyWhitespace": false,
						"maskRe": /[a-zA-Z0-9]/,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('rfId'), 
					"dataIndex": "rfIdNo", 
					"reference": "refRfIdNo", 
					"filter": "string", 
					"width": 170,
					"editor":{
						"xtype": "textfield",
						"maxLength": 100,
						"enforceMaxLength" : true,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('lorriesId'),
					"dataIndex": "lorryId",
					"reference": "refLorriesId",
					"filter": "string",
					"width": 170,
					"hidden": true,
					"editor":{
						"xtype": "textfield",
						"maxLength": 10,
						"enforceMaxLength" : true,
						"allowBlank": true,
						//"allowOnlyWhitespace": false,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('lorriesTareWeight'), "dataIndex": "tareWgt", "reference": "refLorriesTareWeight", "filter": "string", "align": "right", "width": 170,
					"editor":{
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 999999999999.999,
						"align" : "right",
						"decimalPrecision": 3,
						"selectOnFocus" : true
						
					},
					"xtype" : "numbercolumn",
					"format": "0,000.000",
					"selectOnFocus" : true
				},
				{
					"header": ViewUtil.getLabel('lorriesMeasuredt'),
					"dataIndex": "meaDt", 
					"reference": "refLorriesMeasuredt", 
					"format": MOST.config.Locale.getShortDate(), 
					"xtype": "datecolumn", 
					"width": 120,
					"editor": {
						"xtype": "datefield",
						"format": MOST.config.Locale.getShortDate(),
						"allowBlank": false
					},
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('allowWgt'), "dataIndex": "allowWgt", "filter": "string", "width": 170,
					"reference": "refAllowWgt",
					"editor":{
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 999999999999.999,
						"align" : "right",
						"decimalPrecision": 3,
						"selectOnFocus" : true,
						"allowBlank": false
					},
					"xtype" : "numbercolumn",
					"format": "0,000.000",
					"selectOnFocus" : true
				},
				{
					"header": ViewUtil.getLabel('authorizedTowedWgt'), "dataIndex": "towedWgt", "filter": "string", "width": 170,
					"reference": "refTowedWgt",
					"editor":{
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 999999999999.999,
						"align" : "right",
						"decimalPrecision": 3,
						"selectOnFocus" : true
					},
					"xtype" : "numbercolumn",
					"format": "0,000.000",
					"selectOnFocus" : true
				},
				{
					"header": ViewUtil.getLabel('verify'), 
					"dataIndex": "verifyYn",
					"width": 70, 
					"align":"center",
					"style" : "text-align:center",
					"filter": "string",
					"editor":{
						"xtype": "combo",
						"bind": {
							"store":"{yesNoCombo}",
						},
						"valueField": "code",
						"displayField": "codeName",
						"queryMode": "local",
						"editable": false
					}
				},
				{
					"header": ViewUtil.getLabel('useyn'), 
					"dataIndex": "useYn",
					"width": 70, 
					"align":"center",
					"style" : "text-align:center",
					"filter": "string",
					"editor":{
						"xtype": "combo",
						"bind": {
							"store":"{yesNoCombo}",
						},
						"valueField": "code",
						"displayField": "codeName",
						"queryMode": "local",
						"allowBlank": false,
						"editable": false
					}
				},
				{
					"header": ViewUtil.getLabel('remark'), "dataIndex": "remark", "reference": "refRemark", "filter": "string", "width": 230, "align": "left",
					"editor":{
						"xtype": "textfield",
						"maxLength": 30,
						"enforceMaxLength" : true,
					}
				}
			]
		},
		{
			"key": "DriverLorryRegistrationChassisTabl",
			"items": [
				{
					"header": ViewUtil.getLabel('driverlorryregistrationTransportCode'), "dataIndex": "ptnrCd", "reference": "refChassisPtnrCd", "filter": "string", "width": 170,
					"editor":{
						"xtype": "combo",
						"reference": "refColTransporterCode",
						"bind": {
							"store": '{partnerCodeListOnly}'
						},
						"queryMode": "local",
						"displayField": "ptnrCode",
						"valueField": "ptnrCode",
						"allowBlank": false,
						"editable": false,
						"listeners": {	
							"select": "onSelectChassisPartnerCode"
						}
					}
				},
				{
					"header": ViewUtil.getLabel('driverlorryregistrationTransportName'), "dataIndex": "ptnrNm", "reference": "refPtnrNm", "filter": "string", "width": 170,
					"editor":{
						"xtype": "textfield",
						"reference": "refColTransporterName",
						"enforceMaxLength" : true,
						"editable": false,
						"allowBlank": false,
						"allowOnlyWhitespace": false
					}
				},
				{
					"header": ViewUtil.getLabel('allowWgt'), "dataIndex": "allowWgt", "filter": "string", "width": 170,
					"reference": "refAllowWgt",
					"editor":{
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 999999999999.999,
						"align" : "right",
						"decimalPrecision": 3,
						"selectOnFocus" : true,
						"allowBlank": false
					},
					"xtype" : "numbercolumn",
					"format": "0,000.000",
					"selectOnFocus" : true
				},
				{
					"header": ViewUtil.getLabel('plateNo'), "dataIndex": "plateNo", "filter": "string", "width": 170,
					"reference": "refPlateNo",
					"editor":{
						"xtype": "textfield",
						"maxLength": 10,
						"enforceMaxLength" : true,
						"allowBlank": false,
						"allowOnlyWhitespace": false,
						"maskRe": /[a-zA-Z0-9]/,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('lorriesTareWeight'), "dataIndex": "tareWgt", "filter": "string", "width": 170,
					"reference": "refTareWgt",
					"editor":{
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 999999999999.999,
						"align" : "right",
						"decimalPrecision": 3,
						"selectOnFocus" : true
					},
					"xtype" : "numbercolumn",
					"format": "0,000.000",
					"selectOnFocus" : true
				},
				{
					"xtype": "datecolumn", 
					"header": ViewUtil.getLabel('lorriesMeasuredt'),
					"dataIndex": "measureDt", 
					"reference": "refChassisMeasureDt", 
					"format": MOST.config.Locale.getShortDate(), 
					"width": 120,
					"allowBlank": false,
					"allowOnlyWhitespace": false,
					"editor": {
						"xtype": "datefield",
						"format": MOST.config.Locale.getShortDate(),
						"allowBlank": false
					},
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('useyn'), 
					"dataIndex": "useYn",
					"width": 70, 
					"align":"center",
					"style" : "text-align:center",
					"filter": "string",
					"editor":{
						"xtype": "combo",
						"bind": {
							"store":"{yesNoCombo}",
						},
						"valueField": "code",
						"displayField": "codeName",
						"queryMode": "local",
						"value": "Y",
						"allowBlank": false,
						"editable": false
					}
				},
				{
					"header": ViewUtil.getLabel('vldYn'), 
					"dataIndex": "vldYn",
					"width": 70, 
					"align":"center",
					"style" : "text-align:center",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"readOnly": "true"
					}
				},
				{
					"header": ViewUtil.getLabel('remark'), 
					"dataIndex": "remark", 
					"reference": "refChassisRemark", 
					"filter": "string", 
					"width": 230, 
					"align": "left",
					"editor":{
						"xtype": "textfield",
						"maxLength": 30,
						"enforceMaxLength" : true,
					}
				}
			]
		},
		{
			"key": "BerthBitt",
			"items": [
				{
					"header": ViewUtil.getLabel('bittBerth'),
					"dataIndex": "berthCd",
					"width": 150,
					"align": "center",
					"caption": "berthCd",
					"style": "text-align:center",
					"reference": "refBerthCd",
					"filter": "list",
					"editor": {
						"xtype": "combo",
						"reference": "refCboBerthLoc",
						"bind": {
							"store": '{berthLocCombo}' 
						 },
						
						"displayField": "berthNm",
						"valueField": "berthCd",
						"allowBlank": false,
						"activeError": "important",
						"editable": false,
						"disabled": false,
					}
				},
				{
					"header": ViewUtil.getLabel('bittName'),
					"dataIndex": "bittCd",
					"width": 150,
					"align": "center",
					"caption": "bittCd",
					"style": "text-align:center",
					"reference": "refBittCd",
					"filter": "string",
					"editor": {
						"allowBlank": false,
						"maxLength": 4,
						"activeError": "important"
					}
				},
				{
					"header": ViewUtil.getLabel('bitX'),
					"dataIndex": "xpos",
					"width": 150,
					"align": "center",
					"caption": "xPos",
					"style": "text-align:center",
					"reference": "refXPos",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 7,
						"maskRe": /[0-9.]/,
						"allowOnlyWhitespace": true
					}
				},
				{
					"header": ViewUtil.getLabel('bittY'),
					"dataIndex": "ypos",
					"width": 150,
					"align": "center",
					"caption": "yPos",
					"style": "text-align:center",
					"reference": "refYPos",
					"filter": "string",
					"editor":{
						"xtype": "textfield",
						"maxLength": 7,
						"allowBlank": false,
						"maskRe": /[0-9.]/,
						"allowOnlyWhitespace": true
					}
				},
				{
					"header": ViewUtil.getLabel('bittUpdatedBy'),
					"dataIndex": "updUserId",
					"width": 150,
					"align": "center",
					"caption": "updUserId",
					"style": "text-align:center",
					"reference": "refUpdUserId",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('bittUpdatedDate'),
					"dataIndex": "updDtm",
					"width": 200,
					"align": "center",
					"caption": "updDtm",
					"style": "text-align:center",
					"reference": "refupdatedDate",
					"filter": "date",
				}
			]
		},
		/************** Planning *****************/
		{
		
			"key": "DeploymentItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('staffNo'), "dataIndex": "staffNo", "width": 120, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('staffNm'), "dataIndex": "staffNm", "width": 150, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('department'), "dataIndex": "departmentNm", "width": 150, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('shftGroup'), "dataIndex": "groupCd", "width": 100, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('date'), "dataIndex": "deploymentDate", "width": 100, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('shift'), "dataIndex": "deploymentShiftNm", "width": 100, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslschlJPVCNo'), "dataIndex": "vslCallId", "width": 120, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('workingArea'), "dataIndex": "workingArea", "width": 120, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('saRole'), "dataIndex": "roleNm", "width": 120, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('eqTp'), "dataIndex": "eqTypeNm", "width": 120, "align":"center", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('capacity'), "dataIndex": "capacity", "width": 120, "align":"center", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		
		{
		
			"key": "RoRoYardPlanCargoItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 170, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('bl_sn'), "dataIndex": "cgNo", "width": 170, "align":"center", "caption":"cgNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 100, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "width": 170, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "width": 100, "align":"center", "caption":"modelNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "nosOfUnit", "width": 170, "align":"center", "caption":"nosOfUnit", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remainedUnit'), "dataIndex": "remainUnit", "width": 170, "align":"center", "caption":"remainUnit", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('WHId'), "dataIndex": "yardId", "width": 170, "align":"center", "caption":"yardId", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		
		{
		
			"key": "RoRoYardPlanUnitItems",
			"items": [ 
				{ "headerCheckbox": true, "editable": true, "sortable": true,"hideable": true,"menuDisabled": true,"dataIndex": "chk", "width": 70, "align":"center", "xtype":'checkcolumn', "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"checkChange": "onChecked"
				  }
				 
				},	
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 170, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('WHLocId'), "dataIndex": "yardLoc", "width": 170, "align":"center", "caption":"yardLoc", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		
		{
		
			"key": "RoRoYardPlannedItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('WHLocId'), "dataIndex": "yardLoc", "width": 170, "align":"center", "caption":"yardLoc", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('qty'), "dataIndex": "plannedQty", "width": 170, "align":"center", "caption":"plannedQty", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('bl_sn'), "dataIndex": "cgNo", "width": 170, "align":"center", "caption":"cgNo", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		
		{
		
			"key": "RoRoYardPlanNonVesselCargoItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 170, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "cgNo", "width": 170, "align":"center", "caption":"cgNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 100, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "width": 170, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "width": 100, "align":"center", "caption":"modelNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "nosOfUnit", "width": 170, "align":"center", "caption":"nosOfUnit", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remainedUnit'), "dataIndex": "remainUnit", "width": 170, "align":"center", "caption":"remainUnit", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('WHId'), "dataIndex": "yardId", "width": 170, "align":"center", "caption":"yardId", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		
		{
		
			"key": "RoRoYardPlanNonVesselUnitItems",
			"items": [ 
				{ "headerCheckbox": true, "editable": true, "sortable": true,"hideable": true,"menuDisabled": true,"dataIndex": "chk", "width": 70, "align":"center", "xtype":'checkcolumn', "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"checkChange": "onChecked"
				  }
				 
				},	
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 170, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('WHLocId'), "dataIndex": "yardLoc", "width": 170, "align":"center", "caption":"yardLoc", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		
		{
		
			"key": "RoRoYardPlannedNonVesselItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('WHLocId'), "dataIndex": "yardLoc", "width": 170, "align":"center", "caption":"yardLoc", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('qty'), "dataIndex": "plannedQty", "width": 170, "align":"center", "caption":"plannedQty", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "cgNo", "width": 100, "align":"center", "caption":"cgNo", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		
		{
		
			"key": "TheListOfYardPlanOfRoRo",
			"items": [ 	
				{ "header": ViewUtil.getLabel('WHLocId'), "dataIndex": "yardLoc", "width": 170, "align":"center", "caption":"yardLoc", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('bl_sn'), "dataIndex": "cgNo", "width": 170, "align":"center", "caption":"cgNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "width": 170, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "width": 100, "align":"center", "caption":"modelNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "nosOfUnit", "width": 170, "align":"center", "caption":"noOfUnit", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('qty'), "dataIndex": "plannedQty", "width": 170, "align":"center", "caption":"plannedQty", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 170, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 100, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
		
			"key": "NonManifestedOfROROItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "width": 120, "align":"center", "caption":"vslCallId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 100, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('originalCargoNo'), "dataIndex": "originalCgNo", "width": 140, "align":"center", "caption":"originalCgNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 140, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('linkageCargoNo'), "dataIndex": "cgNo", "width": 140, "align":"center", "caption":"cgNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "width": 100, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "width": 100, "align":"center", "caption":"modelNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 100, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('yardLocation'), "dataIndex": "locCd", "width": 120, "align":"center", "caption":"locCd", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remark'), "dataIndex": "remark", "width": 120, "align":"center", "caption":"remark", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('lastUpdatedDt'), "dataIndex": "lastUpdatedDt", "width": 120, "align":"center", "caption":"lastUpdatedDt", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('lastUpdatedBy'), "dataIndex": "lastUpdatedBy", "width": 150, "align":"center", "caption":"lastUpdatedBy", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
			"key": "DGList",
			"items":  [
				{
					"header": ViewUtil.getLabel('dgcategory'), "dataIndex": "dgDiv", "reference": "refDgDiv", "width": 100
				},
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "reference": "refVslCallId", "filter" : "string", "align" : "left", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dgVesselName'), "dataIndex": "vslNm", "reference": "refVslNm", "filter" : "string", "align" : "left", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dgBlSn'), "dataIndex": "cgNo", "reference": "refCgNo", "width": 160
				},
				{
					"header": ViewUtil.getLabel('dgReference'), "dataIndex": "refNo", "reference": "refRefNo", "width": 120
				},
				{
					"header": ViewUtil.getLabel('dgImdg'), "dataIndex": "imdg", "reference": "refImdg", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgUnno'), "dataIndex": "unno", "reference": "refUnno", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgCargoType'), "dataIndex": "cgTpCd", "reference": "refCgTpCd", "width": 120
				},
				{
					"header": ViewUtil.getLabel('dgCommodity'), "dataIndex": "cmdtDesc", "reference": "refCmdtDesc", "width": 170
				},
				{
					"header": ViewUtil.getLabel('status'), "dataIndex": "dgChk", "reference": "refDgChk", "filter" : "string", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgDeclaration'), "dataIndex": "dclrDt", "reference": "refDclrDt", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dgConfirmedBy'), "dataIndex": "confmBy", "reference": "refConfmBy", "filter" : "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dgConfirmDate'), "dataIndex": "confmDt", "reference": "refConfmDt", "filter" : "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dgContactPerson'), "dataIndex": "contactNm", "reference": "refContactNm", "filter" : "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dgContactNo'), "dataIndex": "contactNo", "reference": "refcCntactNo", "filter" : "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dgSa'), "dataIndex": "shipgAgncy", "reference": "refShipgAgncy", "filter" : "string", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgFa'), "dataIndex": "fwrd", "reference": "refFwrd", "filter" : "string", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgShipper'), "dataIndex": "shpr", "reference": "refShpr", "filter" : "string", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgConsignee'), "dataIndex": "cnsne", "reference": "refCnsne", "filter" : "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('dgJpaGroup'), "dataIndex": "priGrp", "reference": "refPriGrp", "filter" : "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('dgPkgType'), "dataIndex": "pkg", "reference": "refPkg", "filter" : "string", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgPkgMt'), "dataIndex": "pkgWgt", "reference": "refPkgWgt", "filter" : "string", "align" : "left", "width": 70
				}
			]
		},
		{
			"key": "DGDetail",
			"items": [
				{
					"xtype": "rownumberer", "width" : 50, "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('fileName'), "dataIndex": "fileName", "reference": "refFileName", "filter": "string", "flex": 1
				},
				{
					"header": ViewUtil.getLabel('fileSize'), "dataIndex": "fileSize", "reference": "refFileSize", "xtype": "numbercolumn", "align" : "right", "format": "0,000"
				}
				]
		},
		{
			"key": "InternalStaffManagement",
			"items": [
			{
				"header": ViewUtil.getLabel('gridNo'), "xtype": "rownumberer", "width" : 50, "align" : "center"
			},
			{
				"header": ViewUtil.getLabel('unavailablelogforStaff'), "xtype": "actioncolumn", "width": 115, "sortable": false,
				"items": [{
					"iconCls": "x-fa fa-external-link",
					"handler": "openUnavailableLogForStaffPopup"
				}]
			},
			{
				"header": ViewUtil.getLabel('staffNo'), "dataIndex": "empId", "width": 100, "editable": false
			},
			{
				"header": ViewUtil.getLabel('engNm'), "dataIndex": "engNm", "width": 200
			},
			{
				"header": ViewUtil.getLabel('tuserId'), "dataIndex": "tuserId", "width": 130
			},
			{
				"header": ViewUtil.getLabel('grdCdNm'), "dataIndex": "grdCd", "width": 90,
				"renderer":"onInternalStaffManagementGridComboRenderer"
			},
			{
				"header": ViewUtil.getLabel('proleCd'), "dataIndex": "proleCd", "width": 90
			},
			{
				"header": 'S.Role', "dataIndex": "roleCd", "width": 200
			},
			{
				"header": ViewUtil.getLabel('internalStatus'), "dataIndex": "statCdNm", "width": 100, "hidden": true
			},
			{
				"header": ViewUtil.getLabel('workLocCdNm'), "dataIndex": "workLocCd", "width": 130,
				"renderer":"onInternalStaffManagementWorkLocationCdNmGridComboRenderer"
			},
			{
				"header": ViewUtil.getLabel('conttDivNm'), "dataIndex": "conttDiv", "width": 120,
				"renderer":"onInternalStaffManagementContractGridComboRenderer"
			},
			{
				"header": ViewUtil.getLabel('internalstaffmanagementUnit'), "dataIndex": "unitDiv", "width": 120,
				"renderer":"onInternalStaffManagementUnitGridComboRenderer"
			},
			{
				"header": ViewUtil.getLabel('costCentNm'), "dataIndex": "costCentCd", "width": 150,
				"renderer":"onInternalStaffManagementCostCenterGridComboRenderer"
			},
			{
				"header": ViewUtil.getLabel('rate'), "dataIndex": "rate", "width": 100
			},
			{
				"header": ViewUtil.getLabel('shftGroup'), "dataIndex": "shftGroupNm", "width": 100
			},
			{
				"header": ViewUtil.getLabel('email'), "dataIndex": "email", "align": "left", "width": 170
			},
			{
				"header": ViewUtil.getLabel('activestatusYn'), "dataIndex": "useYn", "width": 100
			},
			{
				"header": ViewUtil.getLabel('updBy'), "dataIndex": "updBy", "width": 150
			},
			{
				"header": ViewUtil.getLabel('updDt'), "dataIndex": "updDt", "width": 160
			}]
		},
		{
			"key": "UnavailableLogForStaff",
			"items": [
			{
				"header": ViewUtil.getLabel('gridNo'), "xtype": "rownumberer", "width" : 50, "align" : "center"
			
			},
			{
				"dataIndex": "empId", "reference": "refEmpId", "filter": "string", "hidden": true
			},
			{
				"header":  ViewUtil.getLabel('rsnCdNm'), "dataIndex": "rsnCd", "reference": "refRsnCdNm","width": 200, "renderer":"onUnavailableLogForStaffGridComboRenderer",
				"editor": {
					"xtype": "combo",
					   "queryMode": "local",
					   "bind": {store: '{unavailableLogforStaffListReasonCombo}'},
					   "displayField": "scdNm",
					   "valueField": "scd",
					   "editable": false,
					   "allowBlank": false
				},
				
			},
			{
				"header":  ViewUtil.getLabel('fmYmdKey'), "dataIndex": "fmYmdKey", "width": 150, "xtype": "datecolumn", "format": MOST.config.Locale.getShortDate(),
				"editor": {
					"xtype": "datefield",
					"reference": "refFmYmdKey",
					"format": MOST.config.Locale.getShortDate(),
					"allowBlank": false
				},
				"exportRenderer": function(value, record, dataIndex, cell, column){
					return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
				}
			},
			{
				"header":  ViewUtil.getLabel('toYmdKey'), "dataIndex": "toYmdKey", "width": 150, "xtype": "datecolumn", "format": MOST.config.Locale.getShortDate(),
				"editor": {
					"xtype": "datefield",
					"reference": "refToYmdKey",
					"format": MOST.config.Locale.getShortDate(),
					"allowBlank": false
				},
				"exportRenderer": function(value, record, dataIndex, cell, column){
					return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
				}
			},
			{
				"header":  ViewUtil.getLabel('days'), "dataIndex": "days", "reference": "refDays", "filter": "string", "width": 80
			
			}]
		},
		{
			"key": "GroupManagementForRosterSetupStaff",
			"items": [
				{
				"header": ViewUtil.getLabel('gridNo'), "xtype": "rownumberer", "width" : 50, "align" : "center"
			},
			{
				"dataIndex": "hiddenEmpId", "filter": "string", "hidden": true
			},
			{
				"header": ViewUtil.getLabel('groupmanagementEmpId'), "dataIndex": "empId", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('engNm'), "dataIndex": "engNm", "filter": "string", "width": 220
			},
			{
				"header": ViewUtil.getLabel('proleCd'), "dataIndex": "proleCd", "width": 90
			},
			{
				"header": ViewUtil.getLabel('sroleCd'), "dataIndex": "roleCd", "width": 200
			},
			{
				"header": ViewUtil.getLabel('grdCdNm'), "dataIndex": "grdCdNm", "filter": "string", "width": 110
			},
			{
				"header": ViewUtil.getLabel('groupmanagementStatus'), "dataIndex": "statCdNm", "filter": "string", "width": 110
			},
			{
				"header": ViewUtil.getLabel('workLocCdNm'), "dataIndex": "workLocCdNm", "filter": "string", "width": 130
			},
			{
				"header": ViewUtil.getLabel('shftGroupNm'), "dataIndex": "shftGroupNm", "filter": "string", "width": 110
			}]
		},
		{
			"key": "ShiftDefinitionGroup",
			"items": [
				{
					"header": ViewUtil.getLabel('gridNo'), "xtype": "rownumberer", "width" : 50, "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('groupNm'), "dataIndex": "groupNm", "reference": "refGroupCd", "filter": "string", "editable": false, "width": 370,
					"editor": {
						"xtype": "textfield",
						"maxLength": 50,
						"enforceMaxLength" : true,
						"allowBlank": false,
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							}
						}
					}
				},
				{
					"header": ViewUtil.getLabel('shiftdefinitionUseyn'), "dataIndex": "useYn", "reference": "refShiftDefGroupUseYn", "filter": "string", "width": 120,
					"editor":{
						"xtype": "combo",
						"reference": "refShiftDefGroupComboUseYn",
						"bind": {store: '{userYnCombo}'},
						"queryMode": "local",
						"displayField": "scdNm",
						"valueField": "scd",
						"value": "Y",
						"allowBlank": false
					}
				},
				{
					"header": ViewUtil.getLabel('shftRmk'), "dataIndex": "rmk", "reference": "refGroupRmk", "filter": "string", "width": 228,
					"editor": {
						"xtype": "textfield",
						"maxLength": 100,
						"enforceMaxLength" : true
					}
				}
			]
		},
		{
			"key": "GroupManagementForRosterSetupVesselOp",
			"items":  [{
				"header": ViewUtil.getLabel('gridNo'), "xtype": "rownumberer", "width" : 50, "align" : "center"
			},
			{
				"dataIndex": "hiddenEmpId", "filter": "string", "hidden": true
			},
			{
				"header": ViewUtil.getLabel('groupmanagementEmpId'), "dataIndex": "empId", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('engNm'), "dataIndex": "engNm", "filter": "string", "width": 210
			},
			{
				"header": ViewUtil.getLabel('rolecdNm'), "dataIndex": "roleCdNm", "filter": "string", "width": 120
			}]
		},
		{
			"key": "ShiftDefinitionList",
			"items":  [
			{
				"header": ViewUtil.getLabel('shftName'), "dataIndex": "shftNm", "reference": "refShftNm", "filter": "string", "width": 165, "editable": false,
				"editor": {
					"xtype": "textfield",
					"maxLength": 20,
					"enforceMaxLength" : true,
					"allowBlank": false,
					"listeners":{
						"change": function(){
							var me = this;
							me.setValue(this.getValue().toUpperCase());
						}
					}
			   }
			},
			{
				"header": ViewUtil.getLabel('shftIdx'), "dataIndex": "shftIdx", "reference": "refShftIdx", "filter": "string", "width": 100,
				"editor": {
					"xtype": "textfield",
					"maxLength": 4,
					"maskRe": /[0-9:]/,
					"enforceMaxLength" : true,
					"allowBlank": false
			   }
			},
			{
				"header": ViewUtil.getLabel('fmHhmm'), "dataIndex": "fmHhmm", "reference": "refFmHhmm", "width": 132,
				"editor": {
					"xtype": "timefield",
					"minValue": "00:00 AM",
					"maxValue": "23:59 PM",
					"increment": 1,
					"maskRe": /[0-9:]/,
					"altFormats": "Hi",
					"filter": "string",
					"format": "H:i",
					"editable": true,
					"allowBlank": false
				},
				"renderer": "onTimeFormat"
			
			},
			{
				"header": ViewUtil.getLabel('toHhmm'), "dataIndex": "toHhmm", "reference": "refToHhmm", "width": 132,
				"editor": {
					"xtype": "timefield",
					"minValue": "00:00 AM",
					"maxValue": "23:59 PM",
					"increment": 1,
					"maskRe": /[0-9:]/,
					"altFormats": "Hi",        
					"format": "H:i",
					"filter": "string",
					"editable": true,
					"allowBlank": false
				},
				"renderer": "onTimeFormat"
			},
			{
				"header": ViewUtil.getLabel('shiftdefinitionUseyn'), "dataIndex": "useYn", "reference": "refShiftDefListUseYn", "filter": "string", "width": 90,
				"editor":{
					"xtype": "combo",
					"queryMode": "local",
					"bind": {
						"store": '{userYnCombo}'
					},
					"displayField": "scdNm",
					"valueField": "scd",
					"allowBlank": false,
					"listeners":{
						"change": function(){
							var me = this;
							me.setValue(me.getValue().toUpperCase());
						}
					}
				}
			},
			{

				"header": ViewUtil.getLabel('shftRmk'), "dataIndex": "rmk", "reference": "refShftRmk", "filter": "string", "width": 100,
				"editor": {
					"xtype": "textfield",
					"maxLength": 100,
					"enforceMaxLength" : true
			   }
			}]
		},
		{
			"key": "MegaForContractor",
			"items": [  
				{
					"header": ViewUtil.getLabel("vslcallid"),
					"dataIndex": "vslCallId",
					"reference": "refVslCallId",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel("vslNm"),
					"reference": "refVslNm",
					"dataIndex": "vslNm",
					"align": "left",
					"filter": "string",
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel("megaNo"),
					"reference": "refMegaNo",
					"dataIndex": "megaNo",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel("purpTpCdNm"),
					"dataIndex": "purpTpCdNm",
					"reference": "refPurpTpCdNm",
					"filter": "string",
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel("contractor"),
					"dataIndex": "opeCompCd",
					"reference": "refOpeCompCd",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('fileYn'),
					"xtype": "actioncolumn",
					"reference": "refFileYn",
					"dataIndex": "fileYn",
					"filter": "string",
					"items": [
						{
							"getClass": function (value, meta, record) {
								return (record.data.fileYn === 'Y') ? 'x-fa fa-check txt_green' : '';
							}
						}
					],
					"width": 100
				}, 
				{
					"header": ViewUtil.getLabel("voucherNo"),
					"dataIndex": "voucherNo",
					"reference": "refVoucherNo",
					"filter": "string",
					"lockable": false,
					"width": 125,
					"align": "left"
				},
				{
					"header": ViewUtil.getLabel("supplyStatus"),
					"dataIndex": "supplyStatus",
					"reference": "refSupplyStatus",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel("workYmd"),
					"dataIndex": "workYmd",
					"reference": "refWorkYmd",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getShortDate(),
					"width": 100,
					"exportRenderer": function (value, record, dataIndex, cell, column) {
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					},
				},
				{
					"header": ViewUtil.getLabel("shftNm"),
					"reference": "refShftNm",
					"dataIndex": "shftNm",
					"filter": "string",
				},
				{
					"header": ViewUtil.getLabel("equipment"),
					"reference": "refEqDivCdNm",
					"dataIndex": "eqDivCdNm",
					"filter": "string",
				},
				{
					"header": ViewUtil.getLabel("capaDescr"),
					"dataIndex": "capaDescr",
					"reference": "refCapaDescr",
					"filter": "string",
				},
				{
					"header": ViewUtil.getLabel("stevedore"),
					"reference": "refOpeCompNm",
					"dataIndex": "opeCompNm",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel("nofOper"),
					"reference": "refNofOpe",
					"dataIndex": "nofOpe",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel("statCdNm"),
					"reference": "refStatCdNm",
					"dataIndex": "statCdNm",
					"filter": "string",
					"width": 100,
					"renderer": function (value = refs.ctlMegaStatusCombo.getValue()) {
						if (value == "Submitted Amend") {
							return (
								'<span style="color:#FFA500;">' +
								value +
								"</span>"
							);
						} else if (
							value == "Cancellation Request"
						) {
							return (
								'<span style="color:#FF748C;">' +
								value +
								"</span>"
							);
						} else {
							return value;
						}
					},
				},
				{
					"header": ViewUtil.getLabel("reqrNm"),
					"dataIndex": "reqrNm",
					"reference": "refReqrNm",
					"filter": "string",
					"align": "left",
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel("reqDt"),
					"dataIndex": "reqDt",
					"reference": "refReqDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 150,
					"exportRenderer": function (value, record, dataIndex, cell, column) {
						return Ext.util.Format.date(
							value,
							MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
						);
					},
				},
				{
					"header": ViewUtil.getLabel("appr"),
					"dataIndex": "appr",
					"reference": "refAppr",
					"filter": "string",
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel("appDt"),
					"dataIndex": "appDt",
					"reference": "refAppDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 150,
					"exportRenderer": function (value, record, dataIndex, cell, column) {
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					},
				},
				{
					"header": ViewUtil.getLabel("rejBy"),
					"dataIndex": "rejBy",
					"reference": "refRejBy",
					"filter": "string",
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel("rejDt"),
					"dataIndex": "rejDt",
					"reference": "refRejDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 150,
					"exportRenderer": function (value, record, dataIndex, cell, column) {
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					},
				},
				{
					"header": ViewUtil.getLabel("cnclBy"),
					"dataIndex": "cnclBy",
					"reference": "refCnclBy",
					"filter": "string",
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel("cnclDt"),
					"dataIndex": "cnclDt",
					"reference": "refCnclDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 150,
					"exportRenderer": function (value, record, dataIndex, cell, column) {
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					},
				},
				{
					"header": ViewUtil.getLabel("depyYn"),
					"xtype": "actioncolumn",
					"reference": "refDepyYn",
					"dataIndex": "depyYn",
					"hideable": false,
					"lockable": false,
					"items": [
						{
							"getClass": function (value, meta, record) {
								return record.data.depyYn === "Y" ? "x-fa fa-check txt_red" : "";
							},
						},
					],
					"width": 100,
				},
			]
		},
		{
			"key": "MegaForContractorFileUpload",
			"items": [
				{
					"header": ViewUtil.getLabel('fileName'),
					"dataIndex": "fileName",
					"flex": 1,
					"align": "left",
					"caption": "fileName",
					"reference": "refFileName",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('fileSize'),
					"dataIndex": "fileSize",
					"xtype": "numbercolumn",
					"reference": "reffileSize",
					"format": "0,000",
					"width": 100,
					"caption": "fileSize",
					"filter": "string",
				},
			]
		},
		{
			"key": "MegaRequisition",
			"items":  [
				{
					"xtype": "rownumberer", "width" : 40, "locked" : true, "lockable": false, "header": "No", "align" : "center"
				},{
					"header": ViewUtil.getLabel('workYmd'), "dataIndex": "workYmd", "reference": "refWorkYmd", "xtype": "datecolumn", "format": MOST.config.Locale.getShortDate(), "width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('shftNm'), "dataIndex": "shftId", "reference": "refShftNm", "filter": "string", "width": 70, "renderer":"onGridComboRenderer"
				},
				{
					"header": ViewUtil.getLabel('purpTpCdNm'), "dataIndex": "purpTpCdNm", "reference": "refPurpTpCdNm", "filter": "string", "align":"left", "width": 170
				},
				{
					"header": ViewUtil.getLabel('megaNo'), "dataIndex": "megaNo", "reference": "refMegaNo", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('statCdNm'), "dataIndex": "statCdNm", "reference": "refStatCdNm", "filter": "string", "align":"left", "width": 140, "align": "center", "lockable": false,
					"renderer": function(value = refs.ctlMegaStatusCombo.getValue()){
						if(value == 'Submitted Amend'){
							return '<span style="color:#FFA500;">' + value + '</span>';
						} else if (value == 'Cancellation Request'){
							return '<span style="color:#FF748C;">' + value + '</span>';
						} else {
							return value;
						}
					},
				},
				{
					"header": ViewUtil.getLabel('reqDt'),"dataIndex": "reqDt", "reference": "refReqDt", "xtype": "datecolumn", "lockable": false, "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(), "width": 130,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('whConfmDt'),
					"dataIndex": "whConfmDt",
					"reference": "refWhConfmDt",
					"xtype": "datecolumn",
					"lockable": false,
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 115,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('whConfmBy'),
					"dataIndex": "whConfmBy",
					"reference": "refWhConfmBy",
					"lockable": false,
					"filter": "string",
					"width": 125
				},
				{
					"header": ViewUtil.getLabel("supplyStatus"),
					"dataIndex": "supplyStatus",
					"reference": "refSupplyStatus",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel("ivNo"),
					"dataIndex": "ivNo",
					"reference": "refIvNo",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('berthLocation'), "dataIndex": "berthLoc", "reference": "refBerthLocation", "lockable": false, "filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "reference": "refVslCallId", "filter": "string", "lockable": false, "align":"left", "width": 120
				},
				{
					"header": ViewUtil.getLabel('vslNm'), "dataIndex": "vslNm", "reference": "refVslNm", "lockable": false, "align":"left", "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('reqr'), "dataIndex": "reqr", "reference": "refReqr", "lockable": false, "filter": "string", "align":"left", "width": 150
				},
				{
					"header": ViewUtil.getLabel('reqrNm'), "dataIndex": "reqrNm", "reference": "refReqrNm", "filter": "string", "lockable": false, "align":"left", "width": 170
				},
				{
					"header": ViewUtil.getLabel('crtBy'), "dataIndex": "crtBy", "reference": "refCrtBy", "lockable": false, "filter": "string", "align":"left", "width": 140
				},
				{
					"header": ViewUtil.getLabel('ptnrTpNm'), "dataIndex": "ptnrTpNm", "reference": "refPtnrTpNm", "lockable": false, "filter": "string", "align":"left", "width": 170
				},
				{
					"header": ViewUtil.getLabel('megaWhYn'), "dataIndex": "megaWhYn", "lockable": false, "reference": "refMegaWhYn","xtype": "actioncolumn", "hideable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.megaWhYn === 'Y') ? 'x-fa fa-check txt_red' : '';
						}
					}],
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('depyYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "depyYn", "lockable": false, "reference": "refDepyYn", "width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.depyYn === 'Y') ? 'x-fa fa-check txt_red' : '';
						}
					}]
					
				},
				   {
					"header": ViewUtil.getLabel('statusDeployed'), "hideable": false, "xtype": "actioncolumn", "dataIndex": "deployed", "lockable": false, "reference": "refDeployed", "filter": "string", "width": 130,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.deployed === 'Y') ? 'x-fa fa-check txt_red' : '';
						}
					}],
				},
				{
					"header": ViewUtil.getLabel('cgTpNmMega'), "dataIndex": "cgTpNm", "reference": "refCgTpNm", "filter": "string", "lockable": false, "width": 130
				},
				{
					"header": ViewUtil.getLabel('cgTpCd'), "dataIndex": "cgTpCd", "reference": "refCgTpCd", "lockable": false, "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('cgTon'), "dataIndex": "cgTon", "reference": "refCgTon", "lockable": false, "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('gearsYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "gearsYn", "lockable": false, "reference": "refGearsYn", "width": 90,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.gearsYn === 'Y') ? 'x-fa fa-check txt_red' : '';
						}
					}]
					
				},
				{
					"header": ViewUtil.getLabel('forkliftYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "forkliftYn", "lockable": false, "reference": "refForkliftYn", "width": 90,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.forkliftYn === 'Y') ? 'x-fa fa-check txt_red' : '';
						}
					}]
					
				},
				{
					"header": ViewUtil.getLabel('trailerYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "trailerYn", "lockable": false, "reference": "refTrailerYn", "width": 90,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.trailerYn === 'Y') ? 'x-fa fa-check txt_red' : '';
						}
					}]
					
				},
				{
					"header": ViewUtil.getLabel('mechanicalYn'), "xtype": "actioncolumn", "hideable": false, "lockable": false, "dataIndex": "mechanicalYn", "reference": "refMechanicalYn", "width": 90,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.mechanicalYn === 'Y') ? 'x-fa fa-check txt_red' : '';
						}
					}]
					
				},
				{
					"header": ViewUtil.getLabel('portCrane'), "lockable": false, "dataIndex": "portCrnYn", "reference": "refPortCrnYn","xtype": "actioncolumn", "hideable": false, "width": 90,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.portCrnYn === 'Y') ? 'x-fa fa-check txt_red' : '';
						}
					}]
					
				},
				{
					"header": ViewUtil.getLabel('cgDtlYn'), "dataIndex": "cgDtlYn", "lockable": false, "reference": "refCgDtlYn","xtype": "actioncolumn", "hideable": false, "width": 90,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.cgDtlYn === 'Y') ? 'x-fa fa-check txt_red' : '';
						}
					}]
					
				},
				{
					"header": ViewUtil.getLabel('stvdCompNm'), "dataIndex": "stvdCompNm", "lockable": false, "reference": "refStvdCompNm", "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('trmgCompNm'), "dataIndex": "trmgCompNm", "lockable": false, "reference": "refTrmgCompNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('appr'), "dataIndex": "appr", "reference": "refAppr", "lockable": false, "filter": "string", "width": 220
				},
				{
					"header": ViewUtil.getLabel('appDt'), "dataIndex": "appDt", "reference": "refAppDt", "lockable": false, "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(), "width": 130,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('rejBy'), "dataIndex": "rejBy", "reference": "refRejBy", "lockable": false, "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('rejDt'), "dataIndex": "rejDt", "reference": "refRejDt", "lockable": false, "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(), "width": 130,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('cnclBy'), "dataIndex": "cnclBy", "reference": "refCnclBy", "lockable": false, "filter": "string", "width": 220
				},
				{
					"header": ViewUtil.getLabel('cnclDt'), "dataIndex": "cnclDt", "reference": "refCnclDt", "lockable": false, "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(), "width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{"header": ViewUtil.getLabel('penaltyNm'), "dataIndex": "penaltyNm", "reference": "refPenaltyNm", "lockable": false, "filter": "string", "width": 150
				},
				{"header": ViewUtil.getLabel('penaltyCd'), "dataIndex": "penaltyCd", "reference": "refPenaltyCd", "lockable": false, "filter": "string", "width": 90
				},
				{
					"header": ViewUtil.getLabel('etw'),"dataIndex": "etw", "reference": "refEtw", "lockable": false, "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(), "width": 130,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('rejRmk'), "dataIndex": "rejRmk", "reference": "refRejRmk", "lockable": false, "filter": "string", "width": 170
				}]
		},
		{
			"key": "MegaDetailGears",
			"items": [
				{
					"header": ViewUtil.getLabel('capaDescr'), "dataIndex": "capaDescr", "reference": "refDetailGearsCapaDescr", "filter": "string", "flex": 1, "align": "left"
				},
		
				{
					"header": ViewUtil.getLabel('locId'), "dataIndex": "locId", "reference": "refDetailGearsLocId", "width": 120, "labelAlign": "left",
				},
				{
					"header": ViewUtil.getLabel('startTime'), "dataIndex": "workStDt", "width": 130, "labelAlign": "left"
				},
				{
					"header": ViewUtil.getLabel('endTime'), "dataIndex": "workEndDt", "width": 130, "labelAlign": "left"
				},
				{
					"header": ViewUtil.getLabel('reqQty'), "xtype": "numbercolumn", "format": "0,000", "width": 90, "value": 0, "dataIndex": "reqQty", "reference": "refDetailGearsReqQty",									
				},
				{
					"header": ViewUtil.getLabel('confmQty'), "dataIndex": "confmQty", "reference": "refDetailGearsConfmQty", "xtype": "numbercolumn", "format": "0,000", "width": 90, "value": 0, 
				}
			]
		},
		{
			"key": "MegaDetailTabGearsCompany",
			"items":  [
				{
					"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "opeCompCd", "reference": "refDetailGearsOpeCompNm", "filter": "string", "width": 75,
				},
				{
					"header": ViewUtil.getLabel('nofOpe'), "dataIndex": "nofOpe", "reference": "refDetailGearsNofOpe", "width": 75, "align" : "center", "format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('supplyQty'),
					"dataIndex": "supplyQty",
					"reference": "refDetailGearsSupplyQty",
					"filter": "string",
					"width": 75,
					"format": "0,000",
					"align" : "center", 
				},
				{
					"header": ViewUtil.getLabel('rmk'),
					"dataIndex": "rmk",
					"reference": "refDetailGearsRmk",
					"flex": 1,
					"align": "left",
					"style": "text-align:center"
				}
			]
		},
		{
			"key": "MegaDetailForkLift",
			"items":  [
				{
					"header": ViewUtil.getLabel('capaDescr'), "dataIndex": "capaDescr", "reference": "refDetailForkliftCapaDescr", "filter": "string", "flex": 1
				},
				{
					"header": ViewUtil.getLabel('locId'), "dataIndex": "locId", "reference": "refDetailForkliftLocId", "width": 100
				},
				{
					"header": ViewUtil.getLabel('startTime'), "dataIndex": "workStDt", "width": 130, "labelAlign": "center"
				},
				{
					"header": ViewUtil.getLabel('endTime'), "dataIndex": "workEndDt", "width": 130, "labelAlign": "center"
				},
				{
					"header": ViewUtil.getLabel('reqQty'), "dataIndex": "reqQty", "reference": "refDetailForkliftReqQty", "xtype": "numbercolumn", "format": "0,000", "width": 80,
				},
				{
					"header": ViewUtil.getLabel('confmQty'), "dataIndex": "confmQty", "reference": "refDetailForkliftConfmQty", "xtype": "numbercolumn", "format": "0,000", "width": 80,
				},
				{
					"header": ViewUtil.getLabel('flStatus'), "dataIndex": "flStatus", "reference": "refDetailForkliftFlStatus", "width": 80,								
				},
				{
					"header": ViewUtil.getLabel('whQty'), "dataIndex": "whQty", "reference": "refDetailForkliftWhQty", "width": 80, "visible": false, "xtype": "numbercolumn", "format": "0,000",
				}
				]
		},
		{
			"key": "MegaDetailTabForkliftCompany",
			"items": [
				{
					"header": ViewUtil.getLabel('opeCompNm'),
					"dataIndex": "opeCompCd",
					"reference": "refDetailForkliftOpeCompNm",
					"filter": "string",
					"width": 75,
				},
				{
					"header": ViewUtil.getLabel('nofOpe'),
					"dataIndex": "nofOpe",
					"reference": "refDetailForkliftNofOpe",
					"width": 75,
					"format": "0,000",
					"style": "text-align:center"
				},
				{
					"header": ViewUtil.getLabel('supplyQty'),
					"dataIndex": "supplyQty",
					"reference": "refDetailForkliftSupplyQty",
					"filter": "string",
					"width": 75,
					"format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('rmk'),
					"dataIndex": "rmk",
					"reference": "refDetailForkliftRmk",
					"flex": 1,
					"align": "left",
					"style": "text-align:center"
				}
			]
		},
		{
			"key": "MegaDetailStevedore",
			"items": [
				{
					"xtype": "rownumberer",
					"width": 50,
					"header": "No",
					"lockable": false
				},
				{
					"header": ViewUtil.getLabel('stevedore'),
					"dataIndex": "nofGang",
					"reference": "refDetailStevedoreStevedore",
					"filter": "string",
					"width": 70,
					"labelAlign": "left"
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "locId",
					"reference": "refDetailStevedoreWorkingArea",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"align": "center",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"align": "center",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('supervisor'),
					"dataIndex": "nofStvdSprr",
					"reference": "refDetailStevedoreSupervisor",
					"xtype": "numbercolumn",
					"format": "0,000",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('winchMen'),
					"dataIndex": "nofWchmn",
					"reference": "refDetailStevedorenWinchMen",
					"xtype": "numbercolumn",
					"format": "0,000",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('generalWorkers'),
					"dataIndex": "nofStvdGwker",
					"reference": "refDetailStevedoreGeneralWorkers",
					"format": "0,000",
					"flex": 1,
				}
			]
		},
		{
			"key": "MegaDetailTabStevedoreCompany",
			"items": [ 
				{
					"header": ViewUtil.getLabel('contractor'),
					"dataIndex": "opeCompCd",
					"reference": "refDetailStevedoreOpeCompNm",
					"filter": "string",
					"flex": 1
				},
				{
					"header": ViewUtil.getLabel('supervisor'),
					"dataIndex": "nofStvdSprr",
					"reference": "refDetailMegaStevedoreNofStvdSprr",
					"filter": "string",
					"flex": 1,
					"format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('winchMen'),
					"dataIndex": "nofWchmn",
					"reference": "refDetailMegaStevedoreNofWchmn",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('generalWorkers'),
					"dataIndex": "nofStvdGwker",
					"reference": "refDetailMegaStevedoreNofStvdGwker",
					"flex": 1,
				}
			]
		},
		{
			"key": "MegaDetailTrimming",
			"items": [
				{
					"xtype": "rownumberer",
					"width": 50,
					"header": "No",
					"lockable": false
				},
				{
					"header": ViewUtil.getLabel('trimming'),
					"dataIndex": "nofGang",
					"reference": "refDetailTrimmingTrimming",
					"filter": "string",
					"width": 70,
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "locId",
					"reference": "refDetailTrimmingWorkingArea",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('supervisor'),
					"dataIndex": "nofTrmgSprr",
					"reference": "refDetailTrimmingSupervisor",
					"xtype": "numbercolumn",
					"format": "0,000",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('signalMen'),
					"dataIndex": "nofSglmn",
					"reference": "refDetailTrimmingnSignalMen",
					"xtype": "numbercolumn",
					"format": "0,000",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('deckMen'),
					"dataIndex": "nofDekmn",
					"reference": "refDetailTrimmingDeckman",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('hoperMen'),
					"dataIndex": "nofHopmn",
					"reference": "refDetailTrimmingHopperMan",
					"flex": 1,
				}
			]
		},
		{
			"key": "MegaDetailTabTrimmingCompany",
			"items": [
				{
					"header": ViewUtil.getLabel('contractor'),
					"dataIndex": "opeCompCd",
					"reference": "refDetailTrimmingOpeCompNm",
					"filter": "string",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('supervisor'),
					"dataIndex": "nofTrmgSprr",
					"reference": "refDetailMegaTrimmingNofTrmgSprr",
					"filter": "string",
					"flex": 1,
					"format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('signalMen'),
					"dataIndex": "nofSglmn",
					"reference": "refDetailMegaTrimmingNofSglmnn",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('deckMen'),
					"dataIndex": "nofDekmn",
					"reference": "refDetailMegaTrimmingNofDekmn",
					"flex": 1,
				},
				{
					"header": ViewUtil.getLabel('hoperMen'),
					"dataIndex": "nofHopmn",
					"reference": "refDetailMegaTrimmingNofHopmn",
					"flex": 1,
				}
			]
		},
		{
			"key": "MegaDetailTrailer",
			"items": [
				{
					"header": ViewUtil.getLabel('capaDescr'), "dataIndex": "capaDescr", "reference": "refDetailTrailerCapaDescr", "filter": "string", "flex": 1, "align": "left"
				},
		
				{
					"header": ViewUtil.getLabel('locId'), "dataIndex": "locId", "reference": "refDetailTrailerLocId", "width": 120, 
				},
				{
					"header": ViewUtil.getLabel('startTime'), "dataIndex": "workStDt", "align" : "center", "width": 130, "labelAlign": "center"
				},
				{
					"header": ViewUtil.getLabel('endTime'), "dataIndex": "workEndDt", "align" : "center", "width": 130, "labelAlign": "center"
				},
				{
					"header": ViewUtil.getLabel('reqQty'), "dataIndex": "reqQty", "reference": "refDetailTrailerReqQty", "xtype": "numbercolumn", "format": "0,000", "width": 90, "labelAlign": "left", "value": 0,
				},
				{
					"header": ViewUtil.getLabel('confmQty'), "dataIndex": "confmQty", "reference": "refDetailTrailerConfmQty", "xtype": "numbercolumn", "format": "0,000", "width": 90, "labelAlign": "left", "value": 0,
				}
				]
		},
		{
			"key": "MegaDetailTabTrailerCompany",
			"items": [
				{
					"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "opeCompCd", "reference": "refDetailTrailerOpeCompNm", "filter": "string", "width": 75,
				},
				{
					"header": ViewUtil.getLabel('nofOpe'), "dataIndex": "nofOpe", "reference": "refDetailTrailerNofOpe", "width": 75, "align" : "right", "format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('supplyQty'),
					"dataIndex": "supplyQty",
					"reference": "refDetailTrailerSupplyQty",
					"filter": "string",
					"width": 75,
					"format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('rmk'),
					"dataIndex": "rmk",
					"reference": "refDetailTrailerRmk",
					"flex": 1,
					"align": "left",
					"style": "text-align:center"
				}
			]
		},
		{
			"key": "MegaDetailMechanical",
			"items":  [
				{
					"header": ViewUtil.getLabel('eqDivCdNm'), "dataIndex": "eqDivCd", "reference": "refDetailMechanicalEqDivCdNm", "width": 80,
				},	
				{
					"header": ViewUtil.getLabel('capaDescr'), "dataIndex": "capaDescr", "reference": "refDetailMechanicalCapaDescr", "flex": 1, "align": "left"
				},
				{
					"header": ViewUtil.getLabel('locId'), "dataIndex": "locId", "reference": "refDetailMechanicalLocId", "width": 120,
				},
				{
					"header": ViewUtil.getLabel('startTime'), "dataIndex": "workStDt", "align" : "center", "width": 130, "labelAlign": "center"
				},
				{
					"header": ViewUtil.getLabel('endTime'), "dataIndex": "workEndDt", "align" : "center", "width": 130, "labelAlign": "center"
				},
				{
					"header": ViewUtil.getLabel('reqQty'), "dataIndex": "reqQty", "reference": "refDetailMechanicalReqQty", "xtype": "numbercolumn", "format": "0,000", "width": 100, "minValue" : 0, "maxValue" : 23, "value": 0,
				},
				{
					"header": ViewUtil.getLabel('confmQty'), "dataIndex": "confmQty", "reference": "refDetailMechanicalConfmQty", "xtype": "numbercolumn", "format": "0,000", "width": 100, "minValue" : 0, "maxValue" : 59, "value": 0,
				}
				]
		},
		{
			"key": "MegaDetailTabMechanicalCompany",
			"items": [
				{
					"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "opeCompCd", "reference": "refDetailMechanicalOpeCompNm", "filter": "string", "width": 75,
				},
				{
					"header": ViewUtil.getLabel('nofOpe'), "dataIndex": "nofOpe", "reference": "refDetailMechanicalNofOpe", "width": 75, "format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('supplyQty'),
					"dataIndex": "supplyQty",
					"reference": "refDetailMechanicalSupplyQty",
					"filter": "string",
					"width": 75,
					"format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('rmk'),
					"dataIndex": "rmk",
					"reference": "refDetailMechanicalRmk",
					"flex": 1,
				}
			]
		},
		{
			"key": "MegaDetailPortCrane",
			"items": [
				{
					"header": ViewUtil.getLabel('eqDivCdNm'), "dataIndex": "eqDivCd", "reference": "refDetailPortCraneEqDivCdNm", "filter": "string", "width": 115, "renderer":"rendererEqDivPortCrane"
				},
				{
					"header": ViewUtil.getLabel('capaDescr'), "dataIndex": "capaDescr", "reference": "refDetailPortCraneCapaDescr", "flex": 1, "align": "left"
					//renderer:'rendererCapacityPortCrane'
				},
				{
					"header": ViewUtil.getLabel('startTime'), "dataIndex": "workStDt", "align" : "center", "width": 130, "labelAlign": "center"
				},
				{
					"header": ViewUtil.getLabel('endTime'), "dataIndex": "workEndDt", "align" : "center", "width": 130, "labelAlign": "center"
				},
				{
					"header": ViewUtil.getLabel('reqQty'), "dataIndex": "reqQty", "reference": "refDetailPortCraneReqQty", "width": 100, "xtype": "numbercolumn", "format": "0,000",
					// editor : {
					// 	xtype : 'numberfield',
					// 	minValue : 0,
					// 	maxValue: 9999999999,
					// 	align : 'right',
					// 	selectOnFocus : true
					// },
				},
				{
					"header": ViewUtil.getLabel('confmQty'), "dataIndex": "confmQty", "reference": "refDetailPortCraneConfmQty", "width": 90, "xtype": "numbercolumn", "format": "0,000",
					// editor : {
					// 	xtype : 'numberfield',
					// 	minValue : 0,
					// 	maxValue: 9999999999,
					// 	align : 'right',
					// 	selectOnFocus : true
					// },
				}
			]
		},
		{
			"key": "MegaDetailTabPortCraneCompany",
			"items": [
				{
					"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "opeCompCd", "reference": "refDetailPortCraneOpeCompNm", "filter": "string", "width": 75,
				},
				{
					"header": ViewUtil.getLabel('nofOpe'), "dataIndex": "nofOpe", "reference": "refDetailPortCraneNofOpe", "width": 75, "align" : "center", "format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('supplyQty'),
					"dataIndex": "supplyQty",
					"reference": "refDetailPortCraneSupplyQty",
					"filter": "string",
					"width": 75,
					"format": "0,000",
				},
				{
					"header": ViewUtil.getLabel('rmk'),
					"dataIndex": "rmk",
					"reference": "refDetailPortCraneRmk",
					"flex": 1,
					"align": "left",
					"style": "text-align:center"
				}
			]
		},
		{
			"key": "MegaDetailCargoDetail",
			"items": [
			{
				"header": ViewUtil.getLabel('cgDescNm'), "dataIndex": "cdNm", "reference": "refDetailCargoCgDescNm", "align":"left", "filter": "string", "width": 200
			},
			{
				"header": "#1", "dataIndex": "hatchNo1", "reference": "refDetailCargoHatchNo1"
			},
			{
				"header": "#2", "dataIndex": "hatchNo2", "reference": "refDetailCargoHatchNo2"
			},
			{
				"header": "#3", "dataIndex": "hatchNo3", "reference": "refDetailCargoHatchNo3"
			},
			{
				"header": "#4", "dataIndex": "hatchNo4", "reference": "refDetailCargoHatchNo4"
			},
			{
				"header": "#5", "dataIndex": "hatchNo5", "reference": "refDetailCargoHatchNo5"
			},
			{
				"header": "#6", "dataIndex": "hatchNo6", "reference": "refDetailCargoHatchNo6"
			},
			{
				"header": "#7", "dataIndex": "hatchNo7", "reference": "refDetailCargoHatchNo7"
			},
			{
				"header": "#8", "dataIndex": "hatchNo8", "reference": "refDetailCargoHatchNo8"
			},
			{
				"header": "#9", "dataIndex": "hatchNo9", "reference": "refDetailCargoHatchNo9"
			},
			{
				"header": "#10", "dataIndex": "hatchNo10", "reference": "refDetailCargoHatchNo10"
			},
			{
				"header": "#11", "dataIndex": "hatchNo11", "reference": "refDetailCargoHatchNo11"
			},
			{
				"header": "#12", "dataIndex": "hatchNo12", "reference": "refDetailCargoHatchNo12"
			}]
		},
		{
			"key": "MegaNonVessel",
			"items": [
				{
					"xtype": "rownumberer", "width" : 50, "header": "No", "align" : "center", "lockable": false
				},
				{
					"header": ViewUtil.getLabel('workYmd'), "dataIndex": "workYmd", "reference": "refWorkYmd", "xtype": "datecolumn", "format": MOST.config.Locale.getShortDate(), "width": 120, "lockable": false,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('shftNm'), "dataIndex": "shftId", "reference": "refShftNm", "filter": "string", "width": 70, "renderer":"onGridComboRenderer", "lockable": false
				},
				{
					"header": ViewUtil.getLabel('purpTpCdNm'), "dataIndex": "purpTpCdNm", "reference": "refPurpTpCdNm", "filter": "string", "lockable": false, "align":"left", "width": 170
				},
				{
					"header": ViewUtil.getLabel('megaNo'), "dataIndex": "megaNo", "reference": "refMegaNo", "lockable": false, "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('statCdNm'), "dataIndex": "statCdNm", "reference": "refStatCdNm", "filter": "string", "align":"left", "lockable": false, "width": 140
				},
				{
					"header": ViewUtil.getLabel('reqDt'), "dataIndex": "reqDt", "reference": "refReqDt", "xtype": "datecolumn", "lockable": false, "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(), "width": 130,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('amdDt'), "dataIndex": "amdDt", "reference": "refAmdDt", "xtype": "datecolumn", "lockable": false, "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(), "width": 130,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('amdBy'), "dataIndex": "amdBy", "reference": "refAmdBy", "filter": "string", "lockable": false, "width": 120
				},
				{
					"header": ViewUtil.getLabel('reqr'), "dataIndex": "reqr", "reference": "refReqr", "filter": "string", "lockable": false, "align":"left", "width": 150
				},
				{
					"header": ViewUtil.getLabel('reqrNm'), "dataIndex": "reqrNm", "reference": "refReqrNm", "filter": "string", "lockable": false, "align":"left", "width": 170
				},
				{
					"header": ViewUtil.getLabel('crtBy'), "dataIndex": "crtBy", "reference": "refCrtBy", "filter": "string", "lockable": false, "align":"left", "width": 140
				},
				{
					"header": ViewUtil.getLabel('megaWhYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "megaWhYn", "reference": "refMegaWhYn", "lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.megaWhYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('depyYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "depyYn", "reference": "refDepyYn", "lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.depyYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 110
				},
				{  
					"header": ViewUtil.getLabel('cgTpNmMega'), "dataIndex": "cgTpNm", "reference": "refCgTpNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('cgTpCd'), "dataIndex": "cgTpCd", "reference": "refCgTpCd", "filter": "string", "lockable": false, "width": 110
				},
				{
					"header": ViewUtil.getLabel('cgTon'), "dataIndex": "cgTon", "reference": "refCgTon", "filter": "string", "lockable": false, "width": 110
				},
				{
					"header": ViewUtil.getLabel('gearsYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "gearsYn", "reference": "refGearsYn", "lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.gearsYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('forkliftYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "forkliftYn", "reference": "refForkliftYn", "lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.forkliftYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('trailerYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "trailerYn", "lockable": false, "reference": "refTrailerYn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.trailerYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('mechanicalYn'), "xtype": "actioncolumn", "hideable": false, "dataIndex": "mechanicalYn", "reference": "refMechanicalYn", "lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.mechanicalYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('stvdCompNm'), "dataIndex": "stvdCompNm", "reference": "refStvdCompNm", "filter": "string", "lockable": false, "width": 170
				},
				{
					"header": ViewUtil.getLabel('appr'), "dataIndex": "appr", "reference": "refAppr", "filter": "string", "lockable": false, "width": 220
				},
				{
					"header": ViewUtil.getLabel('appDt'),
					"dataIndex": "appDt", "reference": "refAppDt", "xtype": "datecolumn", "lockable": false, "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(), "width": 130,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('rejRmk'), "dataIndex": "rejRmk", "reference": "refRejRmk", "lockable": false, "filter": "string", "width": 170
				}]
		},
		{
			"key": "MegaNonVesselDetailTabGears",
			"items": [
				{
					"header": ViewUtil.getLabel('capaDescr'),
					"dataIndex": "capaCd", "reference": "refDetailGearsCapaDescr", "filter": "string", "width": 160, "renderer":"rendererCapacity"
				},
				{
					"header": ViewUtil.getLabel('locId'), "dataIndex": "locId", "reference": "refDetailGearsLocId", "width": 150,
				},
				{
					"header": ViewUtil.getLabel('dspReqhhmm'), "dataIndex": "dspReqhhmm", "reference": "refDetailGearsDspReqhhmm", "width": 100, "renderer": "onTimeFormat"
				},
				{
					"header": ViewUtil.getLabel('reqQty'), "dataIndex": "reqQty", "reference": "refDetailGearsReqQty", "width": 100,"xtype": "numbercolumn", "align" : "right", "format": "0,000"
				},
				{
					"header": ViewUtil.getLabel('confmQty'), "dataIndex": "confmQty", "reference": "refDetailGearsConfmQty", "width": 100, "xtype": "numbercolumn", "align" : "right", "format": "0,000"
				}
				]
		},
		{
			"key": "MegaNonVesselDetailTabForklift",
			"items":  [
				{
					"header": ViewUtil.getLabel('capaDescr'), "dataIndex": "capaCd", "reference": "refDetailForkliftCapaDescr", "filter": "string", "width": 160, "renderer":"rendererCapacity"
				},
				{
					"header": ViewUtil.getLabel('locId'), "dataIndex": "locId", "reference": "refDetailForkliftLocId", "width": 150,
				},
				{
					"header": ViewUtil.getLabel('dspReqhhmm'), "dataIndex": "dspReqhhmm", "reference": "refDetailForkliftDspReqhhmm", "width": 100, "renderer": "onTimeFormat"
				},
				{
					"header": ViewUtil.getLabel('reqQty'), "dataIndex": "reqQty", "reference": "refDetailForkliftReqQty", "width": 100, "xtype": "numbercolumn", "align" : "right", "format": "0,000"
				},
				{
					"header": ViewUtil.getLabel('confmQty'), "dataIndex": "confmQty", "reference": "refDetailForkliftConfmQty", "width": 100, "xtype": "numbercolumn", "align" : "right", "format": "0,000"
				},
				{
					"header": ViewUtil.getLabel('flStatus'), "dataIndex": "flStatus", "reference": "refDetailForkliftFlStatus", "width": 80,
				},
				{
					"header": ViewUtil.getLabel('whQty'), "dataIndex": "whQty", "reference": "refDetailForkliftWhQty", "width": 100, "visible": false,"xtype": "numbercolumn", "align" : "right", "format": "0,000"
				}
			]
		},
		{
			"key": "MegaNonVesselDetailTabTrailer",
			"items": [
				{
					"header": ViewUtil.getLabel('capaDescr'), "dataIndex": "capaCd", "reference": "refDetailTrailerCapaDescr", "filter": "string", "width": 160, "renderer":"rendererCapacity"
				},
				{
					"header": ViewUtil.getLabel('locId'), "dataIndex": "locId", "reference": "refDetailTrailerLocId", "width": 150,
				},
				{
					"header": ViewUtil.getLabel('dspReqhhmm'), "dataIndex": "dspReqhhmm", "reference": "refDetailTrailerDspReqhhmm",                				 "width": 100, "renderer": "onTimeFormat"
				},
				{
					"header": ViewUtil.getLabel('reqQty'), "dataIndex": "reqQty", "reference": "refDetailTrailerReqQty", "width": 100,"xtype": "numbercolumn", "align" : "right", "format": "0,000"
				},
				{
					"header": ViewUtil.getLabel('confmQty'), "dataIndex": "confmQty", "reference": "refDetailTrailerConfmQty", "width": 100,"xtype": "numbercolumn", "align" : "right", "format": "0,000"
				}
				]
		},
		{
			"key": "MegaNonVesselDetailTabMechanical",
			"items": [
				{
					"header": ViewUtil.getLabel('eqDivCdNm'), "dataIndex": "eqDivCd", "reference": "refDetailMechanicalEqDivCdNm", "filter": "string", "width": 100,
				},
				{
					"header": ViewUtil.getLabel('capaDescr'), "dataIndex": "capaCd", "reference": "refDetailMechanicalCapaDescr", "filter": "string", "width": 120, "renderer":"rendererCapacity"
				},
				{
					"header": ViewUtil.getLabel('locId'), "dataIndex": "locId", "reference": "refDetailMechanicalLocId", "width": 130,
				},
				{
					"header": ViewUtil.getLabel('dspReqhhmm'), "dataIndex": "dspReqhhmm", "reference": "refDetailMechanicalDspReqhhmm",                				 "width": 100, "renderer": "onTimeFormat"
				},
				{
					"header": ViewUtil.getLabel('reqQty'), "dataIndex": "reqQty", "reference": "refDetailMechanicalReqQty", "width": 100,"xtype": "numbercolumn", "align" : "right", "format": "0,000"
				},
				{
					"header": ViewUtil.getLabel('confmQty'), "dataIndex": "confmQty", "reference": "refDetailMechanicalConfmQty", "width": 100,"xtype": "numbercolumn", "align" : "right", "format": "0,000"
				}
				]
		},
		{
			"key": "MegaInternalForkliftTab",
			"items": [
				{
					"header": ViewUtil.getLabel('megaNo'),
					"dataIndex": "megaNo",
					"reference": "refMegaNo",
					"filter": "string",
					"width": 120,
					"renderer" : "renderMegaNoColor"
				},
				{
					"header": ViewUtil.getLabel('jPVC'),
					"dataIndex": "vslCallId",
					"reference": "refVslCallId",
					"filter": "string",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('reqr'),
					"dataIndex": "reqr",
					"reference": "refReqr",
					"filter": "string",
					"align": "left",
					"width": 250
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqDt'),
					"dataIndex": "reqDt",
					"reference": "refReqDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 130,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('shftNm'),
					"dataIndex": "shftNm",
					"reference": "refShftNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('workYmd'),
					"dataIndex": "workYmd",
					"reference": "refWorkYmd",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getShortDate(),
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('whNo'),
					"dataIndex": "locId",
					"reference": "refLocId",
					"filter": "string",
					"align": "left",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('sndo'),
					"dataIndex": "sndo",
					"reference": "refSndo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('flCapa'),
					"dataIndex": "capaDescr",
					"reference": "refCapaDescr",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('reqQty'),
					"dataIndex": "reqQty",
					"reference": "refReqQty",
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('confmQty'),
					"dataIndex": "confmQty",
					"reference": "refConfmQty",
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"editor" : {
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 9999999999,
						"align" : "right",
						"decimalPrecision": 2,
						"selectOnFocus" : true
					},
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('whQty'),
					"dataIndex": "whQty",
					"reference": "refWhQty",
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"editor" : {
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 9999999999,
						"align" : "right",
						"decimalPrecision": 2,
						"selectOnFocus" : true
						},
					"width": 110
				}		
			]
		},
		{
			"key": "MegaInternalMechanicalTab",
			"items": [
				{
					"header": ViewUtil.getLabel('megaNo'),
					"dataIndex": "megaNo",
					"reference": "refMegaNo",
					"filter": "string",
					"width": 120,
					"renderer" : "renderMegaNoColor"
				},
				{
					"header": ViewUtil.getLabel('jPVC'),
					"dataIndex": "vslCallId",
					"reference": "refVslCallId",
					"filter": "string",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('reqr'),
					"dataIndex": "reqr",
					"reference": "refReqr",
					"filter": "string",
					"align": "left",
					"width": 250
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqDt'),
					"dataIndex": "reqDt",
					"reference": "refReqDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 130,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('shftNm'),
					"dataIndex": "shftNm",
					"reference": "refShftNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('workYmd'),
					"dataIndex": "workYmd",
					"reference": "refWorkYmd",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getShortDate(),
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('whNo'),
					"dataIndex": "locId",
					"reference": "refLocId",
					"filter": "string",
					"align": "left",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('sndo'),
					"dataIndex": "sndo",
					"reference": "refSndo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('capacityEqTpNm'),
					"dataIndex": "eqDivCdNm",
					"reference": "refEqType",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('capacityCapaQty'),
					"dataIndex": "capaDescr",
					"reference": "refCapaDescr",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('reqQty'),
					"dataIndex": "reqQty",
					"reference": "refReqQty",
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('confmQty'),
					"dataIndex": "confmQty",
					"reference": "refConfmQty",
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"editor" : {
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 9999999999,
						"align" : "right",
						"decimalPrecision": 2,
						"selectOnFocus" : true
					},
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('whQty'),
					"dataIndex": "whQty",
					"reference": "refWhQty",
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"editor" : {
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 9999999999,
						"align" : "right",
						"decimalPrecision": 2,
						"selectOnFocus" : true
					},
					"width": 110
				}
			]
		},
		{
			"key": "SpaceMovementSummary",
			"items":  [{
				"header": ViewUtil.getLabel('spaceMovementRequestReqNo'), "dataIndex": "reqNo", "filter" : "string", "width": 150
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestReqTpNm'), "dataIndex": "reqTpNm", "width": 150
			},
			{
				"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "width": 100,
			},
			{
				"header" : ViewUtil.getLabel('spaceMovementRequestBlSn'), "reference" : "refblSn", "dataIndex" : "blSn", "width": 150,
				
			},
			{
				"header" : ViewUtil.getLabel('spaceMovementRequestGrNo'), "reference" : "refgrNo", "dataIndex" : "grNo", "width" : 150,
			},
			{
				"header": ViewUtil.getLabel('spaceMovementSummaryPreLoc'), "dataIndex": "prevLocId", "width": 160,
//				        renderer:'onGridComboRenderer'
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestReqPos'), "dataIndex": "reqPos", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestPlanLocId'), "dataIndex": "planLocId", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementSummaryPlanLocs'), "dataIndex": "locId", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestOpeClassCd'), "dataIndex": "opeClassCd", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestReqM2'), "dataIndex": "reqM2", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestReqMt'), "dataIndex": "reqMt", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestCgType'), "dataIndex": "cgTpNm", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestEta'), "dataIndex": "eta", "width": 80
				,"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
				,"renderer": function(value, meta, record, rowIndex, colIndex, store) { 
					return value == 0 ? '' : Ext.Date.format(new Date(Number(value)), meta.column.format ) ; // value : 1636293840000
				}
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestEtd'), "dataIndex": "svcDt", "width": 80
				,"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
				,"renderer": function(value, meta, record, rowIndex, colIndex, store) { 
					return value == 0 ? '' : Ext.Date.format(new Date(Number(value)), meta.column.format ) ; // value : 1636293840000
				}
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestPeriod'), "dataIndex": "period", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestShipgAgnt'), "dataIndex": "shipgAgnt", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestFwdAgnt'), "dataIndex": "fwdAgnt", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementRequestCngShp'), "dataIndex": "cngShp", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementSummaryReqr'), "dataIndex": "reqr", "width": 80
//       				"reference": 'refreqrNm', 
			},
			{
				"header": ViewUtil.getLabel('spaceMovementSummaryReqDt'), "dataIndex": "reqDt", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementSummaryPayer'), "dataIndex": "payer", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementSummaryPlannedDt'), "dataIndex": "planDt", "width": 80
			},
			{
				"header": ViewUtil.getLabel('spaceMovementSummaryPlannedBy'), "dataIndex": "planBy", "width": 80
			}]
		},
		{
			"key": "SpaceMovementPlan",
			"items": [
				{
					"xtype": "rownumberer", "width" : 50, "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "reference": "refVslCallId", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('bl'), "dataIndex": "blNo", "reference": "refBLNo", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('loadingShipgNoteNo'), "dataIndex": "shipgNoteNo", "reference": "refShippingNoteNo", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqNo'), "dataIndex": "reqNo", "reference": "refSpaceMovementPlanReqNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqr'), "dataIndex": "reqr", "reference": "refSpaceMovementPlanReqr", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqTpNm'), "dataIndex": "reqTpNm", "reference": "refSpaceMovementPlanReqTpNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestCgRefNo'), "dataIndex": "cgRefNo", "reference": "refSpaceMovementPlanCgRefNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestStatNm'), "dataIndex": "statNm", "reference": "refSpaceMovementPlanStatNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqDt'), "dataIndex": "reqDt", "reference": "refSpaceMovementPlanReqDt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestPlanLocId'), "dataIndex": "planLocId", "reference": "refSpaceMovementPlanLoc", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('lotNo'), "dataIndex": "lotNo", "reference": "refSpaceMovementLotNo", "filter": "string", "width": 130
				}
			]
		},
		{
			"key": "SpaceMovementPlanDetail",
			"items": [
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqTpNm'), "dataIndex": "reqTpNm", "reference": "refSpaceMovementRequestReqTpNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementPlanCategory'), "dataIndex": "catgNm", "reference": "refSpaceMovementPlanCategory", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "reference": "refSpaceMovementRequestVslCallId", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementPlanMasterBLBookingNo'), "dataIndex": "mfDocId", "reference": "refSpaceMovementPlanMasterBLBookingNo", "filter": "string", "width": 140
				},
				{
					"header": ViewUtil.getLabel('lotNo'), "dataIndex": "lotNo", "reference": "refLotNo", "filter": "string", "width": 140
				},
				{
					"header": ViewUtil.getLabel('bl_sn'), "dataIndex": "blSn", "reference": "refSpaceMovementRequestBlSn", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('doNo'), "dataIndex": "doNo", "reference": "refSpaceMovementRequestDONo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('sdogrNo'), "dataIndex": "sdogrNo", "reference": "refSpaceMovementRequestSDOGRNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('noOfVIN'), "dataIndex": "noOfVIN", "reference": "refSpaceMovementRequestNoOfVIN", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqPos'), "dataIndex": "reqPos", "reference": "refSpaceMovementRequestReqPos", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestPlanLocId'), "dataIndex": "planLocId", "reference": "refSpaceMovementRequestPlanLocId", "filter": "string", "width": 130
				},
				{ "header": ViewUtil.getLabel('spaceMovementPlanMarksAndNos'), "dataIndex": "pkgNo", "filter": "string"},
				{ "header": ViewUtil.getLabel('descofgoods'), "dataIndex": "pkgMark", "filter": "string", "width": 130},
				{ "header": ViewUtil.getLabel('mt'), "dataIndex": "reqWgt", "filter": "string"},
				{ "header": ViewUtil.getLabel('m3'), "dataIndex": "reqMsrmt", "filter": "string"},
				{ "header": ViewUtil.getLabel('qty'), "dataIndex": "reqQty", "filter": "string"},
				{"header": ViewUtil.getLabel('spaceMovementRequestCgType'), "dataIndex": "cgTpNm", "reference": "refSpaceMovementRequestCgType", "filter": "string", "width": 130},
				{ "header": ViewUtil.getLabel('cmdtGrp'), "dataIndex": "cmdtGrpNm", "filter": "string", "width": 130},
				{ "header": ViewUtil.getLabel('commodity'), "dataIndex": "cmdtNm", "filter": "string"},
				{ "header": ViewUtil.getLabel('packageType'), "dataIndex": "pkgTpNm", "filter": "string"},
				{"header": ViewUtil.getLabel('spaceMovementRequestDgYn'), "dataIndex": "dgYn", "reference": "refSpaceMovementRequestDgYn", "filter": "string", "width": 130},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestEta'), "dataIndex": "eta", "reference": "refSpaceMovementRequestEta", "width": 130
					,"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
					,"renderer": function(value, meta, record, rowIndex, colIndex, store) { 
						return value == 0 ? '' : Ext.Date.format(new Date(Number(value)), meta.column.format ); 
					}
				},
				{
					"header": ViewUtil.getLabel('spaceMovementPlanEtd'), "dataIndex": "svcDt", "reference": "refSpaceMovementPlanEtd", "width": 130
					,"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
					,"renderer": function(value, meta, record, rowIndex, colIndex, store) { 
						return value == 0 ? '' : Ext.Date.format(new Date(Number(value)), meta.column.format ) ;
					} 
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestShipgAgnt'), "dataIndex": "shipgAgnt", "reference": "refSpaceMovementRequestShipgAgnt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestFwdAgnt'), "dataIndex": "fwdAgnt", "reference": "refSpaceMovementRequestFwdAgnt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementPlanCngShp'), "dataIndex": "cngShp", "reference": "refSpaceMovementRequestCngShp", "filter": "string", "width": 130
				},
				// {"header": ViewUtil.getLabel('spaceMovementRequestGrNo'), "dataIndex": "grNo", "reference": "refSpaceMovementRequestGrNo", "filter": "string", "width": 130},
				// {"header": ViewUtil.getLabel('spaceMovementRequestReqM2'), "dataIndex": "reqM2", "reference": "refSpaceMovementRequestReqM2", "filter": "string", "width": 130},
				// {"header": ViewUtil.getLabel('spaceMovementRequestReqMt'), "dataIndex": "reqMt", "reference": "refSpaceMovementRequestReqMt", "filter": "string", "width": 130},
				// {"header": ViewUtil.getLabel('spaceMovementRequestPeriod'), "dataIndex": "period", "reference": "refSpaceMovementRequestPeriod", "filter": "string", "width": 130},
			]
		},
		{
			"key": "CargoSearchList",
			"items": [
				{ "header": ViewUtil.getLabel('category'), "dataIndex": "opeClassCd", "width": 100},
				{ "header": ViewUtil.getLabel('jpvc'), "dataIndex": "vslCallId", "width": 100},
				{ "header": ViewUtil.getLabel('vslNm'), "dataIndex": "vslNm", "width": 100},
				{ "header": ViewUtil.getLabel('masterBLNo'), "dataIndex": "mfDocId", "width": 150},
				{ "header": ViewUtil.getLabel('bl_sn'), "dataIndex": "blSn", "width": 150},
				{ "header": ViewUtil.getLabel('gateOutGrGpNo'), "dataIndex": "cgNo", "width": 120},
				{ "header": ViewUtil.getLabel('gateTicketNo'), "dataIndex": "gateTxnNo", "width": 120},
				{ "header": ViewUtil.getLabel('delvTpCd'), "dataIndex": "delvTpCd", "width": 100},
				{ "header": ViewUtil.getLabel('commodity'), "dataIndex": "cmdtCd", "width": 150},
				{ "header": ViewUtil.getLabel('domesticCargo'), "dataIndex": "domesticChk", "reference": "refdomYn", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('sAgent'), "dataIndex": "shipgAgnt", "width": 80},
				{ "header": ViewUtil.getLabel('fAgent'), "dataIndex": "fwrAgnt", "width": 80},
				{ "header": ViewUtil.getLabel('bagMt'), "dataIndex": "bagMt", "width": 80},
				{ "header": ViewUtil.getLabel('docMt'), "dataIndex": "docMt", "width": 80},
				{ "header": ViewUtil.getLabel('docM3'), "dataIndex": "docM3", "width": 80},
				{ "header": ViewUtil.getLabel('docQty'), "dataIndex": "docQty", "width": 80},
				{ "header": ViewUtil.getLabel('grossMt'), "dataIndex": "grsMt", "width": 80},
				{ "header": ViewUtil.getLabel('grossM3'), "dataIndex": "grsM3", "width": 80},
				{ "header": ViewUtil.getLabel('grossQty'), "dataIndex": "grsQty", "width": 80},
				{ "header": ViewUtil.getLabel('norMt'), "dataIndex": "norMt", "width": 80},
				{ "header": ViewUtil.getLabel('norM3'), "dataIndex": "norM3", "width": 80},
				{ "header": ViewUtil.getLabel('norQty'), "dataIndex": "norQty", "width": 80},
				{ "header": ViewUtil.getLabel('dmgWgt'), "dataIndex": "dmgMt", "width": 80, "hidden": true},
				{ "header": ViewUtil.getLabel('dmgM3'), "dataIndex": "dmgM3", "width": 80, "hidden": true},
				{ "header": ViewUtil.getLabel('dmgQty'), "dataIndex": "dmgQty", "width": 80, "hidden": true},
				{ "header": ViewUtil.getLabel('shtMt'), "dataIndex": "shuMt", "width": 80, "hidden": true},
				{ "header": ViewUtil.getLabel('shtM3'), "dataIndex": "shuM3", "width": 80, "hidden": true},
				{ "header": ViewUtil.getLabel('shtQty'), "dataIndex": "shuQty", "width": 80, "hidden": true},
				{ "header": ViewUtil.getLabel('directMt'), "dataIndex": "dirMt", "width": 80},
				{ "header": ViewUtil.getLabel('directM3'), "dataIndex": "dirM3", "width": 80},
				{ "header": ViewUtil.getLabel('directQty'), "dataIndex": "dirQty", "width": 80},
				{ "header": ViewUtil.getLabel('inDirectMt'), "dataIndex": "indMt", "width": 80},
				{ "header": ViewUtil.getLabel('inDirectM3'), "dataIndex": "indM3", "width": 80},
				{ "header": ViewUtil.getLabel('inDirectQty'), "dataIndex": "indQty", "width": 80},
				{ "header": ViewUtil.getLabel('gpMt'), "dataIndex": "gpMt", "width": 80},
				{ "header": ViewUtil.getLabel('gpM3'), "dataIndex": "gpM3", "width": 80},
				{ "header": ViewUtil.getLabel('gpQty'), "dataIndex": "gpQty", "width": 80},
			]
		},
		{
			"key": "StaffDeployment",
			"items": [
				{
					"header": ViewUtil.getLabel('deployDt'), "dataIndex": "workYmdDt", "reference": "refColDeployDt", "filter" : "string", "align" : "center", "width": 100, "xtype": "datecolumn", "format": MOST.config.Locale.getShortDate(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('shift'), "dataIndex": "shftNm", "reference": "refColShift", "filter" : "string", "align" : "center", "width": 80
				},
				{
					"header": ViewUtil.getLabel('purpose'), "dataIndex": "purpTpCdNm", "reference": "refColPurpose", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "reference": "refColJpvc", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('vesselname'), "dataIndex": "vslNm", "reference": "refColSNLLinked", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('berthLocation'), "dataIndex": "berthLoc", "reference": "refColBerthLocation", "filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('megaWhYn'), "xtype": "actioncolumn", "dataIndex": "whUpdYn", "reference": "refColWHConfirm", "filter" : "string", "align" : "center", "width": 100,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.whUpdYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]	
				},
				{
					"header": ViewUtil.getLabel('eta'), "dataIndex": "eta", "reference": "refColETA", "filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('sa'), "dataIndex": "saId", "reference": "refColSA", "filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('manpowerYn'), "xtype": "actioncolumn", "dataIndex": "manpowerYn", "reference": "refColMP", "filter" : "string", "align" : "center", "width": 74,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.manpowerYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]	
				},
				{
					"header": ViewUtil.getLabel('portCrnYn'), "xtype": "actioncolumn", "dataIndex": "portCrnYn", "reference": "refColPC", "filter" : "string", "align" : "center", "width": 70,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.portCrnYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]	
				},
				{
					"header": ViewUtil.getLabel('forkliftYn'), "xtype": "actioncolumn", "dataIndex": "forkliftYn", "reference": "refColFL", "filter" : "string", "align" : "center", "width": 70,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.forkliftYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]	
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedBy'), "dataIndex": "updUserId", "reference": "refColLastUpdateBy", "filter" : "string", "align" : "center", "width": 250
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedDt'), "dataIndex": "updDt", "reference": "refColLastUpdateDt", "filter" : "string", "align" : "center", "width": 150
				}]
		},
		{
			"key": "StaffAndEquipManPowerMega",
			"items":  [
			{
				"header": ViewUtil.getLabel('equipment'), "dataIndex": "eqDivCdNm", "width": 120
			},
			{
				"header": ViewUtil.getLabel('capa'), "dataIndex": "capaDescr", "width": 120
			},
			{
				"header": ViewUtil.getLabel('workingArea'), "dataIndex": "locId", "width": 100
			},
			{
				"header": ViewUtil.getLabel('qty'), "dataIndex": "whQty", "width": 60, "hidden": true
			},
			{
				"header": ViewUtil.getLabel('qty'), "dataIndex": "confmQty", "width": 60
			},
			{
				"header": ViewUtil.getLabel('jPB'), "dataIndex": "nofPort", "width": 60
			},
			{
				"header": ViewUtil.getLabel('cont'), "dataIndex": "nofCntt", "width": 60
			},
			{
				"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "opeComp", "width": 100
			},
			{
				"header": ViewUtil.getLabel('driver'), "dataIndex": "flStatus", "width": 60
			}]
		},
		{
			"key": "MegaSumOprInStaffAndEquipment",
			"items": [
			{
				"header": ViewUtil.getLabel('item'), "dataIndex": "oprNm", "width": 100
			},
			{
				"header": ViewUtil.getLabel('qty'), "dataIndex": "oprQty", "width": 60
			},
			{
				"header": ViewUtil.getLabel('workingArea'), "dataIndex": "locId", "width": 100
			},
			{
				"header": ViewUtil.getLabel('time'), "dataIndex": "dspReqhhmm", "width": 120
			}]
		},
		{
			"key": "MegaRemarkInStaffAndEquipment",
			"items": [
			{
				"header": ViewUtil.getLabel('megaNo'), "dataIndex": "megaNo", "width": 100
			},
			{
				"header": ViewUtil.getLabel('reqr'), "dataIndex": "reqrNm", "width": 100
			},
			{
				"header": ViewUtil.getLabel('remarks'), "dataIndex": "rmk", "width": 150
			}]
		},
		{
			"key": "StaffAndEquipManPowerDetail",
			"items": [
				{
					"header": "Staff No", "reference":"colStaffId", "dataIndex": "empId", "width": 70,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						if(record.get('colColor') != ' '){
							metaData.style =  'color: #' + record.get('colColor') ;
						}
						return value;
					}
				},
				{
					"header": ViewUtil.getLabel('roleCd'), "dataIndex": "roleCd", "width": 70, 
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						if(record.get('colColor') != ' '){
							metaData.style =  'color: #' + record.get('colColor') ;
						}
						return value;
					}
				},
				{
					"header": ViewUtil.getLabel('status'), "reference":"colStatus", "dataIndex": "status", "width": 80
				},
				{
					"header": ViewUtil.getLabel('staffNm'), "reference":"colStaff", "dataIndex": "engNm", "width": 120
				}
			]
		},
		{
			"key": "ManPowerInStaffAndEquipment",
			"items": [
				{
					"header": 'Staff No', "reference":"colStaffId", "dataIndex": "empId_temp", "width": 120
				},
				   {
					"header": ViewUtil.getLabel('staffNm'), "reference":"colStaff", "dataIndex": "engNm", "width": 120
				},
				{
					"header": ViewUtil.getLabel('roleCd'), "dataIndex": "roleCd", "reference": "refColRole", "width": 60
				},
				{
					"header": ViewUtil.getLabel('status'), "reference":"colStatus", "dataIndex": "status", "width": 80,
					"hidden": true  
				},
				{
					"header": ViewUtil.getLabel('workingArea'), "reference":"refColWorkingArea", "dataIndex": "workLoc", "width": 120,
					"renderer":function(val){
						   if(val != null || val != ''){
							   return val
						   }
					   },
					   
				},{
					"header": ViewUtil.getLabel('workingDay'), "dataIndex": "workYmd", "reference":"refColWorkYmd", "hidden": true, "width": 100
				},{
					"header": ViewUtil.getLabel('startTime'), "dataIndex": "frTime", "reference":"refColStartTime", "width": 100, "renderer": "onTimeFormat"
				},{
					"header": ViewUtil.getLabel('endTime'), "dataIndex": "endTime", "reference":"refColToTime", "renderer": "onTimeFormat", "width": 80
				},{
					"header": ViewUtil.getLabel('changeShift'), "dataIndex": "changeShft", "reference":"refColChangeShift", "hidden":false, "width": 140
				},
				{
					"header": ViewUtil.getLabel('deployedequipment_staffgroup'), "reference": "refColStaffGroup", "dataIndex":"grp", "hidden":false, "width": 120
				},
				{
					"header": ViewUtil.getLabel('workingMode'), "dataIndex": "workModeNm", "reference":"refColWorkingMode", "hidden":true, "width": 65
				},
				{
					"header": ViewUtil.getLabel('handlingMode'), "dataIndex": "whworkDivCd", "reference":"refColHandlingMode", "hidden":true, "width": 65
				},
				{
					"header": ViewUtil.getLabel('workingInLunchTime'), "dataIndex": "lunchTimeWork", "reference":"refWorkingInLunchTime", "hidden": false, "width": 140
				},
				{
					"header": ViewUtil.getLabel('staffType'), "dataIndex": "grp", "reference":"refColStaffType", "hidden": false, "width": 80
				},
				{
					"header": ViewUtil.getLabel('remarks'), "reference":"refColRemark", "dataIndex": "rmk", "hidden": true, "width": 40
				}]
		},
		{
			"key": "StaffShipCrane",
			"items":  [
				{
					"header": ViewUtil.getLabel('equipment'), "dataIndex": "eqDivCdNm", "width": 120
				},
				{
					"header": ViewUtil.getLabel('capa'), "dataIndex": "capaDescr", "width": 120
				},
				{
					"header": ViewUtil.getLabel('qty'), "dataIndex": "confmQty", "width": 55
				},
				{
					"header": ViewUtil.getLabel('jPB'), "dataIndex": "nofPort", "width": 55
				},
				{
					"header": ViewUtil.getLabel('cont'), "dataIndex": "nofCntt", "width": 60
				},
				{
					"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "opeComp", "width": 100
				}
			]		
		},
		{
			"key": "StaffPortCrane",
			"items":  [
			{
				"header": ViewUtil.getLabel('equipment'), "dataIndex": "eqDivCdNm", "width": 120
			},
			{
				"header": ViewUtil.getLabel('capa'), "dataIndex": "capaDescr", "width": 120
			},
			{
				"header": ViewUtil.getLabel('qty'), "dataIndex": "confmQty", "width": 50
			},
			{
				"header": ViewUtil.getLabel('jPB'), "dataIndex": "nofPort", "width": 50
			},
			{
				"header": ViewUtil.getLabel('cont'), "dataIndex": "nofCntt", "width": 50
			},
			{
				"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "opeComp", "width": 100
			}]
		},
		{
			"key": "StaffEquipmentPortCraneDetail",
			"items":  [
				{
					"header": ViewUtil.getLabel('deployedequipment_equNo'), "reference":"refColEquNo", "dataIndex": "eqFacNm", "width": 140,
					// valueField: 'eqFacNo',
					//displayField: 'eqFacNm',		           				
					   //renderer:'onPortCraneGridComboRenderer',
				},
				{
					"header": ViewUtil.getLabel('capa'), "reference": "refColEquCapa", "dataIndex": "capaDescr", "width": 170
				}
				]
		},
		{
			"key": "StaffEquipmentDeploy",
			"items":  [
				{
					"header": ViewUtil.getLabel('deployedequipment_type'), "reference":"refColType", "dataIndex": "eqTpCdNm", "width": 60
				},
				{
					"header": ViewUtil.getLabel('deployedequipment_equNo'), "reference":"refColEquNo", "dataIndex": "eqFacNm", "width": 100
				},
				{
					"header": ViewUtil.getLabel('capa'),
					"hidden": true, "reference":"refColEquCapa", "dataIndex": "capaDescr", "width": 70
				},
				{
					"header": ViewUtil.getLabel('deployedequipment_operator'), "reference":"refColOperator", "dataIndex": "driverHidden", "width": 75
				},
				{
					"header": ViewUtil.getLabel('workingArea'), "reference":"refColEquWorkingArea",  "dataIndex": "workLoc","width":100,
					   "renderer":function(val){
						   if(val != null || val != ''){
							   return val
						   }
					   },
					
				},{
					"header": ViewUtil.getLabel('deployedequipment_shipcraneqty'), "dataIndex": "eqQty", "width": 100
				}]
		},
		{
			"key": "StaffDeploymentForklift",
			"items":  [
			{
				"header": ViewUtil.getLabel('capa'), "dataIndex": "capaDescr", "width": 120
			},
			{
				"header": ViewUtil.getLabel('workingArea'), "dataIndex": "locId", "width": 100
			},
			{
				"header": ViewUtil.getLabel('qty'), "dataIndex": "whQty", "width": 55, "hidden":true
			},
			{
				"header": ViewUtil.getLabel('qty'), "dataIndex": "confmQty", "width": 55
			},
			{
				"header": ViewUtil.getLabel('jPB'), "dataIndex": "nofPort", "width": 55
			},
			{
				"header": ViewUtil.getLabel('cont'), "dataIndex": "nofCntt", "width": 55
			},
			{
				"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "opeComp", "width": 100
			},
			{
				"header": ViewUtil.getLabel('driver'), "dataIndex": "flStatus", "width": 100
			}]
		},
		{
			"key": "StaffDeploymentForkliftDetail",
			"items": [
				{
					"header": ViewUtil.getLabel('deployedequipment_equNo'), "dataIndex": "eqFacNm",  "width": 120
				},
				{
					"header": ViewUtil.getLabel('capa'), "dataIndex": "capaDescr", "width": 80
				},
				{
					"header": ViewUtil.getLabel('statusIn'), "dataIndex": "statCdNm", "width": 60
				},	
				{
					"header": ViewUtil.getLabel('deployedequipment_ie'), "dataIndex": "ownDivCdNm", "width": 60
				}
				]
		},
		{
			"key": "StaffForklift",
			"items":  [
			{
				"header": ViewUtil.getLabel('deployedequipment_equNo'), "reference":"refColForkliftList", "dataIndex": "eqFacNo", "renderer":"onForkliftGridComboRenderer", "width": 120
			},
			{
				"header": ViewUtil.getLabel('capa'), "reference":"refColForkliftCapDesc", "dataIndex": "capaDescr", "width": 120,
				"editor":{
					"xtype":"textfield",
					"editable":false,
					"width":120
				},
				  
			},
			{
				"header": ViewUtil.getLabel('deployedequipment_opercontractor'), "reference":"refColFLOperContract", "dataIndex": "jpbiDriverYn", "hidden": true, "width": 70
			},
			{
				"header": ViewUtil.getLabel('driver'), "reference":"refColForkliftDriver", "dataIndex": "driverHidden", "width": 65
			},
			{
				"header": ViewUtil.getLabel('workingArea'), "reference":"refColFlWorkLoc", "dataIndex": "workLoc", "width": 100,
				"renderer":function(val){
					   if(val != null || val != ''){
						   return val
					   }
				   },
				  
			},
			{
				"header": ViewUtil.getLabel('deployedequipment_ie'), "dataIndex": "ownDivCdNm","width": 50,  
				"editor": {
					"xtype": "textfield",
					   "editable":false
				},
				   
			}]
		},
		{
			"key": "StaffDeploymentStevedoret",
			"items":  [
				{
					"header": ViewUtil.getLabel('deployedequipment_bulk'), "dataIndex": "bulkDiv", "width": 120
				},
				{
					"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "company", "width": 150
				},
				{
					"header": ViewUtil.getLabel('workingArea'), "dataIndex": "workLoc", "width": 150,
				},
				{
					"header": ViewUtil.getLabel('deployedequipment_reqtime'), "dataIndex": "dspReqhhmm", "width": 150
				},
				{
					"header": ViewUtil.getLabel('deployedequipment_ganghatch'), "dataIndex": "gangQty", "width": 250
				},
				{
					"header": ViewUtil.getLabel('deployedequipment_addsup'), "dataIndex": "nofSprr", "width": 250
				},
				{
					"header": ViewUtil.getLabel('deployedequipment_addnon'), "dataIndex": "nofNonTon", "width": 250
				}]
		},
		{
			"key": "StaffDeploymentNonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('deployDt'), "dataIndex": "workYmdDt", "reference": "refColDeployDt", "filter" : "string", "align" : "center", "width": 160, "xtype": "datecolumn", "format": MOST.config.Locale.getShortDate(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('shift'),"dataIndex": "shftNm", "reference": "refColShift", "filter" : "string", "align" : "center", "width": 90
				},
				{
					"header": ViewUtil.getLabel('purpose'),"dataIndex": "purpTpCdNm", "reference": "refColPurpose", "filter" : "string", "align" : "center", "width": 180
				},
				{
					"header": ViewUtil.getLabel('search'), "xtype": "actioncolumn","dataIndex": "whUpdYn", "reference": "refColWHConfirm", "filter" : "string", "align" : "center", "width": 120,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.whUpdYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('forkliftYn'), "xtype": "actioncolumn","dataIndex": "forkliftYn", "reference": "refColFL", "filter" : "string", "align" : "center", "width": 70,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.forkliftYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedBy'),"dataIndex": "updUserId", "reference": "refColLastUpdateBy", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedDt'),"dataIndex": "updDt", "reference": "refColLastUpdateDt", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('WorkCd'),"dataIndex": "workCd", "reference": "refWorkCd", "filter" : "string", "align" : "center", "width": 150
				}]
		},
		{
			"key": "StaffDeploymentNonVesselMegaSumOpr",
			"items": [{
				"header": ViewUtil.getLabel('item'), "dataIndex": "oprNm", "width": 80
			},
			{
				"header": ViewUtil.getLabel('qty'), "dataIndex": "oprQty", "width": 50
			},
			{
				"header": ViewUtil.getLabel('workingArea'), "dataIndex": "locId", "width": 100
			},
			{
				"header": ViewUtil.getLabel('deployedequipment_time'), "dataIndex": "dspReqhhmm", "width": 70
			}]
		},
		{
			"key": "StaffDeploymentNonVesselMegaRemark",
			"items": [{
				"header": ViewUtil.getLabel('megaNo'), "dataIndex": "megaNo", "width": 100
			},{
				"header": ViewUtil.getLabel('reqr'), "dataIndex": "reqrNm", "width": 100
			},{
				"header": ViewUtil.getLabel('remarks'), "dataIndex": "rmk", "width": 100
			}]
		},
		{
			"key": "StaffDeploymentNonVesselStaffManPower",
			"items": [
				{
					"xtype": "actioncolumn",  "width" : 40, "text": '',
					"items": [
						{
							"icon": ''
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				 },
				 {
					"header": "Staff No", "reference":"colStaffId", "dataIndex": "hiddenEmpId", "width": 70
				},
				{
					"header": "Staff No", "reference":"colStaffId", "dataIndex": "empId", "hidden":true, "width": 90
				},
				{
					"header": ViewUtil.getLabel('staffNm'), "reference":"colStaff", "dataIndex": "engNm", "width": 100
				},
				{
					"header": ViewUtil.getLabel('deployedequipment_staffgroup'), "reference": "refColStaffGroup", "dataIndex":"stfGrp", "hidden":false, "renderer":"onGridComboRenderer", "width": 110
				},
				{
					"header": ViewUtil.getLabel('staffType'), "dataIndex": "grp", "reference":"refColStaffType", "hidden":true, "renderer":"onGridComboRenderer", "width": 80
				},
				{
					"header": ViewUtil.getLabel('deployedequipment_group'), "reference": "refColGroup", "hidden":true, "dataIndex": "shftGrpCd", "width": 80,
					"renderer":"onGridGroupComboRenderer",
				},
				{
					"header": ViewUtil.getLabel('roleCd'), "dataIndex": "roleCd", "reference":"refColRole",
	//		    						renderer:'onGridComboRenderer',
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('workingArea'), "reference":"refColWorkingArea", "dataIndex": "workLoc",
					"editor": {
						"xtype": "workingareamultifield",
						"reference":"ctlWorkingArea",
						"editable":false
					},
					"width": 150,
					"renderer":function(val){
						if(val != null || val != ''){
							return val
						}
					},
					
				},
				{
					"header": ViewUtil.getLabel('workingDay'), "dataIndex": "workYmd", "reference":"refColWorkYmd", "hidden": true,
					/*editor: {
						"xtype": 'textfield'
					},*/
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('startTime'), "dataIndex": "frTime", "reference":"refColStartTime", "width": 100, "renderer": "onTimeFormat"
				},
				{
					"header": ViewUtil.getLabel('endTime'), "dataIndex": "endTime", "reference":"refColToTime", "renderer": "onTimeFormat", "width": 100
				},
				{
					"header": ViewUtil.getLabel('changeShift'), "dataIndex": "changeShft", "reference":"refColChangeShift", "hidden":false, "width": 110,
					"editor":{
						"xtype": "combobox",
						"bind": {
							"store": "{changeShift}",
							"value":"changeShft"
						},
						"displayField": "changeShft",
						"valueField": "changeShft",
						"queryMode": "local",
						"fieldStyle": "text-align:center",
						"editable": false,
						"allowBlank":true,
						"disabled": true,
						//value:'',
						"forceSelection":true,
						"disabled":false,
					},
					//renderer:'onGridChangeShftComboRenderer',
				},
				{
					"header": ViewUtil.getLabel('handlingMode'), "dataIndex": "whworkDivCd", "reference":"refColHandlingMode", "hidden":true, "width": 100,
					"editor":{
						"xtype": "combobox",
						"bind": {
							"store": "{handlingMode}",
							"value":"whworkDivCd"
						},
						"displayField": "whworkDivCdNm",
						"valueField": "whworkDivCd",
						"queryMode": "local",
						"fieldStyle": "text-align:center",
						"editable": false,
						"allowBlank":true,
						"disabled": true,
						"forceSelection":true,
						"disabled":false,
					},
					"renderer":"onGridHandlingModeComboRenderer",
				},
				{
					"header": ViewUtil.getLabel('workingMode'), "dataIndex": "workMode", "reference":"refWorkingMode", "hidden":true, "width": 130,
					"editor":{
						"xtype": "combobox",
						"bind": {
							"store": "{workingModeList}"
						},
						"displayField": "scdNm",
						"valueField": "scd",
						"queryMode": "local",
						"fieldStyle": "text-align:center",
						"editable": false,
						"allowBlank":true
					},
					"renderer":"onGridHandlingModeComboRenderer",
				},
				{
					"header": ViewUtil.getLabel('status'), "reference":"colStatus", "dataIndex": "status", "width": 120,
					"editor":{
						"xtype":"textfield",
						"fieldStyle": "text-align:center",
						"editable":false
					}
				}]
		},
		{
			"key": "StaffDeploymentNonVesselForklift",
			"items": [
			{
				"header": ViewUtil.getLabel('capa'), "dataIndex": "capaDescr", "width": 120
			},
			{
				"header": ViewUtil.getLabel('workingArea'), "dataIndex": "locId", "width": 150
			},
			{
				"header": ViewUtil.getLabel('qty'), "dataIndex": "whQty", "width": 150, "hidden":true
			},
			{
				"header": ViewUtil.getLabel('qty'), "dataIndex": "confmQty", "width": 150
			},
			{
				"header": ViewUtil.getLabel('jPB'), "dataIndex": "nofPort", "width": 250
			},
			{
				"header": ViewUtil.getLabel('cont'), "dataIndex": "nofCntt", "width": 250
			},
			{
				"header": ViewUtil.getLabel('opeCompNm'), "dataIndex": "opeComp", "width": 250
			},
			{
				"header": ViewUtil.getLabel('driver'), "dataIndex": "flStatus", "width": 250
			}]
		},
		{
			"key": "StaffDeploymentNonVesselForkliftDetail",
			"items":  [
				{
					"header": ViewUtil.getLabel('deployedequipment_equNo'), "dataIndex": "eqFacNm", "width": 100
				},
				{
					"header": ViewUtil.getLabel('capa'), "dataIndex": "capaDescr", "width": 100
				},
				{
					"header": ViewUtil.getLabel('statusIn'), "dataIndex": "statCdNm", "width": 60
				},	
				{
					"header": ViewUtil.getLabel('deployedequipment_ie'), "dataIndex": "ownDivCdNm", "width": 60
				}
				]
		},
		{
			"key": "StaffDeploymentNonVesselStaffForklift",
			"items":  [
				{
					 "xtype": "actioncolumn",
					 "width" : 30,
					 "text": '',
					 "items": [
						 {
							 "icon": ''
						 }
					 ],
					 "renderer": function(v,m,r) {
						 if (r.data.workingStatus == 'C') {
							 this.items[0].iconCls = 'x-fa fa-file-text-o';
						 } else if (r.data.workingStatus == 'U') {
							 this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						 } else if (r.data.workingStatus == 'D') {
							 this.items[0].iconCls = 'x-fa fa-times';
						 } else
							 this.items[0].iconCls = '';
					 }
				 },
				 {
				"header": ViewUtil.getLabel('deployedequipment_equNo'), "reference":"refColForkliftList", "dataIndex": "eqFacNo", "renderer":"onForkliftGridComboRenderer", "width": 150
			},
			{
				"header": ViewUtil.getLabel('capa'), "reference":"refColForkliftCapDesc", "dataIndex": "capaDescr", "width": 100
			},
			{
				"header": ViewUtil.getLabel('deployedequipment_opercontractor'), "reference":"refColFLOperContract", "dataIndex": "jpbiDriverYn", "renderer":"onForkliftGridComboRenderer", "width": 100
			},
			{
				"header": ViewUtil.getLabel('driver'), "reference":"refColForkliftDriver", "dataIndex": "driver", "renderer":"onForkliftGridComboRenderer", "width": 80
			},
			{
				"header": ViewUtil.getLabel('workingArea'), "reference":"refColFlWorkLoc", "dataIndex": "workLoc", "width": 100,
				"renderer":function(val){
					   if(val != null || val != ''){
						   return val
					   }
				   },
				  
			},
			{
				"header": ViewUtil.getLabel('deployedequipment_ie'), "dataIndex": "ownDivCdNm", "width": 100,
				"editor": {
					"xtype": "textfield",
					   "editable":false
				},
				  
			}]
		},
		{
			"key": "VslSchduleList",
			"items": [
				{ "header": ViewUtil.getLabel('jpvc'), "dataIndex": "vslCallId", "width": 150},
				{ "header": ViewUtil.getLabel('status'), "tdCls": "ID", "width": 100},
				{ "header": ViewUtil.getLabel('plan'), "xtype": "actioncolumn", "dataIndex": "planYn", "flex": 1,
				  "items": [{
						"getClass": function (value, meta, record) {
							return record.data.planYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
			]	
		},
		{
			"key": "VesselSftSchduleList",
			"items": [
				{ "header": ViewUtil.getLabel('jpvc'), "dataIndex": "vslCallId", "width": 100},
				{ "header": ViewUtil.getLabel('status'), "tdCls": "ID", "width": 100},
				{ "header": ViewUtil.getLabel('plan'), "xtype": "actioncolumn", "dataIndex": "planYn", "flex": 1,
				  "items": [{
						"getClass": function (value, meta, record) {
							return record.data.planYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
			]	
		},
		{
			"key": "ShipinportMain",
			"items": [
				{
					"header": ViewUtil.getLabel('vslCallId'),
					"dataIndex": "jpvc",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('berthLoc'),
					"dataIndex": "berthLoc",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('wharfmark'),
					"dataIndex": "wharfMark",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('vesselWm'),
					"dataIndex": "vslWm",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('vslNm'),
					"dataIndex": "vslNm",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('drfArrv'),
					"dataIndex": "arrvDisplmt",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('drfDeptr'),
					"dataIndex": "deptDisplmt",
					"align" : "left",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('sAgency'),
					"dataIndex": "sa",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('loa'),
					"dataIndex": "loa",
					"align" : "left",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('eta'),
					"dataIndex": "etaDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"align" : "left",
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('etw'),
					"dataIndex": "etwDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"align" : "left",
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('etc'),
					"dataIndex": "etcDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"align" : "left",
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('etu'),
					"dataIndex": "etuDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"align" : "left",
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('etd'),
					"dataIndex": "etdDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"align" : "left",
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('ata'),
					"dataIndex": "ataDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"align" : "left",
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('pob'),
					"dataIndex": "pob",
					"align" : "left",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('atb'),
					"dataIndex": "atbDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"align" : "left",
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('atw'),
					"dataIndex": "atwDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"align" : "left",
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('atc'),
					"dataIndex": "atcDt",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"align" : "left",
					"width": 110,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('dwt'),
					"dataIndex": "dwt",
					"align" : "left",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('grt'),
					"dataIndex": "grt",
					"align" : "left",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "crgTp",
					"align" : "left",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('loadingCtl'),
					"dataIndex": "loading",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dischargingCtl'),
					"dataIndex": "discharging",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('vorTotalTonnage'),
					"dataIndex": "totalTonage",
					"align" : "left",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('totalHandled'),
					"dataIndex": "totalHandled",
					"align" : "left",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoBalance'),
					"dataIndex": "crgBalance",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('confirmLoadingEquipment'),
					"dataIndex": "eq",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('nextVessel'),
					"dataIndex": "nextVsl",
					"align" : "left",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('remark'),
					"dataIndex": "remark",
					"align" : "left",
					"width": 100
				}
			]
		},
		{
			"key": "TideInformation",
			"items": [
				{	
					"header": ViewUtil.getLabel('shipdate'),
					"dataIndex": "chkYmd",
					"reference": "refChkYmd",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getShortDate(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('shiptime'),
					"dataIndex": "hhMm",
					"reference": "refHhMm",
					"renderer": "onTimeFormat",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('shiptide'),
					"dataIndex": "tide",
					"reference": "refTide",
					"width": 170,
					"editor": {
						"xtype": "numberfield",
						"minValue": 0,
						"decimalPrecision" : 3,
						"maxValue": 99999999999
					}
				}
			]
		},
		{
			"key": "RosterOthersList",
			"items": [
				{ "header": ViewUtil.getLabel('rstOthersStaffName'), "dataIndex": "engNm", "filter" : "string", "align" : "center", "width": 200},
				{ "header": ViewUtil.getLabel('rstOthersStaffId'), "dataIndex": "empId", "filter" : "string", "align" : "center", "width": 80},
				{ "header": ViewUtil.getLabel('rstOthersStatus'), "dataIndex": "statCdNm", "filter" : "string", "align" : "center", "width": 100},
				{ "header": ViewUtil.getLabel('rstOthersWorkingLocation'), "dataIndex": "workLocCdNm", "filter" : "string", "align" : "center", "width": 150},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
				{ "filter" : "string", "hidden": true, "align" : "center", "width": 115},
			]
		},
		{
			"key": "ShiftGroupList",
			"items": [
				{"xtype": "checkcolumn", "dataIndex": "chkShiftGroupMulti", "filter": "string", "width": 70, "defaultType": "integer",
				 "listeners":{
				 		"checkchange": "onShiftGroupMultiCheckChange"
					}
				},
				{"header": ViewUtil.getLabel('groupName'), "dataIndex": "groupNm", "filter": "string", "width": 170},
			]
		},
		/************** Administrator *****************/
		{
			"key": "ServiceOrderList",
			"items": [
				{"header": ViewUtil.getLabel('so_odrNo'), "dataIndex": "odrNo", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_jpvc'), "dataIndex": "vslCallId", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_vslNm'), "dataIndex": "vslNm", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_cat1'), "dataIndex": "category1Nm", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_cat2'), "dataIndex": "category2Nm", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_cat3'), "dataIndex": "category3Nm", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_status'), "dataIndex": "statNm", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_svcDt'), "dataIndex": "svcDtFm", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_reqBy'), "dataIndex": "sumitBy", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_sumitDt'), "dataIndex": "sumitDt", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_apprvBy'), "dataIndex": "apprvBy", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_apprvDt'), "dataIndex": "apprvDt", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_rejBy'), "dataIndex": "rejBy", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_rejDt'), "dataIndex": "rejDt", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_cnclBy'), "dataIndex": "cnclBy", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_cnclDt'), "dataIndex": "cnclDt", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_comBy'), "dataIndex": "comBy", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('so_comDt'), "dataIndex": "comDt", "filter": "string", "width": 150},
			]
		},
		{
			"key": "ServiceOrderSetting",
			"items": [
				{"header": ViewUtil.getLabel('soc_cat1'), "dataIndex": "category1Nm", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('soc_cat2'), "dataIndex": "category2Nm", "filter": "string", "width": 150},
				{"header": ViewUtil.getLabel('soc_cat3'), "dataIndex": "category3Nm", "filter": "string", "width": 150},
			]
		},
		{
			"key": "AccidentDamageReportList",
			"items": [
				{"header": ViewUtil.getLabel('adr_docNo'), "dataIndex": "docNo", "reference": "refDocNoCol", "width": 130, "editable": false},
				{"header": ViewUtil.getLabel('adr_evtTp'), "dataIndex": "evtNm", "reference": "refEvtNmCol", "width": 130, "editable": false},
				{"header": ViewUtil.getLabel('adr_evtPlc'), "dataIndex": "evtPlc", "reference": "refEvtPlcCol", "width": 130, "editable": false},
				{"header": ViewUtil.getLabel('adr_evtDt'), "dataIndex": "evtDt", "reference": "refEvtDtCol", "width": 130, "editable": false},
				{"header": ViewUtil.getLabel('adr_evtStat'), "dataIndex": "evtStatNm", "reference": "refEvtStatNmCol", "width": 130,
				 "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
                                    if(record.get('evtStatCd') === 'C'){
                                        metaData.style =  'background: #8aff36;';
                                    } else if(record.get('evtStatCd') === 'O') {
                                        metaData.style =  'background: #ff6767;';
                                    }
                                    return value;
                                }
                },
			]		
		},
		{
			"key": "VictimList",
			"items": [
				{"xtype": "actioncolumn",  "width" : 10, "text": "",
				 "items": [
                    {
                        "icon": ""
                    }
                ],
                "renderer": function(v,m,r) {
	                    if (r.data.workingStatus == 'C') {
	                        this.items[0].iconCls = 'x-fa fa-file-text-o';
	                    } else if (r.data.workingStatus == 'U') {
	                        this.items[0].iconCls = 'x-fa fa-pencil-square-o';
	                    } else if (r.data.workingStatus == 'D') {
	                        this.items[0].iconCls = 'x-fa fa-times';
	                    } else {
	                        this.items[0].iconCls = '';
	                    }
	                }
                },
                {"header": ViewUtil.getLabel('adr_vicNm'), "dataIndex": "subjNm",  "reference": "refVicNmCol", "width": 130},
                {"header": ViewUtil.getLabel('adr_icNo'), "dataIndex": "subjIdNo",  "reference": "refVicIcNoCol"},
                {"header": ViewUtil.getLabel('adr_deptComp'), "dataIndex": "deptNm",  "reference": "refVicDeptCompCol", "width": 130},
                {"header": ViewUtil.getLabel('adr_addr'), "dataIndex": "addr1",  "reference": "refVicAddrCol"},
                {"header": ViewUtil.getLabel('adr_sex'), "dataIndex": "gend",  "reference": "refVicSexCol"},
                {"header": ViewUtil.getLabel('adr_age'), "dataIndex": "age",  "reference": "refVicAgeCol"},
                {"header": ViewUtil.getLabel('adr_injuryLvl'), "dataIndex": "injryLvlCd",  "reference": "refVicInjuryLvlCol"},
                {"header": ViewUtil.getLabel('adr_vicSentLoc'), "dataIndex": "sendPlcCd",  "reference": "refVicSentLocCol", "width": 130},
                {"header": ViewUtil.getLabel('adr_hrsLost'), "dataIndex": "lostHr",  "reference": "refVicHrsLostCol"},
                {"header": ViewUtil.getLabel('adr_vicUsePPE'), "dataIndex": "ppeUseYn",  "reference": "refVicUsePPECol", "width": 140},
                {"header": ViewUtil.getLabel('adr_PPETpSup'), "dataIndex": "ppeTpCd",  "reference": "refVicPPETpSupCol", "width": 160},
                {"header": ViewUtil.getLabel('adr_goodVisib'), "dataIndex": "goodVsbtYn",  "reference": "refVicGoodVisibCol", "width": 110},
			]
		},
		{
			"key": "VehDmgList",
			"items": [
				{"xtype": "actioncolumn",  "width" : 10, "text": "",
				 "items": [
                    {
                        "icon": ""
                    }
                ],
                "renderer": function(v,m,r) {
	                    if (r.data.workingStatus == 'C') {
	                        this.items[0].iconCls = 'x-fa fa-file-text-o';
	                    } else if (r.data.workingStatus == 'U') {
	                        this.items[0].iconCls = 'x-fa fa-pencil-square-o';
	                    } else if (r.data.workingStatus == 'D') {
	                        this.items[0].iconCls = 'x-fa fa-times';
	                    } else {
	                        this.items[0].iconCls = '';
	                    }
	                }
                },
                {"header": ViewUtil.getLabel('adr_vehTp'), "dataIndex": "vhcTpCd",  "reference": "refVehTp", "width": 130},
                {"header": ViewUtil.getLabel('adr_regNo'), "dataIndex": "vhcRegNo",  "reference": "refVehRegNo", "width": 120},
                {"header": ViewUtil.getLabel('adr_deptComp'), "dataIndex": "deptNm",  "reference": "refVehDeptComp", "width": 130},
                {"header": ViewUtil.getLabel('adr_addr'), "dataIndex": "addr1",  "reference": "refVehAddr"},
                {"header": ViewUtil.getLabel('adr_driverNm'), "dataIndex": "driverNm",  "reference": "refVehDriverNm", "width": 150},
                {"header": ViewUtil.getLabel('adr_icNo'), "dataIndex": "driverIdNo",  "reference": "refVehIcNo"},
                {"header": ViewUtil.getLabel('adr_licNo'), "dataIndex": "driverLicsNo",  "reference": "refVehLicNo"},
                {"header": ViewUtil.getLabel('adr_dmgPart'), "dataIndex": "dmgDescr",  "reference": "refVehDmgPart", "width": 140},
                {"header": ViewUtil.getLabel('adr_dmgLvl'), "dataIndex": "dmgLvl",  "reference": "refVehDmgLvl", "width": 120},
			]
		},
		{
			"key": "WitnessList",
			"items": [
				{"xtype": "actioncolumn",  "width" : 10, "text": "",
				 "items": [
                    {
                        "icon": ""
                    }
                ],
                "renderer": function(v,m,r) {
	                    if (r.data.workingStatus == 'C') {
	                        this.items[0].iconCls = 'x-fa fa-file-text-o';
	                    } else if (r.data.workingStatus == 'U') {
	                        this.items[0].iconCls = 'x-fa fa-pencil-square-o';
	                    } else if (r.data.workingStatus == 'D') {
	                        this.items[0].iconCls = 'x-fa fa-times';
	                    } else {
	                        this.items[0].iconCls = '';
	                    }
	                }
                },
                {"header": ViewUtil.getLabel('adr_witnessNm'), "dataIndex": "subjNm",  "reference": "refWitnessNmCol", "width": 130},
                {"header": ViewUtil.getLabel('adr_icNo'), "dataIndex": "subjIdNo",  "reference": "refWitIcNoCol"},
                {"header": ViewUtil.getLabel('adr_deptComp'), "dataIndex": "deptNm",  "reference": "refWitDeptCompCol", "width": 120},
                {"header": ViewUtil.getLabel('adr_prepBy'), "dataIndex": "prepBy",  "reference": "refWitPrepByCol"},
                {"header": ViewUtil.getLabel('department'), "dataIndex": "rptDeptNm",  "reference": "refWitDeptCol"},
			]
		},
		{
			"key": "AcdntDmgRptFileList",
			"items": [
				{"header": ViewUtil.getLabel('fileName'), "dataIndex": "fileName",  "reference": "refFileNameCol"},
				{"header": ViewUtil.getLabel('fileSize'), "dataIndex": "fileSize",  "reference": "refFileSizeCol"},
			]
		},
		{
			"key": "ShiftingAprroval",
			"items": [
				{"header": ViewUtil.getLabel('sftJPVC'), "dataIndex": "vslCallId",  "reference": "refvslCallId", "width": 170, "filter": "string"},
				{"header": ViewUtil.getLabel('s_a'), "dataIndex": "sa",  "reference": "refsa", "width": 120},
				{"header": ViewUtil.getLabel('sftFrmLoc'), "dataIndex": "prevBerthNm",  "reference": "refprevBerthNm", "width": 150},
				{"header": ViewUtil.getLabel('sftToLoc'), "dataIndex": "nxBerthNm",  "reference": "refnxBerthNm", "width": 150},
				{"header": ViewUtil.getLabel('sftPos'), "dataIndex": "berthAlongSideNm",  "reference": "refberthAlongSideNm", "width": 170},
				{"header": ViewUtil.getLabel('sftDateTime'), "dataIndex": "reqDt",  "reference": "refreqDt", "width": 170},
				{"header": ViewUtil.getLabel('sftrmk'), "dataIndex": "rmk",  "reference": "refrmk", "width": 170},
				{"header": ViewUtil.getLabel('requestBy'), "dataIndex": "submitBy",  "reference": "refsubmitBy", "width": 150},
				{"header": ViewUtil.getLabel('requestDate'), "dataIndex": "submitDt",  "reference": "refsubmitDt", "width": 150},
				{"header": ViewUtil.getLabel('marineAppBy'), "dataIndex": "mssApprvBy",  "reference": "refmssApprvBy", "width": 150},
				{"header": ViewUtil.getLabel('marineAppDate'), "dataIndex": "mssApprvDt",  "reference": "refmssApprvDt", "width": 150},
				{"header": ViewUtil.getLabel('BBTAppBy'), "dataIndex": "apprvBy",  "reference": "refapprvBy", "width": 150, "filter": "string"},
				{"header": ViewUtil.getLabel('BBTAppDate'), "dataIndex": "apprvDt",  "reference": "refapprvDt", "width": 170},
			]
		},
		{
			"key": "FreshWaterListJpvc",
			"items": [
				{
					"header": ViewUtil.getLabel('docId'), 
					"dataIndex": "docNo",  
					"reference": "refDocNo", 
					"width": 120, 
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('fwlVslCallId'), 
					"dataIndex": "vslCallId",  
					"reference": "refColVslCallId", 
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('fwlVslName'), 
					"dataIndex": "vslNm",  
					"reference": "refColVslName", 
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('atb'), 
					"dataIndex": "atb",  
					"reference": "refColAtb", 
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('fwlWharf'), 
					"dataIndex": "berthloc",  
					"reference": "refColWharf", 
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('companyId'), 
					"dataIndex": "comp",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('fwlCompName'), 
					"dataIndex": "saNm",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('compnayAccNo'), 
					"dataIndex": "sa",  
					"width": 140
				},
				{
					"header": ViewUtil.getLabel('reqAmt'), 
					"dataIndex": "reqAmt",  
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('reqDateTime'), 
					"dataIndex": "reqDt",  
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('reqBy'), 
					"dataIndex": "reqBy",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('submittedBy'), 
					"dataIndex": "submit",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('lblStatus'), 
					"dataIndex": "statCdNm",  
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('cmpDt'), 
					"dataIndex": "cmpDt",  
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('completeby'), 
					"dataIndex": "completeby",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('ackDt'), 
					"dataIndex": "ackDt",  
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('ackBy'), 
					"dataIndex": "ackBy",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('cancelledDateTime'), 
					"dataIndex": "cnclDt",  
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('canclledBy'), 
					"dataIndex": "cnclBy",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('rejectedDateTime'), 
					"dataIndex": "rejDt",  
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('rejectedBy'), 
					"dataIndex": "rejBy",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('lblStartTime'), 
					"dataIndex": "splyStDt",  
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('lblEndTime'), 
					"dataIndex": "splyEndDt",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('totalHrs'), 
					"dataIndex": "totalHrs",  
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('meterStarting'), 
					"dataIndex": "befAmt",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('meterEnd'), 
					"dataIndex": "afrAmt",  
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('qtySply'), 
					"dataIndex": "qtySply",  
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('meterNo'), 
					"dataIndex": "meterNo",  
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('tmnlDefRemark'), 
					"dataIndex": "rmk",  
					"width": 80
				},
			]
		},
		{
			"key": "FreshWaterListNonJpvc",
			"items": [
				{
					"header": ViewUtil.getLabel('docId'), 
					"dataIndex": "docNo",  
					"reference": "refDocNo", 
					"width": 120, 
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('companyId'), 
					"dataIndex": "comp",  
					"width": 160
				},
				{
					"header": ViewUtil.getLabel('fwlCompName'), 
					"dataIndex": "saNm",  
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('compnayAccNo'), 
					"dataIndex": "sa",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('reqAmt'), 
					"dataIndex": "reqAmt",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('reqDateTime'), 
					"dataIndex": "reqDt",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('reqBy'), 
					"dataIndex": "reqBy",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('submittedBy'), 
					"dataIndex": "submit",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('lblStatus'), 
					"dataIndex": "statCdNm",  
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('cmpDt'), 
					"dataIndex": "cmpDt",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('completeby'), 
					"dataIndex": "cmpBy",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('ackDt'), 
					"dataIndex": "ackDt",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('ackBy'), 
					"dataIndex": "ackBy",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cancelledDateTime'), 
					"dataIndex": "cnclDt",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('canclledBy'), 
					"dataIndex": "cnclBy",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('rejectedDateTime'), 
					"dataIndex": "rejDt",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('rejectedBy'), 
					"dataIndex": "rejBy",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('lblStartTime'), 
					"dataIndex": "splyStDt",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('lblEndTime'), 
					"dataIndex": "splyEndDt",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('totalHrs'), 
					"dataIndex": "totalHrs",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('meterStarting'), 
					"dataIndex": "befAmt",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('meterEnd'), 
					"dataIndex": "afrAmt",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('qtySply'), 
					"dataIndex": "qtySply",  
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('meterNo'), 
					"dataIndex": "meterNo",  
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('tmnlDefRemark'), 
					"dataIndex": "rmk",  
					"width": 100
				},
			]
		},
		
		{
			"key": "BerthMaintenanceList",
			"items": [
				{
					"header": ViewUtil.getLabel('berthNo'), "dataIndex": "berthCd", "reference": "refBerthNoGrid", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('fromBitt'), "dataIndex": "fromBitt", "reference": "refFromBittGrid", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('toBitt'), "dataIndex": "toBitt", "reference": "refToBittGrid", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('fromPos'), "dataIndex": "fromPos", "reference": "refFromPosGrid", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('toPos'), "dataIndex": "toPos", "reference": "refToPosGrid", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('startTime'), "dataIndex": "startTime", "reference": "refStartTimeGrid", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('endTime'), "dataIndex": "endTime", "reference": "refEndTimeGrid", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('stoppageReason'), "dataIndex": "stoppageReason", "reference": "refStoppageReasonGrid", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('updatedBy'), "dataIndex": "updatedBy", "reference": "refUpdatedByGrid", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('updatedTime'), "dataIndex": "updatedDt", "reference": "refUpdatedTimeGrid", "filter" : "string", "align" : "center", "width": 175
				},
			]
		},
		
		/************** Document *****************/
		{
			"key": "ShippingNote",
			"items": [
				{
				    "header": ViewUtil.getLabel('vslcallid'),
				    "dataIndex": "vslCallId",
				    "filter" : "string",
				    "width": 150,
				    "locked" : false,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{
				    "header": ViewUtil.getLabel('vslNm'),
				    "dataIndex": "vslNm",
				    "filter" : "string",
				    "width": 150
				},
				{
				    "header": ViewUtil.getLabel('SNLCategory'),
				    "dataIndex": "catgCdNm",
				    "filter" : "string",
				    "width": 100,
				    "locked" : false,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{ // 3
				    "header": ViewUtil.getLabel('bookingNo'),
				    "dataIndex": "mfDocId",
				    "filter" : "string",
				    "width": 150,
				    "locked" : false,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{ // 4
				    "header": ViewUtil.getLabel('SNLSNNo'),
				    "dataIndex": "shipgNoteNo",
				    "filter" : "string",
				    "width": 150,
				    "locked" : false,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{ // 5
				    "header": ViewUtil.getLabel('deliveryMode'),
				    "dataIndex": "delvTpCdNm",
				    "filter" : "string",
				    "width": 120,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    },
				    //"hidden": true,
				},
				{ 
					"header": ViewUtil.getLabel('domesticCargo'), 
					"dataIndex": "domesticChk", 
					"reference": "refdomYn", 
					"filter": "string", 
					"width": 120
				},
				{ 
					"header": ViewUtil.getLabel('bondedWh'), 
					"xtype": "checkcolumn",
					"dataIndex": "bondedWhYn", 
					"reference": "refBondedWh", 
					"filter": "string", 
					"width": 120,
					"listeners": {
						beforecheckchange: function() { 
							return false;
						}
					}
				},
				{ 
					"header": ViewUtil.getLabel('lotNo'), 
					"filter" : "string", 
					"dataIndex": "lotNo",
					"width": 120
				},
				{ // 6
					"header": ViewUtil.getLabel('SNLCargoType'),
					"dataIndex": "cgTpCdNm",
					"filter" : "string",
					"width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
					}
				},
				//Comodity Group
				{
				    "header": ViewUtil.getLabel('commodityGroup'),
				    "dataIndex": "cmdtGroupCd",
				    "filter" : "string",
				    "width": 150,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    },
				    "hidden": true
				},
				{	// 7
				    "header": ViewUtil.getLabel('SNLCommodity'),
				    "dataIndex": "cmdtCdNm",
				    "filter" : "string",
				    "width": 150,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{	// 8
				    "header": ViewUtil.getLabel('SNLTypeOfPac'),
				    "dataIndex": "pkgTpCdNm",
				    "filter" : "string",
				    "width": 250,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{
				    "header": ViewUtil.getLabel('transportMode'),
				    "dataIndex": "tsptTpCdNm",
				    "filter" : "string",
				    "width": 135,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{
				    "header": ViewUtil.getLabel('SNLGWeight'),
				    "dataIndex": "cgWgt",
				    "filter" : "string",
				    "width": 100,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    },
				    "hidden": true
				},
				{
				    "header": ViewUtil.getLabel('SNLMeasurement'),
				    "dataIndex": "cgMsrmt",
				    "filter" : "string",
				    "width": 130,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    },
				    "hidden": true
				},
				 {	// 11
				    "header": ViewUtil.getLabel('SNLSNStatus'),
				    "dataIndex": "statCdNm",
				    "filter" : "string",
				    "width": 120,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				}, 
				{	// 12
				    "header": ViewUtil.getLabel('mt'),
				    "dataIndex": "cgWgt",
				    "filter" : "string",
				    "width": 100,
				},
				{	// 13
				    "header": ViewUtil.getLabel('m3'),
				    "dataIndex": "cgMsrmt",
				    "filter" : "string",
				    "width": 100,
				},		
				{	// 14
				    "header": ViewUtil.getLabel('SNLQuantity'),
				    "dataIndex": "pkgQty",
				    "filter" : "string",
				    "width": 100,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{
				    "header": ViewUtil.getLabel('hatchNo'),
				    "dataIndex": "hatchNo",
				    "filter" : "string",
				    "width": 100,				    
					"hidden": false,
				},
				{
				    "header": ViewUtil.getLabel('imdg'),
				    "dataIndex": "imdg",
				    "filter" : "string",
				    "width": 100,
				    "hidden": false,				    
				},
				{
				    "header": ViewUtil.getLabel('unno'),
				    "dataIndex": "unno",
				    "filter" : "string",
				    "width": 100,
				    "hidden": false,				    
				},
				{
				    "header": ViewUtil.getLabel('SNLEstArrDate'),
				    "dataIndex": "estArrvDt1",
				    "filter" : "string",
				    "width": 120,
				    "editor": {
				        "xtype": "datefield",
				        "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
				    },
				    "hidden": false
				},
				{//17)	MAFI Parent ID
				    "header": ViewUtil.getLabel('SNMafiparentId'),
				    "dataIndex": "mafiParentId",
				    "filter" : "string",
				    "width": 150,
				    "hidden": true,				    
				},
				{//18)	Parent Commodity Group
				    "header": ViewUtil.getLabel('SNParentcmdt'),
				    "dataIndex": "parentCmdt",
				    "filter" : "string",
				    "width": 200,
				    "hidden": true,				    
				},
				{
					"header": ViewUtil.getLabel('SNDescrGoods'),
					"dataIndex": "goodsDescr",
					"filter": "string",
					"width": 110
				},
				{	// 17
				    "header": ViewUtil.getLabel('SNLSAgent'),
				    "dataIndex": "saCd",
				    "filter" : "string",
				    "width": 100,
				},	
				//SA NAme 17
				{
				    "header": ViewUtil.getLabel('SNLSAName'),
				    "dataIndex": "sa",
				    "filter" : "string",
				    "width": 250,
				},	
				{
				    "header": ViewUtil.getLabel('SNLShipperCd'),
				    "dataIndex": "shpr",
				    "filter" : "string",
				    "width": 150,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				//Shipper Name
				{
				    "header": ViewUtil.getLabel('SNLShipperNm'),
				    "dataIndex": "shprNm",
				    "filter" : "string",
				    "width": 250,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{
				    "header": ViewUtil.getLabel('SNLConignee'),
				    "dataIndex": "cnsneNm",
				    "filter" : "string",
				    "width": 200,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				//25)	Customs Approval Date
				{
				    "header": ViewUtil.getLabel('SNLCustomDeclarationDate'),
				    "dataIndex": "customDeclarationDate",
				    "width": 180,
 				    "xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					},
					 "hidden": true,
				},
				{ // Transporter
				    "header": ViewUtil.getLabel('SNLTrans'),
				    "dataIndex": "tsptComp",
				    "filter" : "string",
				    "width": 150,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{ // POD
				    "header": ViewUtil.getLabel('SNLPOD'),
				    "dataIndex": "portOfDis",
				    "filter" : "string",
				    "width": 150,
				    "editor": {
				        "xtype": "textfield",
				        "editable": false
				    }
				},
				{
				    "header": ViewUtil.getLabel('createdBy'),
				    "dataIndex": "insUserId",
				    "filter" : "string",
				    "width": 150,
				    "hidden": true,
				},
				{
				    "header": ViewUtil.getLabel('createdDate'),
				    "reference": "refCreatedDate",
				    "dataIndex": "insDt",
				    //"filter" : "string",
				    "width": 120,
 				    "xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					},
					"hidden": true,
				},
				{
				    "header": ViewUtil.getLabel('lastUpdatedBy'),
				    "dataIndex": "updUserId",
				    "filter" : "string",
				    "width": 150,
				    "hidden": false,
				},
				{
				    "header": ViewUtil.getLabel('lastUpdatedDt'),
				    "dataIndex": "updDt",
				    //"filter" : "string",
				    "width": 120,
				    "xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					},
					"hidden": false
				}
			]
		},
		{
			"key": "ShippingNoteFileUpload",
			"items": [ 	
				{ "header": ViewUtil.getLabel('fileName'), "dataIndex": "fileName", "width": 155, "align":"center", "caption":"fileName", "reference": "refFileName", "filter": "string"},
				{ "header": ViewUtil.getLabel('fileSize'), "dataIndex": "fileSize", "xtype":"numbercolumn","format":"0,000","width": 90, "align":"center", "caption":"fileSize", "style" : "text-align:center", "reference": "reffileSize", "filter": "string"},
			]
		},
		{
			"key": "ShippingNotePackageDetail",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{ "header": ViewUtil.getLabel('packageNo'), "filter": "string", "width": 110, "dataIndex":"pkgNo" },
				{ "header": ViewUtil.getLabel('packageDesc'), "filter": "string", "width": 160, "dataIndex":"pkgDesc" },
				{ "header": ViewUtil.getLabel('grossWeight'), "filter": "string", "width": 100, "dataIndex": "pkgMt" },
				{ "header": ViewUtil.getLabel('m3'), "filter": "string", "width": 80, "dataIndex": "pkgM3" },
				{ "header": ViewUtil.getLabel('length'), "filter": "string", "width": 110, "dataIndex": "length" },
				{ "header": ViewUtil.getLabel('width'), "filter": "string", "width": 110, "dataIndex": "width" },
				{ "header": ViewUtil.getLabel('height'), "filter": "string", "width": 110, "dataIndex": "height" },
				{ "header": ViewUtil.getLabel('rmk'), "filter": "string", "width": 120, "dataIndex": "pkgRmk" }
			]
		},
		{
			"key": "SubmissionSNGoods",
			"items": [
			{
			    "header": ViewUtil.getLabel('hatchNo'),
			    "reference": "refGridHatch",
			    "dataIndex": "hatchNo",
			    "editor": {
			        "xtype": "combo",
			        "bind": {
			        	"store": '{hatchNoCombo}'
			        },
			        "displayField": "scdNm",
			        "valueField": "scd",
			        "queryMode": "local",
			        "allowBlank": false,
			        "value":"",
			        "editable": true,
	   				"typeAhead": true,
			        "forceSelection" : true,
			        "activeError": "important",
			    },
			    //"renderer":"onGridtransferedByRenderer",
			    "width": 100
			},
			{
			    "header": ViewUtil.getLabel('mT'),
			    "reference": "refGridMt",
			    "dataIndex": "wgtDtl",
			    "editor": {
			        "xtype": "numberfield",
			        "reference": "ctlGridWidth",
			        "maskRe": /[0-9]/,
			        "minValue": 0,
	                "maxValue":999999.999,
			        "hideTrigger": "true",
			        "selectOnFocus" : true,
			        "listeners":{
/* 			            "blur": "onChangeVolume" */
			        },
			        "decimalPrecision": 3
			    },
			    "width": 100
			},
			{
			    "header": ViewUtil.getLabel('m3'),
			    "reference": "refGridM3",
			    "dataIndex": "msrmtDtl",
			    "editor": {
			        "xtype": "numberfield",
			        "reference": "ctlGridHeight",
			        "maskRe": /[0-9]/,
			        "minValue": 0,
	                "maxValue":999999.999,
			        "hideTrigger": "true",
			        "selectOnFocus" : true,
			        "listeners":{
/* 			            "blur": "onChangeVolume" */
			        },
			        "decimalPrecision": 3
			    },
			    "width": 100
			},
			{
			    "header": ViewUtil.getLabel('SNLQuantity'),
			    "reference": "refGridQty",
			    "dataIndex": "pkgQtyDtl",
			    "editor": {
			        "xtype": "numberfield",
			        "reference": "ctlGridLength",
			        "maskRe": /[0-9]/,
			        "minValue": 0,
	                "maxValue":999999,
	                "selectOnFocus" : true,
			        "hideTrigger": "true",
			        "listeners":{
/* 			            "blur": "onChangeVolume" */
			        }
			    },
			    "width": 100
			}
			]
		},
		
		{
			"key": "SubmissionSNGoods_old2",
			"items": [
			{
			    "header": ViewUtil.getLabel('hatchNo'),
			    "reference": "refGridHatch",
			    "dataIndex": "hatchNo",
			    "editor": {
			        "xtype": "combo",
			        "bind": {
			        	"store": '{hatchNoCombo}'
			        },
			        "displayField": "scdNm",
			        "valueField": "scd",
			        "queryMode": "local",
			        "allowBlank": false,
			        "value":"",
			        "editable": true,
	   				"typeAhead": true,
			        "forceSelection" : true,
			        "activeError": "important",
			    },
			    //"renderer":"onGridtransferedByRenderer",
			    "width": 100
			},
			{
			    "header": ViewUtil.getLabel('SNMode'),
			    "reference": "refGridMode",
			    "dataIndex": "tsptTpCdDtl",
			    "editor": {
			        "xtype": "combo",
			        "bind": {"store": '{transferedByCombo}'},
			        "displayField": "scdNm",
			        "valueField": "scd",
			        "queryMode": "local",
			        "allowBlank": false,
			        "value":"",
			        "editable": true,
	   				"typeAhead": true,
			        "forceSelection" : true,
			        "activeError": "important",
			        
			    },
			    //"renderer":"onGridtransferedByRenderer",
			    "width": 100
			},
			{
			    "header": ViewUtil.getLabel('SNWidth'),
			    "reference": "refGridWidth",
			    "dataIndex": "cgWth",
			    "editor": {
			        "xtype": "numberfield",
			        "reference": "ctlGridWidth",
			        "editable": true,
			        "hideTrigger": "true",
			        "minValue": 0,
	                "maxValue":99999.999,
			        "maskRe": /[0-9.]/,
			        "listeners":{
/* 			            "blur": "onChangeVolume" */
			        }
			    },
			    "width": 100
			},
			{
			    "header": ViewUtil.getLabel('SNHeight'),
			    "reference": "refGridHeight",
			    "dataIndex": "cgHgt",
			    "editor": {
			        "xtype": "numberfield",
			        "reference": "ctlGridHeight",
			        "editable": true,
			        "hideTrigger": "true",
			        "minValue": 0,
	                "maxValue":99999.999,
			        "maskRe": /[0-9.]/,
			        "listeners":{
/* 			            "blur": "onChangeVolume" */
			        }
			    },
			    "width": 100
			},
			{
			    "header": ViewUtil.getLabel('SNLength'),
			    "reference": "refGridLength",
			    "dataIndex": "cgLen",
			    "editor": {
			        "xtype": "numberfield",
			        "reference": "ctlGridLength",
			        "maskRe": /[0-9.]/,
			        "editable": true,
			        "minValue": 0,
	                "maxValue":99999.999,
			        "hideTrigger": "true",
			        "listeners":{
/* 			            "blur": "onChangeVolume" */
			        }
			    },
			    "width": 100
			}
			]
		},
		
		{
			"key": "SubmissionSNGoods_old",
			"items": [{
			    "header": ViewUtil.getLabel('SNMode'),
			    "reference": "refGridMode",
			    "dataIndex": "tsptTpCdDtl",
			    "editor": {
			        "xtype": "combo",
			        "bind": {"store": '{transferedByCombo}'},
			        "displayField": "scdNm",
			        "valueField": "scd",
			        "queryMode": "local",
			        "editable": false,
			        "value":"",
			        "forceSelection" : true
			        
			    },
			    "renderer":"onGridtransferedByRenderer",
			    "width": 100
			},{
			    "header": ViewUtil.getLabel('SNCode'),
			    "reference": "refGridCode",
			    "dataIndex": "cmdtCdDtl",
			    "editor": {
			        "xtype": "textfield",
			        "editable": false
			    },
			    "width": 120
			},{
			    "header": ViewUtil.getLabel('SNcommName'),
			    "reference": "refGridName",
			    "dataIndex": "cmdtCdNm",
			    "editor": {
			        "xtype": "textfield",
			        "editable": false
			    },
			    "width": 150
			},{
			    "header": ViewUtil.getLabel('SNWidth'),
			    "reference": "refGridWidth",
			    "dataIndex": "cgWth",
			    "editor": {
			        "xtype": "textfield",
			        "reference": "ctlGridWidth",
			        "editable": true,
			        "maskRe": /[0-9.]/,
			        "listeners":{
			            "blur": "onChangeVolume"
			        }
			    },
			    "width": 100
			},{
			    "header": ViewUtil.getLabel('SNHeight'),
			    "reference": "refGridHeight",
			    "dataIndex": "cgHgt",
			    "editor": {
			        "xtype": "textfield",
			        "reference": "ctlGridHeight",
			        "editable": true,
			        "maskRe": /[0-9.]/,
			        "listeners":{
			            "blur": "onChangeVolume"
			        }
			    },
			    "width": 100
			},{
			    "header": ViewUtil.getLabel('SNLength'),
			    "reference": "refGridLength",
			    "dataIndex": "cgLen",
			    "editor": {
			        "xtype": "textfield",
			        "reference": "ctlGridLength",
			        "maskRe": /[0-9.]/,
			        "editable": true,
			        "listeners":{
			            "blur": "onChangeVolume"
			        }
			    },
			    "width": 100
			},{
			    "header": ViewUtil.getLabel('SNUnit'),
			    "reference": "refGridUnit",
			    "dataIndex": "pkg",
			    "editor": {
			        "xtype": "textfield",
			        "editable": false
			    },
			    "width": 250
			},{
			
			    "header": ViewUtil.getLabel('SNTotalMeasure'),
			    "reference": "refTotMeasure",
			    "dataIndex": "msrmtDtl",
			    "editor": {
			        "xtype": "textfield",
			        "reference": "ctlTotMeasure",
			        "editable": true,
			        "maskRe": /[0-9.]/,
			        "listeners":{
			            "blur": "onChangeTotal"
			        }
			    },
			    "width": "170"
			}
			]
		},
		
		{
			"key": "ForwarderNomination",
			"items":  [
				{
					"xtype": "rownumberer", "width" : 40, "locked" : true, "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('jobNo'),
					"dataIndex": "jobNo", "reference": "refJobNo", "filter" : "string", "align" : "center", "width": 90
				},
				{
					"header": ViewUtil.getLabel('blno'),
					"dataIndex": "blNo", "reference": "refBlno", "filter" : "string", "align" : "center", "width": 140
				},
				{
					"header": ViewUtil.getLabel('dono'),
					"dataIndex": "doNo", "reference": "refDoNo", "filter" : "string", "align" : "center", "width": 140
				},
				{
					"header": ViewUtil.getLabel('fnDocId'), "dataIndex": "docId", "reference": "refFnDocId", "filter" : "string", "align" : "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "reference": "refVslCallId", "filter" : "string", "align" : "left", "width": 90
				},
				{
					"header": ViewUtil.getLabel('deliveryMode'), "dataIndex": "delvTpNm", "reference": "refDeliveryMode", "filter" : "string", "align" : "center", "width": 130
				},
				{
					"header": ViewUtil.getLabel('cargoTp'), "dataIndex": "cgTpCdNm", "reference": "refCargoTp", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('gdsRmk'), "dataIndex": "gdsRmk", "reference": "refGdsRmk", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('packageTp'), "dataIndex": "pkgTpCd", "reference": "refPackageTp", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('fwdAgent'), "dataIndex": "fwdCd", "reference": "refFwdAgent", "filter" : "string", "align" : "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgStatus'), "dataIndex": "dgStatNm", "reference": "refDgStatus", "filter" : "string", "align" : "center", "width": 130
				},
				{
					"header": ViewUtil.getLabel('dgApprDt'), "dataIndex": "status", "reference": "refDgApprDt", "filter" : "string", "align" : "center", "width": 170
				},
				{
					"header": ViewUtil.getLabel('custDeclNo'), "dataIndex": "releaseNo", "reference": "refCustDeclNo", "filter" : "string", "align" : "center", "width": 165
				},
				{
					"header": ViewUtil.getLabel('custApprStat'), "dataIndex": "customsAprvStat", "reference": "refCustApprStat", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('custApprDt'), "dataIndex": "customsAprvDt", "reference": "refCustApprDt", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('packingList'), "dataIndex": "packingList", "reference": "refPackingList", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('docMt'), "dataIndex": "wgt", "reference": "refDocMt", "filter" : "string", "align" : "right", "width": 100
				},
				{
					"header": ViewUtil.getLabel('actMt'), "dataIndex": "", "reference": "refActMt", "filter" : "string", "align" : "right", "width": 100
				},
				{
					"header": ViewUtil.getLabel('diffMt'), "dataIndex": "", "reference": "refDiffMt", "filter" : "string", "align" : "right", "width": 100
				},
				{
					"header": ViewUtil.getLabel('docM3'), "dataIndex": "vol", "reference": "refDocM3", "filter" : "string", "align" : "right", "width": 110
				},
				{
					"header": ViewUtil.getLabel('actM3'), "dataIndex": '', "reference": "refActM3", "filter" : "string", "align" : "right", "width": 110
				},
				{
					"header": ViewUtil.getLabel('diffM3'), "dataIndex": '', "reference": "refDiffM3", "filter" : "string", "align" : "right", "width": 110
				},
				{
					"header": ViewUtil.getLabel('docQty'), "dataIndex": "pkgQty", "reference": "refDocQty", "filter" : "string", "align" : "right", "width": 90
				},
				{
					"header": ViewUtil.getLabel('actQty'), "dataIndex": '', "reference": "refActQty", "filter" : "string", "align" : "right", "width": 90
				},
				{
					"header": ViewUtil.getLabel('diffQty'), "dataIndex": '', "reference": "refDiffQty", "filter" : "string", "align" : "right", "width": 90
				},
				{
					"header": ViewUtil.getLabel('consignors'), "dataIndex": "cnsnorCd", "reference": "refConsignors", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('consignee'), "dataIndex": "cnsCd", "reference": "refConsignee", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('pol'), "dataIndex": "pol", "reference": "refPol", "filter" : "string", "align" : "right", "width": 80
				},
				{
					"header": ViewUtil.getLabel('pod'), "dataIndex": "pod", "reference": "refPod", "filter" : "string", "align" : "right", "width": 80
				},
				{
					"header": ViewUtil.getLabel('fnRemark'), "dataIndex": "rmk", "reference": "refFnRemark", "filter" : "string", "align" : "center", "width": 90
				},
				{
					"header": ViewUtil.getLabel('cargoClass'), "dataIndex": "cgClassCd", "reference": "refCargoClass", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('hsCode'), "dataIndex": "hsCd", "reference": "refHsCode", "filter" : "string", "align" : "center", "width": 90
				}]
		},
		{
			"key": "DeliveryOrder",
			"items": [
				{
					"header": ViewUtil.getLabel('no'), "xtype": "rownumberer", "width" : 40, "locked" : true, "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('masterBLNo'), "dataIndex": "mfdocid", "reference": "refMasterBlno", "filter" : "string", "align" : "center", "width": 150
				}, 
				{
					"header": ViewUtil.getLabel('blno'), "dataIndex": "blno", "reference": "refBlno", "filter" : "string", "align" : "center", "width": 150
				},          		
				{
					"header": ViewUtil.getLabel('deliveryMode'), "dataIndex": "delvTpNm", "reference": "refDeliveryMode", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dono'), "dataIndex": "dono", "reference": "refDoNo", "filter" : "string", "align" : "center", "width": 150
				},
				/* {
					"header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "reference": "refVslCallId", "filter" : "string", "align" : "left", "width": 150
				}, */
				/* {
					"header": ViewUtil.getLabel('gpYn'), "dataIndex": "gpYn", "reference": "refGp", "filter" : "string", "align" : "center", "width": 80
				}, */
				/* {
					"header": ViewUtil.getLabel('acknowledge'), "dataIndex": "ackby", "reference": "refAcknowledge", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('acknowledgeDt'), "dataIndex": "ackdt", "reference": "refAcknowledgeDt", "filter" : "string", "align" : "center", "width": 170
				}, */
				/* {
					"header": ViewUtil.getLabel('modeofOperation'), "dataIndex": "btspttpcdnm", "reference": "refModeofOperation", "filter" : "string", "align" : "center", "width": 130
				}, */
				/* {
					"header": ViewUtil.getLabel('transporter'), "dataIndex": "tsptr", "reference": "refTransporter", "filter" : "string", "align" : "center", "width": 90
				}, */
				{ 
					"header": ViewUtil.getLabel('domesticCargo'), "dataIndex": "domesticChk", "filter": "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('docMt'), "dataIndex": "wgt", "reference": "refDocMt", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('docM3'), "dataIndex": "vol", "reference": "refDocM3", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('docQty'), "dataIndex": "pkgqty", "reference": "refDocQty", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('directMt'), "dataIndex": "dmt", "reference": "refDirectMt", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('directM3'), "dataIndex": "dm3", "reference": "refDirectM3", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('directQty'), "dataIndex": "dqty", "reference": "refDirectQty", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('inDirectMt'), "dataIndex": "imt", "reference": "refInDirectMt", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('inDirectM3'), "dataIndex": "im3", "reference": "refInDirectM3", "filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('inDirectQty'), "dataIndex": "iqty", "reference": "refInDirectQty", "filter" : "string", "align" : "center", "width": 110
				}
				/* {
					"header": ViewUtil.getLabel('numOfPkg'), "dataIndex": "pkgqty", "reference": "refNumOfPkg", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('typeOfpackage'), "dataIndex": "pkgtpcd", "reference": "refTypeOfPackage", "filter" : "string", "align" : "center", "width": 150
				}, */
				/* {
					"header": ViewUtil.getLabel('issueDt'), "dataIndex": "issuedt", "reference": "refIssueDt", "filter" : "string", "align" : "center", "width": 100
				}, */
				/* {
					"header": ViewUtil.getLabel('consignee'), "dataIndex": "cnsneecd", "reference": "refConsignee", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('fwdAgent'), "dataIndex": "ptnrcd", "reference": "refFwdAgent", "filter" : "string", "align" : "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('cargoTp'), "dataIndex": "cgTpCdNm", "reference": "refCargoTp", "filter" : "string", "align" : "center", "width": 130
				}, */
				/* {
					"header": ViewUtil.getLabel('dgClass'), "dataIndex": "imdgunno", "reference": "refDgClass", "filter" : "string", "align" : "center", "width": 130
				}, */
				/* {
					"header": ViewUtil.getLabel('custDeclNo'), "dataIndex": "releaseNo", "reference": "refCustDeclNo", "filter" : "string", "align" : "center", "width": 165
				},
				{
					"header": ViewUtil.getLabel('custApprStat'), "dataIndex": "customsAprvStat", "reference": "refCustApprStat", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('custApprDt'), "dataIndex": "customsAprvDt", "reference": "refCustApprDt", "filter" : "string", "align" : "center", "width": 200
				}, */
				/* {
					"header": ViewUtil.getLabel('gdsRmk'), "dataIndex": "gdsrmk", "reference": "refGdsRmk", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('commodity'), "dataIndex": "cmdtcd", "reference": "refCommodity", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('remark'), "dataIndex": "domark", "reference": "refRmk", "filter" : "string", "align" : "center", "width": 90
				} */
			]
		},
		{
			"key": "SubDeliveryOrder",
			"items":[
				{
					"header": ViewUtil.getLabel('no'), "xtype": "rownumberer", "width" : 40, "locked" : true, "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('subDoNo'), "dataIndex": "sdono", "reference": "refSubDoNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('operating'), "dataIndex": "delivered", "reference": "refDelivered", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('directMt'), "dataIndex": "dmt", "reference": "refDirectMt", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('directM3'), "dataIndex": "dm3", "reference": "refDirectM3", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('directQty'), "dataIndex": "dqty", "reference": "refDirectQty", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('inDirectMt'), "dataIndex": "imt", "reference": "refInDirectMt", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('inDirectM3'), "dataIndex": "im3", "reference": "refInDirectM3", "filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('inDirectQty'), "dataIndex": "iqty", "reference": "refInDirectQty", "filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('numOfPkg'), "dataIndex": "pkgqty", "reference": "refNumOfPkg", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('modeofOperation'), "dataIndex": "btspttpcdnm", "reference": "refModeofOperation", "filter" : "string", "align" : "center", "width": 130
				},
				{
					"header": ViewUtil.getLabel('transporter'), "dataIndex": "tsptr", "reference": "refTransporter", "filter" : "string", "align" : "center", "width": 90
				},
				{
					"header": ViewUtil.getLabel('cgtpcd'), "dataIndex": "cgtpcd", "reference": "refCatgTpCd", "filter" : "string", "align" : "center", "width": 90, "hidden":true
				}
			]
		},
		{
			"key": "DeliveryOrderFileUpload",
			"items": [ 	
				{ "header": ViewUtil.getLabel('fileName'), "dataIndex": "fileName", "width": 500, "align":"center", "caption":"fileName", "reference": "refFileName", "filter": "string"},
				{ "header": ViewUtil.getLabel('fileSize'), "dataIndex": "fileSize", "xtype":"numbercolumn","format":"0,000","width": 200, "align":"center", "caption":"fileSize", "style" : "text-align:center", "reference": "reffileSize", "filter": "string"},
			]
		},
		{
			"key": "DOPackageDetail",
			"items": [
				{ "header": ViewUtil.getLabel('packageNo'), "filter": "string", "width": 110, "dataIndex":"pkgNo" },
				{ "header": ViewUtil.getLabel('packageDesc'), "filter": "string", "width": 160, "dataIndex":"pkgDesc" },
				{ "header": ViewUtil.getLabel('mt'), "filter": "string", "width": 80, "dataIndex": "pkgMt" },
				{ "header": ViewUtil.getLabel('m3'), "filter": "string", "width": 80, "dataIndex": "pkgM3" },
				{ "header": ViewUtil.getLabel('length'), "filter": "string", "width": 110, "dataIndex": "length" },
				{ "header": ViewUtil.getLabel('width'), "filter": "string", "width": 110, "dataIndex": "width" },
				{ "header": ViewUtil.getLabel('height'), "filter": "string", "width": 110, "dataIndex": "height" },
				{ "header": ViewUtil.getLabel('rmk'), "filter": "string", "width": 120, "dataIndex": "pkgRmk" }
			]
		},
		{
			"key": "SDOPackageDetail",
			"items": [
				{ "headerCheckbox": true,"reference": "refCheckBox", "editable": true, "sortable": true,"hideable": true,"menuDisabled": true,"dataIndex": "chk", "width": 50, "align":"center", "xtype":'checkcolumn', "style" : "text-align:center", "filter": "string",
				  "listeners": {
						"checkChange": "onPackageNoChecked",
						"headercheckchange": "onHeaderPackageNoChecked",	
				  },
/* 				  "renderer": function(value, meta) { */
/* 								var record = meta.record; */
/* 								if(record.get("sdono") !== ''){ */
/* 									meta.tdCls += ' ' + this.disabledCls; */
/* 								} */
/* 								return (new Ext.grid.column.CheckColumn).renderer(value); */
/* 							} */
				},
				{ "header": ViewUtil.getLabel('packageNo'), "filter": "string", "width": 110, "dataIndex":"pkgNo" },
				{ "header": ViewUtil.getLabel('packageDesc'), "filter": "string", "width": 160, "dataIndex":"pkgDesc" },
				{ "header": ViewUtil.getLabel('mt'), "filter": "string", "width": 60, "dataIndex": "pkgMt" },
				{ "header": ViewUtil.getLabel('m3'), "filter": "string", "width": 60, "dataIndex": "pkgM3" },
				{ "header": ViewUtil.getLabel('sdoNo'), "filter": "string", "width": 120, "dataIndex": "sdono"},
				{ "header": ViewUtil.getLabel('confirmDischargingIndirectOperation'), "filter": "string", "width": 120, "dataIndex": "isVA" },
				{ "header": ViewUtil.getLabel('rmk'), "filter": "string", "width": 120, "dataIndex": "pkgRmk" },
				{ "header": ViewUtil.getLabel('length'), "filter": "string", "width": 90, "dataIndex": "length" },
				{ "header": ViewUtil.getLabel('width'), "filter": "string", "width": 90, "dataIndex": "width" },
				{ "header": ViewUtil.getLabel('height'), "filter": "string", "width": 90, "dataIndex": "height" },
			],
		},
		{
			"key": "GoodsReceipt",
			"items": [
				{
					"xtype": "rownumberer", "width" : 40, "locked" : true, "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('sNNo'), "dataIndex": "shipgNoteNo", "reference": "refSNNo", "filter" : "string","align" : "center", "locked" : false, "width": 150
				},
				{
					"header": ViewUtil.getLabel('gRNo'), "dataIndex": "gdsRecvNo", "reference": "refGRNo", "filter" : "string","align" : "center", "locked" : false, "width": 110
				},
				{
					"header": ViewUtil.getLabel('operating'), "dataIndex": "delivered", "reference": "refDelivered", "filter" : "string", "align" : "center", "width": 100
				},
				/* {
					"header": ViewUtil.getLabel('spare'), "dataIndex": "spCargoChk", "reference": "refSpare","filter" : "string", "align" : "center", "width": 65
				}, */
				{
					"header": ViewUtil.getLabel('sumitDt'), "dataIndex": "grSumitDt", "reference": "refSumitDt","filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('returnToshipper'), "dataIndex": "rhdlMode", "reference": "refSumitDt","filter" : "string", "align" : "center", "width": 150,"xtype": "actioncolumn",
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.rhdlMode === 'R' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('estArrivalDt'), "dataIndex": "estArrvDt", "reference": "refEstArrivalDt","filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('oMode'), "dataIndex": "grTsptTpCdNm", "reference": "refOMode","filter" : "string", "align" : "center", "width": 80
				},
				{
					"header": ViewUtil.getLabel('gateInDt'), "dataIndex": "gateInDt", "reference": "refGateInDt","filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('gateOutDt'), "dataIndex": "gateOutDt", "reference": "refGateOutDt","filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('loadedTime'), "dataIndex": "loadEndTime", "reference": "refLoadedTime","filter" : "string", "align" : "center", "width": 100
				},
				{ 
					"header": ViewUtil.getLabel('vslpatiDomestic'), "dataIndex": "domesticChk", "reference": "refdomYn", "filter": "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('shipper'), "dataIndex": "shprNm", "reference": "refShipper","filter" : "string", "align" : "center", "width": 250
				},
				{
					"header": ViewUtil.getLabel('csgnee'), "dataIndex": "cnsneNm", "reference": "refCsgnee","filter" : "string", "align" : "center", "width": 250
				},
				{
					"header": ViewUtil.getLabel('agent'), "dataIndex": "fwrAgnt", "reference": "refAgent","filter" : "string", "align" : "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgCargo'), "dataIndex": "imdgUnno", "reference": "refDgCargo","filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('tpCargo'), "dataIndex": "cgTpCdNm", "reference": "refTpCargo","filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('tpPac'), "dataIndex": "pkgTpCdNm", "reference": "refTpPac","filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('desc'), "dataIndex": "cmdtCd", "reference": "refDesc","filter" : "string", "align" : "center", "width": 90
				},
				{
					"header": ViewUtil.getLabel('weight'), "dataIndex": "grWgt", "reference": "refWgt","filter" : "string", "align" : "right", "width": 80, "xtype": "numbercolumn", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('goodsreceiptMsrmt'), "dataIndex": "grMsrmt", "reference": "refMsrmt","filter" : "string", "align" : "right", "width": 120, "xtype": "numbercolumn", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('goodsreceiptQty'), "dataIndex": "grQty", "reference": "refQty","filter" : "string", "align" : "right", "width": 100
				},
				{
					"header": ViewUtil.getLabel('arrvQty'), "dataIndex": "arrvQty", "reference": "refArrvQty","filter" : "string", "align" : "right", "width": 220
				},
				{
					"header": ViewUtil.getLabel('pkgRecivedTime'), "dataIndex": "pkgRecivedTime", "reference": "refPkgRecivedTime","filter" : "string", "align" : "right", "width": 230
				},
				{
					"header": ViewUtil.getLabel('rmk'), "dataIndex": "grRmk", "reference": "refRmk","filter" : "string", "align" : "center", "width": 90
				},
				{
					"header": ViewUtil.getLabel('updDt'), "dataIndex": "updDt", "reference": "refUpdDt","filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('userId'), "dataIndex": "userId", "reference": "refUserId","filter" : "string", "align" : "center", "width": 90
				}
			]
		},
		{
			"key": "GoodsReceiptForNonVessel",
			"items": [
				{
					"xtype": "rownumberer", "width" : 40,  "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('sNNo'), "dataIndex": "shipgNoteNo", "reference": "refSNNo", "filter" : "string","align" : "center",  "width": 130
				},
				{
					"header": ViewUtil.getLabel('gRNo'), "dataIndex": "gdsRecvNo", "reference": "refGRNo", "filter" : "string","align" : "center",  "width": 110
				},
				{
					"header": ViewUtil.getLabel('spare'), "dataIndex": "spCargoChk", "reference": "refSpare","filter" : "string", "align" : "center", "width": 65
				},
				{
					"header": ViewUtil.getLabel('sumitDt'), "dataIndex": "grSumitDt", "reference": "refSumitDt","filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('estArrivalDt'), "dataIndex": "eta", "reference": "refEstArrivalDt","filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('oMode'), "dataIndex": "grTsptTpCdNm", "reference": "refOMode","filter" : "string", "align" : "center", "width": 80
				},
				{
					"header": ViewUtil.getLabel('gateInDt'), "dataIndex": "gateInDt", "reference": "refGateInDt","filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('gateOutDt'), "dataIndex": "gateOutDt", "reference": "refGateOutDt","filter" : "string", "align" : "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('loadedTime'), "dataIndex": "loadEndTime", "reference": "refLoadedTime","filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('shipper'), "dataIndex": "shprNm", "reference": "refShipper","filter" : "string", "align" : "center", "width": 250
				},
				{
					"header": ViewUtil.getLabel('csgnee'), "dataIndex": "cnsneNm", "reference": "refCsgnee","filter" : "string", "align" : "center", "width": 250
				},
				{
					"header": ViewUtil.getLabel('agent'), "dataIndex": "fwrAgnt", "reference": "refAgent","filter" : "string", "align" : "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('dgCargo'), "dataIndex": "imdgUnno", "reference": "refDgCargo","filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('tpCargo'), "dataIndex": "cgTpCdNm", "reference": "refTpCargo","filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('tpPac'), "dataIndex": "pkgTpCdNm", "reference": "refTpPac","filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('desc'), "dataIndex": "cmdtCd", "reference": "refDesc","filter" : "string", "align" : "center", "width": 90
				},
				{
					"header": ViewUtil.getLabel('weight'), "dataIndex": "grWgt", "reference": "refWgt","filter" : "string", "align" : "right", "width": 80
				},
				{
					"header": ViewUtil.getLabel('goodsreceiptMsrmt'), "dataIndex": "grMsrmt", "reference": "refMsrmt","filter" : "string", "align" : "right", "width": 120
				},
				{
					"header": ViewUtil.getLabel('goodsreceiptQty'), "dataIndex": "grQty", "reference": "refQty","filter" : "string", "align" : "right", "width": 100
				},
				{
					"header": ViewUtil.getLabel('arrvQty'), "dataIndex": "arrvQty", "reference": "refArrvQty","filter" : "string", "align" : "right", "width": 220
				},
				{
					"header": ViewUtil.getLabel('pkgRecivedTime'), "dataIndex": "pkgRecivedTime", "reference": "refPkgRecivedTime","filter" : "string", "align" : "right", "width": 230
				},
				{
					"header": ViewUtil.getLabel('rmk'), "dataIndex": "grRmk", "reference": "refRmk","filter" : "string", "align" : "center", "width": 90
				},
				{
					"header": ViewUtil.getLabel('updDt'), "dataIndex": "updDt", "reference": "refUpdDt","filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('userId'), "dataIndex": "userId", "reference": "refUserId","filter" : "string", "align" : "center", "width": 90
				}
			]
		},
		{
			"key": "GoodsReceiptPackageDetail",
			"items": [
				{ "header": ViewUtil.getLabel('packageNo'), "filter": "string", "align": "center", "width": 110, "dataIndex":"pkgNo" },
				{ "header": ViewUtil.getLabel('packageDesc'), "filter": "string", "flex": 1, "dataIndex":"pkgDesc" },
				{ "header": ViewUtil.getLabel('mt'), "filter": "string", "width": 80, "dataIndex": "pkgMt" },
				{ "header": ViewUtil.getLabel('m3'), "filter": "string", "width": 80, "dataIndex": "pkgM3" },
				{ "header": ViewUtil.getLabel('grNo'), "filter": "string", "width": 80, "dataIndex": "gdsRecvNo" },
				{ "header": ViewUtil.getLabel('length'), "filter": "string", "width": 100, "dataIndex": "length" },
				{ "header": ViewUtil.getLabel('width'), "filter": "string", "width": 100, "dataIndex": "width" },
				{ "header": ViewUtil.getLabel('height'), "filter": "string", "width": 100, "dataIndex": "height" },
				{ "header": ViewUtil.getLabel('rmk'), "filter": "string", "width": 120, "dataIndex": "pkgRmk" }
			]
		},
		{
			"key": "ShippingNoteForNonVessel",
			"items": [
				{
					"xtype": "rownumberer", "width" : 40,  "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'), "reference": "refSNNo", "dataIndex": "shipgNoteNo", "filter" : "string",  "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNMFDocId'), "reference": "refCBRNo", "dataIndex": "mfDocId", "filter" : "string", "width": 150,
					
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLOMode'), "reference": "refOMode", "dataIndex": "tsptTpCdNm", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLGWeight'), "reference": "refGWeight", "dataIndex": "cgWgt", "filter" : "string", "width": 100,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLMeasurement'), "reference": "refMeasurement", "dataIndex": "cgMsrmt", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLQuantity'), "reference": "refQuantity", "dataIndex": "pkgQty", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLEstArrDate'), "reference": "refEstArrDate", "dataIndex": "estArrvDt1", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "datefield",
						"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLFASubmittedDate'), "reference": "refFASubmittedDate", "dataIndex": "fwrdSumitDt", "filter" : "string", "width": 170,
					"editor": {
						"xtype": "datefield",
						"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLFAName'), "reference": "refFAName", "dataIndex": "fwrdSumitBy", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLDGStatus'), "reference": "refDGStatus", "dataIndex": "dgStatNm", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLDGApprovalDate'), "reference": "refDGApprovalDate", "dataIndex": "dgAprvDt", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false,
						"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLCustomDeclarationDate'), "reference": 'refCustomDeclarationDate', "dataIndex": 'customsAprvDt', "filter" : "string", "width": 170,
					"editor": {
						"xtype": "datefield",
						"readOnly": true,
						"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLCustomAppStatus'), "reference": "refCustomAppStatus", "dataIndex": "customsAprvStat", "filter" : "string", "width": 170,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLFAgent'), "reference": "refFAgent", "dataIndex": "fwrd", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLTrans'), "reference": "refTrans", "dataIndex": "tsptComp", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLShipper'), "reference": "refShipper", "dataIndex": "shprNm", "filter" : "string", "width": 250,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLConignee'), "reference": "refConignee", "dataIndex": "cnsneNm", "filter" : "string", "width": 250,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLCommodity'), "reference": "refCommodity", "dataIndex": "cmdtCd", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLSNStatus'), "reference": "refSNStatus", "dataIndex": "statCdNm", "filter" : "string", "width": 150,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				},
				{
					"header": ViewUtil.getLabel('SNLTypeOfPac'), "reference": "refTypeOfPac", "dataIndex": "pkgTpCdNm", "filter" : "string", "width": 250,
					"editor": {
						"xtype": "textfield",
						"editable": false
				   }
				}
				]
		},
		{
			"key": "ShippingNoteForNonVesselDetail",
			"items":  [{
				"header":  ViewUtil.getLabel('SNMode'), "reference": "refGridMode", "dataIndex": "tsptTpCdDtl"
			},
			{
				"header":  ViewUtil.getLabel('SNCode'), "reference": "refGridCode", "dataIndex": "cmdtCdDtl",
				"editor": {
					"xtype": "textfield",
					"editable": false
				}
			},
			{
				"header":  ViewUtil.getLabel('SNcommName'), "reference": "refGridName", "dataIndex": "cmdtCdNm",
					"flex":1,
				"editor": {
					"xtype": "textfield",
					"editable": false
				}
			},
			{
				"header":  ViewUtil.getLabel('SNWidth'), "reference": "refGridWidth", "dataIndex": "cgWth",
				"editor": {
					"xtype": "textfield",
					"reference": "ctlGridWidth",
					"fieldStyle":"text-align:center",
					"editable": true,
					"allowBlank": false,
					"maskRe": /[0-9.]/,
					"listeners":{
						"blur": "onChangeVolume"
					}
				}
			},
			{
				"header":  ViewUtil.getLabel('SNHeight'), "reference": "refGridHeight", "dataIndex": "cgHgt",
				"editor": {
					"xtype": "textfield",
					"reference": "ctlGridHeight",
					"fieldStyle":"text-align:center",
					"editable": true,
					"allowBlank": false,
					"maskRe": /[0-9.]/,
					"listeners":{
						"blur": "onChangeVolume"
					}
				}
			},
			{
				"header":  ViewUtil.getLabel('SNLength'), "reference": "refGridLength", "dataIndex": "cgLen",
				"editor": {
					"xtype": "textfield",
					"reference": "ctlGridLength",
					"fieldStyle":"text-align:center",
					"maskRe": /[0-9.]/,
					"editable": true,
					"allowBlank": false,
					"listeners":{
						"blur": "onChangeVolume"
					}
				},
					//"width": 10
			},
			{
				"header": ViewUtil.getLabel('qty'), "reference":"refGridQty", "dataIndex":"pkgQtyDtl",
				"editor":{
					"xtype":"textfield",
					"reference":"refTxtUnit",
					"fieldStyle":"text-align:center",
					"maskRe": /[0-9.]/,
					"editable":true,
					"listeners":{
						"blur": "onChangeVolume"
					}
				}
			},
			{
				"header":  ViewUtil.getLabel('SNUnit'), "reference": "refGridUnit", "dataIndex": "pkg", "flex":1,"width": 170,
				"editor": {
					"xtype":"textfield",
					"reference":"refTxtPkgType",
					"editable":false,
					"allowBlank": false
				}	
			},
			{

				"header":  ViewUtil.getLabel('SNTotalMeasure'), "reference": "refTotMeasure", "dataIndex": "msrmtDtl", "width": 170,
				"editor": {
					"xtype": "textfield",
					"reference": "ctlTotMeasure",
					"editable": true,
					"allowBlank": false,
					"maskRe": /[0-9.]/,
					"listeners":{
						"blur": "onChangeTotal"
					}
				}
			}]
		},
		{
			"key": "AssignedLorryList",
			"items": [
				{
					"header": ViewUtil.getLabel('expArrDate'),
					"dataIndex": "estDt",
					"reference": "refExpArrDate",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('masterBLNo'),
					"dataIndex": "mfDocId",
					"reference": "refMasterBlNo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('blNo'),
					"dataIndex": "blNo",
					"reference": "refBlNo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('sdoNo'),
					"dataIndex": "sdoNo",
					"reference": "refSDONo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('ALSnNo'),
					"dataIndex": "shipgNoteNo",
					"reference": "refALSnNo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('grNo'),
					"dataIndex": "grNo",
					"reference": "refGrNo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('vslCallId'),
					"dataIndex": "vslCallId",
					"reference": "refJpvc",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('vslNm'),
					"dataIndex": "vslNm",
					"reference": "refVslNm",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cgTpNm",
					"reference": "refCargoTp",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('unitNo'),
					"dataIndex": "unitNo",
					"reference": "refUnitNo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'),
					"dataIndex": "lorryNo",
					"reference": "refTsptrOrigin",
					"filter" : "string",
					"align" : "center",
					"width": 100
				},{
					"header": ViewUtil.getLabel('tsptrOrigin'),
					"dataIndex": "tsptCd",
					"reference": "refTsptrOrigin",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('tsptrQty'),
					"dataIndex": "tsptrQty",
					"reference": "refTsptrQty",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('LADriverNm'),
					"dataIndex": "driver",
					"reference": "refLADriverNm",
					"filter" : "string",
					"align" : "center",
					"width": 120
				},{
					"header": ViewUtil.getLabel('expireDate'),
					"dataIndex": "exprDt",
					"reference": "refExpireDate",
					"filter" : "string",
					"align" : "center",
					"width": 110
				},{
					"header": ViewUtil.getLabel('licenceNo'),
					"dataIndex": "licsNo",
					"reference": "refLicenceNo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('deliveryMode'),
					"dataIndex": "delvTpNm",
					"reference": "refDelvMode",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('location'),
					"dataIndex": "whLoc",
					"reference": "refLocation",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('whLocation'),
					"dataIndex": "whLocNm",
					"reference": "refWhLocNm",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('lotNo'),
					"dataIndex": "lotNo",
					"reference": "refLotNo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('gateNm'),
					"dataIndex": "gateNm",
					"reference": "refLotNo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('cgTpNmMega'),
					"dataIndex": "cargoNm",
					"reference": "refCargoNm",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('securityIn'),
					"dataIndex": "securityIn",
					"reference": "refSecurityIn",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('printLocSlip'),
					"dataIndex": "printLocSlip",
					"reference": "refPrintLocSlip",
					"filter" : "string",
					"align" : "center",
					"hidden" : true,
					"width": 150
				},{
					"header": ViewUtil.getLabel('1stWgt'),
					"dataIndex": "firstWgtTime",
					"reference": "refFirstWgt",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('gateIn'),
					"dataIndex": "gateInDt",
					"reference": "refGateIn",
					"filter" : "string",
					"align" : "center",
					"width": 110
				},{
					"header": ViewUtil.getLabel('vslschlLoadCargo'),
					"dataIndex": "loadCargo",
					"reference": "refLoadCargo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('dischargeCargo'),
					"dataIndex": "dischargeCargo",
					"reference": "refDischargeCargo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('handlingIn'),
					"dataIndex": "handlingIn",
					"reference": "refHandlingIn",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('handlingOut'),
					"dataIndex": "handlingOut",
					"reference": "refHandlingOut",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('2ndWgt'),
					"dataIndex": "secondWgtTime",
					"reference": "refSecondWgt",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('printCIR'),
					"dataIndex": "printCIR",
					"reference": "refPrintCIR",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('gateOut'),
					"dataIndex": "gateOutDt",
					"reference": "refGateOut",
					"filter" : "string",
					"align" : "center",
					"width": 110
				},{
					"header": ViewUtil.getLabel('chassisNo'),
					"dataIndex": "chassisNo",
					"reference": "refchassisNo",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('rmk'),
					"dataIndex": "rmk",
					"reference": "refRmk",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('shipperConsignee'),
					"dataIndex": "shpCsnNm",
					"reference": "refShipperConsignee",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('validDt'),
					"dataIndex": "validDt",
					"reference": "refValidDt",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('firstWgt'),
					"dataIndex": "firstWgt",
					"reference": "refFirstWgt",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('secondWgt'),
					"dataIndex": "secondWgt",
					"reference": "refSecondWgt",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('actMtDirect'),
					"dataIndex": "actMt",
					"reference": "refActMt",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('actM3Direct'),
					"dataIndex": "actM3",
					"reference": "refActM3",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('actQtyDirect'),
					"dataIndex": "actQty",
					"reference": "refActQty",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('actMtIndirect'),
					"dataIndex": "actMtIndirect",
					"reference": "refActMtIndirect",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},{
					"header": ViewUtil.getLabel('actQtyIndirect'),
					"dataIndex": "actQtyIndirect",
					"reference": "refActQtyIndirect",
					"filter" : "string",
					"align" : "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('cirRmk'),
					"dataIndex": "cirRmk",
					"reference": "refCirRmk",
					"filter" : "string",
					"align" : "center",
					"width": 150
				}
			]
		},
		{
			"key": "VesselScheduleInternal",
			"items": [
				{
					"header": ViewUtil.getLabel('vslNm'),
					"dataIndex": "vslNm",
					"reference": "refVslNm",
					"filter" : "string",
					"align" : "left",
					"locked" : false,
					"lockable": false,
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('vslschCallId'),
					"dataIndex": "vslCallId",
					"reference": "refJpvcNo",
					"filter" : "string",
					"align" : "left",
					"locked" : false,
					"lockable": false,
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('vslTpNm'),
					"dataIndex": "vslTpNm",
					"reference": "refVslTpNm",
					"lockable": false,
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('berthPlanYn'),
					"xtype": "actioncolumn",
					"hideable": false,
					"dataIndex": "berthPlanYn",
					"reference": "refBerthPlanYn",
					"lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.berthPlanYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 110
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('dbYn'),
					"lockable": false,
					"hideable": false,
					"dataIndex": "dbYn",
					"reference": "refDbYn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dbYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 120
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('vslpatiDomestic'),
					"dataIndex": "domesticChk", 
					"lockable": false,
					"filter": "string",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.domesticChk === 'Y') ? 'x-fa fa-check green' : '';
						}
					}], 
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('eta'),
					"xtype": "datecolumn",
					"lockable": false,
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "eta",
					"reference": "refEta",
					"width": 170,
					"exportRenderer": function (value, record, dataIndex, cell, column) {
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('ata'),
					"xtype": "datecolumn",
					"lockable": false,
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "ata",
					"reference": "refAta",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('atb'),
					"xtype": "datecolumn",
					"lockable": false,
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "atb",
					"reference": "refAtb",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('atu'),
					"xtype": "datecolumn",
					"lockable": false,
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "atu",
					"reference": "refAtu",
					"width": 170
				},
				{
					/* "hidden": true, */
					"header": ViewUtil.getLabel('status'),
					"dataIndex": "reconcileStatus",
					"lockable": false,
					"reference": "refStatus",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('sumitDtCS'),
					"xtype": "datecolumn",
					"lockable": false,
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "sumitDt",
					"reference": "refSumitDt",
					"filter" : "string",
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"header": ViewUtil.getLabel('csStatus'),
					"dataIndex": "csStatus",
					"lockable": false,
					"reference": "refCsStatus",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.csStatus === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"header": ViewUtil.getLabel('accnt'),
					"dataIndex": "accnt",
					"lockable": false,
					"reference": "refAccnt",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.accnt === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('invoiceStatus'),
					"dataIndex": "invoiceStatus",
					"lockable": false,
					"reference": "refInvoiceStatus",
					"filter" : "string",
					"width": 170
				},
				{
					"hidden": true,
					"header": ViewUtil.getLabel('summitStatName'),
					"dataIndex": "summitStatName",
					"lockable": false,
					"reference": "refSummitStatName",
					"filter" : "string",
					"width": 170
				},
				{
					"hidden": true,
					"header": ViewUtil.getLabel('mptsStatusNm'),
					"dataIndex": "mptsStatusNm",
					"lockable": false,
					"reference": "refMptsStatusNm",
					"filter" : "string",
					"width": 170
				},
				{
					"hidden": true,
					"header": ViewUtil.getLabel('ogaStatus'),
					"dataIndex": "ogaStatus",
					"lockable": false,
					"reference": "refOgaStatus",
					"filter" : "string",
					"width": 170
				},
				{
					"hidden": true,
					"header": ViewUtil.getLabel('ogaStatusDate'),
					"xtype": "datecolumn",
					"lockable": false,
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "ogaStatusDate",
					"reference": "refOgaStatusDate",
					"filter" : "string",
					"width": 170
				},
				{
					"hidden": true,
					"header": ViewUtil.getLabel('ogaApprovalBy'),
					"dataIndex": "ogaApprovalBy",
					"lockable": false,
					"reference": "refOgaApprovalBy",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('berthAprvUserId'),
					"dataIndex": "berthAprvUserId",
					"lockable": false,
					"reference": "refBerthAprvUserId",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('amendDate'),
					"xtype": "datecolumn",
					"lockable": false,
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "amendDate",
					"reference": "refAmendDate",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('amendedBy'),
					"dataIndex": "amendedBy",
					"lockable": false,
					"reference": "refAmendedBy",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"header": ViewUtil.getLabel('balance'),
					"dataIndex": "balance",
					"lockable": false,
					"reference": "refBalance",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.balance === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('arrvSaId'),
					"lockable": false,
					"dataIndex": "arrvSaId",
					"reference": "refArrvSaId",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('deprSaId'),
					"lockable": false,
					"dataIndex": "deprSaId",
					"reference": "refDeprSaId",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('saLoginId'),
					"lockable": false,
					"dataIndex": "saLoginId",
					"reference": "refSaLoginId",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('shipper'),
					"lockable": false,
					"dataIndex": "shipper",
					"reference": "refShipper",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},		
				{
					"header": ViewUtil.getLabel('consignee'),
					"lockable": false,
					"dataIndex": "consignee",
					"reference": "refConsignee",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},		
				{
					"header": ViewUtil.getLabel('berthLoc'),
					"lockable": false,
					"dataIndex": "berthLoc",
					"reference": "refBerthLoc",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('operationType'),
					"lockable": false,
					"dataIndex": "operationType",
					"reference": "refOperationType",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"lockable": false,
					"dataIndex": "cargoTp",
					"reference": "refCargoTp",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"xtype":"numbercolumn",
					"lockable": false,
					"header": ViewUtil.getLabel('grt'),
					"dataIndex": "grt",
					"reference": "refGrt",
					"align" : "right",
					"format":"0,000",
					"width": 170
				},
				{
					"xtype":"numbercolumn",
					"lockable": false,
					"header": ViewUtil.getLabel('dwt'),
					"dataIndex": "dwt",
					"reference": "refDwt",
					"align" : "right",
					"format":"0,000.000",
					"width": 170
				},
				{
					"xtype":"numbercolumn",
					"lockable": false,
					"header": ViewUtil.getLabel('mt'),
					"dataIndex": "mt",
					"reference": "refMt",
					"align" : "right",
					"format":"0,000.000",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('maxCrc'),
					"lockable": false,
					"dataIndex": "maxCrc",
					"reference": "refMaxCrc",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('opeHrVsc'),
					"lockable": false,
					"dataIndex": "opeHr",
					"reference": "refVesselScheduleInternalOpeHr",
					"filter" : "string",
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"header": ViewUtil.getLabel('dgGoodYn'),
					"dataIndex": "dgGoodYn",
					"reference": "refDgGoodYn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dgGoodYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"header": ViewUtil.getLabel('dgDeclaration'),
					"dataIndex": 'dgDeclaration',
					"reference": 'refDgDeclaration',
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dgDeclaration === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('dgStatus'),
					"lockable": false,
					"dataIndex": "dgStatus",
					"reference": "refDgStatus",
					"filter" : "string",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('loa'),
					"lockable": false,
					"dataIndex": "loa",
					"reference": "refLoa",
					"align" : "right",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('drfArrv'),
					"lockable": false,
					"dataIndex": "drfArrv",
					"reference": "refDrfArrv",
					"align" : "right",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('drfDeptr'),
					"lockable": false,
					"dataIndex": "drfDeptr",
					"reference": "refDrfDeptr",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('ispsLevel'),
					"lockable": false,
					"dataIndex": "ispsLevel",
					"reference": "refIspsLevel",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('shipCallNoVsc'),
					"lockable": false,
					"dataIndex": "shipCallNo",
					"reference": "refShipCallNo",
					"filter" : "string",
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"header": ViewUtil.getLabel('stowagePlan'),
					"dataIndex": "stowagePlan",
					"reference": "refStowagePlan",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.stowagePlan === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"header": ViewUtil.getLabel('packingList'),
					"dataIndex": "packingList",
					"reference": "refPackingList",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.packingList === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				}
			]
		},
		{
			"key": "ConfirmationSlip1StowagePlanUpload",
			"items": [
				{
					"xtype": "rownumberer",
					"width" : 40,
					"align" : "center"
				},{
					"header":  ViewUtil.getLabel('fileName'),
					"dataIndex": "fileName",
					"reference": "refFileName",
					"filter": "string",
					"width" : 120,
				},
				{
					"header": ViewUtil.getLabel('fileSize'),
					"dataIndex": "fileSize",
					"reference": "refFileSize",
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"width": 60
				}
			]
		},
		{
			"key": "ConfirmationSlip1",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				/*{
					"header": "CO",
					"dataIndex": "cgOptTpCd",
					"width": 50,
					"editor":{
						"xtype": "combo",
						"bind": {
							"store": '{vesselScheduleCargoOperationCs1Combo}'
						},
						"queryMode": "local",
						"displayField": "scdNm",
						"valueField": "scd",
						"editable": false,
						//allowBlank: false
					}
				},*/
				{
					"header": ViewUtil.getLabel('cgTpNm'),
					"dataIndex": "cgTpCd",
					"filter": "string",
					"width": 100,
					"editor":{
						"xtype": "combo",
						"bind": {"store": '{vesselScheduleCargoTypeUnLiquidCombo}'},
						"queryMode": "local",
						"displayField": "scdNm",
						"valueField": "scd",
						"editable": false,
						//allowBlank: false,
						"listeners": {
							"change": "onCargoTypeUnLiquidComboChange"
						}
					},
					"renderer":"onDryBulkGridComboRenderer",
					"summaryType": function() {
						return 'TOTAL';
					}
				},
				{
					"header": ViewUtil.getLabel('opeType'),
					"dataIndex": "opeType",
					//"reference": "refOpeType",
					"filter": "string",
					"width": 100,
					"editor":{
						"xtype": "combo",
						"bind": {"store": '{vesselScheduleOpeTypeCombo}'},
						"queryMode": "local",
						"displayField": "scdNm",
						"valueField": "scd",
						"editable": false
					},
				   "rendere":"onDryBulkGridComboRenderer"
				},
				{
					"header": ViewUtil.getLabel('dgCommodity'),
					"dataIndex": "cmdtCd",
					"filter": "string",
					"width": 100,
					"editor":{
						"xtype": "combo",
						"bind": {
							"store": '{vesselScheduleCommodityCodeCombo}'
						},
						"queryMode": "local",
						"displayField": "scd",
						"valueField": "scd",
						"forceSelection":true
					}
				},
				// {
				// 	"header": ViewUtil.getLabel('oprHrs'),
				// 	"dataIndex": "opeHr",
				// 	"filter": "string",
				// 	"width": 130,
				// 	"xtype": "numbercolumn",
				// 	"align" : "right",
				// 	"format": "0,000.000",
				// 	"editor" : {
				// 		"xtype" : "numberfield",
				// 		"minValue" : 0,
				// 		"maxValue": 999999999999.999,
				// 		"align" : "right",
				// 		"decimalPrecision": 3,
				// 		"selectOnFocus" : true
				// 	},
				// 	"summaryType": "sum"
				// },
				// {
				// 	"header": ViewUtil.getLabel('workDd'),
				// 	"dataIndex": "workDd",
				// 	//"reference": "refWorkDd",
				// 	"filter": "string",
				// 	"width": 130,
				// 	"xtype": "numbercolumn",
				// 	"align" : "right",
				// 	"format": "0,000",
				// 	"editor" : {
				// 		"xtype" : "numberfield",
				// 		"minValue" : 0,
				// 		"maxValue": 9999999999,
				// 		"align" : "right",
				// 		"selectOnFocus" : true
				// 	},
				// 	"summaryType": "sum"
				// },
				{
					"header": ViewUtil.getLabel('mt'),
					"dataIndex": "wgt",
					"filter": "string",
					"width": 70,
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"editor" : {
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 999999999999.999,
						"align" : "right",
						"decimalPrecision": 3,
						"selectOnFocus" : true
					},
					
					"summaryType": "sum"
				},
				{
					"header": ViewUtil.getLabel('m3'),
					"dataIndex": "msrmt",
					//"reference": "refMsrmt",
					"filter": "string",
					"width": 70,
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"editor" : {
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 999999999999.999,
						"align" : "right",
						"decimalPrecision": 3,
						"selectOnFocus" : true
					},
					
					"summaryType": "sum"
				},
				{
					"header": ViewUtil.getLabel('quantity'),
					"dataIndex": "qty",
					//"reference": "refQty",
					"filter": "string",
					"width": 100,
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"editor" : {
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 999999999999.999,
						"align" : "right",
						"decimalPrecision": 3,
						"selectOnFocus" : true
					},
					
					"summaryType": "sum"
				},
				{
					"header": ViewUtil.getLabel('workHatchNo'),
					"dataIndex": "workHatchNo",
					//"reference": "refWorkHatchNo",
					"filter": "string",
					"width": 120,
					"editor":{
						"xtype": "combo",
						"bind": {
							"store": '{vesselScheduleWorkableHatchCombo}'
						},
						"queryMode": "local",
						"displayField": "scdNm",
						"valueField": "scd",
						"editable": false
					},
			
					"summaryType": function(records){
						var str = '';
						for(var i=0; i<records.length; i++){
							str = str.length === 0 ? records[i].get('workHatchNo') : str + ',' + records[i].get('workHatchNo');
						}
						return str;
					}      				        	
				},
				{
					"header": ViewUtil.getLabel('topCln'),
					"dataIndex": "topCln",
					//"reference": "refTopCln",
					"filter": "string",
					"width": 120,
					"editor":{
						"xtype": "combo",
						"bind": {
							"store": '{vesselScheduleTopCleanCombo}'
						},
						"queryMode": "local",
						"displayField": "scdNm",
						"valueField": "scd",
						"editable": false
					}
			
				},
				{
					"header": ViewUtil.getLabel('dg'),
					"dataIndex": "dgChk",
					"reference": "refConfirmationSlip1DgChk",
					"filter": "string",
					"width": 70
				}
			]
		},
		{
			"key": "ConfirmationSlip2",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{	
					"header": ViewUtil.getLabel('deliveryMode'),
					"dataIndex": "delvTpNm",
					"reference": "refDelvTpNm",
					"filter": "string",
					"width": 100
				},							
				{
					"header": ViewUtil.getLabel('cgTpNm'),
					"dataIndex": "cgTpCd",
					"reference": "refColCgTpNm",
					"filter": "string",
					"width": 60
				},
				{
					"header": ViewUtil.getLabel('cgOptTpCd'),
					"dataIndex": "cgOptTpCd",
					"reference": "refColCgOptTpCd",
					"filter": "string",
					"width": 50
				},
				{
					"header": ViewUtil.getLabel('blSnNo'),
					"dataIndex": "blSnNo",
					"reference": "refColBlNo",
					"filter": "string",
					"width": 70,
					"summaryType": function() {
						return "TOTAL";
					}	                    				
				},
				{
					"header": ViewUtil.getLabel('vesselScheduleWgt'),
					"dataIndex": "wgt",
					"reference": "refColWgt",
					"filter": "string",
					"width": 70,
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					
					"summaryType": "sum"   						
				},
				{
					"header": ViewUtil.getLabel('crc'),
					"dataIndex": "crc",
					"reference": "refColCrc",
					"width": 65,
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					
					"summaryType": "sum"
				},
				{
					"header": ViewUtil.getLabel('tmnlOpr'),
					"dataIndex": "tmnlOpr",
					"reference": "refColTmnlOpr",
					"filter": "string",
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('cmdtCd'),
					"dataIndex": "cmdtCd",
					"reference": "refColCmdtCd",
					"filter": "string",
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('pkgTpCd'),
					"dataIndex": "pkgTpCd",
					"reference": "refColPkgTpCd",
					"filter": "string",
					"width": 60
				},
				{
					"header": ViewUtil.getLabel('shprCnsne'),
					"dataIndex": "shprCnsne",
					"reference": "refColShprCnsne",
					"filter": "string",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('cnsne'),
					"dataIndex": "cnsne",
					"reference": "refColCnsne",
					"filter": "string",
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('opeHr'),
					"dataIndex": "opeHr",
					"reference": "refColOpeHr",
					"filter": "string",
					"width": 70,
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					
					"summaryType": "sum"
				},
				{
					"header": ViewUtil.getLabel('unnoClass'),
					"dataIndex": "unno",
					"reference": "refColUnno",
					"filter": "string",
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('dgChk'),
					"dataIndex": "dgChk",
					"reference": "refColDgChk",
					"filter": "string",
					"width": 55
				},
				{
					"header": ViewUtil.getLabel('pol'),
					"dataIndex": "pol",
					"reference": "refColPol",
					"filter": "string",
					"width": 55
				},
				{
					"header": ViewUtil.getLabel('fdest'),
					"dataIndex": "fdest",
					"reference": "refColFdest",
					"filter": "string",
					"width": 55
				},
				{
					"header": ViewUtil.getLabel('remark'),
					"dataIndex": "remark",
					"reference": "refColRmk",
					"width": 90
				},
			]
		},
		{
			"key": "TankerSubmission",
			"items": [
				{	
					"header": ViewUtil.getLabel('terminal'),
					"dataIndex": "tmnlOpr",
					"reference": "refTerminal",
					"filter": "string"
				},
				{	
					"header": ViewUtil.getLabel('vorHoseOn'),
					"dataIndex": "hoseOnDt",
					"reference": "refHoseOn",
					"width": 170,
					"filter": "string",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					},
				},
				{	
					"header": ViewUtil.getLabel('vorCommenceTime'),
					"dataIndex": "stDt",
					"reference": "refCommenceTime",
					"width": 170,
					"filter": "string",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{	
					"header": ViewUtil.getLabel('vorCompletionTime'),
					"dataIndex": "endDt",
					"reference": "refCompletionTime",
					"width": 170,
					"filter": "string",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{	
					"header": ViewUtil.getLabel('vorHoseOff'),
					"dataIndex": "hoseOffDt",
					"reference": "refHoseOff",
					"width": 170,
					"filter": "string",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{	
					"header": ViewUtil.getLabel('vslschlVolumn'),
					"dataIndex": "cgWgt",
					"reference": "refVolumn",
					"filter": "string"
				},
			]
		},
		{
			"key": "ConfirmationSlipPassenger", //ISPS
			"items": [
				{
					"header": ViewUtil.getLabel('pasgerNm'),
					"dataIndex": "pasgerNm",
					"reference": "refPasgerNm",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('pasgerNatCd'),
					"dataIndex": "pasgerNatCd",
					"reference": "refPasgerNatCd",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('pasgerBirthPlc'),
					"dataIndex": "pasgerBirthPlc",
					"reference": "refPasgerBirthPlc",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('pasgerBirthDt'),
					"dataIndex": "pasgerBirthDt",
					"reference": "refPasgerBirthDt",
					"filter": "string",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('pasgerPasptNo'),
					"dataIndex": "pasgerPasptNo",
					"reference": "refPasgerPasptNo",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('pasgerPermResdYn'),
					"dataIndex": "pasgerPermResdYn",
					"reference": "refPasgerPermResdYn",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('pasgerAuthYn'),
					"dataIndex": "pasgerAuthYn",
					"reference": "refPasgerAuthYn",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('pasgerCabinYn'),
					"dataIndex": "pasgerCabinYn",
					"reference": "refPasgerCabinYn",
					"filter": "string",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('pasgerSex'),
					"dataIndex": "pasgerSex",
					"reference": "refPasgerSex",
					"filter": "string",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('pasgerTp'),
					"dataIndex": "pasgerTp",
					"reference": "refPasgerTp",
					"filter": "string",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('pasgerNtlYn'),
					"dataIndex": "pasgerNtlYn",
					"reference": "refPasgerNtlYn",
					"filter": "string",
					"width": 80
				}
			]
		},
		
		{
			"key": "VesselScheduleExternal",
			"items": [
				{
					"header": ViewUtil.getLabel('vslNm'),
					"dataIndex": "vslNm",
					"reference": "refVslNm",
					"filter": "string",
					"align" : "left",
					"locked" : false,
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('jpvcNo'),
					"dataIndex": "jpvcNo",
					"reference": "refJpvcNo",
					"filter": "string",
					"align" : "left",
					"locked" : false,
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('vslTpNm'),
					"dataIndex": "vslTpNm",
					"reference": "refVslTpNm",
					"filter": "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('berthPlanYn'),
					"xtype": "actioncolumn",
					"dataIndex": "berthPlanYn",
					"reference": "refBerthPlanYn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.berthPlanYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('dbYn'),
					"hideable": false,
					"xtype": "actioncolumn",
					"dataIndex": "dbYn",
					"reference": "refDbYn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dbYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('eta'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "eta",
					"reference": "refEta",
					"filter": "string",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('etb'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "etb",
					"reference": "refEtb",
					"filter": "string",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('etd'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "etd",
					"reference": "refEtd",
					"filter": "string",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('atb'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "atb",
					"reference": "refAtb",
					"filter": "string",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('atu'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "atu",
					"reference": "refAtu",
					"filter": "string",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('shipCallNo'),
					"dataIndex": "shipCallNo",
					"reference": "refShipCallNo",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('ispsLevel'),
					"dataIndex": "ispsLevel",
					"reference": "refIspsLevel",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('berthLoc'),
					"dataIndex": "berthLoc",
					"reference": "refBerthLoc",
					"filter": "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('status'),
					"dataIndex": "status",
					"reference": "refStatus",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('summitStatName'),
					"dataIndex": "summitStatName",
					"reference": "refSummitStatName",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('mptsStatusNm'),
					"dataIndex": "mptsStatusNm",
					"reference": "refMptsStatusNm",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('ogaStatus'),
					"dataIndex": "ogaStatus",
					"reference": "refOgaStatus",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('ogaStatusDate'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "ogaStatusDate",
					"reference": "refOgaStatusDate",
					"filter": "string",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('ogaApprovalBy'),
					"dataIndex": "ogaApprovalBy",
					"reference": "refOgaApprovalBy",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('berthAprvUserId'),
					"dataIndex": "berthAprvUserId",
					"reference": "refBerthAprvUserId",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cargoTp",
					"reference": "refCargoTp",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('sumitDtCS'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "sumitDt",
					"reference": "refSumitDt",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('amendDate'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "amendDate",
					"reference": "refAmendDate",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('amendedBy'),
					"dataIndex": "amendedBy",
					"reference": "refAmendedBy",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('arrvSaId'),
					"dataIndex": "arrvSaId",
					"reference": "refArrvSaId",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('deprSaId'),
					"dataIndex": "deprSaId",
					"reference": "refDeprSaId",
					"filter": "string",
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"header": ViewUtil.getLabel('dgGoodYn'),
					"dataIndex": "dgGoodYn",
					"reference": "refDgGoodYn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dgGoodYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"header": ViewUtil.getLabel('dgDeclaration'),
					"dataIndex": "dgDeclaration",
					"reference": "refDgDeclaration",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dgDeclaration === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('dgStatus'),
					"dataIndex": "dgStatus",
					"reference": "refDgStatus",
					"filter": "string",
					"width": 120
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"header": ViewUtil.getLabel('stowagePlan'),
					"dataIndex": "stowagePlan",
					"reference": "refStowagePlan",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.stowagePlan === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"header": ViewUtil.getLabel('accnt'),
					"dataIndex": "accnt",
					"reference": "refAccnt",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.accnt === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				},
				{
					"xtype": "actioncolumn",
					"hideable": false,
					"header": ViewUtil.getLabel('packingList'),
					"dataIndex": "packingList",
					"reference": "refPackingList",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.packingList === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
					"width": 170
				}
			]
		},
		{
		
			"key": "ConfirmDischargingOfRoRoCargoItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 170, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('blno'), "dataIndex": "blNo", "width": 170, "align":"center", "caption":"blNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 170, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('dono'), "dataIndex": "doNo", "width": 150, "align":"center", "caption":"doNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('delvMode'), "dataIndex": "delvTpNm", "width": 100, "align":"center", "caption":"delvTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "width": 150, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "width": 150, "align":"center", "caption":"modelNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "nosOfUnit", "width": 100, "align":"center", "caption":"nosOfUnit", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remainedUnit'), "dataIndex": "remainUnit", "width": 100, "align":"center", "caption":"remainUnit", "style" : "text-align:center", "filter": "string"}
			]
		},

		{
		
			"key": "ConfirmDischargingOfRoRoUnitItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 150, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('delvMode'), "dataIndex": "delvTpNm", "width": 100, "align":"center", "caption":"delvTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('disEndDt'), "dataIndex": "dischargedDate", "width": 120, "align":"center", "caption":"disEndDt", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "width": 120, "align":"center", "caption":"inDate", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('WHLocId'), "dataIndex": "unitYardLoc", "width": 100, "align":"center", "caption":"unitYardLoc", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('statNm'), "dataIndex": "statNm", "width": 130, "align":"center", "caption":"statNm", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
		
			"key": "NonManifestedOfRORORegistrationItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 140, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('blno'), "dataIndex": "cgNo", "width": 150, "align":"center", "caption":"cgNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 150, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 150, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('disEndDt'), "dataIndex": "dischargedDate", "width": 120, "align":"center", "caption":"disEndDt", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
		
			"key": "ConfirmHandlingOutOfRoRoCargoItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 150, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('blno'), "dataIndex": "blNo", "width": 150, "align":"center", "caption":"blNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 150, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('dono'), "dataIndex": "doNo", "width": 150, "align":"center", "caption":"doNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('delvMode'), "dataIndex": "delvTpNm", "width": 100, "align":"center", "caption":"delvTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "width": 130, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "width": 130, "align":"center", "caption":"modelNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "nosOfUnit", "width": 100, "align":"center", "caption":"nosOfUnit", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remained_D'), "dataIndex": "rsUnitCnt", "width": 100, "align":"center", "caption":"rsUnitCnt", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remained_Y'), "dataIndex": "dsUnitCnt", "width": 100, "align":"center", "caption":"dsUnitCnt", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remained_H'), "dataIndex": "remainUnit", "width": 100, "align":"center", "caption":"remainUnit", "style" : "text-align:center", "filter": "string"}
			]
		},

		{
		
			"key": "ConfirmHandlingOutOfRoRoDoItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('SDONo'), "dataIndex": "sdoNo", "width": 130, "align":"center", "caption":"doNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "nosOfUnit", "width": 80, "align":"center", "caption":"nosOfUnit", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remainedUnit'), "dataIndex": "remainUnit", "width": 120, "align":"center", "caption":"remainUnit", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
		
			"key": "ConfirmHandlingOutOfRoRoItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 150, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('WHLocId'), "dataIndex": "yardLoc", "width": 100, "align":"center", "caption":"yardLoc", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "width": 120, "align":"center", "caption":"inDate", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('gateInDate'), "dataIndex": "gateInDate", "width": 120, "align":"center", "caption":"gateInDate", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('outDate'), "dataIndex": "outDate", "width": 120, "align":"center", "caption":"outDate", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('gateOutDate'), "dataIndex": "gateOutDate", "width": 120, "align":"center", "caption":"gateOutDate", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "width": 100, "align":"center", "caption":"driverId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('driverNm'), "dataIndex": "driverNm", "width": 120, "align":"center", "caption":"driverNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "width": 100, "align":"center", "caption":"truckNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remark'), "dataIndex": "hoRemarks", "width": 120, "align":"center", "caption":"hoRemarks", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
			"key": "TruckAssignmentOfRORO",
			"items": [
				{
					"header": ViewUtil.getLabel('delvOdrNo'), "dataIndex": "doNo", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('sdoNogrNo'), "dataIndex": "dogrNo", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('noOfVIN'), "dataIndex": "noOfVin", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfDriver'), "dataIndex": "noOfDriver", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfTruck'), "dataIndex": "noOfTruck", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('estArrivalTime'), "dataIndex": "estArrvTime", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('transporter'), "dataIndex": "tsptCompCd", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('blsnNo'), "dataIndex": "blsnNo", "filter" : "string", "align" : "center", "width": 200
				}
			]
		},
		{
			"key": "DeliveryOrderOfVehicle",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "categoryNm", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('blno'), "dataIndex": "blNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dono'), "dataIndex": "doNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfVIN'), "dataIndex": "nosOfVin", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('releasedQty'), "dataIndex": "releasedQty", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('remain'), "dataIndex": "vinRemain", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "SubDeliveryOrderOfVehicle",
			"items": [
				{
					"header": ViewUtil.getLabel('subDoNo'), "dataIndex": "subDoNo", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('noOfVIN'), "dataIndex": "nosOfVin", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfDriver'), "dataIndex": "nosOfBookedDriver", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfTruck'), "dataIndex": "nosOfBookedTruck", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('estArrivalTime'), "dataIndex": "estArrvTime", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('transporter'), "dataIndex": "tsptr", "filter" : "string", "align" : "center", "width": 200
				}
			]
		},
		{
			"key": "AssigningDriversAndTrucksForVehicle",
			"items": [
				{
					"header": ViewUtil.getLabel('transportCo'), "dataIndex": "tsptCompCd", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverNm'), "dataIndex": "driverNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 100
				}
				
			]
		},
		{
			"key": "AssigningDriversTab",
			"items": [
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverNm'), "dataIndex": "driverNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('licenseNo'), "dataIndex": "driverLicenseNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('licsExprYmd'), "dataIndex": "driverExpLicenseDt", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('transportCo'), "dataIndex": "tsptCompCd", "filter" : "string", "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "AssigningTrucksTab",
			"items": [
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckId'), "dataIndex": "truckId", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('transportCo'), "dataIndex": "tsptCompCd", "filter" : "string", "align" : "center", "width": 250
				}
			]
		},
		{
			"key": "JobMonitoringOfROROImport",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('blno'), "dataIndex": "blNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLCargoType'), "dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dono'), "dataIndex": "doNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "nosOfUnit", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "SubJobMonitoringOfROROImport",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLStatus'), "dataIndex": "statNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('dischargedTime'), "dataIndex": "dischargedDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('gateInTime'), "dataIndex": "gateInDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('outDate'), "dataIndex": "outDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateOutTime'), "dataIndex": "gateOutDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "unitYardLoc", "filter" : "string", "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "JobMonitoringOfROROImportDetail",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm","sortable": false, "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('blNo'), "dataIndex": "blNo","sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo","sortable": false, "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoTp'), "dataIndex": "cgTpNm","sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('mt'), "dataIndex": "mt","sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('m3'), "dataIndex": "m3","sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('qty'), "dataIndex": "qty","sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('direction'), "dataIndex": "jobPurpNm","sortable": false, "align" : "center", "width": 150
				},  
				{
					"header": ViewUtil.getLabel('confirmedTime'), "dataIndex": "confirmedDate","sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId","sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo","sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "unitYardLoc","sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm","sortable": false, "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "JobMonitoringOfROROExport",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLCargoType'), "dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "nosOfUnit", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "JobMonitoringOfROROExport2",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLStatus'), "dataIndex": "statNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateInTime'), "dataIndex": "gateInDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateOutTime'), "dataIndex": "gateOutDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('outDate'), "dataIndex": "outDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('loadingTime'), "dataIndex": "loadingTime", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "unitYardLoc", "filter" : "string", "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "JobMonitoringOfROROExportDetail",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "sortable": false, "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('snNo'), "dataIndex": "shipgNoteNo", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "sortable": false, "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoTp'), "dataIndex": "cgTpNm", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('mt'), "dataIndex": "mt", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('m3'), "dataIndex": "m3", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('qty'), "dataIndex": "qty", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('direction'), "dataIndex": "jobPurpNm", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('confirmedTime'), "dataIndex": "confirmedDate", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "unitYardLoc", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('stevedoreId'), "dataIndex": "stevedoreId", "sortable": false, "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "JobMonitoringOfRORONonVesselDetail",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "sortable": false, "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('snNo'), "dataIndex": "shipgNoteNo", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "sortable": false, "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoTp'), "dataIndex": "cgTpNm", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('mt'), "dataIndex": "mt", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('m3'), "dataIndex": "m3", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('qty'), "dataIndex": "qty", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('direction'), "dataIndex": "jobPurpNm", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('confirmedTime'), "dataIndex": "confirmedDate", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "unitYardLoc", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('stevedoreId'), "dataIndex": "stevedoreId", "sortable": false, "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "JobMonitoringOfRORORehandlingDetail",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "sortable": false, "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('snNo'), "dataIndex": "shipgNoteNo", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "sortable": false, "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoTp'), "dataIndex": "cgTpNm", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('mt'), "dataIndex": "mt", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('m3'), "dataIndex": "m3", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('qty'), "dataIndex": "qty", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('direction'), "dataIndex": "jobPurpNm", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('confirmedTime'), "dataIndex": "confirmedDate", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "unitYardLoc", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "sortable": false, "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('stevedoreId'), "dataIndex": "stevedoreId", "sortable": false, "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "TruckAssignment",
			"items": [
			{
				"header": ViewUtil.getLabel('LASeq'), "dataIndex": "seq", "reference": "refSeq", "filter" : "string", "align" : "center", "width": 150, hidden: true
			},
			{
				"header": ViewUtil.getLabel('masterBLNo'), "dataIndex": "masterBlNo", "reference": "refMasterBlNo", "filter" : "string", "align" : "center", "width": 150
			},
			{
				"header": ViewUtil.getLabel('LABLNo'), "dataIndex": "blNo", "reference": "refBLNo", "filter" : "string", "align" : "center", "width": 150
			},
			{
				"header": ViewUtil.getLabel('LASNNo'), "dataIndex": "shipgNoteNo", "reference": "refSNNo", "filter" : "string", "align" : "center", "width": 150
			},
			{
 				"header": ViewUtil.getLabel('LAGRNo'), "dataIndex": "grNo", "reference": "refGrNo", "filter" : "string", "align" : "center", "width": 120
 			},
			{
				"header": ViewUtil.getLabel('operating'), "dataIndex": "delivered", "reference": "refDelivered", "filter" : "string", "align" : "center", "width": 100
			},
			{
				"header": ViewUtil.getLabel('LATransporter'), "dataIndex": "tsptr", "reference": "refTransporter", "filter" : "string", "align" : "center", "width": 100
			},
			{
				"header": ViewUtil.getLabel('LALorryNo'), "dataIndex": "lorryNo", "reference": "refLorryNo", "filter" : "string", "align" : "center", "width": 100
			},
			{
				"header": ViewUtil.getLabel('chassisNo'), "dataIndex": "chassisNo", "reference": "refChassisNo", "filter" : "string", "align" : "center", "width": 100
			},
			{
				"header": ViewUtil.getLabel('contractor'), "dataIndex": "contractor", "reference": "refContractor", "filter" : "string", "align" : "center", "width": 100
			},
			{
				"header": ViewUtil.getLabel('allowWgt'), "dataIndex": "allowWgt", "reference": "refAllowWgt", "filter" : "string", "align" : "center", "width": 150
			},
			{
				"header": ViewUtil.getLabel('allowWgtVal'), "dataIndex": "allowWgtVal", "reference": "refAllowWgtVal", "filter" : "string", "align" : "center", "width": 200
			},
			{
				"header": ViewUtil.getLabel('overWgtPermit'), "dataIndex": "permitYn", "reference": "refPermitChk", "filter" : "string", "align" : "center", "width": 130
			},
			{
				"header": ViewUtil.getLabel('LAAdviceMt'), "dataIndex": "adviceMt", "reference": "refAdviceMt", "filter" : "string", "align" : "center", "width": 130
			},
			{
				"header": ViewUtil.getLabel('LAAdviceM3'), "dataIndex": "adviceM3", "reference": "refAdviceM3", "filter" : "string", "align" : "center", "width": 130
			},
			{
				"header": ViewUtil.getLabel('LAAdviceQty'), "dataIndex": "adviceQty", "reference": "refAdviceQty", "filter" : "string", "align" : "center", "width": 130
			},
/* 			{ */
/* 				"header": ViewUtil.getLabel('LALorryId'), "dataIndex": "lorryId", "reference": "refLorryId", "filter" : "string", "align" : "center", "width": 100 */
/* 			}, */
			{
				"header": ViewUtil.getLabel('LADriverIC'), "dataIndex": "driverId", "reference": "refLicenceNo", "filter" : "string", "align" : "center", "width": 120
			},
			{
				"header": ViewUtil.getLabel('LADriverNm'), "dataIndex": "driverNm", "reference": "refGateIn", "filter" : "string", "align" : "center", "width": 150
			},
			/*{
				"header": ViewUtil.getLabel('visitCount'), "dataIndex": "seq", "reference": "refVisitCount", "filter" : "string", "align" : "center", "width": 150
			}*/
			]
		},
		{
			"key": "PermitCertificateFileList",
			"items": [
				{"header": ViewUtil.getLabel('fileName'), "dataIndex": "fileName",  "reference": "refFileNameCol"},
				{"header": ViewUtil.getLabel('fileSize'), "dataIndex": "fileSize",  "reference": "refFileSizeCol"}
			]
		},
		
		{
			"key": "TruckAssignmentOfRORONonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('typeOfCargo'), "dataIndex": "cgTpCd", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('external_wh_id'), "dataIndex": "exWhId", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('noOfVIN'), "dataIndex": "noOfVin", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfDriver'), "dataIndex": "noOfDriver", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfTruck'), "dataIndex": "noOfTruck", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('estArrivalTime'), "dataIndex": "estArrvTime", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('transporter'), "dataIndex": "tsptr", "filter" : "string", "align" : "center", "width": 200
				}
			]
		},
		/************** Operation *****************/
		{
			"key": "BillOfLading",
			"items": [
				{ "header": ViewUtil.getLabel('no'), "xtype": "rownumberer", "width" : 40, "locked" : true, "align" : "center"},
				{ "header": ViewUtil.getLabel('vslschlShpCNo'), "filter" : "string", "dataIndex": "scn", "width": 130},
				{ "header": ViewUtil.getLabel('vslcallid'), "filter" : "string", "dataIndex": "vslCallId", "width": 130},
				{ "header": ViewUtil.getLabel('category'), "filter" : "string", "dataIndex": "opClassNm", "width": 100},
				{ "header": ViewUtil.getLabel('lotNo'), "filter" : "string", "dataIndex": "lotNo"},
				{ "header": ViewUtil.getLabel('masterBlNo'), "filter" : "string", "dataIndex": "mfDocId"},
				{ "header": ViewUtil.getLabel('orgBlNo'), "filter" : "string", "dataIndex": "orgBlNo"},
				{ "header": ViewUtil.getLabel('blno'), "filter" : "string", "dataIndex": "blNo"},
				{ "header": ViewUtil.getLabel('status'), "filter" : "string", "dataIndex": "docStatNm"},
				{ "header": ViewUtil.getLabel('domesticCargo'), "dataIndex": "domesticChk", "reference": "refdomYn", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('bondedWh'), "readOnly": true, "dataIndex": "bondedWhYn", "reference": "refBondedWh", "filter": "string", "width": 120
				 ,"xtype": "checkcolumn"
				 ,"listeners": {
						beforecheckchange: function() { 
							return false;
						}
				}},
				{ "header": ViewUtil.getLabel('saCode'), "filter" : "string", "dataIndex": "shaCd"},
				{ "header": ViewUtil.getLabel('saName'), "filter" : "string", "dataIndex": "shaNm", "width": 150},
				/* { "header": ViewUtil.getLabel('faCode'), "filter" : "string", "dataIndex": "fwdCd"},
				{ "header": ViewUtil.getLabel('faName'), "filter" : "string", "dataIndex": "fwdNm", "width": 150}, */
				{ "header": ViewUtil.getLabel('cneCode'), "filter" : "string", "dataIndex": "cnsne", "width": 150},
				{ "header": ViewUtil.getLabel('cneName'), "filter" : "string", "dataIndex": "cnsneNm", "width": 150},
				{ "header": ViewUtil.getLabel('shprCode'), "filter" : "string", "dataIndex": "shpr", "width": 150},
				{ "header": ViewUtil.getLabel('shprName'), "filter" : "string", "dataIndex": "shprNm", "width": 150},
				{ "header": ViewUtil.getLabel('mt'), "filter" : "string", "dataIndex": "wgt"},
				{ "header": ViewUtil.getLabel('m3'), "filter" : "string", "dataIndex": "vol"},
				{ "header": ViewUtil.getLabel('qty'), "filter" : "string", "dataIndex": "pkgQty"},
				/* { "header": ViewUtil.getLabel('marksAndNos'), "filter" : "string", "dataIndex": "mark_no", "width": 150}, */
				{ "header": ViewUtil.getLabel('gdsRmk'), "filter" : "string", "dataIndex": "gdsRmk", "width": 150},
				{ "header": ViewUtil.getLabel('scn'), "filter" : "string", "dataIndex": "scn","width": 130},
				{ "header": ViewUtil.getLabel('pol'), "filter" : "string", "dataIndex": "pol","width": 130},
				{ "header": ViewUtil.getLabel('fnd'), "filter" : "string", "dataIndex": "fnlPortCd","width": 130},
				{ "header": ViewUtil.getLabel('deliveryMode'), "filter" : "string", "dataIndex": "delvTpNm", "width": 150, "hidden": true},
				{ "header": ViewUtil.getLabel('cargoTp'), "filter" : "string", "dataIndex": "cgTpNm", "width": 150, "hidden": false},
				{ "header": ViewUtil.getLabel('cmdtGrp'), "filter" : "string", "dataIndex": "cmdtGrpNm", "width": 150, "hidden": false},
				{ "header": ViewUtil.getLabel('commodity'), "filter" : "string", "dataIndex": "cmdtCdNm", "hidden": false},
				{ "header": ViewUtil.getLabel('packageType'), "filter" : "string", "dataIndex": "pkgTpNm", "hidden": false},
				{ "header": ViewUtil.getLabel('hatchNo'), "filter" : "string", "dataIndex": "hatchNo", "hidden": true},
				{ "header": ViewUtil.getLabel('blImdg'), "filter" : "string", "dataIndex": "imdgClass", "hidden": true},
				{ "header": ViewUtil.getLabel('blImdg'), "filter" : "string", "dataIndex": "unno", "hidden": false},
				{ "header": ViewUtil.getLabel('blImdg'), "filter" : "string", "dataIndex": "imdgunno", "hidden": true},
				{ "header": ViewUtil.getLabel('mafiParentId'), "filter" : "string", "dataIndex": "parentId", "hidden": true},
				{ "header": ViewUtil.getLabel('parentCmdtGrp'), "filter" : "string", "dataIndex": "parentCgTp", "hidden": true},
				{ "header": ViewUtil.getLabel('createdDate'), "filter" : "string", "dataIndex": "insDate", "hidden": true},
				{ "header": ViewUtil.getLabel('createdBy'), "filter" : "string", "dataIndex": "insUserId", "hidden": true},
				{ "header": ViewUtil.getLabel('lastUpdatedDt'), "filter" : "string", "dataIndex": "updDate", "hidden": true},
				{ "header": ViewUtil.getLabel('lastUpdatedBy'), "filter" : "string", "dataIndex": "updUserId", "hidden": true},
			]
		},
		{
			"key": "BLCargo",
			"items": [
				{ "header": ViewUtil.getLabel('hatchNo'), "width": 110, "dataIndex":"hatchNo",
	         	  "editor": {
						"xtype": "combo",
				        "bind": {
				            "store": '{hatchNo}'
				        },
				        "editable": false,
				        "queryMode": "local",
				        "displayField": "cdNm",
						"valueField": "cd"
					}
				},
				{ "header": ViewUtil.getLabel('mt'), "width": 120, "dataIndex":"wgt",
	    		  "editor":	{
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999999999999.999,
						"decimalPrecision" : 3
					}
				},
				{ "header": ViewUtil.getLabel('m3'), "width": 120, "dataIndex": "msrmt",
	        	  "editor":	{
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999999999999.999,
						"decimalPrecision" : 3
					}
				},
				{ "header": ViewUtil.getLabel('quantity'), "width": 120, "dataIndex": "pkgQty",
				  "editor":	{
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999999999999.999,
						"decimalPrecision" : 3
					}
				}			
			]
		},
		{
			"key": "BLPackageDetail",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{ "header": ViewUtil.getLabel('packageNo'), "filter": "string", "width": 110, "dataIndex":"pkgNo" },
				{ "header": ViewUtil.getLabel('packageDesc'), "filter": "string", "width": 160, "dataIndex":"pkgDesc" },
				{ "header": ViewUtil.getLabel('blGrossWeight'), "filter": "string", "width": 100, "dataIndex": "pkgMt" },
				{ "header": ViewUtil.getLabel('m3'), "filter": "string", "width": 80, "dataIndex": "pkgM3" },
				{ "header": ViewUtil.getLabel('length'), "filter": "string", "width": 120, "dataIndex": "length" },
				{ "header": ViewUtil.getLabel('width'), "filter": "string", "width": 120, "dataIndex": "width" },
				{ "header": ViewUtil.getLabel('height'), "filter": "string", "width": 120, "dataIndex": "height" },
				{ "header": ViewUtil.getLabel('rmk'), "filter": "string", "width": 120, "dataIndex": "pkgRmk" }
			]
		},
		{
		
			"key": "roroUnitGridColumns",
			"items": [ 	
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 150, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandCd", "width": 100, "align":"center", "caption":"nextVslCallId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('model'), "dataIndex": "modelCd", "width": 100, "align":"center", "caption":"shipgNoteNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('mt'), "dataIndex": "roroMt", "width": 100, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cbm'), "dataIndex": "cbm", "width": 100, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('newCar'), "dataIndex": "newYn", "width": 100, "align":"center", "caption":"newYn", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
		
			"key": "dogrroroUnitGridColumns",
			"items": [ 	
				{ "header": ViewUtil.getLabel('titleCk'),"reference": "refChkMulti", "xtype": "checkcolumn", "dataIndex": "chkCdNm", "width": 50, "align":"center", "caption":"chkCdNm", "style" : "text-align:center", "hidden":true, "filter": "string",
				  "listeners": {
						"checkchange": "onMultiCheckChange"
					}
				},
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 150, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandCd", "width": 100, "align":"center", "caption":"nextVslCallId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('model'), "dataIndex": "modelCd", "width": 100, "align":"center", "caption":"shipgNoteNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('mt'), "dataIndex": "roroMt", "width": 100, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cbm'), "dataIndex": "cbm", "width": 100, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('newCar'), "dataIndex": "newYn", "width": 100, "align":"center", "caption":"newYn", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
			"key": "ManifestList",
			"items": [ 
				{ "header": ViewUtil.getLabel('docId'), "dataIndex": "docId", "align": "center", "cellWarp": true, "width": 70},
				{ "header": ViewUtil.getLabel('jobno'), "dataIndex": "jobNo", "align": "center", "cellWarp": true, "width": 90},
				{ "header": ViewUtil.getLabel('jpvc'), "dataIndex": "vslCallId", "cellWarp": true, "width": 140, "align": "center", "style": "text-align:center"},
				{ "header": ViewUtil.getLabel('scn'), "dataIndex": "shipCallNo", "align": "center", "style": "text-align:center", "cellWarp": true, "width": 100},
				{ "header": ViewUtil.getLabel('registryNo'), "dataIndex": "regNo", "align": "center", "style": "text-align:center", "cellWarp": true, "width": 120},
				{ "header": ViewUtil.getLabel('vesselName'), "dataIndex": "vslName", "align": "left", "style": "text-align:center", "cellWarp": true, "width": 180},
				{ "header": ViewUtil.getLabel('voyage'), "dataIndex": "voyageNo", "align": "center", "style": 'text-align:center', "cellWarp": true, "width": 100},
				{ "header": ViewUtil.getLabel('sAgency'), "dataIndex": "shippingAgent", "align": "left", "style": "text-align:center", "cellWarp": true, "width": 180},
				{ "header": ViewUtil.getLabel('status'), "dataIndex": "statusNm", "align": "center", "style": "text-align:center", "cellWarp": true, "width": 120},
				{ "header": ViewUtil.getLabel('cancelReg'), "dataIndex": "cancelReg", "align": "center", "style": "text-align:center", "cellWarp": true, "width": 120},
				{ "header": ViewUtil.getLabel('submissionDate'), "dataIndex": "submissionDate", "xtype": "datecolumn", "format": "d/m/Y", "align": "center", "style": "text-align:center", "cellWarp": true, "width": 110,
				  "exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				}
			]
		},
		{
			"key": "ManifestBLList",
			"items": [
				{ "xtype": "checkcolumn", "header": ViewUtil.getLabel('chk'), "dataIndex": "check", "style": "text-align:center", "align": "center", "width": 50, "autoSizeColumn": true,
				  "listeners": {
						"checkchange": "onCheckChange"
					}
				},
				{ "header": ViewUtil.getLabel('jobNo'), "dataIndex": "jobNo", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colMfJobNo", "editable": false},
				{ "header": ViewUtil.getLabel('userRefNo'), "dataIndex": "mfRefNo", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colMfRefNo", "editable": false},
				{ "header": ViewUtil.getLabel('blno'), "dataIndex": "blNo", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colBlNo", "editable": false},
				{ "header": ViewUtil.getLabel('housebl'), "dataIndex": "hblNo", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colHBlNo", "editable": false},
				{ "header": ViewUtil.getLabel('descofgoods'), "dataIndex": "gdsRmk", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colGdsRmk", "editable": false},
				{ "header": ViewUtil.getLabel('pol'), "dataIndex": "polCd", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colPold", "editable": false},
				{ "header": ViewUtil.getLabel('consignee'), "dataIndex": "consNm", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colConsNm", "editable": false,
				  "renderer" : function(value, meta) {
							var record = meta.record;
							
							if(record.get('consNm') == 'undefined' || record.get('consNm') == ''){
								value = record.get('cnsnee');
							}else{
								value = record.get('consNm');
							}
							return value;
						}
				},
				{ "header": ViewUtil.getLabel('forwardagent'), "dataIndex": "fwdNm", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colFwdNm", "editable": false, "hidden": true},
				{ "header": ViewUtil.getLabel('status'), "dataIndex": "docStatCd", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colDocStatCd", "editable": false},
				{ "header": ViewUtil.getLabel('validyn'), "dataIndex": "validYn", "width": 170, "style": "text-align:center", "align": "left", "itemId": "colValidYn", "editable": false},
			]
		},
		{
			"key": "ManifestListPopup",
			"items": [
				{ "header": ViewUtil.getLabel('docType'), "dataIndex": "docId", "align": "center", "cellWarp": true, "width": 90},
				{ "header": ViewUtil.getLabel('jobno'), "dataIndex": "jobNo", "align": "center", "cellWarp": true, "width": 90},
				{ "header": ViewUtil.getLabel('registryNo'), "dataIndex": "regNo", "align": "center", "style": "text-align:center", "cellWarp": true, "width": 120},
				{ "header": ViewUtil.getLabel('sAgency'), "dataIndex": "shpagnNm", "align": "center", "style": "text-align:center", "cellWarp": true, "width": 250},
				{ "header": ViewUtil.getLabel('status'), "dataIndex": "docStatCd", "align": "center", "style": "text-align:center", "cellWarp": true, "width": 80},
				{ "header": ViewUtil.getLabel('statusdate'), "dataIndex": "docStatDtm", "xtype": "datecolumn", "align": "center", "format": "MOST.config.Locale.getDefaultDateFormatWithNoSeconds()", "style": "text-align:center", "cellWarp": true, "width": 140,
				  "exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				}
			]
		},
		{
			"key": "VSRCheckList",
			"items": [ 	
				{
					"header": ViewUtil.getLabel('workYmd'),
					"dataIndex": "workYmd",
					"reference": "refServiceDate",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"locked": false,
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('shftNm'),
					"dataIndex": "shftNm",
					"reference": "refShift",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"locked": false,
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('jPVC'),
					"dataIndex": "vslCallID",
					"reference": "refJpvc",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"locked": false,
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('vesselName'),
					"dataIndex": "vslName",
					//"reference": "refVesselName",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('atb'),
					"dataIndex": "atb",
					"reference": "refAtb",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('manpower'),
					"dataIndex": "isSD",
					//"reference": "refManpower",
					"filter" : "string",
					"align" : "center",
					"width": 100,
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.isSD === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('stevedore'),
					"dataIndex": "isST",
					//"reference": "refStevedore",
					"filter" : "string",
					"align" : "center",
					"width": 80,
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.isST === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('portCrane'),
					"dataIndex": "isPC",
					//"reference": "refPortCrane",
					"filter" : "string",
					"align" : "center",
					"width": 100,
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.isPC === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('forklift'),
					"dataIndex": "isFL",
					//"reference": "refForklift",
					"filter" : "string",
					"align" : "center",
					"width": 80,
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.isFL === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('trailer'),
					"dataIndex": "isTR",
					//"reference": "refTrailer",
					"filter" : "string",
					"align" : "center",
					"width": 80,
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.isTR === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('mechanicEquipment'),
					"dataIndex": "isME",
					//"reference": "refMechanicEquipment",
					"filter" : "string",
					"align" : "center",
					"width": 150,
					"xtype": "actioncolumn",
					"hideable": false,
					"lockable": false,
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.isME === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('createdBy'),
					"dataIndex": "sumitBy",
					"reference": "refCreatedBy",
					"filter" : "string",
					"lockable": false,
					"align" : "center",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('createdDate'),
					"dataIndex": "sumitDt",
					"reference": "refCreatedDt",
					"filter" : "string",
					"lockable": false,
					"align" : "center",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedBy'),
					"dataIndex": "userId",
					"reference": "refLastUpdatedBy",
					"filter" : "string",
					"lockable": false,
					"align" : "center",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedDt'),
					"dataIndex": "updateDt",
					"reference": "refLastUpdatedDt",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cgTpNm",
					"reference": "refCargoTp",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('berthLocation'),
					"dataIndex": "berthLoc",
					"reference": "refBerthLocation",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('verifyStatus'),
					"dataIndex": "verifyStatus",
					"reference": "refStatus",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('verifyBy'),
					"dataIndex": "verifyBy",
					//"reference": "refVesselName",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('verifyDate'),
					"dataIndex": "verifyDate",
					//"reference": "refVesselName",
					"filter" : "string",
					"align" : "center",
					"lockable": false,
					"width": 120
				}
			]
		},
		{
			"key": "VesselDelayPenaltyReportList",
			"items": [ 	
				{
					"header": ViewUtil.getLabel('vdprShift'),
					"dataIndex": "shftNm",
					"reference": "refShftNm",
					"width": 100,
					"editor": {
						"xtype": "combo",
						"bind": {"store": '{shiftCombo}'},
						"displayField": "shftNm",
						"valueField": "shftId",
						"queryMode": "local",
						"emptyText": "Select",
						"editable": false,
						"allowBlank": false,
						"emptyText" : "Select"
					},
				},
				{
					"header": ViewUtil.getLabel('vdprHatchNo'),
					"dataIndex": "hatchNo",
					"reference": "refHatchNo",
					"width": 100,
					"editor": {
						"xtype": "combo",
						"bind": {"store": '{hatchNoCombo}'},
						"displayField": "scdNm",
						"valueField": "scd",
						"queryMode": "local",
						"emptyText": "Select",
						"forceSelection" : true,
						"editable": false,
						"allowBlank": false,
						"value":"",
						"emptyText" : "Select"
					},
					"readOnly": true
				},
				{
					"header": ViewUtil.getLabel('vdprDate'),
					"dataIndex": "pntyDt",
					"reference": "refPntyDt",
					"width": 100,
					"editor": {
						"xtype": "datefield",
						"format": "d/m/Y",
//       						allowBlank: false
						"forceSelection" : true,
						"editable": false,
						"allowBlank": false,
					},
					"readOnly": true
				},
				{
					"header": ViewUtil.getLabel('particulars'),
					"dataIndex": "itemCdNm",
					"reference": "refParticulars",
					"width": 100,
					"matchFieldWidth": false,
					"editor": {
						"xtype": "combo",
						"bind": {"store": '{particularsCombo}'},
						"displayField": "scdNm",
						"valueField": "scd",
						"queryMode": "local",
						"emptyText": "Select",
						"editable": false,
						"allowBlank": false,
						"listeners": {
							"change": 'changeParticularsEvent',
						},
						"value":"",
						"matchFieldWidth": false
					},
				},
				{
					"header": ViewUtil.getLabel('vdprMachine'),
					"dataIndex": "machineNm",
					"reference": "refMachine",
					"width": 200,
					"editor": {
						"xtype": "combo",
						"bind": {"store": '{machineCombo}'},
						"displayField": "name",
						"valueField": "code",
						"queryMode": "local",
						"emptyText": "Select",
						"editable": false,
						"allowBlank": false,
						"listeners": {
							"change": 'changeParticularsEvent',
						},
						"value":"",
						"matchFieldWidth": false
					},
				},
				{
					"header": ViewUtil.getLabel('vesselDelayRole'),
					"dataIndex": "roleCdNm",
					"reference": "refVesselDelayRole",
					"width": 100,
					"editor": {
						"xtype": "combo",
						"bind": {
							"store": '{roleComboVesselDelay}'
						},
						"queryMode": "local",
						"displayField": "scdNm",
						"valueField": "scd",
						"editable": false,
						"allowBlank": true,
						"listeners": {
							"change": 'changeRoleEvent'
						},
						"value":"",
						"emptyText" : "Select",
						"disabled": true
					},
					
				},
				{
					"header": ViewUtil.getLabel('vdprDelayCode'),
					"dataIndex": "rsnCd",
					"reference": "refVslPnRptDelayCode",
					"width": 150,
					"editor":{
						"xtype":"textfield",
						"reference":"refTxtVslPnRptDelayCode",
						"allowBlank": false,
						"triggers": {
							"someField": {
								"cls": "fa-search",
								"scope": "controller",
								"handler": "onOpenDelayCodePopup"
							}
						},
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							},
							//"focusleave":'onCheckedContractor',
							"change": 'onChangeUppercase'
						}
					}
				},
				{
					"header": ViewUtil.getLabel('vdprDelayDesc'),
					"dataIndex": "rsnCdNm",
					"reference": "refVslPnRptDelayDescription",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('vesselDelayContrator'),
					"dataIndex": "contrator",
					"reference": "refContractor",
					"width": 150,
					"editor":{
						"xtype":"textfield",
						"reference":"refTxtContractor",
						"allowBlank": false,
						// "params":{
						// 	"searchPtyDivCd": 'CTT'
						// },
						"triggers": {
							"someField": {
								"cls": "fa-search",
								"scope": "controller",
								"handler": "onTriggerClick"
							}
						 },
						"listeners":{
							"change": function(){
								var me = this;
								me.setValue(this.getValue().toUpperCase());
							},
							//"focusleave":"onFieldFocusleave"
						}
					}
					
				},
				{
					"header": ViewUtil.getLabel('vesselDelayStartTime'),
					"dataIndex": "pntyTime",
					"reference": "refStDt",
					"width": 100,
					"editor": {
						"xtype": "datetimefield",
						"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
						"disabled": true
					}
				},
				{
					"header": ViewUtil.getLabel('vesselDelayEndTime'),
					"dataIndex": "pntyEndTime",
					"reference": "refEndDt",
					"width": 100,
					"editor": {
						"xtype": "datetimefield",
						"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
						"disabled": true
					},
				},
				{
					"header": ViewUtil.getLabel('vesselDelayPenalty'),
					"dataIndex": "pntyDescr",
					"reference": "refVesselDelayPenalty",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('vesselDelayItemQty'),
					"xtype": "numbercolumn",
					"dataIndex": "itemQty",
					"reference": "refVesselDelayItemQty",
					"width": 100,
					"format": "0",
	            	"filter": "string",
					"editor": {
						"xtype" : "numberfield",
						"minValue" : 0,
						"maxValue": 9999999999,
						"align" : "right",
						"decimalPrecision": 3,
						"selectOnFocus" : true,
						"allowBlank": false
					},
					"readOnly": true
				},
				{
					"header": ViewUtil.getLabel('vdprTotalHrs'),
					"dataIndex": "pntyAmt",
					"reference": "refTotalHRS",
					"width": 100,
				},
			]
		},
		
		/************** Vessel Infomation *****************/
		{
			"key": "VesselParticular",
			"items": [ 	
				{ "header": ViewUtil.getLabel('vslpatiVslCd'), "dataIndex": "vslCd", "width": 150, "align":"center", "reference": "refVslCd", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiVslNm'), "dataIndex": "vslNm", "width": 200, "align":"center", "reference": "refVslNm", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslJCTConfirm'), "dataIndex": "floatYn", "width": 120, "align":"center", "reference": "refJCTConfirm", "filter": "string", "hidden": true},
				{ "header": ViewUtil.getLabel('status'), "dataIndex": "statCdNm", "width": 120, "align":"center", "reference": "refMarConf", "filter": "string"}, 
				{ "header": ViewUtil.getLabel('vslpatiImoNo'), "dataIndex": "imoNo", "width": 80, "align":"center", "reference": "refequipmentMdl", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiCallSign'), "dataIndex": "callSign", "width": 120, "align":"center", "reference": "refCallSign", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiShpOfNo'), "dataIndex": "shipOffNo", "width": 150, "align":"center", "reference": "refImoNo", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiFlag'), "dataIndex": "vslFlagCd", "width": 80, "align":"center", "reference": "refFlag", "filter": "string"},
				{ "header": ViewUtil.getLabel('country'), "dataIndex": "vslRegPort", "width": 150, "align":"center", "reference": "refPortReg", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiLaunch'), "dataIndex": "launchDt", "width": 100, "align":"center", "reference": "refLaunch", "filter": "string", "hidden": true},
				{ "header": ViewUtil.getLabel('vesselType'), "dataIndex": "vslTp", "width": 170, "align":"center", "reference": "refType", "filter": "string"},
				{ "header": ViewUtil.getLabel('shippingAgent'), "dataIndex": "saCorpId", "width": 150, "align":"center", "reference": "refCompl", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiLoa'), "dataIndex": "loa", "width": 80, "align":"center", "reference": "refLoa", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiNRT'), "dataIndex": "nrt", "width": 80, "align":"center", "reference": "refNRT", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiGRT'), "dataIndex": "grt", "width": 80, "align":"center", "reference": "refGRT", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiDWT'), "dataIndex": "dwt", "width": 80, "align":"center", "reference": "refDWT", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiSA'), "dataIndex": "saNm", "width": 300, "align":"center", "reference": "refSA", "filter": "string", "hidden": true},
				/* { "header": ViewUtil.getLabel('insertDate'), "dataIndex": "insDtm", "width": 200, "align":"center", "reference": "refsubDate", "filter": "string"},
				{ "header": ViewUtil.getLabel('insBy'), "dataIndex": "userId", "width": 200, "align":"center", "reference": "refsubDate", "filter": "string"}, */
				{ "header": ViewUtil.getLabel('updateDate'), "dataIndex": "insDtm", "width": 200, "align":"center", "reference": "refsubDate", "filter": "string"},
				{ "header": ViewUtil.getLabel('updatedBy'), "dataIndex": "userId", "width": 200, "align":"center", "reference": "refsubDate", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslpatiConfDt'), "dataIndex": "confirmDtm", "width": 200, "align":"center", "reference": "refLaunch", "filter": "string", "hidden": true},
				
			]
		},
		{
			"key": "VesselSchedule",
			"items": [
				{ "header": ViewUtil.getLabel('vslschlVslName'), "dataIndex": "vslNm", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlConfirm'), "dataIndex": "summitStat", "filter": "string", "width": 150, "renderer": "onGridConfirmRender"},
				{ "header": ViewUtil.getLabel('vslschlJPVCNo'), "dataIndex": "vslCallId", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschlIboundVoy'), "dataIndex": "inbVoy", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschlOboundVoy'), "dataIndex": "outbVoy", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlLastPorCall'), "dataIndex": "portCd", "filter": "string", "width": 150, "hidden": true},
				{ "header": ViewUtil.getLabel('vslschlPurposeCall'), "dataIndex": "purpCallDesc", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschlShipOffNo'), "dataIndex": "shipOffNo", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschlSCNNo'), "dataIndex": "scn", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschlImono'), "dataIndex": "imoNo", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('domesticService'), "dataIndex": "domesticChk", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschlLoa'), "dataIndex": "loa", "filter": "string", "width": 100},
				{ "header": ViewUtil.getLabel('vslschlVslTp'), "dataIndex": "vslTp", "filter": "string", "width": 170},
				{ "header": ViewUtil.getLabel('vslschlBerthPlan'), "dataIndex": "berthPlan", "filter": "string", "width": 80},
				{ "header": ViewUtil.getLabel('vslschlAdvDtTm'), "dataIndex": "advDtTm", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlETA'), "dataIndex": "eta", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlETB'), "dataIndex": "etb", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlETW'), "dataIndex": "etw", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlETC'), "dataIndex": "etc", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlETU'), "dataIndex": "etu", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlETD'), "dataIndex": "etd", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlATA'), "dataIndex": "ata", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlPilotOnBoardArrv'), "dataIndex": "ata", "filter": "string", "width": 150, "hidden": true},
				{ "header": ViewUtil.getLabel('vslschlATB'), "dataIndex": "atb", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlATW'), "dataIndex": "atw", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlATC'), "dataIndex": "atc", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlATU'), "dataIndex": "atu", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlPilotOnBoardDep'), "dataIndex": "pilotOnBrdDep", "filter": "string", "width": 200, "hidden": true},
				{ "header": ViewUtil.getLabel('vslschSHANm'), "dataIndex": "engSnm", "filter": "string", "width": 350},
				{ "header": ViewUtil.getLabel('vslschSHACd'), "dataIndex": "agencyCd", "filter": "string", "width": 200},
				{ "header": ViewUtil.getLabel('vslschlShipLine'), "dataIndex": "shpLineCd", "filter": "string", "width": 200},
				{ "header": ViewUtil.getLabel('vslschlShipLineNm'), "dataIndex": "insUserLogInAgency", "filter": "string", "width": 200},
				{ "header": ViewUtil.getLabel('vslschlBerthLoc'), "dataIndex": "berthNm", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschlCargoTp'), "dataIndex": "cargoTp", "filter": "string", "width": 80},
				{ "header": ViewUtil.getLabel('vslschlJGRT'), "dataIndex": "grt", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlDWT'), "dataIndex": "dwt", "filter": "string", "width": 100},
				{ "header": ViewUtil.getLabel('vslschlArrDrft'), "dataIndex": "drfArrv", "filter": "string", "width": 150, "hidden": false},
				{ "header": ViewUtil.getLabel('vslschlDepDrft'), "dataIndex": "drfDeptr", "filter": "string", "width": 150, "hidden": false},
				{ "header": ViewUtil.getLabel('vslschlCallSign'), "dataIndex": "callSign", "filter": "string", "width": 80},
				{ "header": ViewUtil.getLabel('vslschlWharfMark'), "dataIndex": "startPos", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlWharfMarkTo'), "dataIndex": "endPos1", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlATD'), "dataIndex": "atd", "format": "MOST.config.Locale.getDefaultDateFormat()", "width": 100},
				{ "header": ViewUtil.getLabel('vslschlArrvSA'), "dataIndex": "arrvSaId", "filter": "string", "width": 200},
				{ "header": ViewUtil.getLabel('vslschlDepSA'), "dataIndex": "deprSaId", "filter": "string", "width": 120}
			]
		},
		{
			"key": "ListOfVesselSchedule",
			"items": [
				{ "header": ViewUtil.getLabel('vesselCode'), "dataIndex": "vslCd", "reference": "refVslCode", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlVslName'), "dataIndex": "vslNm", "reference": "refVslName", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlJPVCNo'), "dataIndex": "jpvcNo", "reference": "refJPVC", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschlETA'), "type": "date", "dataIndex": "eta", "reference": "refEta", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschlETD'), "type": "date", "dataIndex": "etd", "reference": "refEtd", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlATA'), "type": "date", "dataIndex": "ata", "reference": "refEtd", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vslschlATD'), "type": "date", "dataIndex": "atd", "reference": "refAtd", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vslschApprvPortClearanceDt'), "type": "date", "dataIndex": "apprvDt", "reference": "refApprvDt", "filter": "string", "width": 80},
			],
		},
		{
			"key": "PrevPort",
			"items": [
				{ "xtype": "checkcolumn", "header": "CHK", "align": "center", "width": 50, "dataIndex": "check", "autoSizeColumn": true, "editable": true, "sortable": false, "disabled":false,"hideable":false},
				{ "header": ViewUtil.getLabel('vslschlOtherPorts'), "dataIndex": "portCd", "reference": "refOtherPorts", "align": "center", "width": 150, "allowBlank": false, "sortable": false,
				  "editor":	{
						"xtype":"textfield",
						"reference": "txtPortPopup",
						"editable": false,
						"listeners":{
							"el": {
								"dblclick":"openOtherPortPopup",
							}
						}
					}
				},
				{ "header": ViewUtil.getLabel('vslschlDtArrv'), "xtype": "datecolumn", "dataIndex": "arrvDt", "align": "center", "width": 150, "sortable": false, "allowBlank": false, "editable": false, "renderer": "onRenderDate", "allowBlank": false,
				  "editor":	{
						"xtype": "datefield",
						"format": "d/m/Y",
                        "submitFormat": "d/m/Y"
					},
				  "exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
				  	}
				},
				{ "header": ViewUtil.getLabel('vslschlDtDep'), "xtype": "datecolumn", "dataIndex": "deptrDt", "width": 150, "align": "center", "allowBlank": false, "allowBlank": false, "sortable": false, "editable": false, "renderer": "onRenderDate",
				  "editor":	{
						"xtype": "datefield",
						"format": "d/m/Y",
	                    "submitFormat": "d/m/Y"
					},

				  "exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{ "header": ViewUtil.getLabel('vslschlVoyNo'), "dataIndex": "voyNo", "width": 150, "align": "center", "maxLength": 20, "enforceMaxLength": true, "sortable": false,
				  "editor":	{
						"xtype": "textfield"
					},
				},
				{ "header": ViewUtil.getLabel('vslschlISPSLv'), "dataIndex": "ispsLev", "align": "center", "allowBlank": false, "width": 150, "renderer": "onIspsComboRenderer", "sortable": false,
				  "editor":	{
						"xtype": "combo",
						"valueField": "ispsVal",
						"reference": "refCboIsps",
						"displayField": "ispsDesc",
						"bind": {
							"store": '{ispsCombo}'
						},
						"editable": false
					},
				},
				{ "header": ViewUtil.getLabel('vslschlRemark'), "dataIndex": "rmk",	"align": "center", "width": 150, "maxLength": 50, "enforceMaxLength": true, "sortable": false,
				  "editor":	{
						"xtype": "textfield"
					},
				},
				{ "header": ViewUtil.getLabel('vslschlPurposeCall'), "dataIndex": "purpCall", "align": "center", "width": 150, "allowBlank": false, "renderer": "onPurposeCallRender", "sortable": false,
				  "editor":	{
						"xtype": "combo",
						"valueField": "optionValue",
						"displayField": "optionName",
						"bind":{
							"store": '{purpCallCombo}'
						},
						"editable": false
					},
				}
			]
		},{
			
			"key": "GateInCargo",
			"items": [
					{"header": ViewUtil.getLabel('scn'), "dataIndex": "scn", "reference": "refGateInCargoScn","filter": "string", "align" : "left", "locked" : false, "width": 170},
					{"header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "reference": "refGateInCargoVslCallId","filter": "string", "align" : "left", "locked" : false, "width": 170},
					{"header": ViewUtil.getLabel('lorryNo'), "dataIndex": "lorryNo", "reference": "refGateInLorryNo", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('grNo'), "dataIndex": "grNo", "reference": "refGateInCargoGrNo", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('bookingNo'), "dataIndex": "bookingNo", "reference": "refGateInCargoBookingNo", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('shippingNote'), "dataIndex": "shipgNoteNo", "reference": "refGateInCargoShipgNoteNo", "align" : "left", "filter": "string", "width": 130},
					{"header": ViewUtil.getLabel('masterBlNo'), "dataIndex": "mfDocId", "reference": "refGateInCargoMasterBlNo", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('blNo'), "dataIndex": "blNo", "reference": "refGateInCargoBlNo", "align" : "left", "filter": "string", "width": 130},
					{"header": ViewUtil.getLabel('doNo'), "dataIndex": "doNo", "reference": "refGateInCargoDoNo", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('category'), "align" : "left", "dataIndex": "catgNm", "reference": "refGateInCargoCategory", "filter": "string", "width": 170 },
					{"header": ViewUtil.getLabel('commodityDes'), "align" : "left", "dataIndex": "cmdtNm", "reference": "refGateInCargoCommodity", "filter": "string", "width": 170 }
			]
		
		},{
			
			"key": "GateOutCargo",
			"items": [
					{"header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "reference": "refGateOutCargoVslCallId","filter": "string", "align" : "left", "locked" : false, "width": 170},
					{"header": ViewUtil.getLabel('lorryNo'), "dataIndex": "lorryNo", "reference": "refLorryNo", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('grNo'), "dataIndex": "grNo", "reference": "refGateOutCargoGrNo", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('sdoNo'), "dataIndex": "sdoNo", "reference": "refGateOutCargoSubDoNo", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('bookingNo'), "dataIndex": "bookingNo", "reference": "refGateOutCargoBookingNo", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('shippingNote'),"dataIndex": "shipgNoteNo", "reference": "refGateOutCargoShipgNoteNo", "align" : "left", "filter": "string", "width": 130},
					{"header": ViewUtil.getLabel('masterBlNo'), "dataIndex": "mfDocId", "reference": "refGateOutCargoMasterBlNo", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('blNo'), "dataIndex": "blNo", "reference": "refGateOutCargoSubBlNo", "align" : "left", "filter": "string", "width": 130},
					{"header": ViewUtil.getLabel('doNo'), "dataIndex": "doNo", "reference": "refGateOutCargoDoNo", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('category'), "align" : "left", "dataIndex": "catgNm", "reference": "refGateOutCargoCategory", "filter": "string", "width": 170 },
					{"header": ViewUtil.getLabel('commodityDes'), "align" : "left", "dataIndex": "cmdtNm", "reference": "refGateOutCargoCommodity", "filter": "string", "width": 170 }
			]
		
		},{
			
			"key": "GateInRoRo",
			"items": [
					{"header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "reference": "refGateInRoRoVslCallIdGrid", "filter": "string", "align" : "left", "locked" : false, "width": 170},
					{"header": ViewUtil.getLabel('lorryNo'), "dataIndex": "lorryNo", "reference": "refGateInLorryNoGrid", "align" : "left", "filter": "string", "width": 170},
					{"header": ViewUtil.getLabel('gateoperation.driverid'), "dataIndex": "driverId", "reference": "refGateInDriverIDGrid", "align" : "left", "filter": "string", "width": 170},
					{"header": ViewUtil.getLabel('gateoperation.drivername'), "dataIndex": "driverNm", "reference": "refGateInDriverNmGrid", "align" : "left", "filter": "string", "width": 170},
					{"header": ViewUtil.getLabel('bookingNo'), "dataIndex": "bookingNo", "reference": "refGateInRoRoBookingNoGrid", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('shippingNote'), "dataIndex": "shipgNoteNo", "reference": "refGateInRoRoShipgNoteNoGrid", "align" : "left", "filter": "string", "width": 130},
					{"header": ViewUtil.getLabel('grNo'), "dataIndex": "grNo", "reference": "refGateInRoRoGrNoGrid", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('masterBlNo'), "dataIndex": "mfDocId", "reference": "refGateInRoRoMasterBlNoGrid", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('subBlNo'),  "dataIndex": "blNo", "reference": "refGateInRoRoSubBlNoGrid", "align" : "left", "filter": "string", "width": 130},
					{"header": ViewUtil.getLabel('doNo'), "dataIndex": "doNo", "reference": "refGateInRoRoDoNoGrid", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('sdoNo'), "dataIndex": "sdoNo", "reference": "refGateInRoRoSubDoNoGrid", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "noOfVin", "reference": "refGateInnoOfUnitGrid", "align" : "left", "filter": "string", "width": 170},
					{"header": ViewUtil.getLabel('brandNm'), "align" : "left", "dataIndex": "brandNm", "reference": "refGateInRoRoBrandCdGrid", "filter": "string", "width": 170 },
					{"header": ViewUtil.getLabel('modelNm'), "align" : "left", "dataIndex": "modelNm", "reference": "refGateInRoRoModelCdGrid", "filter": "string", "width": 170 },
					{"header": ViewUtil.getLabel('location'), "align" : "left", "dataIndex": "locId", "reference": "refGateInRoRoLocationGrid", "filter": "string", "width": 170 }
			]
		
		},{
			
			"key": "GateOutRoRo",
			"items": [
					{"header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "reference": "refGateOutRoRoVslCallIdGrid", "filter": "string", "align" : "left", "locked" : false, "width": 170},
					{"header": ViewUtil.getLabel('lorryNo'), "dataIndex": "lorryNo", "reference": "refGateOutLorryNoGrid", "align" : "left", "filter": "string", "width": 170},
					{"header": ViewUtil.getLabel('gateoperation.driverid'), "dataIndex": "driverId", "reference": "refGateOutDriverIDGrid", "align" : "left", "filter": "string", "width": 170},
					{"header": ViewUtil.getLabel('gateoperation.drivername'), "dataIndex": "driverNm", "reference": "refGateOutDriverNmGrid", "align" : "left", "filter": "string", "width": 170},
					{"header": ViewUtil.getLabel('bookingNo'), "dataIndex": "bookingNo", "reference": "refGateOutRoRoBookingNoGrid", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('shippingNote'), "dataIndex": "shipgNoteNo", "reference": "refGateOutRoRoShipgNoteNoGrid", "align" : "left", "filter": "string", "width": 160},
					{"header": ViewUtil.getLabel('grNo'), "dataIndex": "grNo", "reference": "refGateOutRoRoGrNoGrid", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('masterBlNo'), "dataIndex": "mfDocId", "reference": "refGateOutRoRoMasterBlNoGrid", "width": 130,"filter": "string", "align" : "left"},
					{"header": ViewUtil.getLabel('subBlNo'), "dataIndex": "blNo", "reference": "refGateOutRoRoSubBlNoGrid", "align" : "left", "filter": "string", "width": 130},
					{"header": ViewUtil.getLabel('doNo'), "dataIndex": "doNo", "reference": "refGateOutRoRoDoNoGrid", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('sdoNo'), "dataIndex": "sdoNo", "reference": "refGateOutRoRoSubDoNoGrid", "align" : "left", "filter": "string", "width": 130 },
					{"header": ViewUtil.getLabel('vinNo'), "dataIndex": "noOfVin", "reference": "refGateOutRoRoVinNoGrid", "align" : "left", "filter": "string", "width": 130},
					{"header": ViewUtil.getLabel('brandNm'), "align" : "left", "dataIndex": "brandNm", "reference": "refGateOutRoRoBrandCdGrid", "filter": "string", "width": 170 },
					{"header": ViewUtil.getLabel('modelNm'), "align" : "left", "dataIndex": "modelNm", "reference": "refGateOutRoRoModelCdGrid", "filter": "string", "width": 170 },
					{"header": ViewUtil.getLabel('location'), "align" : "left", "dataIndex": "locId", "reference": "refGateOutRoRoLocationGrid", "filter": "string", "width": 170 }
			]
		
		},
		{
		
			"key": "TheListOfUnitNoCorrectionItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "width": 120, "align":"center", "caption":"vslCallId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 120, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('BLSNNo'), "dataIndex": "cgNo", "width": 150, "align":"center", "caption":"cgNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 150, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('correctionUnitNo'), "dataIndex": "correctedUnitNo", "width": 150, "align":"center", "caption":"correctedUnitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('orgUnitNo'), "dataIndex": "originalUnitNo", "width": 150, "align":"center", "caption":"originalUnitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('yardLocation'), "dataIndex": "unitYardLoc", "width": 130, "align":"center", "caption":"unitYardLoc", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('fwdAgent'), "dataIndex": "fwdCd", "width": 130, "align":"center", "caption":"fwdCd", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('fwdAgentName'), "dataIndex": "fwdNm", "width": 150, "align":"center", "caption":"fwdNm", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		
		{
		
			"key": "RehandlingOfROROCargoItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "width": 120, "align":"center", "caption":"vslCallId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 120, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('BLSNNo'), "dataIndex": "cargoNo", "width": 150, "align":"center", "caption":"cargoNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 130, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('RehandleYn'), "dataIndex": "rhdlYn", "width": 130, "align":"center", "caption":"rhdlYn", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('docMt'), "dataIndex": "docMt", "width": 130, "align":"center", "caption":"docMt", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('docM3'), "dataIndex": "docM3", "width": 130, "align":"center", "caption":"docM3", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('docQty'), "dataIndex": "docQty", "width": 130, "align":"center", "caption":"docQty", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('balMt'), "dataIndex": "balMt", "width": 130, "align":"center", "caption":"balMt", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('balM3'), "dataIndex": "balM3", "width": 130, "align":"center", "caption":"balM3", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('balQty'), "dataIndex": "balQty", "width": 130, "align":"center", "caption":"balQty", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('location'), "dataIndex": "whLoc", "width": 130, "align":"center", "caption":"whLoc", "style" : "text-align:center", "filter": "string"}
			]
		},
		{
		
			"key": "RehandlingOfROROItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 120, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('nextVslcallid'), "dataIndex": "nextVslCallId", "width": 120, "align":"center", "caption":"nextVslCallId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('nextSnNo'), "dataIndex": "shipgNoteNo", "width": 150, "align":"center", "caption":"shipgNoteNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 150, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('rehandleRehandleMode'), "dataIndex": "rhdlModeNm", "width": 150, "align":"center", "caption":"rhdlModeNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('rehandleNo'), "dataIndex": "rhdlNo", "width": 150, "align":"center", "caption":"rhdlNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('rehandleRhdlWgt'), "dataIndex": "rhdlMt", "width": 130, "align":"center", "caption":"rhdlMt", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('rehandleRhdlMsrmt'), "dataIndex": "rhdlM3", "width": 130, "align":"center", "caption":"rhdlM3", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('rehandleRhdlPkgQty'), "dataIndex": "rhdlQty", "width": 150, "align":"center", "caption":"rhdlQty", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('lastUpdatedBy'), "dataIndex": "loginId", "width": 130, "align":"center", "caption":"loginId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('lastUpdatedDt'), "dataIndex": "updatedTime", "width": 150, "align":"center", "caption":"updatedTime", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		
		{
		
			"key": "RehandlingOfROROStackedUnitItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 100, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "width": 100, "align":"center", "caption":"vslCallId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('BLSNNo'), "dataIndex": "cargoNo", "width": 130, "align":"center", "caption":"cargoNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 130, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "width": 150, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"}	
			]
		},
		
		{
		
			"key": "RehandlingOfROROUnitItems",
			"items": [ 	
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 100, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('nextVslcallid'), "dataIndex": "nextVslCallId", "width": 100, "align":"center", "caption":"nextVslCallId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('nextSnNo'), "dataIndex": "shipgNoteNo", "width": 130, "align":"center", "caption":"shipgNoteNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 130, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "width": 150, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"}	
			]
		},
		
		{
		
			"key": "HandlingOutOfRORORehandlingCargoItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgNm", "width": 150, "align":"center", "caption":"catgNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "width": 150, "align":"center", "caption":"shipgNoteNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "width": 150, "align":"center", "caption":"cgTpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "width": 130, "align":"center", "caption":"brandNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "width": 130, "align":"center", "caption":"modelNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('noOfUnit'), "dataIndex": "nosOfUnit", "width": 100, "align":"center", "caption":"nosOfUnit", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('noOfHO'), "dataIndex": "nosOfHO", "width": 100, "align":"center", "caption":"nosOfHO", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('noOfGO'), "dataIndex": "nosOfGO", "width": 100, "align":"center", "caption":"nosOfGO", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('toDoHO'), "dataIndex": "toDoHO", "width": 100, "align":"center", "caption":"toDoHO", "style" : "text-align:center", "filter": "string"}
			]
		},

		{
		
			"key": "HandlingOutOfRORORehandlingUnitItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 150, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('WHLocId'), "dataIndex": "yardLoc", "width": 150, "align":"center", "caption":"yardLoc", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
		
			"key": "HandlingOutOfRORORehandlingItems",
			"items": [ 	
				{ "header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "width": 150, "align":"center", "caption":"unitNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('WHLocId'), "dataIndex": "yardLoc", "width": 100, "align":"center", "caption":"yardLoc", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "width": 120, "align":"center", "caption":"inDate", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('gateInDate'), "dataIndex": "gateInDate", "width": 120, "align":"center", "caption":"gateInDate", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('outDate'), "dataIndex": "outDate", "width": 120, "align":"center", "caption":"outDate", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('gateOutDate'), "dataIndex": "gateOutDate", "width": 120, "align":"center", "caption":"gateOutDate", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "width": 100, "align":"center", "caption":"driverId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('driverNm'), "dataIndex": "driverNm", "width": 120, "align":"center", "caption":"driverNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "width": 100, "align":"center", "caption":"truckNo", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('remark'), "dataIndex": "hoRemarks", "width": 120, "align":"center", "caption":"hoRemarks", "style" : "text-align:center", "filter": "string"}
			]
		},
		
		{
			"key": "LoadingOfRORORehandlingCargoItems",
			"items": [
				{
					"header": ViewUtil.getLabel('category'),"dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'),"dataIndex": "shipgNoteNo", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('cargoType'),"dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'),"dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'),"dataIndex": "nosOfUnit", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('noOfYC'),"dataIndex": "nosOfYC", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('noOfLC'),"dataIndex": "nosOfLC", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('toDoYC'),"dataIndex": "toDoYC", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('toDoLC'),"dataIndex": "toDoLC", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('brand'),"dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('model'),"dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 120
				}
			]
		},

		{
			"key": "LoadingOfRORORehandlingUnitItems",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "yardLoc", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('outDate'), "dataIndex": "outDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('loadingTime'), "dataIndex": "loadingTime", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('status'), "dataIndex": "statNm", "filter" : "string", "align" : "center", "width": 100
				}
			]
		},
		
		{
			"key": "EquipmentSettingList",
			"items": [
				{ "header": ViewUtil.getLabel('equipmentSettingCgtpcd'), "dataIndex": "cgTpCd", "filter": "string", "width": 100},
				{ "header": ViewUtil.getLabel('equipmentSettingWorkymd'), "dataIndex": "workYmd", "width": 100},
        		{ "header": ViewUtil.getLabel('equipmentSettingShftnm'), "dataIndex": "shftNm", "width": 70},
        		{ "header": ViewUtil.getLabel('equipmentSettingHatchdrtcd'), "dataIndex": "hatchDrtCd", "width": 100},
        		{ "header": ViewUtil.getLabel('equipmentSettingTopclean'), "dataIndex": "topClean", "width": 100},
        		{ "header": ViewUtil.getLabel('equipmentSettingEqfacno'), "dataIndex": "eqFacNo", "width": 140,
        		  "listeners":{
						"change": "onCheckEquipmentNo",
        			}
    			},
        		{ "header": ViewUtil.getLabel('equipmentSettingFacilityname'), "dataIndex": "facilityName", "width": 100},
        		{ "header": ViewUtil.getLabel('equipmentSettingHatchno'), "dataIndex": "hatchNo", "width": 100},
        		{ "header": ViewUtil.getLabel('equipmentSettingWorkstdt'), "dataIndex": "workStDt", "width": 100, "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
            	},
            	{ "header": ViewUtil.getLabel('equipmentSettingWorkenddt'), "dataIndex": "workEndDt", "width": 100, "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
            	},
            	{ "header": ViewUtil.getLabel('equipmentSettingDptagent'), "dataIndex": "dptAgent", "width": 100},
            	{ "header": ViewUtil.getLabel('equipmentSettingRemark'), "dataIndex": "remark", "filter": "string", "width": 100},
            	{ "header": ViewUtil.getLabel('equipmentSettingVslshiftingyn'), "dataIndex": "vslShiftingYN", "width": 100},
			]
		},
		{
			"key": "VesselDelayList",
			"items": [
				// { "header": ViewUtil.getLabel('gridNo'), "xtype": "rownumberer", "width": 50, "align": "center"},
				{ "header": ViewUtil.getLabel('vesselDelayDate'), "dataIndex": "inptDt", "format": MOST.config.Locale.getShortDate(), "width": 100},
				{ "header": ViewUtil.getLabel('vesselDelayShift'), "dataIndex": "shftNm", "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayHatchDrtCd'), "dataIndex": "hatchDrtCd", "width": 80, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayHatchNo'), "dataIndex": "hatchNo", "width": 80, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayEquipmentNo'), "dataIndex": "eqNo", "width": 130, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayDelayCode'), "dataIndex": "rsnCd", "width": 100, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayDelayDescription'), "dataIndex": "rsnCdNm", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayContractor'), "dataIndex": "contractor", "width": 100, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayAcceptedDelay'), "dataIndex": "acptYN", "width": 150, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayFromTime'), "dataIndex": "stDt", "width": 120, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayToTime'), "dataIndex": "endDt", "width": 120, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayTotalHRS'), "dataIndex": "totalHRS", "width": 100, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayRemark'), "dataIndex": "rmk", "width": 100, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayStatus'), "dataIndex": "verifyStatus", "width": 100, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayVerifyBy'), "dataIndex": "verifyBy", "width": 120, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselDelayVerifyDate'), "dataIndex": "verifyDate", "width": 100, "readOnly": true},
			]
		},
		{
			"key": "WHReconcilList",
			"items": [
				{ "header": ViewUtil.getLabel('SNLCategory'), "dataIndex": "opeClassNm", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('rhdlMode'), "xtype": "actioncolumn", "dataIndex": "rhdlYn",
				  "items": [{
						"getClass": function (value, meta, record) {
							return record.data.rhdlYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{ "header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('vesselname'), "dataIndex": "vslNm", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('masterBLNo'), "dataIndex": "masterBlNo", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('blno'), "dataIndex": "blNo", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('SNLBookingNo'), "dataIndex": "bookingNo", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('cargoNo'), "dataIndex": "cgNo", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('whLocation'), "dataIndex": "whLocation", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('storedMT'), "dataIndex": "storedMt", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('storedM3'), "dataIndex": "storedM3", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('storedQty'), "dataIndex": "storedQty", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000"},
				{ "header": ViewUtil.getLabel('actMt'), "dataIndex": "actMt", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('actM3'), "dataIndex": "actM3", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('actQty'), "dataIndex": "actQty", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000"},
				{ "header": ViewUtil.getLabel('rehandleRhdlWgt'), "dataIndex": "rhdlMt", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('rehandleRhdlMsrmt'), "dataIndex": "rhdlM3", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('rehandleRhdlPkgQty'), "dataIndex": "rhdlQty", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000"},
				{ "header": ViewUtil.getLabel('balMt'), "dataIndex": "balMt", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('balM3'), "dataIndex": "balM3", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('balQty'), "dataIndex": "balQty", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000"},
				{ "header": ViewUtil.getLabel('shortOverMt'), "dataIndex": "rcMt", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('shortOverM3'), "dataIndex": "rcM3", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('shortOverQty'), "dataIndex": "rcQty", "filter": "string", "width": 150, "xtype": "numbercolumn", "align" : "right", "format": "0,000"},
				{ "header": ViewUtil.getLabel('status'), "dataIndex": "rcCoNm", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('commodity'), "dataIndex": "cmdtNm", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('cnsne'), "dataIndex": "cnsneName", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('WHId'), "dataIndex": "locId", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('WHType'), "dataIndex": "whLocTpNm", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('lotNo'), "dataIndex": "lotNo", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('remarks'), "dataIndex": "remarks", "filter": "string", "width": 150}
				
			]
		},
		{
			"key": "Rehandle",
			"items": [
				// {
				// 	"xtype": "rownumberer", "width" : 50, "align" : "center"
				// },
				{
					"xtype": "actioncolumn",
					"width": 30,
					"text": "     ",
					"header": "     ",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[
								0
							].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[
								0
							].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[
								0
							].iconCls = 'x-fa fa-times';
						} else
							this.items[
							0
						].iconCls = '';
					}
				},
				{
					"header": ViewUtil.getLabel('rehandleCaTgNm'),
					"dataIndex": "caTgNm",
					"reference": "refRehandleCaTgNm",
					"filter": "string",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('vessel'),
					"dataIndex": "vslCallId",
					"reference": "refRehandleVslCallId",
					"filter": "string",
					"align": "left",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('rehandleMfDocId'),
					"dataIndex": "mfDocId",
					"reference": "refRehandleMfDocId",
					"filter": "string",
					"align": "left",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('rehandleOrgRefNo'),
					"dataIndex": "orgRefNo",
					"reference": "refRehandleOrgRefNo",
					"filter": "string",
					"align": "left",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('rehandleCgTpNm'),
					"dataIndex": "cgTpNm",
					"reference": "refRehandleCgCoNm",
					"filter": "string",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('cmdtGrp'),
					"dataIndex": "cmdtGrNm",
					"filter": "string",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('cmdtCd'),
					"dataIndex": "cmdtNm",
					"filter": "string",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('packageTp'),
					"dataIndex": "pkgTpNm",
					"filter": "string",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('packageNumber'),
					"dataIndex": "pkgNo",
					"filter": "string",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('mAndN'),
					"dataIndex": "markAndNumber",
					"filter": "string",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('descOfGoods'),
					"dataIndex": "goodsRemark",
					"filter": "string",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('shipper'),
					"dataIndex": "shipgAgentNm",
					"filter": "string",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('csgnee'),
					"dataIndex": "cnsneNm",
					"filter": "string",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlYn'),
					"dataIndex": "rhdlYn",
					"reference": "refRehandleRhdlYn",
					"filter": "string",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('rehandleWgt'),
					"dataIndex": "wgt",
					"reference": "refRehandleWgt",
					"width": 110,
					"align": "right",
					"format": "0,000.000",
					"xtype": "numbercolumn"
				},
				{
					"header": ViewUtil.getLabel('rehandleMsrmt'),
					"dataIndex": "msrmt",
					"reference": "refRehandleMsrmt",
					"width": 110,
					"align": "right",
					"format": "0,000.000",
					"xtype": "numbercolumn"
				},
				{
					"header": ViewUtil.getLabel('rehandlePkgQty'),
					"dataIndex": "pkgQty",
					"reference": "refRehandlePkgQty",
					"width": 110,
					"align": "right",
					"format": "0,000",
					"xtype": "numbercolumn"
				},
				{
					"header": ViewUtil.getLabel('rehandleBalWgt'),
					"dataIndex": "balWgt",
					"reference": "refRehandleBalWgt",
					"width": 110,
					"align": "right",
					"format": "0,000.000",
					"xtype": "numbercolumn"
				},
				{
					"header": ViewUtil.getLabel('rehandleBalMsrmt'),
					"dataIndex": "balMsrmt",
					"reference": "refRehandleBalMsrmt",
					"width": 110,
					"align": "right",
					"format": "0,000.000",
					"xtype": "numbercolumn"
				},
				{
					"header": ViewUtil.getLabel('rehandleBalPkgQty'),
					"dataIndex": "balPkgQty",
					"reference": "refRehandleBalPkgQty",
					"width": 110,
					"align": "right",
					"format": "0,000",
					"xtype": "numbercolumn"
				},
				{
					"header": ViewUtil.getLabel('rehandleWhLocIds'),
					"dataIndex": "whLocIds",
					"reference": "refRehandleWhLocIds",
					"filter": "string",
					"align": "left",
					"width": 300
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlWgt'),
					"dataIndex": "rhdlWgt",
					"hidden": true,
					"reference": "refRehandleRhdlWgt",
					"width": 100,
					"align": "right",
					"format": "0,000.000",
					"xtype": "numbercolumn"
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlMsrmt'),
					"dataIndex": "rhdlMsrmt",
					"hidden": true,
					"reference": "refRehandleRhdlMsrmt",
					"width": 100,
					"align": "right",
					"format": "0,000.000",
					"xtype": "numbercolumn"
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlPkgQty'),
					"dataIndex": "rhdlPkgQty",
					"hidden": true,
					"reference": "refRehandleRhdlPkgQty",
					"filter": "string",
					"width": 70,
					"format": "0,000"
				},
				{
					"header": ViewUtil.getLabel('rehandleOrgGrNo'),
					"dataIndex": "orgGrNo",
					"reference": "refRehandleOrgGrNo",
					"filter": "string",
					"width": 130,
					"hidden": true,
				},
				{
					"header": ViewUtil.getLabel('rehandleCgCoNm'),
					"dataIndex": "cgCoNm",
					"reference": "refRehandleCgCoNm",
					"filter": "string",
					"width": 130,
					"hidden": true,
				},
				{
					"header": ViewUtil.getLabel('rehandleSpCaCoNm'),
					"dataIndex": "spCaCoNm",
					"reference": "refRehandleSpCaCoNm",
					"filter": "string",
					"width": 130,
					"hidden": true,
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlModeNm'),
					"dataIndex": "rhdlModeNm",
					"reference": "refRehandleRhdlModeNm",
					"filter": "string",
					"width": 130,
					"hidden": true,
				},
				{
					"header": ViewUtil.getLabel('rehandleNextVessel'),
					"dataIndex": "nxVslCallId",
					"reference": "refRehandleNxVslCallId",
					"filter": "string",
					"width": 130,
					"hidden": true,
				},
				{
					"header": ViewUtil.getLabel('rehandleNxRefNo'),
					"dataIndex": "nxRefNo",
					"reference": "refRehandleNxRefNo",
					"filter": "string",
					"width": 130,
					"hidden": true,
				},
				{
					"header": ViewUtil.getLabel('rehandleUserId'),
					"dataIndex": "userId",
					"reference": "refRehandleUserId",
					"filter": "string",
					"align": "left",
					"width": 130,
					"hidden": true,
				},
				{
					"header": ViewUtil.getLabel('rehandleUpdDt'),
					"dataIndex": "updDt",
					"reference": "refRehandleUpdDt",
					"filter": "string",
					"width": 130,
					"hidden": true,
				}
			]
		},
		{
			"key": "RehandleDetail",
			"items": [
				{
					"header": ViewUtil.getLabel('rehandleCaTgNm'),
					"dataIndex": "caTgNm",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('rehandleNextJpvc'),
					"dataIndex": "nxVslCallId",
					//"reference": "refRehandleDetailVslCallId",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('bookingNo'),
					"dataIndex": "nxMfDocId",
					//"reference": "refRehandleOrgRefNo",
					"filter": "string",
					"align": "left",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('nextSnNo'),
					"dataIndex": "nxRefNo",
					//"reference": "refRehandleOrgGrNo",
					"filter": "string",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('cargoType'),
					"dataIndex": "cgTpNm",
					//"reference": "refRehandleCgCoNm",
					"filter": "string",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlModeNm'),
					"dataIndex": "rhdlModeNm",
					//"reference": "refRehandleDetailRhdlModeNm",
					"filter": "string",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlNo'),
					"dataIndex": "rhdlNo",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlWgt'),
					"dataIndex": "rhdlWgt",
					"reference": "refRehandleDetailRhdlWgt",
					"xtype": "numbercolumn",
					"align": "right",
					"format": "0,000.000",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlMsrmt'),
					"dataIndex": "rhdlMsrmt",
					"reference": "refRehandleDetailRhdlMsrmt",
					"xtype": "numbercolumn",
					"align": "right",
					"format": "0,000.000",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlPkgQty'),
					"dataIndex": "rhdlPkgQty",
					"reference": "refRehandleDetailRhdlPkgQty",
					"xtype": "numbercolumn",
					"align": "right",
					"format": "0,000",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('rehandleUserId'),
					"dataIndex": "userId",
					"align": "right",
					"width": 130
				},
				{
					"header": ViewUtil.getLabel('whLocIds'),
					"dataIndex": "locId",
					"reference": "refWhLocIds",
					"align": "right",
					"width": 130,
					"align": "center",
					"style": "text-align:center",
				},
				{
					"header": ViewUtil.getLabel('rehandleUpdDt'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "updateDt",
					"width": 150,
					"align": "center",
					"style": "text-align:center",
					"filter": "date"
				},
			]
		},
		{
			"key": "RehandleOperation",
			"items":  [
				{
					"header": ViewUtil.getLabel('rehandleCaTgNm'), "dataIndex": "caTgNm", "reference": "refColRehandleCaTgNM", "filter": "string", "align": "center", "width": 80
				},
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "reference": "refColJpvc", "filter": "string", "align": "center", "width": 90
				},
				{
					"header": ViewUtil.getLabel('rehandleOrgRefNo'), "dataIndex": "blSn", "reference": "refColRehandleOrgRefNo", "filter": "string", "align": "center", "width": 80
				},
				{
					"header": ViewUtil.getLabel('rehandleOrgGrNo'), "dataIndex": "grNo", "reference": "refColRehandleOrgGrNo", "filter": "string", "align": "center", "width": 85
				},
				{
					"header": ViewUtil.getLabel('SNLLinked'), "dataIndex": "linked", "reference": "refColSNLLinked", "filter": "string", "align": "center", "width": 140
				},
				{
					"header": ViewUtil.getLabel('rehandleCgCoNm'), "dataIndex": "cgCoNm", "reference": "refColRehandleCgCoNm", "filter": "string", "align": "center", "width": 140
				},
				{
					"header": ViewUtil.getLabel('rehandleSpCaCoNm'), "dataIndex": "spCaCoNm", "reference": "refColRehandleSpCaCoNm", "filter": "string", "align": "center", "width": 140
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlModeNm'), "dataIndex": "rhdlModeNm", "reference": "refColRehandleRhdlModeNm", "filter": "string", "align": "center", "width": 140
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlWgt'), "dataIndex": "rhdlWgt", "reference": "refColRehandleRhdlWgt", "filter": "string", "align": "center", "width": 110
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlMsrmt'), "dataIndex": "rhdlMsrmt", "reference": "refColRehandleRhdlMsrmt", "filter": "string", "align": "center", "width": 74
				},
				{
					"header": ViewUtil.getLabel('rehandleRhdlPkgQty'), "dataIndex": "rhdlPkgQty", "reference": "refColRehandleRhdlPkgQty", "filter": "string", "align": "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('rehandleWgt'), "dataIndex": "wgt", "reference": "refColRehandleWgt", "filter": "string", "align": "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('rehandleMsrmt'), "dataIndex": "msrmt", "reference": "refColRehandleMsrmt", "filter": "string", "align": "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('rehandlePkgQty'), "dataIndex": "pkgQty", "reference": "refColRehandlePkgQty", "filter": "string", "align": "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('SNLStatus'), "dataIndex": "statNm", "reference": "refColStatus", "filter": "string", "align": "center", "width": 70
				},
				{
					"header": ViewUtil.getLabel('loadingFinal'), "dataIndex": "fnlLoadYn", "reference": "refColLoadingFinal", "filter": "string", "align": "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('fnlDelvYn'), "dataIndex": "fnlHoYn", "reference": "refColfnlDelvYn", "filter": "string", "align": "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoTp'), "dataIndex": "cgTpCd", "reference": "refColCargoTp", "filter": "string", "align": "center", "width": 100
				}]
		},
		{
			"key": "JobMonitoring",
			"items": [
				{
					"header": ViewUtil.getLabel('updBy'), "dataIndex": "updateBy", "reference": "", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('jobNo'), "dataIndex": "jobNo", "reference": "", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('jobTpNm'), "dataIndex": "jobTpNm", "reference": "refJobMonitoringJobTpNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('jobPurpNm'), "dataIndex": "jobPurpNm", "reference": "refJobMonitoringJobPurpNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('opeClassNm'), "dataIndex": "opeClassNm", "reference": "refJobMonitoringOpeClassNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('masterBLNo'), "dataIndex": "mfDocId", "reference": "refJobMonitoringMfDocId", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('vslschlJPVCNo'), "dataIndex": "vslCallId", "reference": "refJobMonitoringVslCallId", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('jobMonitoringCgNo'), "dataIndex": "blSn", "reference": "refJobMonitoringBlSn", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('cargoNo'), "dataIndex": "cgNo", "reference": "refJobMonitoringCgNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('grSdo'), "dataIndex": "grSdo", "reference": "refJobMonitoringGrSdo", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardCheckerNoOfUNIT'), "dataIndex": "unitNos", "reference": "refJobMonitoringUnitNos", "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('pkgNo'), "dataIndex": "pkgNo", "reference": "refJobMonitoringPkgNo", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('bargeNo'), "dataIndex": "bargeNo", "reference": "refJobMonitoringBargeNo", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('blSnDelvTpCd'), "dataIndex": "blSnDelvTpCd", "reference": "refJobMonitoringBlSnDelvTpCd", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('grSdoDelvTpCd'), "dataIndex": "grSdoDelvTpCd", "reference": "refJobMonitoringGrSdoDelvTpCd", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('commodity'), "dataIndex": "cmdtNm", "reference": "", "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('spCaCoNm'), "dataIndex": "spCaCoNm", "reference": "refJobMonitoringSpCaCoNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('jobCoNm'), "dataIndex": "jobCoNm", "reference": "refJobMonitoringJobCoNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('packageType'), "dataIndex": "repkgTypeCd", "width": 100,
				},
				{
					"header": ViewUtil.getLabel('cgNetWgt'), "dataIndex": "wgt", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000",
				},
				{
					"header": ViewUtil.getLabel('cgGrossWgt'), "dataIndex": "cgGrossWgt", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000",
				},
				{
					"header": ViewUtil.getLabel('bagWgt'), "dataIndex": "bagWgt", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000",
				},
				{
					"header": ViewUtil.getLabel('jobMonitoringMsrmt'), "dataIndex": "msrmt", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000",
				},
				{
					"header" : ViewUtil.getLabel('jobMonitoringPkgQty'), "dataIndex" : "pkgQty", "xtype": "numbercolumn", "width" : 80, "align" : "right", "format": "0,000",
				},
				
				{
					"header": ViewUtil.getLabel('rcCoNm'), "dataIndex": "rcCoNm", "reference": "refJobMonitoringRcCoNm", "filter": "string", "width": 110
				},
				
				{
					"header": ViewUtil.getLabel('tsptTpNm'), "dataIndex": "tsptTpCd", "width": 110, "renderer":"onGridComboRenderer"
				},
				{
					"header": ViewUtil.getLabel('lorryNo'), "dataIndex": "lorryId", "width": 110, "filter": "string"
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "width": 110, "filter": "string"
				},
				{
					"header": ViewUtil.getLabel('chassisNo'), "dataIndex": "chassisNo", "width": 110, "filter": "string"
				},
				{
					"header": ViewUtil.getLabel('gatePassNo'), "dataIndex": "gatePassNo", "reference": "refJobMonitoringGatePassNo", "filter": "string", "width": 110, "hidden": true
				},
				{
					"header": ViewUtil.getLabel('jobMonitoringLocId'), "dataIndex": "locId", "reference": "refJobMonitoringLocId", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('rhdlModeNm'), "dataIndex": "rhdlModeNm", "reference": "refJobMonitoringRhdlModeNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('confirmMovementStDt'), "dataIndex": "workStDt", "width": 120, "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('confirmMovementEndDt'), "dataIndex": "workEndDt", "width": 120, "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('delvTpNmGatePass'), "dataIndex": "delvTpNm", "reference": "refJobMonitoringDelvTpNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('shftNm'), "dataIndex": "shftNm", "reference": "refJobMonitoringShftNm", "filter": "string", "width": 60
				},
				{
					"header": ViewUtil.getLabel('hatchNo'), "dataIndex": "hatchNo", "width": 70
				},
				{
					"header": ViewUtil.getLabel('finalYn'), "dataIndex": "fnlOpeYn", "width": 60, "renderer":"onGridComboRenderer"
				}
			]
		},
		{
			"key": "WHReconcilDetail",
			"items": [
				{ "header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "filter": "string", "width": 120},
				{ "header": ViewUtil.getLabel('vesselname'), "dataIndex": "vslNm", "filter": "string", "width": 150},
				{ "header": ViewUtil.getLabel('whReconcilWH'), "dataIndex": "locId", "filter": "string", "width": 100},
				{ "header": ViewUtil.getLabel('rhdlMode'), "xtype": "actioncolumn", "dataIndex": "rhdlYn",
				  "items": [{
						"getClass": function (value, meta, record) {
							return record.data.rhdlYn === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				
				{ "header": ViewUtil.getLabel('grNo'), "dataIndex": "grNo", "filter": "string", "width": 100},
				{ "header": ViewUtil.getLabel('masterBLNo'), "dataIndex": "masterBlNo", "filter": "string", "width": 180},
				{ "header": ViewUtil.getLabel('blno'), "dataIndex": "blNo", "filter": "string", "width": 180},
				{ "header": ViewUtil.getLabel('SNLBookingNo'), "dataIndex": "bookingNo", "filter": "string", "width": 180},
				{ "header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "filter": "string", "width": 180},
				{ "header": ViewUtil.getLabel('storedMT'), "dataIndex": "storedMt", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('storedM3'), "dataIndex": "storedM3", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('storedQty'), "dataIndex": "storedQty", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000"},
				{ "header": ViewUtil.getLabel('actMt'), "dataIndex": "actMt", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('actM3'), "dataIndex": "actM3", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('actQty'), "dataIndex": "actQty", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000"},
				{ "header": ViewUtil.getLabel('rehandleRhdlWgt'), "dataIndex": "rhdlMt", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('rehandleRhdlMsrmt'), "dataIndex": "rhdlM3", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('rehandleRhdlPkgQty'), "dataIndex": "rhdlQty", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000"},
				{ "header": ViewUtil.getLabel('balMt'), "dataIndex": "balMt", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('balM3'), "dataIndex": "balM3", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"},
				{ "header": ViewUtil.getLabel('balQty'), "dataIndex": "balQty", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000"},
				
				{ "header": ViewUtil.getLabel('whReconcilAmdMt'), "dataIndex": "amdWgt", "filter": "string", "width": 100, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000",
				  "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red';
						return value;
				   },
				  
				  "editor":{
						"xtype": "numberfield",
						"reference": "txtAmdWgt",
						"decimalPrecision":3,
						"selectOnFocus":true
					}
				},
				{ "header": ViewUtil.getLabel('whReconcilAmdM3'), "dataIndex": "amdMsrmt", "filter": "string", "width": 100, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000",
				  "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red';
						return value;
				   },
				  
				  "editor":{
						"xtype": "numberfield",
						"reference": "txtAmdMsrmt",
						"decimalPrecision":3,
						"selectOnFocus":true
					}
				},
				{ "header": ViewUtil.getLabel('whReconcilAmdQty'), "dataIndex": "amdPkgQty", "filter": "string", "width": 100, "xtype": "numbercolumn", "align" : "right", "format": "0,000",
				  
				  "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red';
						return value;
				   },
				  "editor":{
						"xtype": "numberfield",
						"reference": "txtAmdPkgQty",
						"decimalPrecision":0,
						"selectOnFocus":true
					}
				},
				{ "header": ViewUtil.getLabel('remarks'), "dataIndex": "remarks", "width": 140,
				  "editor":{
						"xtype": "textfield",
						"reference": "refRemarks"
					}
				},
			]
		},
		{
			"key": "DoubleBanking",
			"items": [
				{ "header": ViewUtil.getLabel('type'), "dataIndex": "dblBnkDivCd", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('startTime'), "dataIndex": "stDt", "width": 100, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('endTime'), "dataIndex": "endDt", "width": 100, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('2ndjpvc'), "dataIndex": "dblBnkShip1", "width": 210, "align": "center"},
				{ "header": ViewUtil.getLabel('2ndjpvcNm'), "dataIndex": "dblBnkShip1Nm", "width": 200, "align": "center"},
				{ "header": ViewUtil.getLabel('2ndloa'), "dataIndex": "ship1Loa", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('2ndatb'), "dataIndex": "ship1Atb", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('2ndatw'), "dataIndex": "ship1Atw", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('2ndatc'), "dataIndex": "ship1Atc", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('3ndjpvc'), "dataIndex": "dblBnkShip2", "width": 210, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('3ndjpvcNm'), "dataIndex": "dblBnkShip2Nm", "width": 200, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('3ndloa'), "dataIndex": "ship2Loa", "width": 100, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('3ndatb'), "dataIndex": "ship2Atb", "width": 150, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('3ndatw'), "dataIndex": "ship2Atw", "width": 150, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('3ndatc'), "dataIndex": "ship2Atc", "width": 150, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('3ndatu'), "dataIndex": "ship2Atu", "width": 150, "align": "center", "hidden": true},
			]
		},
		{
			"key": "ShipToShip",
			"items": [
				{ "header": ViewUtil.getLabel('nextVessel'), "dataIndex": "nextCalCallId", "width": 210, "align": "center"},
				{ "header": ViewUtil.getLabel('oprmode'), "dataIndex": "stsOpTp", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('cargoTpNm'), "dataIndex": "cgTpNm", "width": 170, "align": "center"},
				{ "header": ViewUtil.getLabel('hatch'), "dataIndex": "hatchNo", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('apFp'), "dataIndex": "hatchDrtCd", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('shipToShipCommodity'), "dataIndex": "cmdtCd", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('shipToShipPackage'), "dataIndex": "pkgTpCd", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('actMt'), "dataIndex": "mt", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('actM3'), "dataIndex": "m3", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('actQty'), "dataIndex": "qty", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('startTime'), "dataIndex": "stDt", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('endTime'), "dataIndex": "endDt", "width": 150, "align": "center"},
			]
		},
		{
			"key": "VesselShifting",
			"items": [
				{ "header": ViewUtil.getLabel('requester'), "dataIndex": "reqr", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('vslCallId'), "dataIndex": "vslCallId", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('newloc'), "dataIndex": "nxBerthNo", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('prevloc'), "dataIndex": "currWharf", "width": 100, "align": "center"},
				{	
					"header": ViewUtil.getLabel('vslShifting2ndATA'),
					"dataIndex": "ataDate",
					"reference": "refAtaDate",
					"width": 100,
					"filter": "string",
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{ "header": ViewUtil.getLabel('newatb'), "dataIndex": "atbDt", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('atw'), "dataIndex": "atw", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('atc'), "dataIndex": "atc", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('newatu'), "dataIndex": "atuDt", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('vslShiftingPreATB'), "dataIndex": "prevAtb", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('vslShiftingPreATU'), "dataIndex": "prevAtu", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('pilot'), "dataIndex": "pilotYn", "width": 100, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('mooring'), "dataIndex": "mooring", "width": 100, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('tug'), "dataIndex": "tug", "width": 100, "align": "center", "hidden": true},
				{ "header": ViewUtil.getLabel('reason'), "dataIndex": "rsnCd", "width": 200, "align": "center"},
			]
		},
		{
			"key": "CargoShifting",
			"items": [
				{ "header": ViewUtil.getLabel('hatch'), "dataIndex": "hatchNo", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('apFp'), "dataIndex": "hatchDrtCd", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('stevedore'), "dataIndex": "stcrDiv", "width": 150, "align": "center", "renderer": "onCboCrewListRender"},
				{ "header": ViewUtil.getLabel('sftype'), "dataIndex": "sftTp", "width": 150, "align": "center", "renderer": "onCboShftTypeListRender"},
				{ "header": ViewUtil.getLabel('nhatch'), "dataIndex": "nextHatchNo", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('pkg'), "dataIndex": "pkgTpCd", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('mt'), "dataIndex": "mt", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('m3'), "dataIndex": "m3", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('qty'), "dataIndex": "qty", "width": 100, "align": "center"},
				{ "header": ViewUtil.getLabel('startTime'), "dataIndex": "stDt", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('endTime'), "dataIndex": "endDt", "width": 150, "align": "center"},
				{ "header": ViewUtil.getLabel('rmk'), "dataIndex": "rmk", "width": 100, "align": "center"},
			]
		},
		{
			"key": "VORSummary",
			"items": [
				{ "header": ViewUtil.getLabel('vorDate'), "dataIndex": "workYmd"},
				{ "header": ViewUtil.getLabel('vorShift'), "dataIndex": "shftNm"},
				{ "header": ViewUtil.getLabel('vorOperation'), "dataIndex": "opeTp"},
				{ "header": ViewUtil.getLabel('vorTerminalOperator'), "width": 150, "dataIndex": "tkOpr"},
				{ "header": ViewUtil.getLabel('vorPlannedDischargedTonnage'), "width": 180, "dataIndex": "disPlanMt"},
				{ "header": ViewUtil.getLabel('vorPlannedLoadedTonnage'), "width": 170, "dataIndex": "loadPlanMt"},
				{ "header": ViewUtil.getLabel('vorActualDischargedTonnage'), "width": 200, "dataIndex": "disTotMt"},
				{ "header": ViewUtil.getLabel('vorActualLoadedTonnage'), "width": 170, "dataIndex": "loadTotMt"},
				{ "header": ViewUtil.getLabel('vorTotalTonnage'), "dataIndex": "tonHdlAmt"},
				{ "header": ViewUtil.getLabel('vorEstimatedTimeOfOperation'), "width": 200, "dataIndex": "estHrForOpe"},
				{ "header": ViewUtil.getLabel('vorNumberOfFlexibleLines'), "width": 170, "dataIndex": "flxTotLine"},
				{ "header": ViewUtil.getLabel('vorNumberOfMLALines'), "width": 150, "dataIndex": "armTotLine"},
				{ "header": ViewUtil.getLabel('vorShoreTankNumber'), "width": 150, "dataIndex": "tkNo"},
			]
		},
		{
			"key": "VORDelaySummary",
			"items": [
				{ "header": ViewUtil.getLabel('vorDate'), "width": 120, "dataIndex": "workYmd"},
				{ "header": ViewUtil.getLabel('vorShift'), "width": 100, "dataIndex": "shftNm"},
				{ "header": ViewUtil.getLabel('vorDelayCode'), "width": 100, "dataIndex": "delayCode"},
				{ "header": ViewUtil.getLabel('vorDelayDesc'), "width": 300, "dataIndex": "delayDesc"},
				{ "header": ViewUtil.getLabel('vorCargoType'), "width": 100, "dataIndex": "cgTpCd"},
				{ "header": ViewUtil.getLabel('vorTimeHourMin'), "width": 140, "dataIndex": "timeHourMin"},
				{ "header": ViewUtil.getLabel('vorTimeHourLy'), "width": 120, "dataIndex": "timeHourly"},
				{ "header": ViewUtil.getLabel('vorStartTime'), "reference": "refVORStartTime", "xtype": "datecolumn", "dataIndex": "startTime", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
							return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
						}
				},
				{ "header": ViewUtil.getLabel('vorEndTime'), "reference": "refVOREndTime", "xtype": "datecolumn", "dataIndex": "endTime", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
							return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
						}
				},
				{ "header": ViewUtil.getLabel('vorAccDelay'), "reference": "refVORAccDelay", "dataIndex": "accDelay"},
				{ "header": ViewUtil.getLabel('vorRemarkReason'), "reference": "refVORRemarkReason", "dataIndex": "remark"},
			]
		},
		{
			"key": "DelaySummary",
			"items": [
				{ "header": ViewUtil.getLabel('vorDelayCode'), "dataIndex": "delayCode"},
				{ "header": ViewUtil.getLabel('vorDelayDesc'), "dataIndex": "delayDesc"},
				{ "header": ViewUtil.getLabel('vorCargoType'), "dataIndex": "cgTpCd"},
				{ "header": ViewUtil.getLabel('vorTimeHourMin'), "dataIndex": "timeHourMin"},
				{ "header": ViewUtil.getLabel('vorTimeHourLy'), "width": 180, "dataIndex": "timeHourly"},
				{ "header": ViewUtil.getLabel('vorStartTime'), "xtype": "datecolumn", "dataIndex": "startTime", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
							return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
						}
				},
				{ "header": ViewUtil.getLabel('vorEndTime'), "xtype": "datecolumn", "dataIndex": "endTime", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
							return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
						}
				},
				{ "header": ViewUtil.getLabel('vorAccDelay'), "dataIndex": "accDelay"},
				{ "header": ViewUtil.getLabel('vorRemarkReason'), "dataIndex": "remark"},
			]
		},
		{
			"key": "CargoSummary",
			"items": [
				{ "header": ViewUtil.getLabel('vorCommodity'), "width": 100, "dataIndex": "cmdtCd"},
				{ "header": ViewUtil.getLabel('vorCargoType'), "width": 100, "dataIndex": "cgTpCd"},
				{ "header": ViewUtil.getLabel('vorTerminalOperator'), "width": 100, "dataIndex": "tkOpr"},
				{ "header": ViewUtil.getLabel('vorPkgType'), "width": 100, "dataIndex": "pkgTpCd"},
				{ "header": ViewUtil.getLabel('blnolabel'), "width": 100, "dataIndex": "blNo"},
				{ "header": ViewUtil.getLabel('vorTonnageHandled'), "width": 100, "dataIndex": "tonHdlAmt"},
				{ "header": ViewUtil.getLabel('vorPumpingRate'), "width": 100, "dataIndex": "pumpRate"},
				{ "header": ViewUtil.getLabel('vorLoadDischarge'), "width": 100, "dataIndex": "jobTpCd"},
				{ "header": ViewUtil.getLabel('vorShipper'), "width": 100, "dataIndex": "shprCnsne"},
				{ "header": ViewUtil.getLabel('vorConsignee'), "width": 100, "dataIndex": "cnsne"},
				{ "header": ViewUtil.getLabel('vorLines'), "width": 100, "dataIndex": "hoseTpCd"},
				{ "header": ViewUtil.getLabel('vorLQ_EquipmentNo'), "width": 100, "dataIndex": "eqFacNo"},
				{ "header": ViewUtil.getLabel('noOfLine'), "width": 100, "dataIndex": "lineNumber"},
				{ "header": ViewUtil.getLabel('vorHoseOn'), "width": 150, "xtype": "datecolumn", "dataIndex": "hoseOnDt", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
							return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
						}
				},
				{ "header": ViewUtil.getLabel('vorCommenceTime'), "width": 150, "xtype": "datecolumn", "dataIndex": "stDt", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
							return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
						}
				},
				{ "header": ViewUtil.getLabel('vorCompletionTime'), "width": 150, "xtype": "datecolumn", "dataIndex": "endDt", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
							return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
						}
				},
				{ "header": ViewUtil.getLabel('vorHoseOff'), "width": 150, "xtype": "datecolumn", "dataIndex": "hoseOffDt", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				  "exportRenderer": function(value, record, dataIndex, cell, column){
							return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
						}
				},
				{ "header": ViewUtil.getLabel('vorJobComplete'), "width": 100, "dataIndex": "jobCmplYn"},
				{ "header": ViewUtil.getLabel('vorVslShifting'),  "width": 100, "dataIndex": "vslShiftingYN"},
			]
		},
		{
			"key": "VORList",
			"items": [
				{ "header": ViewUtil.getLabel('vorDate'), "dataIndex": "workYmd"},
				{ "header": ViewUtil.getLabel('vorShift'), "dataIndex": "shftNm"},
				{ "header": ViewUtil.getLabel('vorHatchNo'),"dataIndex": "hatchNo"},
				{ "header": ViewUtil.getLabel('vorHandling'), "dataIndex": "impWgt"},
				{ "header": ViewUtil.getLabel('vorSupervisor'), "dataIndex": "superVisor"},
				{ "header": ViewUtil.getLabel('vorStevedore'), "dataIndex": "workComp"},
				{ "header": ViewUtil.getLabel('vorRemark'),  "dataIndex": "rmk"},
				{ "header": ViewUtil.getLabel('vorVerifyStatus'), "xtype": "actioncolumn", "dataIndex": "verifySt",
				  "items": [{
						"getClass": function (value, meta, record) {
							return record.data.verifySt === true ? 'x-fa fa-check txt_red' : 'x-fa fa-check txt_silver';
						}
					}]
				},
				{ "header": ViewUtil.getLabel('vorVerifyBy'), "dataIndex": "verifyBy"},
				{ "header": ViewUtil.getLabel('vorVerifyDate'), "dataIndex": "verifyDt"},
			]
		},
		{
			"key": "SummaryOfHandling",
			"items": [
				{ "header": ViewUtil.getLabel('vorHatchNo'), "reference": "refVORNo", "dataIndex": "hatchNo"},
				{ "header": ViewUtil.getLabel('vorCrane'), "reference": "refCrane", "dataIndex": "eqFacNo", "width": 100},
				{ "header": ViewUtil.getLabel('oprsStartTime'), "reference": "refOprsStartTime", "dataIndex": "workStDt", "width": 150},
				{ "header": ViewUtil.getLabel('oprsEndTime'), "reference": "refOprsEndTime", "dataIndex": "workEndDt", "width": 150},
				{ "header": ViewUtil.getLabel('vorLoad'), "reference": "refVORLoad", "dataIndex": "loading"},
				{ "header": ViewUtil.getLabel('vorDischarge'), "reference": "refVORDischarge", "dataIndex": "discharging"},
				{ "header": ViewUtil.getLabel('vorShifting'), "reference": "refVORShifting", "dataIndex": "shifting"}
			]
		},
		{
			"key": "StevedoreList",
			"items": [
				{ "header": ViewUtil.getLabel('vorJob'), "reference": "refVORJob", "dataIndex": "roleCdNm"},
				{ "header": ViewUtil.getLabel('vorNos'), "reference": "refVORNos", "dataIndex": "wkerQty"},
			]
		},
		{
			"key": "TrimmingList",
			"items": [
				{ "header": ViewUtil.getLabel('vorJob'), "reference": "refVORJob", "dataIndex": "roleCdNm"},
				{ "header": ViewUtil.getLabel('vorNos'), "reference": "refVORNos", "dataIndex": "wkerQty"},
			]
		},
		{
			"key": "BulkList",
			"items": [
				{ "header": ViewUtil.getLabel('vorCrane'), "reference": "refVORJob", "dataIndex": "roleCdNm"},
				{ "header": ViewUtil.getLabel('vorUsed'), "xtype": "checkcolumn", "reference": "refVORUsed", "dataIndex": "useYN", "flex": 1,
				  "editor": {
                        "xtype": "checkbox"
                    },
				  "listeners": {
                        "beforecheckchange": function (me, rowIndex, checked, record, e, eOpts) {
                            return false;
                        }
                    },
				},
			]
		},
		{
			"key": "FacilityList",
			"items": [
				{ "header": ViewUtil.getLabel('vorFacility'), "reference": "refVORFacility", "dataIndex": "eqFacNm", "flex": 1},
				{ "header": ViewUtil.getLabel('vorUsed'), "xtype": "checkcolumn", "reference": "refVORUsed", "dataIndex": "useYN", "flex": 1,
				  "editor": {
                        "xtype": "checkbox"
                    },
				  "listeners": {
                        "beforecheckchange": function (me, rowIndex, checked, record, e, eOpts) {
                            return false;
                        }
                    },
				},
			]
		},
		{
			"key": "DetailOfHandling",
			"items": [
				{ "header": ViewUtil.getLabel('vorHatchNo'), "reference": "refVORHatchNo", "dataIndex": "hatchNo"},
				{ "header": ViewUtil.getLabel('eqNo'), "reference": "refVOREqNo", "dataIndex": "eqFacNo"},
				{ "header": ViewUtil.getLabel('vorSNNo'), "reference": "refVORSNNo", "dataIndex": "sn"},
				{ "header": ViewUtil.getLabel('vorBLNo'), "reference": "refVORBLNo", "dataIndex": "blNo"},
				{ "header": ViewUtil.getLabel('vorFromTime'), "reference": "refVORFromTime", "dataIndex": "stDt"},
				{ "header": ViewUtil.getLabel('vorToTime'), "reference": "refVORToTime", "dataIndex": "endDt"},
				{ "header": ViewUtil.getLabel('vorCmdtDetail'), "reference": "refVORCmdtDetail", "dataIndex": "cmdtCd"},
				{ "header": ViewUtil.getLabel('vorJobTp'), "reference": "refVORJobTp", "dataIndex": "jobTp"},
				{ "header": ViewUtil.getLabel('vorTopClean'), "reference": "refVORTopClean"},
				{ "header": ViewUtil.getLabel('vorQuantity'), "reference": "refVORQuantity", "dataIndex": "pkgQty"},
				{ "header": ViewUtil.getLabel('vorTonnage'), "reference": "refVORTonnage", "dataIndex": "wgt"},
			]
		},
		{
			"key": "VSRManPower",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				
				{
					"header": ViewUtil.getLabel('roleCd'),
					"dataIndex": "rsNm",
					"width": 60
				},
				{
					"header": ViewUtil.getLabel('staffId'),
					"dataIndex": "empId",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('staffNm'),
					"dataIndex": "empNm",
					"width": 200,
					"renderer":function(val){
						if(val != null || val != ''){
							return val
						}
					},
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "workLoc",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"width": 250
				}
			]
		},
		{
			"key": "VSRStevedore",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{
					"header": ViewUtil.getLabel('stevedore'),
					"dataIndex": "stvdComp",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('supervisor'),
					"dataIndex": "nofStvdSprr",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('nonTonnage'),
					"dataIndex": "stvdNonTon",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('category'),
					"dataIndex": "workLocTp",
					"width": 100,
					"hidden": true,
					"renderer":"onGridComboRenderer",
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "workLoc",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"width": 250
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 80
				}
			]
		},
		{
			"key": "VSRPortcraneMega",
			"items": [
				{
					"header": ViewUtil.getLabel('equType'),
					"dataIndex": "eqDivCdNm",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('capa'),
					"dataIndex": "capaDescr",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('qty'),
					"dataIndex": "confmQty",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				}
			]
		},
		{
			"key": "VSRPortcraneDeploy",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{
					"header": ViewUtil.getLabel('cranegroup'),
					"dataIndex": "craneGroup",
					"reference": "refCraneGroup",
					"hidden": false,
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('eqtype'),
					"hidden": false,
					"dataIndex": "eqNo",
					"reference": "refEqType",
					//						renderer:"onGridComboRenderer",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('eqName'),
					"dataIndex": "engNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"dataIndex": "capaDescr",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('driverTp'),
					"hidden": true,
					"reference":"refColDriverTp",
					"dataIndex": "mbsCd",
					"width": 150,
					"renderer":"onDriverTpRenderer"
				},
				{
					"header": ViewUtil.getLabel('jPB'),
					"dataIndex": "empId",
					"width": 200,
					"renderer":"onCboJpbRenderer"
				},
				{
					"header": ViewUtil.getLabel('purpose'),
					"dataIndex": "purposeNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('contractor'),
					"dataIndex": "cnrtCd",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cgTpNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 100,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 100,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"width": 250
				}
			]
		},
		{
			"key": "VSRForkliftMega",
			"items": [
				{
					"header": ViewUtil.getLabel('equType'),
					"dataIndex": "eqDivCdNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('capa'),
					"dataIndex": "capaDescr",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "locId",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('qty'),
					"dataIndex": "confmQty",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('jPB'),
					"dataIndex": "empId",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cont'),
					"dataIndex": "opeCompNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('driver'),
					"dataIndex": "flStatus",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo",
					"width": 100
				}
			]
		},
		{
			"key": "VSRForkliftDeploy",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{
					"header": ViewUtil.getLabel('flNo'),
					"dataIndex": "rsNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"reference": "refCapaDescr",
					"dataIndex": "capaDescr",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"reference": "refCapaCd",
					"dataIndex": "capaCd",
					"hidden": true,
					"width": 60
				},
				{
					"header": ViewUtil.getLabel('shftGroup'),
					"dataIndex": "mbsCd",
					"hidden": true,
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('operator'),
					"reference": "refOperator",
					"dataIndex": "operator",
					"width": 60
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "workLocTp",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('id'),
					"dataIndex": "workLoc",
					"reference": "refFLWorkLoc",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('apFp'),
					"dataIndex": "hatchDir",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cgTpCd",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('refYN'),
					"dataIndex": "refYn",
					"width": 60
				},
				{
					"header": ViewUtil.getLabel('purpose'),
					"dataIndex": "purposeNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('deliveryMode'),
					"dataIndex": "delvTpCd",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('eqArr'),
					"dataIndex": "setupTime",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header":	ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"width": 200
				}
			]
		},
		{
			"key": "VSRTrailerMega",
			"items": [
				{
					"header": ViewUtil.getLabel('equType'),
					"dataIndex": "eqDivCdNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('capa'),
					"dataIndex": "capaDescr",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "locId",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('qty'),
					"dataIndex": "cnrtCd",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cont'),
					"dataIndex": "opeCompNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo",
					"width": 100
				}
			]
		},
		{
			"key": "VSRTrailerDeploy",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{
					"header": ViewUtil.getLabel('eqType'),
					"dataIndex": "rsNm",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"dataIndex": "capaDescr",
					"width": 120
				},
				{	
					"header": ViewUtil.getLabel('capacity'),
					"dataIndex": "capaCd",
					"hidden": true,
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('nos'),
					"dataIndex": "rsQty",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "workLocTp",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('id'),
					"dataIndex": "workLoc",
					"reference": "refTRWorkLoc",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('apFp'),
					"dataIndex": "hatchDir",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('contractor'),
					"dataIndex": "cnrtCd",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cgTpCd",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('purpose'),
					"dataIndex": "purposeNm",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('deliveryMode'),
					"dataIndex": "delvTpCd",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('eqArr'),
					"dataIndex": "setupTime",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						  return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					 }
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						  return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					 }
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						  return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					 }
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"width": 150
				}

			]
		},
		{
			"key": "VSRMechanicalEquipmentMega",
			"items": [
				{
					"header": ViewUtil.getLabel('equType'),
					"dataIndex": "eqDivCdNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('capa'),
					"width": 80,
					"dataIndex": "capaDescr"
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"width": 120,
					"dataIndex": "locId"
				},
				{
					"header": ViewUtil.getLabel('qty'),
					"width": 80,
					"dataIndex": "cnrtCd"
				},
				{
					"header": ViewUtil.getLabel('cont'),
					"dataIndex": "opeCompNm"
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"width": 100,
					"dataIndex": "payer"
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo"
				}
			]
		},
		{
			"key": "VSRMechanicalEquipmentDeploy",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{
					"header": ViewUtil.getLabel('eqType'),
					"dataIndex": "rsNm",
					"width": 80
				},	
				{		
					"header": ViewUtil.getLabel('capacity'),
					"dataIndex": "capaDescr",
					"reference":"refColCapaCd",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"hidden": true,
					"dataIndex": "capaCd",
					"reference":"refColCapaCd",
					"renderer":"onEquipmentComboRenderer",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('woNo'),
					"dataIndex": "workOdrNo",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('nos'),
					"dataIndex": "rsQty",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "workLocTp",
					"renderer":"onGridComboRenderer",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('id'),
					"reference": "refMEWorkLoc",
					"dataIndex": "workLoc",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('shipCrew'),
					"dataIndex": "shpCrew",
					"width": 100,
					"xtype": "actioncolumn",
					"items": [{
						"getClass": function (value, meta, record) {
							return record.data.shpCrew === 'Y' ? 'x-fa fa-check txt_red' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('contractor'),
					"dataIndex": "cnrtCd",
					"reference": "refMEContractor",
					"width": 100
					//"renderer":"onGridComboRenderer",
				},
				{
					"header": ViewUtil.getLabel('purpose'),
					"dataIndex": "purposeNm",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cgTpCd",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('setupTime'),
					"dataIndex": "setupTime",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"widt": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"widt": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"widt": 120,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"width": 180
				}
			]
		},
		{
			"key": "VSRCheckList-NonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('workYmd'),
					"dataIndex": "workYmd",
					"reference": "refServiceDate",
					"filter" : "string",
					"align" : "center",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('shftNm'),
					"dataIndex": "shftNm",
					"reference": "refShift",
					"filter" : "string",
					"align" : "center",
					"width": 50
				},
				{
					"header": ViewUtil.getLabel('manpower'),
					"dataIndex": "isSD",
					//"reference": "refManpower",
					"filter" : "string",
					"align" : "center",
					"width": 100,
					"xtype": "actioncolumn",
					"items": [
						{
						"getClass": function (value, meta, record) {
							return record.data.isSD === 'Y' ? 'x-fa fa-check txt_red' : '';
							}
						}
					]
				},
				{
					"header": ViewUtil.getLabel('stevedore'),
					"dataIndex": "isST",
					//"reference": "refStevedore",
					"filter" : "string",
					"align" : "center",
					"width": 120,
					"xtype": "actioncolumn",
					"items": [
						{
						"getClass": function (value, meta, record) {
							return record.data.isST === 'Y' ? 'x-fa fa-check txt_red' : '';
							}
						}
					]
				},
				{
					"header": ViewUtil.getLabel('forklift'),
					"dataIndex": "isFL",
					//"reference": "refForklift",
					"filter" : "string",
					"align" : "center",
					"width": 120,
					"xtype": "actioncolumn",
					"items": [
						{
						"getClass": function (value, meta, record) {
							return record.data.isFL === 'Y' ? 'x-fa fa-check txt_red' : '';
							}
						}
					]
				},
				{
					"header": ViewUtil.getLabel('trailer'),
					"dataIndex": "isTR",
					//"reference": "refTrailer",
					"filter" : "string",
					"align" : "center",
					"width": 120,
					"xtype": "actioncolumn",
					"items": [
						{
						"getClass": function (value, meta, record) {
							return record.data.isTR === 'Y' ? 'x-fa fa-check txt_red' : '';
							}
						}
					]
				},
				{
					"header": ViewUtil.getLabel('mechanicEquipment'),
					"dataIndex": "isME",
					//"reference": "refMechanicEquipment",
					"filter" : "string",
					"align" : "center",
					"width": 150,
					"xtype": "actioncolumn",
					"items": [
						{
						"getClass": function (value, meta, record) {
							return record.data.isME === 'Y' ? 'x-fa fa-check txt_red' : '';
							}
						}
					]
				},
				{
					"header": ViewUtil.getLabel('createdBy'),
					"dataIndex": "sumitBy",
					"reference": "refCreatedBy",
					"filter" : "string",
					"align" : "center",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('createdDate'),
					"dataIndex": "sumitDt",
					"reference": "refCreatedDt",
					"filter" : "string",
					"align" : "center",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedBy'),
					"dataIndex": "userId",
					"reference": "refLastUpdatedBy",
					"filter" : "string",
					"align" : "center",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedDt'),
					"dataIndex": "updateDt",
					"reference": "refLastUpdatedDt",
					"filter" : "string",
					"align" : "center",
					"width": 140
				}	
			]
		},
		{
			"key": "VSRManPowerNonVessel",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				/* {
				    "header": "",
				    "xtype": "actioncolumn",
				    "dataIndex": "workingStatus",
				    "align": "center",
				    "width": 30,
				    items: [
				        {
				        getClass: function (value, meta, record) {
				            return 	record.data.workingStatus === 'D' || 
				                    record.data.workingStatus === 'U' || 
				                    record.data.workingStatus === 'C' ? 'x-fa fa-check txt_red' : '';
				            }
				        }
				    ]
				}, */
				{
				    "header": ViewUtil.getLabel('roleCd'),
				    "dataIndex": "rsNm",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('staffId'),
				    "dataIndex": "empId",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('staffNm'),
				    "dataIndex": "empNm",
				    "width": 200,
				    "renderer":function(val){
				        if(val != null || val != ''){
				            return val
				        }
				    },
				},
				{
				    "header": ViewUtil.getLabel('workingArea'),
				    "dataIndex": "workLoc",
				    "width": 200
				},
				{
				    "header": ViewUtil.getLabel('startTime'),
				    "dataIndex": "workStDt",
				    "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				    "xtype": "datecolumn",
				    "width": 160,
				    "exportRenderer": function(value, record, dataIndex, cell, column){
				        return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
				    }
				},
				{
				    "header": ViewUtil.getLabel('endTime'),
				    "dataIndex": "workEndDt",
				    "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				    "xtype": "datecolumn",
				    "width": 160,
				    "exportRenderer": function(value, record, dataIndex, cell, column){
				        return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
				    }
				},
				{
				    "header": ViewUtil.getLabel('remarks'),
				    "dataIndex": "rmk",
				    "width": 250
				}
			]
		},
		{
			"key": "VSRStevedoreMegaNonVessel",
			"items": [{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{
					"header": ViewUtil.getLabel('purpose'),
					"dataIndex": "purpose",
					"width": 160,
					"editor": {
						"xtype": "combo",
						"bind": {
							"store": "{stvPurposeCombo}"
						},
						"queryMode": "local",
						"displayField": "scdNm",
						"valueField": "scd",
						"editable": false,
						"emptyText": "Select"
					},
					"renderer": "onGridComboRenderer"
				},
				{
					"header": ViewUtil.getLabel('stevedore'),
					"dataIndex": "stvdComp",
					"editor":{
						"xtype": "combo",
						"bind": {
							"store": "{stvCompCombo}"
						},
						"queryMode": "local",
						"displayField": "ptyCd",
						"valueField": "ptyCd",
						"forceSelection":true,
						//"allowBlank": false,
						"emptyText": "Select",
					},
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('supervisor'),
					"dataIndex": "nofStvdSprr",
					"editor": {
						"xtype": "numberfield",
						"minValue": 0,
						"allowDecimals": false
					},
				   "width": 100
				},
				{
					"header": ViewUtil.getLabel('nonTonnage'),
					"dataIndex": "stvdNonTon",
					"editor": {
						"xtype": "numberfield",
						"minValue": 0,
						"allowDecimals": false
					},
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "workLoc",
					"editor":{
						"xtype": "tagfield",
						"bind": {"store": "{workingAreaCombo}"},
						"queryMode": "local",
						"displayField": "cd",
						"valueField": "cd",
						"emptyText": "Select",
						"allowBlank": false
					},
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"editor": {
						"xtype": "datefield",
						"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
						"allowBlank": false
					},
					"width": 160,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"editor": {
						"xtype": "datefield",
						"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
						"allowBlank": false
					},
					"width": 160,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"editor": {
						"xtype": "textfield",
						"maxLength": 50
					},
					"width": 250
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"editor": {
						"xtype": "combo",
						"bind": {"store": "{requestorCombo}"},
						"displayField": "ptyCd",
						"valueField": "ptyCd",
						"queryMode": "local",
						"emptyText": "Select",
						"forceSelection":true,
						"allowBlank": false
					},
					"width": 150
				}
			]
		},
		{
			"key": "VSRForkliftMegaNonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('equType'),
					"dataIndex": "eqDivCdNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('capa'),
					"dataIndex": "capaDescr",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "locId",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('qty'),
					"dataIndex": "confmQty",
					"width": 100
				},
				{	
					"header": ViewUtil.getLabel('jPB'),
					"dataIndex": "empId",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cont'),
					"dataIndex": "opeCompNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('driver'),
					"dataIndex": "flStatus",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo",
					"width": 100
				}			
			]
		},
		{
			"key": "VSRForkliftDeployNonVessel",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				/* {
					"header": "",
					"xtype": "actioncolumn",
					"dataIndex": "workingStatus",
					"align": "center",
					"width": 30,
					"items": [
						{
							"getClass": function (value, meta, record) {
							return  record.data.workingStatus === 'D' || 
									record.data.workingStatus === 'U' || 
									record.data.workingStatus === 'C' ? 'x-fa fa-check txt_red' : '';
							}
						}
					]
				}, */
				{
					"header": ViewUtil.getLabel('flNo'),
					"dataIndex": "rsNm",
					//								  "hidden": true,
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"reference": "refCapaDescr",
					"dataIndex": "capaDescr",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"reference": "refCapaCd",
					"dataIndex": "capaCd",
					"hidden": true,
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('shftGroup'),
					"dataIndex": "mbsCd",
					"hidden": true,
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('operator'),
					"reference": "refOperator",
					"dataIndex": "operator",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "workLocTp",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('id'),
					"dataIndex": "workLoc",
					"reference": "refFLWorkLoc",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('apFp'),
					"dataIndex": "hatchDir",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cgTpCd",
					"width": 160
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('refYN'),
					"dataIndex": "refYn",
					"width": 60
				},
				{
					"header": ViewUtil.getLabel('purpose'),
					"dataIndex": "purposeNm",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('deliveryMode'),
					"dataIndex": "delvTpCd",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('eqArr'),
					"dataIndex": "setupTime",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 160,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{	
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 160,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 160,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"width": 200
				}
			]
		},
		{
			"key": "VSRTrailerMegaNonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('equType'),
					"dataIndex": "eqDivCdNm"
				},
				{
					"header": ViewUtil.getLabel('capa'),
					"dataIndex": "capaDescr"
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "locId"
				},
				{
					"header": ViewUtil.getLabel('qty'),
					"dataIndex": "cnrtCd"
				},
				{
					"header": ViewUtil.getLabel('cont'),
					"dataIndex": "opeCompNm"
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer"
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo"
				}
			]
		},
		{
			"key": "VSRTrailerDeployNonVessel",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				/* {
					"header": "",
					"xtype": "actioncolumn",
					"dataIndex": "workingStatus",
					"align": "center",
					"width": 30,
					"items": [
						{
						getClass: function (value, meta, record) {
							return  record.data.workingStatus === 'D' || 
									record.data.workingStatus === 'U' || 
									record.data.workingStatus === 'C' ? 'x-fa fa-check txt_red' : '';
							}
						}
					]
				}, */
				{
					"header": ViewUtil.getLabel('eqType'),
					"dataIndex": "rsNm",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"dataIndex": "capaDescr",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"dataIndex": "capaCd",
					"hidden": true,
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('nos'),
					"dataIndex": "rsQty",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "workLocTp",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('id'),
					"dataIndex": "workLoc",
					"reference": "refTRWorkLoc",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('apFp'),
					"dataIndex": "hatchDir",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('contractor'),
					"dataIndex": "cnrtCd",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cgTpCd",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('purpose'),
					"dataIndex": "purposeNm",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('deliveryMode'),
					"dataIndex": "delvTpCd",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('eqArr'),
					"dataIndex": "setupTime",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{	
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 160,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 160,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"width": 150
				}
			]
		},
		{
			"key": "VSRNonMEEquipmentMegaNonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('equType'),
					"dataIndex": "eqDivCdNm"
				},
				{
					"header": ViewUtil.getLabel('capa'),
					"dataIndex": "capaDescr",
					"width": 80,
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"width": 120,
					"dataIndex": "locId"
				},
				{
					"header": ViewUtil.getLabel('lblQty'),
					"width": 80,
					"dataIndex": "cnrtCd"
				},
				{
					"header": ViewUtil.getLabel('cont'),
					"dataIndex": "opeCompNm"
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"width": 100,
					"dataIndex": "payer"
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo"
				}
			]
		},
		{
			"key": "VSRNonMEEquipmentDeployNonVessel",
			"items": [
				{
					"xtype": "actioncolumn",
					"width" : 30,
					"text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				/* {
					"header": "",
					"xtype": "actioncolumn",
					"dataIndex": "workingStatus",
					"align": "center",
					"width": 30,
					"items": [
						{
					 "getClass": function (value, meta, record) {
						 return 	record.data.workingStatus === 'D' || 
							  record.data.workingStatus === 'U' || 
							  record.data.workingStatus === 'C' ? 'x-fa fa-check txt_red' : '';
							}
						}
					]
				}, */
				{
					"header": ViewUtil.getLabel('eqType'),
					"dataIndex": "rsNm",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"dataIndex": "capaDescr",
					"reference":"refColCapaCd",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('capacity'),
					"hidden": true,
					"dataIndex": "capaCd",
					"reference":"refColCapaCd",
					"renderer":"onEquipmentComboRenderer",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('refNo'),
					"dataIndex": "refNo",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('woNo'),
					"dataIndex": "workOdrNo",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('nos'),
					"dataIndex": "rsQty",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('workingArea'),
					"dataIndex": "workLocTp",
					"renderer":"onGridComboRenderer",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('id'),
					"reference": "refMEWorkLoc",
					"dataIndex": "workLoc",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('shipCrew'),
					"dataIndex": "shpCrew",
					"width": 100,
					"xtype": "actioncolumn",
					"items": [
						{
					 "getClass": function (value, meta, record) {
						 return record.data.shpCrew === 'Y' ? 'x-fa fa-check txt_red' : '';
							}
						}
					]
				},
				{
					"header": ViewUtil.getLabel('contractor'),
					"dataIndex": "cnrtCd",
					"reference": "refMEContractor",
					"width": 160,
					//									renderer:"onGridComboRenderer",
				},
				{
					"header": ViewUtil.getLabel('purpose'),
					"dataIndex": "purposeNm",
					"width": 140
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"dataIndex": "cgTpCd",
					"width": 140
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "payer",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('setupTime'),
					"dataIndex": "setupTime",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
					 return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('startTime'),
					"dataIndex": "workStDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
					 return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('endTime'),
					"dataIndex": "workEndDt",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"xtype": "datecolumn",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
					 return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"dataIndex": "rmk",
					"width": 180,
					"exportRenderer": function(value, record, dataIndex, cell, column){
					 return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				}
			]
 		},
 		{
 			"key": "CargoManualctlTabGeneral",
			"items": [
				{
					"header": ViewUtil.getLabel('type'),
					"dataIndex": "type",
					"editable": false,
					"align" : "left",
					"width": 130
				},
				{
					"header" : ViewUtil.getLabel('wgtGatePass'),
					"dataIndex" : "sumWgt",
					"xtype": "numbercolumn",
					"width" : 110,
					"align" : "right",
					"format": "0,000.000"
				},
				{
					"header" : ViewUtil.getLabel('msrmtGatePass'),
					"dataIndex" : "sumM3",
					"xtype": "numbercolumn",
					"width" : 110,
					"align" : "right",
					"format": "0,000.000"
				},
				{
					"header" : ViewUtil.getLabel('pkgQtyGatePass'),
					"dataIndex" : "sumQty",
					"xtype": "numbercolumn",
					"width" : 110,
					"align" : "right",
					"format": "0,000"
				}
			]
 		},
 		{
 			"key": "CargoManualCtlTabExport",
			"items": [
				{
					"header": ViewUtil.getLabel('category'),
					"dataIndex": "catgNm",
					"reference": "refCargoManualCtlTabExportCatgNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpNm'),
					"dataIndex": "delvTpNm",
					"reference": "refCargoManualCtlTabExportDelvTpNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('sNNo'),
					"dataIndex": "shipgNoteNo",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('gRNo'),
					"dataIndex": "cgNo",
					"reference": "refCargoManualCtlTabExportCgNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('userRefNo'),
					"dataIndex": "userRefNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('shippingAgent'),
					"dataIndex": "shaNm",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('forwardingAgent'),
					"dataIndex": "fwdNm",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('shipperConsignee'),
					"dataIndex": "shpCnsNm",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('commodity'),
					"dataIndex": "cmdtNm",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('docMt'),
					"dataIndex": "docMt",
					"reference": "refCargoManualCtlTabExportDocMt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('docM3'),
					"dataIndex": "docM3",
					"reference": "refCargoManualCtlTabExportDocM3",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('docQty'),
					"dataIndex": "docQty",
					"reference": "refCargoManualCtlTabExportDocQty",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('loadedMT'),
					"dataIndex": "loadedMt",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('loadedM3'),
					"dataIndex": "loadedM3",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('loadedQty'),
					"dataIndex": "loadedQty",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('storedMT'),
					"dataIndex": "storedMt",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('storedM3'),
					"dataIndex": "storedM3",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('storedQty'),
					"dataIndex": "storedQty",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('gateInMT'),
					"dataIndex": "",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('gateInM3'),
					"dataIndex": "",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('gateInQty'),
					"dataIndex": "",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('cargoType'),
					"dataIndex": "dmg",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('commodityGroup'),
					"dataIndex": "cmdtGrpCd",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				
				{
					"header": ViewUtil.getLabel('packageType'),
					"dataIndex": "pkgTpNm",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('marksAndNos'),
					"dataIndex": "marksNo",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('SNDescrGoods'),
					"dataIndex": "goodsRmk",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				/*ADP remove {
					"header": ViewUtil.getLabel('hdlInDt'),
					"dataIndex": "hdlInDt",
					"reference": "refCargoManualCtlTabExportHdlInDt",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('lorry'),
					"dataIndex": "lorryId",
					"reference": "refCargoManualCtlTabExportLorryId",
					"filter": "string",
					"width": 110
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('sprYn'),
					"dataIndex": "sprYn",
					"reference": "refCargoManualCtlTabExportSprYn",
					"width": 70,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.sprYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},*/
				
				{
					"header": ViewUtil.getLabel('eachWeight'),
					"dataIndex": "eachMt",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('eachVolume'),
					"dataIndex": "eachM3",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('length'),
					"dataIndex": "length",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('width'),
					"dataIndex": "width",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('height'),
					"dataIndex": "height",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('dmgYn'),
					"dataIndex": "dmgYn",
					"reference": "refCargoManualCtlTabExportDmgYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dmgYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('rcYn'),
					"dataIndex": "rcYn",
					"reference": "refCargoManualCtlTabExportRcYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.rcYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('rhdlMode'),
					"dataIndex": "rhdlMode",
					"reference": "refCargoManualCtlTabExportRhdlMode",
					"width": 150,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.rhdlMode === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('hatchNo'),
					"dataIndex": "hatchNo",
					"reference": "",
					"filter": "string",
					"width": 120
				},
				
				
				// {
				// 	"xtype": "numbercolumn",
				// 	"align" : "right",
				// 	"format": "0,000.000",
				// 	"header": ViewUtil.getLabel('wgt'),
				// 	"dataIndex": "wgt",
				// 	"reference": "refCargoManualCtlTabExportWgt",
				// 	"width": 110
				// },
				// {
				// 	"xtype": "numbercolumn",
				// 	"align" : "right",
				// 	"format": "0,000.000",
				// 	"header": ViewUtil.getLabel('msrmt'),
				// 	"dataIndex": "msrmt",
				// 	"reference": "refCargoManualCtlTabExportMsrmt",
				// 	"width": 110
				// },
				// {
				// 	"xtype": "numbercolumn",
				// 	"align" : "right",
				// 	"format": "0,000",
				// 	"header": ViewUtil.getLabel('actQty'),
				// 	"dataIndex": "pkgQty",
				// 	"reference": "refCargoManualCtlTabExportPkgQty",
				// 	"width": 110
				// },
				/* {
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('dmgWgt'),
					"dataIndex": "dmgWgt",
					"reference": "refCargoManualCtlTabExportDmgWgt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('dmgM3'),
					"dataIndex": "dmgM3",
					"reference": "refCargoManualCtlTabExportDmgM3",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('dmgQty'),
					"dataIndex": "dmgQty",
					"reference": "refCargoManualCtlTabExportDmgQty",
					"width": 110
				},*/
				/*ADP remove {
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('shuYn'),
					"dataIndex": "shuYn",
					"reference": "refCargoManualCtlTabExportShuYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.shuYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				}, */
				{	
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('isExistedCargo'),
					"dataIndex": "isExistedCargo",
					"reference": "refCargoManualCtlTabExportIsExistedCargo",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.isExistedCargo === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
				},
				// {
				// 	"header": ViewUtil.getLabel('whLocIds'),
				// 	"dataIndex": "whLocIds",
				// 	"reference": "refCargoManualCtlTabExportWhLocIds",
				// 	"filter": "string",
				// 	"width": 110
				// },
				{
					"header": ViewUtil.getLabel('statNm'),
					"dataIndex": "statNm",
					"reference": "refCargoManualCtlTabExportStatNm",
					"filter": "string",
					"width": 110
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('fnlOpeYn'),
					"dataIndex": "fnlOpeYn",
					"reference": "refCargoManualCtlTabExportFnlOpeYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.fnlOpeYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				}, 
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('hiFnlYn'),
					"dataIndex": "hiFnlYn",
					"reference": "refCargoManualCtlTabExportHiFnlYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.hiFnlYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
			]
		},
 		{
 			"key": "CargoManualCtlROROTabExport",
			"items": [
				{"header": ViewUtil.getLabel('category'),"dataIndex": "catgNm","reference": "refCMCROROTabExportCatgNm","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('delvTpNm'),"dataIndex": "delvTpNm","reference": "refCMCROROTabExportDelvTpNm","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('sNNo'),"dataIndex": "shipgNoteNo","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('gRNo'),"dataIndex": "cgNo","reference": "refCMCROROTabExportCgNo","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('shippingAgent'),"dataIndex": "shaNm","reference": "","filter": "string","width": 110,},
				{"header": ViewUtil.getLabel('shipperConsignee'),"dataIndex": "shpCnsNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('cargoType'),"dataIndex": "cgTpCdNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('commodityGroup'),"dataIndex": "cmdtGrpNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('commodity'),"dataIndex": "cmdtNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('packageType'),"dataIndex": "pkgTpNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('marksAndNos'),"dataIndex": "marksNo","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('SNDescrGoods'),"dataIndex": "goodsRmk","reference": "","filter": "string","width": 110,},
				{"xtype": "numbercolumn","align" : "right","format": "0,000.000","header": ViewUtil.getLabel('docMt'),"dataIndex": "wgt","reference": "refCMCROROTabExportDocMt","width": 110},
				{"xtype": "numbercolumn","align" : "right","format": "0,000.000","header": ViewUtil.getLabel('docM3'),"dataIndex": "msrmt","reference": "refCMCROROTabExportDocM3","width": 110},
				{"xtype": "numbercolumn","align" : "right","format": "0,000","header": ViewUtil.getLabel('docQty'),"dataIndex": "pkgQty","reference": "refCMCROROTabExportDocQty","width": 110},
				{"header": ViewUtil.getLabel('eachWeight'),"dataIndex": "eachMt","reference": "","filter": "string","width": 110, "hidden": true},
				{"header": ViewUtil.getLabel('eachVolume'),"dataIndex": "eachM3","reference": "","filter": "string","width": 110, "hidden": true},
				{"header": ViewUtil.getLabel('length'),"dataIndex": "length","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('width'),"dataIndex": "width","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('height'),"dataIndex": "height","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('hatchNo'),"dataIndex": "hatchNo","reference": "","filter": "string","width": 120},
				{"header": ViewUtil.getLabel('loadedMT'),"dataIndex": "loadedMt","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('loadedM3'),"dataIndex": "loadedM3","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('loadedQty'),"dataIndex": "loadedQty","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('storedMT'),"dataIndex": "storedMt","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('storedM3'),"dataIndex": "storedM3","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('storedQty'),"dataIndex": "storedQty","reference": "","filter": "string","width": 110},
				{"xtype": "actioncolumn","header": ViewUtil.getLabel('rhdlMode'),"dataIndex": "rhdlMode","reference": "refCMCROROTabExportRhdlMode","width": 150,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.rhdlMode === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{"header": ViewUtil.getLabel('Wh'),"dataIndex": "wh","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('statNm'),"dataIndex": "statNm","reference": "refCMCROROTabExportStatNm","filter": "string","width": 110},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('fnlOpeYn'),
					"dataIndex": "fnlOpeYn",
					"hidden": true,
					"reference": "refCMCROROTabExportFnlOpeYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.fnlOpeYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				}, 
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('hiFnlYn'),
					"dataIndex": "hiFnlYn",
					"hidden": true,
					"reference": "refCMCROROTabExportHiFnlYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.hiFnlYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{"header": ViewUtil.getLabel('remainUnit'),"dataIndex": "remainUnit","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('brand'),"dataIndex": "brandNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('model'),"dataIndex": "modelNm","reference": "","filter": "string","width": 110},
				
			]
		},
		{
 			"key": "CargoManualCtlROROTabImport",
			"items": [
				{"header": ViewUtil.getLabel('category'),"dataIndex": "catgNm","reference": "refCargoManualCtlTabExportCatgNm","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('delvTpNm'),"dataIndex": "delvTpNm","reference": "refCargoManualCtlTabExportDelvTpNm","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('blNo'),"dataIndex": "blNo","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('dono'),"dataIndex": "doNo","reference": "refCargoManualCtlTabImportCgNo","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('shippingAgent'),"dataIndex": "shaNm","reference": "","filter": "string","width": 110,},
				{"header": ViewUtil.getLabel('forwardingAgent'),"dataIndex": "fwrdNm","reference": "","filter": "string","width": 110,"hidden": true},
				{"header": ViewUtil.getLabel('shipperConsignee'),"dataIndex": "cngShp","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('cargoType'),"dataIndex": "cgTpCdNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('commodityGroup'),"dataIndex": "cmdtGrpNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('commodity'),"dataIndex": "cmdtNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('packageType'),"dataIndex": "pkgTpNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('marksAndNos'),"dataIndex": "marksNo","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('SNDescrGoods'),"dataIndex": "goodsRmk","reference": "","filter": "string","width": 110,},
				{"xtype": "numbercolumn","align" : "right","format": "0,000.000","header": ViewUtil.getLabel('docMt'),"dataIndex": "docMt","reference": "refCargoManualCtlTabImportDocMt","width": 110},
				{"xtype": "numbercolumn","align" : "right","format": "0,000.000","header": ViewUtil.getLabel('docM3'),"dataIndex": "docM3","reference": "refCargoManualCtlTabImDocM3","width": 110},
				{"xtype": "numbercolumn","align" : "right","format": "0,000","header": ViewUtil.getLabel('docQty'),"dataIndex": "docQty","reference": "refCargoManualCtlTabImportDocQty","width": 110},
				{"header": ViewUtil.getLabel('eachWeight'),"dataIndex": "eachMt","reference": "","filter": "string","width": 110, "hidden": true},
				{"header": ViewUtil.getLabel('eachVolume'),"dataIndex": "eachM3","reference": "","filter": "string","width": 110, "hidden": true},
				{"header": ViewUtil.getLabel('length'),"dataIndex": "length","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('width'),"dataIndex": "width","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('height'),"dataIndex": "height","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('hatchNo'),"dataIndex": "hatchNo","reference": "","filter": "string","width": 120},
				{"header": ViewUtil.getLabel('dischargedMT'),"dataIndex": "dischargedMT","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('dischargedM3'),"dataIndex": "dischargedM3","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('dischargedQty'),"dataIndex": "dischargedQty","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('storedMT'),"dataIndex": "storedMT","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('storedM3'),"dataIndex": "storedM3","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('storedQty'),"dataIndex": "storedQty","reference": "","filter": "string","width": 110},
				
				{"header": ViewUtil.getLabel('Wh'),"dataIndex": "wh","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('statNm'),"dataIndex": "statNm","reference": "refCargoManualCtlTabExportStatNm","filter": "string","width": 110},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('fnlOpeYn'),
					"dataIndex": "fnlOpeYn",
					"reference": "refCargoManualCtlTabExportFnlOpeYn",
					"width": 110,
					"hidden": true,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.fnlOpeYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				}, 
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('hoFinal'),
					"dataIndex": "hiFnlYn",
					"reference": "refCargoManualCtlTabImportHoFnlYn",
					"width": 110,
					"hidden": true,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.hiFnlYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{"header": ViewUtil.getLabel('remainUnit'),"dataIndex": "remainUnit","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('brand'),"dataIndex": "brandNm","reference": "","filter": "string","width": 110},
				{"header": ViewUtil.getLabel('model'),"dataIndex": "modelNm","reference": "","filter": "string","width": 110},
				
			]
		},
		{
			"key": "CargoManualTabExportSNList",
			"items": [
				{
					"header": ViewUtil.getLabel('vslCallId'),
					"dataIndex": "vslCallId",
					"reference": "refCargoManualCtlExpSNVslCallId",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('category'),
					"dataIndex": "catgNm",
					"reference": "refCargoManualCtlTabExportCatgNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpNm'),
					"dataIndex": "delvTpNm",
					"reference": "refCargoManualCtlTabExportDelvTpNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('sNNo'),
					"dataIndex": "shipgNoteNo",
					"reference": "",
					"filter": "string",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('userRefNo'),
					"dataIndex": "userRefNo",
					"filter": "string",
					"width": 110
				},
				/* {
					"header": ViewUtil.getLabel('gRNo'),
					"dataIndex": "cgNo",
					"reference": "refCargoManualCtlTabExportCgNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('truckNo'),
					"dataIndex": "truckNo",
					"reference": "refCargoManualCtlTabExportTruckNo",
					"filter": "string",
					"width": 110
				}, */
				{
					"header": ViewUtil.getLabel('shippingAgent'),
					"dataIndex": "shaCd",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('forwardingAgent'),
					"dataIndex": "fwdCd",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('shipperConsignee'),
					"dataIndex": "shpCnsNm",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('cargoType'),
					"dataIndex": "cgTpCdNm",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('commodityGroup'),
					"dataIndex": "cmdtGrpNm",
					"reference": "",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('commodity'),
					"dataIndex": "cmdtNm",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('packageType'),
					"dataIndex": "pkgTpNm",
					"reference": "",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('marksAndNos'),
					"dataIndex": "marksNo",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('pckTrfPackageNo'),
					"dataIndex": "pkgNo",
					"reference": "",
					"filter": "string",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('SNDescrGoods'),
					"dataIndex": "goodsRmk",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('hatchNo'),
					"dataIndex": "hatchNo",
					"reference": "",
					"filter": "string",
					"width": 110
				},
			]
		},
		{
			"key": "cargoManualCtlTabExportYardTruckList",
			"items": [
				{
					"header": ViewUtil.getLabel('vslCallId'),
					"dataIndex": "vslCallId",
					"reference": "refCargoManualCtlExpWHVslCallId",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('category'),
					"dataIndex": "catgNm",
					"reference": "refCargoManualCtlTabImportCatgNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpNm'),
					"dataIndex": "delvTpNm",
					"reference": "refCargoManualCtlTabImportDelvTpNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('sNNo'),
					"dataIndex": "shipgNoteNo",
					"reference": "",
					"filter": "string",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('userRefNo'),
					"dataIndex": "userRefNo",
					"filter": "string",
					"width": 110
				},
				/* {
					"header": ViewUtil.getLabel('gRNo'),
					"dataIndex": "cgNo",
					"reference": "refCargoManualCtlTabExportCgNo",
					"filter": "string",
					"width": 110
				}, */
				{
					"header": ViewUtil.getLabel('truckNo'),
					"dataIndex": "lorryNo",
					"reference": "refTruckNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('shippingAgent'),
					"dataIndex": "shaCd",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('forwardingAgent'),
					"dataIndex": "fwdCd",
					"reference": "",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('shipperConsignee'),
					"dataIndex": "shpCnsNm",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('cargoType'),
					"dataIndex": "cgTpCdNm",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('commodityGroup'),
					"dataIndex": "cmdtGrpNm",
					"reference": "",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('commodity'),
					"dataIndex": "cmdtNm",
					"reference": "refCargoManualCtlTabImportCargo",
					"filter": "string",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('packageType'),
					"dataIndex": "pkgTpNm",
					"reference": "",
					"filter": "string",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('marksAndNos'),
					"dataIndex": "marksNo",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('pckTrfPackageNo'),
					"dataIndex": "pkgNo",
					"reference": "",
					"filter": "string",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('actMt'),
					"dataIndex": "yardTruckMt",
					"format": "0,000.000",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('actM3'),
					"dataIndex": "yardTruckM3",
					"format": "0,000.000",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('actQty'),
					"dataIndex": "yardTruckQty",
					"format": "0,000",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				
			]
		},
		
		{
			"key": "CargoManualCtlTabImportBargeCheck",
			"items": [
				{
					"header": ViewUtil.getLabel('category'),
					"dataIndex": "catgNm",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('delvTpNm'),
					"dataIndex": "delvTpNm",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('blno'),
					"dataIndex": "blNo",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('doNo'),
					"dataIndex": "doNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('SDONo'),
					"dataIndex": "sdoNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('userRefNo'),
					"dataIndex": "userRefNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('forwardingAgent'),
					"dataIndex": "fwrAgnt",
					"filter": "string",
					"width": 150,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('shipperConsignee'),
					"dataIndex": "cngShp",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('commodity'),
					"dataIndex": "cmdtCd",
					"filter": "string",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('docMt'),
					"dataIndex": "docMt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('docM3'),
					"dataIndex": "docM3",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('docQty'),
					"dataIndex": "docQty",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('dischargedMT'),
					"dataIndex": "dischargedMT",
					"width": 130
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('dischargedM3'),
					"dataIndex": "dischargedM3",
					"width": 130
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('dischargedQty'),
					"dataIndex": "dischargedQty",
					"width": 130
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('dmgYn'),
					"dataIndex": "dmgYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dmgYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('hatchNo'),
					"dataIndex": "hatchNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('status'),
					"dataIndex": "statNm",
					"filter": "string",
					"width": 110
				},	
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('finalYn'),
					"dataIndex": "fnlOpeYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.fnlOpeYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('hoFinal'),
					"dataIndex": "fnlDelvYn",
					"reference": "refCargoManualCtlTabImportFnlDelvYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.fnlDelvYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				}
			]
		},
		
		{
			"key": "CargoManualCtlTabImport",
			"items": [
				{
					"header": ViewUtil.getLabel('category'),
					"dataIndex": "catgNm",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('delvTpNm'),
					"dataIndex": "delvTpNm",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('blno'),
					"dataIndex": "blNo",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('doNo'),
					"dataIndex": "doNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('sdoNo'),
					"dataIndex": "sdoNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('userRefNo'),
					"dataIndex": "userRefNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('shippingAgent'),
					"dataIndex": "shpgAgent",
					"filter": "string",
					"width": 150,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('forwardingAgent'),
					"dataIndex": "fwrAgnt",
					"filter": "string",
					"width": 150,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('shipperConsignee'),
					"dataIndex": "cngShp",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('commodity'),
					"dataIndex": "cmdtNm",
					"filter": "string",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('docMt'),
					"dataIndex": "docMt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('docM3'),
					"dataIndex": "docM3",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('docQty'),
					"dataIndex": "docQty",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('dischargedMT'),
					"dataIndex": "dischargedMT",
					"width": 130
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('dischargedM3'),
					"dataIndex": "dischargedM3",
					"width": 130
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('dischargedQty'),
					"dataIndex": "dischargedQty",
					"width": 130
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('storedMT'),
					"dataIndex": "storedMT",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('storedM3'),
					"dataIndex": "storedM3",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('storedQty'),
					"dataIndex": "storedQty",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('gateOutMT'),
					"dataIndex": "gateOutMT",
					"width": 150
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('gateOutM3'),
					"dataIndex": "gateOutM3",
					"width": 150
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('gateOutQty'),
					"dataIndex": "gateOutQty",
					"width": 150
				},
				{
					"xtype": "actioncolumn",
					"hidden": true,
					"header": ViewUtil.getLabel('dmgYn'),
					"dataIndex": "dmgYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dmgYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('rcYn'),
					"dataIndex": "rcYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.rcYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('hatchNo'),
					"dataIndex": "hatchNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('status'),
					"dataIndex": "statNm",
					"filter": "string",
					"width": 110
				},	
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('finalYn'),
					"dataIndex": "fnlOpeYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.fnlOpeYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('hoFinal'),
					"dataIndex": "fnlDelvYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.fnlDelvYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				}
			]
		},
		
		{
			"key": "cargoManualCtlTabImportWHcheck",
			"items": [
				{
					"header": ViewUtil.getLabel('vslCallId'),
					"dataIndex": "vslCallId",
					"reference": "refCargoManualCtlImpWHVslCallId",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('category'),
					"dataIndex": "catgNm",
					"reference": "refCargoManualCtlTabImportCatgNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpNm'),
					"dataIndex": "delvTpNm",
					"reference": "refCargoManualCtlTabImportDelvTpNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('subBlNo'),
					"dataIndex": "blNo",
					"reference": "refCargoManualCtlTabImportBlNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('doNo'),
					"dataIndex": "doNo",
					"reference": "refCargoManualCtlTabImportDoNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('userRefNo'),
					"dataIndex": "userRefNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('truckNo'),
					"dataIndex": "lorryNo",
					"reference": "refTruckNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('shippingAgent'),
					"dataIndex": "shpgAgent",
					"reference": "refCargoManualCtlTabImportShpgAgent",
					"filter": "string",
					"width": 130,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('forwardingAgent'),
					"dataIndex": "fwrAgnt",
					"reference": "refCargoManualCtlTabImportFwrAgnt",
					"filter": "string",
					"width": 110,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('shipperConsignee'),
					"dataIndex": "cngShp",
					"reference": "refCargoManualCtlTabImportCngShp",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('cargoType'),
					"dataIndex": "cgTpCdNm",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('commodityGroup'),
					"dataIndex": "cmdtGrpNm",
					"reference": "",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('commodity'),
					"dataIndex": "cmdtNm",
					"reference": "refCargoManualCtlTabImportCargo",
					"filter": "string",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('packageType'),
					"dataIndex": "pkgTpNm",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('marksAndNos'),
					"dataIndex": "marksNo",
					"reference": "",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('pckTrfPackageNo'),
					"dataIndex": "pkgNo",
					"reference": "",
					"filter": "string",
					"width": 200
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('wgt'),
					"dataIndex": "yardTruckMT",
					"reference": "refCargoManualCtlTabImportDocMt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('msrmt'),
					"dataIndex": "yardTruckM3",
					"reference": "refCargoManualCtlTabImportDocM3",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('pkgQty'),
					"dataIndex": "yardTruckQty",
					"reference": "refCargoManualCtlTabImportDocQty",
					"width": 110
				},
			]
		},
		
 		{
 			"key": "CargoManualCtlTabGatePass",
			"items": [
				
				{
					"header": ViewUtil.getLabel('catgNm'),
					"dataIndex": "catgNm",
					"reference": "refCargoManualCtlTabGatePassCatgNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('jpvc'),
					"dataIndex": "vslCallId",
					"reference": "refCargoManualCtlTabGatePassVslCallId",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('gatePassNoGatePass'),
					"dataIndex": "gatePassNo",
					"reference": "refCargoManualCtlTabGatePassGatePassNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('gpTime'),
					"dataIndex": "gatePassIssueDt",
					"reference": "refCargoManualCtlTabGatePassGatePassIssueDt",
					"filter": "string",
					"width": 160
				},
				{
					"header": ViewUtil.getLabel('lorry'),
					"dataIndex": "lorryNo",
					"reference": "refCargoManualCtlTabGatePassLorryNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('noTripsGatePass'),
					"dataIndex": "noTrips",
					"reference": "refCargoManualCtlTabGatePassNoTrips",
					"filter": "string",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('wgtGatePass'),
					"dataIndex": "wgt",
					"reference": "refCargoManualCtlTabGatePassWgt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('msrmtGatePass'),
					"dataIndex": "msrmt",
					"reference": "refCargoManualCtlTabGatePassMsrmt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('pkgQtyGatePass'),
					"dataIndex": "pkgQty",
					"reference": "refCargoManualCtlTabGatePassPkgQty",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('cgNoGatePass'),
					"dataIndex": "cgNo",
					"reference": "refCargoManualCtlTabGatePassCgNo",
					"filter": "string",
					"width": 110
				},
				{	
					"header": ViewUtil.getLabel('rehandleGatePass'),
					"dataIndex": "rehandle",
					"reference": "refCargoManualCtlTabGatePassRehandle",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('delvStatGatePass'),
					"dataIndex": "delvStat",
					"reference": "refCargoManualCtlTabGatePassDelvStat",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('tsptTpNmGatePass'),
					"dataIndex": "tsptTpNm",
					"reference": "refCargoManualCtlTabGatePassTsptTpNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpNmGatePass'),
					"dataIndex": "delvTpNm",
					"reference": "refCargoManualCtlTabGatePassDelvTpNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('issued'),
					"dataIndex": "issued",
					"reference": "refCargoManualCtlTabGatePassIssued",
					"filter": "string",
					"width": 110
				}
			]
 		},
		{
			"key": "CargoManualCtlNonVesselTabGeneral",
			"items": [
				{
					"header": ViewUtil.getLabel('type'),
					"dataIndex": "type",
					"editable": false,
					"align" : "left",
					"width": 130
				},
				{
					"header" : ViewUtil.getLabel('wgtGatePass'),
					"dataIndex" : "sumWgt",
					"xtype": "numbercolumn",
					"width" : 110,
					"align" : "right",
					"format": "0,000.000"
				},
				{
					"header" : ViewUtil.getLabel('msrmtGatePass'),
					"dataIndex" : "sumM3",
					"xtype": "numbercolumn",
					"width" : 110,
					"align" : "right",
					"format": "0,000.000"
				},
				{
					"header" : ViewUtil.getLabel('pkgQtyGatePass'),
					"dataIndex" : "sumQty",
					"xtype": "numbercolumn",
					"width" : 110,
					"align" : "right",
					"format": "0,000"
				}
			]
		},
		{
 			"key": "CargoManualCtlNonVesselTabExport",
			"items": [
				{
					"header": ViewUtil.getLabel('catgNm'),
					"dataIndex": "catgNm",
					"reference": "refCargoManualCtlTabExportCatgNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpNm'),
					"dataIndex": "delvTpNm",
					"reference": "refCargoManualCtlTabExportDelvTpNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('cgNo'),
					"dataIndex": "cgNo",
					"reference": "refCargoManualCtlTabExportCgNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('hdlInDt'),
					"dataIndex": "hdlInDt",
					"reference": "refCargoManualCtlTabExportHdlInDt",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('lorry'),
					"dataIndex": "lorryId",
					"reference": "refCargoManualCtlTabExportLorryId",
					"filter": "string",
					"width": 110
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('sprYn'),
					"dataIndex": "sprYn",
					"reference": "refCargoManualCtlTabExportSprYn",
					"width": 70,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.sprYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('docMt'),
					"dataIndex": "docMt",
					"reference": "refCargoManualCtlTabExportDocMt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('docM3'),
					"dataIndex": "docM3",
					"reference": "refCargoManualCtlTabExportDocM3",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('docQty'),
					"dataIndex": "docQty",
					"reference": "refCargoManualCtlTabExportDocQty",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('wgt'),
					"dataIndex": "wgt",
					"reference": "refCargoManualCtlTabExportWgt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('msrmt'),
					"dataIndex": "msrmt",
					"reference": "refCargoManualCtlTabExportMsrmt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('actQty'),
					"dataIndex": "pkgQty",
					"reference": "refCargoManualCtlTabExportPkgQty",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('dmgWgt'),
					"dataIndex": "dmgWgt",
					"reference": "refCargoManualCtlTabExportDmgWgt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('dmgM3'),
					"dataIndex": "dmgM3",
					"reference": "refCargoManualCtlTabExportDmgM3",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('dmgQty'),
					"dataIndex": "dmgQty",
					"reference": "refCargoManualCtlTabExportDmgQty",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('statNm'),
					"dataIndex": "statNm",
					"reference": "refCargoManualCtlTabExportStatNm",
					"filter": "string",
					"width": 110
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('fnlOpeYn'),
					"dataIndex": "fnlOpeYn",
					"reference": "refCargoManualCtlTabExportFnlOpeYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.fnlOpeYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('hiFnlYn'),
					"dataIndex": "hiFnlYn",
					"reference": "refCargoManualCtlTabExportHiFnlYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.hiFnlYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('rhdlMode'),
					"dataIndex": "rhdlMode",
					"reference": "refCargoManualCtlTabExportRhdlMode",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.rhdlMode === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('dmgYn'),
					"dataIndex": "dmgYn",
					"reference": "refCargoManualCtlTabExportDmgYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dmgYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('shuYn'),
					"dataIndex": "shuYn",
					"reference": "refCargoManualCtlTabExportShuYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.shuYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('rcYn'),
					"dataIndex": "rcYn",
					"reference": "refCargoManualCtlTabExportRcYn",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.rcYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{	
					"xtype": "actioncolumn",
					"header": ViewUtil.getLabel('isExistedCargo'),
					"dataIndex": "isExistedCargo",
					"reference": "refCargoManualCtlTabExportIsExistedCargo",
					"width": 110,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.isExistedCargo === 'Y') ? 'x-fa fa-check green' : '';
						}
					}],
				},
				{
					"header": ViewUtil.getLabel('whLocIds'),
					"dataIndex": "whLocIds",
					"reference": "refCargoManualCtlTabExportWhLocIds",
					"filter": "string",
					"width": 110
				}
			]
		},
		{
 			"key": "CargoManualCtlNonVesselTabGatePass",
			"items": [
				
				{
					"header": ViewUtil.getLabel('catgNm'),
					"dataIndex": "catgNm",
					"reference": "refCargoManualCtlTabGatePassCatgNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('jpvc'),
					"dataIndex": "vslCallId",
					"reference": "refCargoManualCtlTabGatePassVslCallId",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('gatePassNoGatePass'),
					"dataIndex": "gatePassNo",
					"reference": "refCargoManualCtlTabGatePassGatePassNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('gpTime'),
					"dataIndex": "gatePassIssueDt",
					"reference": "refCargoManualCtlTabGatePassGatePassIssueDt",
					"filter": "string",
					"width": 160
				},
				{
					"header": ViewUtil.getLabel('lorry'),
					"dataIndex": "lorryNo",
					"reference": "refCargoManualCtlTabGatePassLorryNo",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('noTripsGatePass'),
					"dataIndex": "noTrips",
					"reference": "refCargoManualCtlTabGatePassNoTrips",
					"filter": "string",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('wgtGatePass'),
					"dataIndex": "wgt",
					"reference": "refCargoManualCtlTabGatePassWgt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000.000",
					"header": ViewUtil.getLabel('msrmtGatePass'),
					"dataIndex": "msrmt",
					"reference": "refCargoManualCtlTabGatePassMsrmt",
					"width": 110
				},
				{
					"xtype": "numbercolumn",
					"align" : "right",
					"format": "0,000",
					"header": ViewUtil.getLabel('pkgQtyGatePass'),
					"dataIndex": "pkgQty",
					"reference": "refCargoManualCtlTabGatePassPkgQty",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('cgNoGatePass'),
					"dataIndex": "cgNo",
					"reference": "refCargoManualCtlTabGatePassCgNo",
					"filter": "string",
					"width": 110
				},
				{	
					"header": ViewUtil.getLabel('rehandleGatePass'),
					"dataIndex": "rehandle",
					"reference": "refCargoManualCtlTabGatePassRehandle",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('delvStatGatePass'),
					"dataIndex": "delvStat",
					"reference": "refCargoManualCtlTabGatePassDelvStat",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('tsptTpNmGatePass'),
					"dataIndex": "tsptTpNm",
					"reference": "refCargoManualCtlTabGatePassTsptTpNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpNmGatePass'),
					"dataIndex": "delvTpNm",
					"reference": "refCargoManualCtlTabGatePassDelvTpNm",
					"filter": "string",
					"width": 110
				},
				{
					"header": ViewUtil.getLabel('issued'),
					"dataIndex": "issued",
					"reference": "refCargoManualCtlTabGatePassIssued",
					"filter": "string",
					"width": 110
				}
			]
 		},
		{
			"key": "ROROCargoInYard",
			"items": [
				{
					"header": ViewUtil.getLabel('yardLocation'), "dataIndex": "yardLoc", "reference": "refYardLoc", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "reference": "refROROCatgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('BLSNNo'), "dataIndex": "blNo", "reference": "refBlNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "reference": "refBrandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "reference": "refModelNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'), "dataIndex": "unitNo", "reference": "refUnitNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('discharged'), "dataIndex": "driverNm", "reference": "refGateIn", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('remaining'), "dataIndex": "remainUnit", "reference": "refRemainUnit", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "reference": "refROROCgTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('sa'), "dataIndex": "driverNm", "reference": "refGateIn", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('fa'), "dataIndex": "driverNm", "reference": "refGateIn", "filter" : "string", "align" : "center", "width": 150
				},
			]
		},
		{
			"key": "YardPlanOfRORONonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "reference": "refROROCatgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "blNo", "reference": "refBlNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "reference": "refBrandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "reference": "refModelNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'), "dataIndex": "unitNo", "reference": "refUnitNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('remain'), "dataIndex": "driverNm", "reference": "refGateIn", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yards'), "dataIndex": "remainUnit", "reference": "refRemainUnit", "filter" : "string", "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "SubYardPlanOfRORONonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "reference": "refROROCatgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "blNo", "reference": "refBlNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "brandNm", "reference": "refBrandNm", "filter" : "string", "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "YardPlanOfRORONonVesselSummary",
			"items": [
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "catgNm", "reference": "refROROCatgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('plannedQty'), "dataIndex": "blNo", "reference": "refBlNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('BLSNNo'), "dataIndex": "brandNm", "reference": "refBrandNm", "filter" : "string", "align" : "center", "width": 200
				}
			]
		},
		{
			"key": "ConfirmHandlingInOfROROCargoGrid",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'), "dataIndex": "nosOfUnit", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('remainedGI'), "dataIndex": "remainedGI", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('remainedHI'), "dataIndex": "remainedHI", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('todoHI'), "dataIndex": "toDoHI", "filter" : "string", "align" : "center", "width": 120, "hidden": true
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 120
				},
			]
		},
		{
			"key": "ConfirmHandlingInOfROROGateInGrid",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'),"dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 140
				},
				{
					"header": ViewUtil.getLabel('gateInTime'),"dataIndex": "gateInDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('gRNo'),"dataIndex": "grNo", "filter" : "string", "align" : "center", "width": 120
				}
			]
		},
		{
			"key": "ConfirmHandlingInOfROROGrid",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('gateInTime'), "dataIndex": "gateInDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "yardLoc", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('driverNm'), "dataIndex": "driverNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('remark'), "dataIndex": "driverNm", "filter" : "string", "align" : "center", "width": 120
				},
			]
		},
		{
			"key": "ConfirmLoadingOfRORO",
			"items": [
				{
					"header": ViewUtil.getLabel('category'),"dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'),"dataIndex": "shipgNoteNo", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('cargoType'),"dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'),"dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'),"dataIndex": "nosOfUnit", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('noOfGateIn'),"dataIndex": "nosOfGateIn", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('noOfHI'),"dataIndex": "nosOfHandlingIn", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('rehandling'),"dataIndex": "remainUnit", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('toDoYC'),"dataIndex": "toDoYC", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('toDoLC'),"dataIndex": "toDoLC", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('noOfLC'),"dataIndex": "nosOfLC", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('customsBalance'),"dataIndex": "customsBalQty", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('brand'),"dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('model'),"dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 120
				}
			]
		},
		{
			"key": "ConfirmLoadingOfRORODirectTab",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpCd", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateInTime'), "dataIndex": "gateInDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('loadingTime'), "dataIndex": "loadingTime", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('status'), "dataIndex": "statNm", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationDriverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationDriverName'), "dataIndex": "driverNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 100
				}
			]
		},
		{
			"key": "ConfirmLoadingOfROROIndirectTab",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "yardLoc", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('outDate'), "dataIndex": "outDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('loadingTime'), "dataIndex": "loadingTime", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('status'), "dataIndex": "statNm", "filter" : "string", "align" : "center", "width": 100
				}
			]
		},
		{
			"key": "TheListOfDamageCheckOfRORO",
			"items": [
				{
					"header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('BLSNNo'), "dataIndex": "cgNo", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('checkTime'), "dataIndex": "checkedDt", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('checkBy'), "dataIndex": "checkedBy", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 150
				}
			]
		},
		{
			"key": "JobMonitoringOfRORONonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'), "dataIndex": "nosOfUnit", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('changeVessel'), "dataIndex": "driverNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('returnToshipper'), "dataIndex": "remainUnit", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 150
				},
			]
		},
		{
			"key": "SubJobMonitoringOfRORONonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('rehandleRehandleMode'), "dataIndex": "", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('status'), "dataIndex": "statNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateInTime'), "dataIndex": "gateInDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('outDate'), "dataIndex": "outDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateOutTime'), "dataIndex": "gateOutDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('loadingTime'), "dataIndex": "loadingTime", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "unitYardLoc", "filter" : "string", "align" : "center", "width": 150
				},
			]
		},
		{
			"key": "JobMonitoringOfRORORehandling",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "filter" : "string", "align" : "center", "width": 180
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'), "dataIndex": "nosOfUnit", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('changeVessel'), "dataIndex": "nosOfChangeVesel", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('returnToshipper'), "dataIndex": "nosOfReturnToShipper", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 150
				},
			]
		},
		{
			"key": "SubJobMonitoringOfRORORehandling",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('rehandleRehandleMode'), "dataIndex": "rhdlModeNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('status'), "dataIndex": "statNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateInTime'), "dataIndex": "refGateIn", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('outDate'), "dataIndex": "outDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateOutTime'), "dataIndex": "gateOutDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('loadingTime'), "dataIndex": "loadingTime", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "unitYardLoc", "filter" : "string", "align" : "center", "width": 150
				},
			]
		},
		{
			"key": "ConfirmHandlingOutOfRORONonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'), "dataIndex": "nosOfUnit", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfHO'), "dataIndex": "nosOfHO", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfGO'), "dataIndex": "nosOfGO", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('toDoHO'), "dataIndex": "toDoHO", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 150
				},
			]
		},
		{
			"key": "SubConfirmHandlingOutOfRORONonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "yardLoc", "filter" : "string", "align" : "center", "width": 150
				},
			]
		},
		{
			"key": "SummaryConfirmHandlingOutOfRORONonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "yardLoc", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateInTime'), "dataIndex": "gateInDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('outDate'), "dataIndex": "outDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateOutTime'), "dataIndex": "gateOutDate", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('LADriverNm'), "dataIndex": "driverNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('remark'), "dataIndex": "remark", "filter" : "string", "align" : "center", "width": 150
				},
			]
		},
		{
			"key": "ConfirmHandlingInOfROROCargoNonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('SNLSNNo'), "dataIndex": "shipgNoteNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('SNLDeliveryMode'), "dataIndex": "delvTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('noOfUNIT'), "dataIndex": "nosOfUnit", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('remainedGI'), "dataIndex": "remainedGI", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('remainedHI'), "dataIndex": "remainedHI", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('todoHI'), "dataIndex": "toDoHI", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('faCode'), "dataIndex": "fwdCd", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('faName'), "dataIndex": "fwdNm", "filter" : "string", "align" : "center", "width": 250
				},
			]
		},
		{
			"key": "ConfirmHandlingInOfROROGateInNonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'),"dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 140
				},
				{
					"header": ViewUtil.getLabel('gateInTime'),"dataIndex": "gateInDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('gRNo'),"dataIndex": "grNo", "filter" : "string", "align" : "center", "width": 120
				}
			]
		},
		{
			"key": "ConfirmHandlingInOfRORONonVessel",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('gateInTime'), "dataIndex": "gateInDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('yardPosition'), "dataIndex": "yardLoc", "filter" : "string", "align" : "center", "width": 120
				},
				{
					"header": ViewUtil.getLabel('driverId'), "dataIndex": "driverId", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('driverNm'), "dataIndex": "driverNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('truckNo'), "dataIndex": "truckNo", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('remark'), "dataIndex": "hiRemarks", "filter" : "string", "align" : "center", "width": 120
				}
			]
		},
		{
			"key": "RORODamageCheck",
			"items": [
				{
					"header": ViewUtil.getLabel('theDamagePart'), "dataIndex": "dmgPartNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('theDamageLevel'), "dataIndex": "dmgLevelNm", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('checkLocation'), "dataIndex": "locNm", "filter" : "string", "align" : "center", "width": 170
				}
			]
		},
		{
			"key": "RORODamageCheckInventory",
			"items": [
				{
					"header": ViewUtil.getLabel('inventory'), "dataIndex": "invNm","reference": "refRORODamageCheckInventory", "filter" : "string", "align" : "center", "width": 175,
					"editor":{
						"xtype": "textfield",
						"enforceMaxLength": true,
						"allowBlank": false,
						"allowOnlyWhitespace": false,
					}
				},
				{
					"header": ViewUtil.getLabel('count'), "dataIndex": "invCnt", "reference": "refRORODamageCheckCount","filter" : "string", "align" : "center", "width": 150,
					
					"editor":{
						"enforceMaxLength": true,
						"allowBlank": false,
						"allowOnlyWhitespace": false,
						"xtype": "numberfield",
						"maskRe": "/[0-9.]/",
						"minValue": 0,
						"maxValue": 999999999999999.999,
					},
				}
			]
		},
		{
			"key": "CargoPopupItems",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('bl_sn'), "dataIndex": "cgNo", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('cargoTp'), "dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('model'), "dataIndex": "modelNm", "filter" : "string", "align" : "center", "width": 175
				},
			]
		},
		{
			"key": "UnitPopupItems",
			"items": [
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('yardLocation'), "dataIndex": "yardLoc", "filter" : "string", "align" : "center", "width": 175
				},
				{
					"header": ViewUtil.getLabel('inDate'), "dataIndex": "inDate", "filter" : "string", "align" : "center", "width": 175
				}
			]
		},
		
		{
			"key": "TheListOfDimensionCheckOfGC",
			"items": [
				{
					"header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('BLSNNo'), "dataIndex": "blSnNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('grNo'), "dataIndex": "cgNo", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('docLength'), "dataIndex": "docLength", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('docWidth'), "dataIndex": "docWidth", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('docHeight'), "dataIndex": "docHeight", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('actLength'), "dataIndex": "actLength", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('actWidth'), "dataIndex": "actWidth", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('actHeight'), "dataIndex": "actHeight", "filter" : "string", "align" : "center", "width": 100
				},
				{
					"header": ViewUtil.getLabel('rmk'), "dataIndex": "dimensionRemark", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('checkTime'), "dataIndex": "checkedDt", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('checkBy'), "dataIndex": "checkedBy", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('sa'), "dataIndex": "shaNm", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('fa'), "dataIndex": "fwdNm", "filter" : "string", "align" : "center", "width": 200
				},
			]
		},
		
		{
			"key": "DamageGridList",
			"items": [
				{
				    "xtype": "rownumberer",
				    "width" : 50,
				    "align" : "center"
				},
				{
					"header":  "The Damage Part",
					"dataIndex": "dmgPartNm",
					"filter": "string",
					"width": 300,
				},
				{
					"header":  "The Damage Level",
					"dataIndex": "dmgLevelNm",
					"filter": "string",
					"width": 300
				},
			]
		},
		
		{
			"key": "UploadDamageGridList",
			"items": [
				{
					"header":  "File Name",
					"dataIndex": "fileName",
					"filter": "string",
					"width": 120,
				},
				{
					"header":  "Size",
					"dataIndex": "fileSize",
					"filter": "string",
					"width": 100,
					"xtype":"numbercolumn",
					"format":"0,000",
				},
			]
		},
		
		{
			"key": "TheListOfDamageCheckOfGC",
			"items": [
				{
					"header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('BLSNNo'), "dataIndex": "cgNo", "filter" : "string", "align" : "center", "width": 200
				},
				{
					"header": ViewUtil.getLabel('grNo'), "dataIndex": "grNo", "filter" : "string", "align" : "center", "width": 150
				},
				
				{
					"header": ViewUtil.getLabel('dmgQty'), "dataIndex": "dmgQty", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dmgWgt'), "dataIndex": "dmgMt", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dmgM3'), "dataIndex": "dmgM3", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('rmk'), "dataIndex": "dmgRemark", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('checkTime'), "dataIndex": "checkedDt", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('checkBy'), "dataIndex": "checkedBy", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "filter" : "string", "align" : "center", "width": 150
				},
				{
					"header": ViewUtil.getLabel('sa'), "dataIndex": "shaNm", "filter" : "string", "align" : "center", "width": 250
				},
				{
					"header": ViewUtil.getLabel('fa'), "dataIndex": "fwdNm", "filter" : "string", "align" : "center", "width": 250
				},
			]
		},
		
		/************** Monitoring *****************/
		{
			"key": "GatePassList",
			"items": [
				{ "header": ViewUtil.getLabel('gatePassListCa'), "reference": "refCatgNm", "dataIndex": "catgNm", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListGp'), "reference": "refGatePassNo", "dataIndex": "gatePassNo", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListGpTime'), "reference": "refGatePassIssueDt", "dataIndex": "gatePassIssueDt", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListLorry'), "reference": "refLorryNo", "dataIndex": "lorryNo", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListMt'), "reference": "refWgt", "dataIndex": "wgt", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListM3'), "reference": "refMsrmt", "dataIndex": "msrmt", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListQty'), "reference": "refPkgQty", "dataIndex": "pkgQty", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListGrBl'), "reference": "refCgNo", "dataIndex": "cgNo", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListRehandle'), "reference": "refRehandle", "dataIndex": "rehandle", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListDelvMode'), "reference": "refDelvTpNm", "dataIndex": "delvTpNm", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListDelvStatus'), "reference": "refDelvStat", "dataIndex": "delvStat", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListIssued'), "reference": "refIssued", "dataIndex": "issued", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListShiftDate'), "reference": "refShftDt", "dataIndex": "shftDt", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListShift'), "reference": "refShftNm", "dataIndex": "shftNm", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListComfirmBy'), "reference": "refConfirmBy", "dataIndex": "ConfirmBy", "width": 170, "filter": "string"},
				{ "header": ViewUtil.getLabel('gatePassListDateTime'), "reference": "refDateTime", "dataIndex": "dateTime", "width": 170, "filter": "string"},
			]
		},
		{
			"key": "UnclosedOperationList",
			"items": [
				{ "header": ViewUtil.getLabel('jpvcno'), "reference": "refJpvcno", "dataIndex": "vslCallId", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedVesselName'), "reference": "refUnclosedVesselName", "dataIndex": "vslNm", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('vesselType'), "reference": "refUnclosedVesselType", "dataIndex": "vslTp", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedATB'), "reference": "refUncloseddATB", "dataIndex": "atb", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedATU'), "reference": "refUnclosedATU", "dataIndex": "atu", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedCgOpTp'), "reference": "refUncloseCgOpTp", "dataIndex": "cgOpTp", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedBlSn'), "reference": "refUncloseBlSn", "dataIndex": "blSn", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedCargoCondition'), "reference": "cgCond", "dataIndex": "grNo", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedReason'), "reference": "refUncloseReason", "dataIndex": "rsn", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedDocMT'), "reference": "refUnclosedDocMT", "dataIndex": "docMt", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedDocM3'), "reference": "refUnclosedDocM3", "dataIndex": "docM3", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedDocQty'), "reference": "refUnclosedDocQty", "dataIndex": "docQty", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedActMT'), "reference": "refUnclosedActMT", "dataIndex": "actMt", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedActM3'), "reference": "refUnclosedActM3", "dataIndex": "actM3", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedACTQty'), "reference": "refUnclosedACTQty", "dataIndex": "actQty", "width": 200, "readOnly": true},
				{ "header": ViewUtil.getLabel('unclosedWhLoc'), "reference": "refUnclosedWhLoc", "dataIndex": "whLoc", "width": 200, "readOnly": true}
			]
		},
		{
			"key": "GateOut",
			"items": [
                {
                    "header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "reference": "refGateOutVslCallId", "filter": "string", "width": 130, "align":"left"
                },
                {
                    "header": ViewUtil.getLabel('masterBLNo'), "dataIndex": "mfDocId", "reference": "refMasterBlNo", "filter": "string", "width": 130, "align":"left"
                },
                {
                    "header": ViewUtil.getLabel('gateOutBlNo'), "dataIndex": "blNo", "reference": "refGateOutBlNo", "filter": "string", "width": 130, "align":"left"
                },
                {
                    "header": ViewUtil.getLabel('SDONo'), "dataIndex": "sdoNo", "reference": "refGateOutDelvOdrNo", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutGrNo'), "dataIndex": "grNo", "reference": "refGateOutGrNo", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutGatePassNo'), "dataIndex": "gatePassNo", "reference": "refGateOutGatePassNo", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutDelvTpCd'), "dataIndex": "delvTpCd", "reference": "refGateOutDelvTpCd", "filter": "string", "width": 130, "align":"left"
                },
                {
                    "header": ViewUtil.getLabel('gateOutTsptTpCd'), "dataIndex": "tsptTpCd", "reference": "refGateOutTsptTpCd", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutLorryNo'), "dataIndex": "lorryNo", "reference": "refGateOutLorryNo", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutGateNm'), "dataIndex": "gateNm", "reference": "refGateOutGateNm", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutDescr'), "dataIndex": "descr", "reference": "refGateOutDescr", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutIsDgCargo'), "dataIndex": "isDgCargo", "reference": "refGateOutIsDgCargo", "filter": "string", "width": 130, "hidden": true
                },
                {
                    "header": ViewUtil.getLabel('gateOutDgApprStat'), "dataIndex": "dgApprStat", "reference": "refGateOutDgApprStat", "filter": "string", "width": 130, "hidden": true
                },
                {
                    "header": ViewUtil.getLabel('gateOutStatCd'), "dataIndex": "statCd", "reference": "refGateOutStatCd", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutFirstGateInDt'), "dataIndex": "firstGateInDt", "reference": "refGateOutFirstGateInDt", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutDisEndDt'), "dataIndex": "disEndDt", "reference": "refGateOutDisEndDt", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutHdlOutEndDt'), "dataIndex": "hdlOutEndDt", "reference": "refGateOutHdlOutEndDt", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutLastGateOutDt'), "dataIndex": "lastGateOutDt", "reference": "refGateOutLastGateOutDt", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutGateOutBy'), "dataIndex": "gateOutBy", "reference": "refGateOutGateOutBy", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutWhLocNm'), "dataIndex": "whLocNm", "reference": "refGateOutWhLocNm", "filter": "string", "width": 130, "hidden": true
                },
                {
                    "header": ViewUtil.getLabel('gateOutFwrAgnt'), "dataIndex": "fwrAgnt", "reference": "refGateOutFwrAgnt", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('gateOutScaleAmt'), "dataIndex": "scaleAmt", "reference": "refGateOutScaleAmt", "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('docMt'), "dataIndex": "actlWgt", "reference": "refGateOutActlWgt", "width": 130, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
                },
                {
                    "header": ViewUtil.getLabel('docM3'), "dataIndex": "vol", "reference": "refGateOutVol", "width": 130, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
                },
                {
                    "header": ViewUtil.getLabel('docQty'), "dataIndex": "pkgQty", "reference": "refGateOutPkgQty", "width": 130, "xtype": "numbercolumn", "align" : "right", "format": "0,000"
                }
            ]
		},
		{
			"key": "ListOfGateIn",
			"items":  [
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "reference": "refListOfGateInVslCallId", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('bookingNo'), "dataIndex": "bookingNo", "reference": "refListOfGateInBookingNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('shipgNoteNo'), "dataIndex": "shipgNoteNo", "reference": "refListOfGateInShipgNoteNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('grNo'), "dataIndex": "grNo", "reference": "refListOfGateInGrNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('masterBLNo'), "dataIndex": "mfDocId", "reference": "refListOfGateInMasterBlNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('bLNo'), "dataIndex": "blNo", "reference": "refListOfGateInBlNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('lotNo'), "dataIndex": "lotNo", "reference": "refListOfGateInLotNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('cnsne'), "dataIndex": "cnsneNm", "reference": "refListOfGateInCnsne", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('shipper'), "dataIndex": "shprNm", "reference": "refListOfGateInShpr", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('doNo'), "dataIndex": "doNo", "reference": "refListOfGateInDoNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('sdoNo'), "dataIndex": "sdoNo", "reference": "refListOfGateInSDONo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpCd'), "dataIndex": "delvTpCd", "reference": "refListOfGateInDelvTpCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('tsptTpCd'), "dataIndex": "tsptTpCd", "reference": "refListOfGateInTsptTpCd", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('whLocation'), "dataIndex": "whLoc", "reference": "refWhLodation", "filter": "string", "width": 130, "hidden": true
				},
				{
					"header": ViewUtil.getLabel('lorryNo'), "dataIndex": "lorryNo", "reference": "refListOfGateInLorryNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('chassisNo'), "dataIndex": "chassisNo", "reference": "refListOfGateInChassisNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('gateNm'), "dataIndex": "gateNm", "reference": "refListOfGateInGateNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('descr'), "dataIndex": "descr", "reference": "refListOfGateInDescr", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('isDgCargo'), "dataIndex": "isDgCargo", "reference": "refListOfGateInIsDgCargo", "filter": "string", "width": 110, "hidden": true
				},
				{
					"header": ViewUtil.getLabel('dgApprStat'), "dataIndex": "dgApprStat", "reference": "refListOfGateInDgApprStat", "filter": "string", "width": 110, "hidden": true
				},
				{
					"header": ViewUtil.getLabel('listOfGateInStatCd'), "dataIndex": "statCd", "reference": "refListOfGateInStatCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('firstGateInDt'), "dataIndex": "firstGateInDt", "reference": "refListOfGateInFirstGateInDt", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('gateInBy'), "dataIndex": "gateInBy", "reference": "refListOfGateInGateInBy", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('hdlInEndDt'), "dataIndex": "hdlInEndDt", "reference": "refListOfGateInHdlInEndDt", "filter": "string", "width": 140
				},
				{
					"header": ViewUtil.getLabel('loadEndDt'), "dataIndex": "loadEndDt", "reference": "refListOfGateInLoadEndDt", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('lastGateOutDt'), "dataIndex": "lastGateOutDt", "reference": "refListOfGateInLastGateOutDt", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('whLocNm'), "dataIndex": "whLocNm", "reference": "refListOfGateInWhLocNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('fwrAgnt'), "dataIndex": "fwrAgnt", "reference": "refListOfGateInFwrAgnt", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('scaleAmt'), "dataIndex": "scaleAmt", "reference": "refListOfGateInScaleAmt", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('docMt'), "dataIndex": "wgt", "reference": "refListOfGateInWgt", "width": 110, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('docM3'), "dataIndex": "msrmt", "reference": "refListOfGateInMsrmt", "width": 110, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('docQty'), "dataIndex": "pkgQty", "reference": "refListOfGateInPkgQty", "filter": "string", "width": 110, "xtype": "numbercolumn", "align" : "right", "format": "0,000"
				},
				{
					"header": ViewUtil.getLabel('rmk'), "dataIndex": "rmk", "reference": "refListOfGateInRmk", "filter": "string", "width": 110
				},
			]
		},
		{
			"key": "Loading",
			"items":  [
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "reference": "refLoadingVslCallId", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('vesselname'), "dataIndex": "vslNm", "reference": "refLoadingVslNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('loadingShipgNoteNo'), "dataIndex": "shipgNoteNo", "reference": "refLoadingShipgNoteNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('grNo'), "dataIndex": "grNo", "reference": "refLoadingGrNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('bargeNo'), "dataIndex": "bargeNo", "reference": "refLoadingBargeNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('bargeNm'), "dataIndex": "bargeNm", "reference": "refLoadingBargeNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('shipper'), "dataIndex": "shprNm", "reference": "refLoadingShipper", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('consignee'), "dataIndex": "cnsneNm", "reference": "refLoadingConsignee", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpCd'), "dataIndex": "delvTpCd", "reference": "refLoadingDelvTpCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('cgTpCd'), "dataIndex": "cgTpNm", "reference": "refLoadingCgTpCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('domesticCargo'), "dataIndex": "domesticChk", "reference": "refdomYn", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('oprsModeNm'), "dataIndex": "oprsModeNm", "reference": "refLoadingOprsModeNm", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('loadingWgt'), "dataIndex": "wgt", "reference": "refLoadingWgt", "width": 110, "renderer" : "renderBlueColorForFloat", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('loadingMsrmt'), "dataIndex": "msrmt", "reference": "refLoadingMsrmt", "width": 110, "renderer" : "renderBlueColorForFloat", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('loadingPkgQty'), "dataIndex": "pkgQty", "reference": "refLoadingPkgQty", "width": 110, "renderer" : "renderBlueColorForInt", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('scaleAmt'), "dataIndex": "scaleAmt", "reference": "refLoadingScaleAmt", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('loadEndDt'), "dataIndex": "loadEndDt", "reference": "refLoadingLoadEndDt", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('shftNm'), "dataIndex": "shftNm", "reference": "refLoadingShftNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('totInWgt'), "dataIndex": "totInWgt", "reference": "refLoadingTotInWgt", "width": 110, "renderer" : "renderRedColorForFloat", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('totInMsrmt'), "dataIndex": "totInMsrmt", "reference": "refLoadingTotInMsrmt", "width": 110, "renderer" : "renderRedColorForFloat", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('totInPkgQty'), "dataIndex": "totInPkgQty", "reference": "refLoadingTotInPkgQty", "width": 110, "renderer" : "renderRedColorForInt", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('dmgWgt'), "dataIndex": "dmgWgt", "reference": "refLoadingDmgWgt", "width": 110, "renderer" : "renderBlueColorForFloat", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('dmgMsrmt'), "dataIndex": "dmgMsrmt", "reference": "refLoadingDmgMsrmt", "width": 110, "renderer" : "renderBlueColorForFloat", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('dmgQty'), "dataIndex": "dmgQty", "reference": "refLoadingDmgQty", "width": 110, "renderer" : "renderBlueColorForInt", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('rePkgWgt'), "dataIndex": "rePkgWgt", "reference": "refLoadingRePkgWgt", "width": 110, "renderer" : "renderBlueColorForFloat", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('rePkgMsrmt'), "dataIndex": "rePkgMsrmt", "reference": "refLoadingRePkgMsrmt", "width": 110, "renderer" : "renderBlueColorForFloat", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('rePkgQty'), "dataIndex": "rePkgQty", "reference": "refLoadingRePkgQty", "width": 110, "renderer" : "renderBlueColorForInt", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('finalYn'), "dataIndex": "finalYn", "reference": "refLoadingFinalYn", "width": 110, "xtype": "actioncolumn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.finalYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('loadingDmgYn'), "dataIndex": "dmgYn", "reference": "refLoadingDmgYn", "width": 110, "xtype": "actioncolumn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dmgYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('shuYn'), "dataIndex": "shuYn", "reference": "refLoadingShuYn", "width": 110, "xtype": "actioncolumn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.shuYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('rhdlYn'), "dataIndex": "rhdlYn", "reference": "refLoadingRhdlYn", "width": 110, "xtype": "actioncolumn",
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.rhdlYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('firstGateInDt'), "dataIndex": "firstGateInDt", "reference": "refLoadingFirstGateInDt", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('loadGateOutDt'), "dataIndex": "lastGateOutDt", "reference": "refLoadingLoadGateOutDt", "filter": "string", "width": 140
				},
				{
					"header": ViewUtil.getLabel('hdlInEndDt'), "dataIndex": "hdlInEndDt", "reference": "refLoadingHdlInEndDt", "filter": "string", "width": 140
				},
				{
					"header": ViewUtil.getLabel('lorryNo'), "dataIndex": "lorryNo", "reference": "refLoadingLorryNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('chassisNo'), "dataIndex": "chassisNo", "reference": "refLoadingChassisNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('pkgNo'), "dataIndex": "pkgNo", "reference": "refLoadingPkgNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('pkgTpCd'), "dataIndex": "pkgTpNm", "reference": "refLoadingPkgTpCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('rePkgTpCd'), "dataIndex": "rePkgTpNm", "reference": "refLoadingRePkgTpCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('fwrAgnt'), "dataIndex": "fwrAgntNm", "reference": "refLoadingFwrAgnt", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('dgYn'), "dataIndex": "dgYn", "reference": "refLoadingDgYn", "width": 110, "xtype": "actioncolumn", "hidden": true,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dgYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('dgApprStat'), "dataIndex": "dgApprStat", "reference": "refLoadingDgApprStat", "filter": "string", "width": 110, "hidden": true
				},
				{
					"header": ViewUtil.getLabel('loadingDescr'), "dataIndex": "descrNm", "reference": "refLoadingDescr", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('eqNo'), "dataIndex": "eqNo", "reference": "refLoadingEqNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('fac'), "dataIndex": "fac", "reference": "refLoadingFac", "filter": "string", "width": 110, "hidden": true
				},
				{
					"header": ViewUtil.getLabel('hatchNo'), "dataIndex": "hatchNo", "reference": "refLoadingHatchNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('hatchDrtCd'), "dataIndex": "hatchDrtCd", "reference": "refLoadingHatchDrtCd", "filter": "string", "width": 110, "hidden": true
				},
				{
					"header": ViewUtil.getLabel('workComp'), "dataIndex": "workComp", "reference": "refLoadingWorkComp", "filter": "string", "width": 110, "hidden": true
				}
			]
		},
		{
			"key": "Discharging",
			"items": [
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('vesselname'), "dataIndex": "vslNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('blNo'), "dataIndex": "blNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('delvOdrNo'), "dataIndex": "delvOdrNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('sdoNo'), "dataIndex": "sdoNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('packageNo'), "dataIndex": "pkgNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('delvTpCd'), "dataIndex": "delvTpCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('actDelvTpCd'), "dataIndex": "actDelvTpCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('cgTpCd'), "dataIndex": "cgTpNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('cgCondition'), "dataIndex": "cgCondition", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('spCaCoCd'), "dataIndex": "spCaCoCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('oprsModeNm'), "dataIndex": "oprsModeNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('catgCd'), "dataIndex": "catgCd", "filter": "string", "width": 110
				},
				{ 
					"header": ViewUtil.getLabel('domesticCargo'), "dataIndex": "domesticChk", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('loadingWgt'), "dataIndex": "wgt", "width": 110, "renderer" : "renderBlueColorForFloat", "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('vol'), "dataIndex": "vol", "width": 110, "renderer" : "renderBlueColorForFloat", "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('pkgQty'), "dataIndex": "pkgQty", "width": 110, "renderer" : "renderBlueColorForInt", "xtype": "numbercolumn", "align" : "right"
				},
				{
					"header": ViewUtil.getLabel('scaleAmt'), "dataIndex": "scaleAmt", "width": 110, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('outWgtDir'), "dataIndex": "outWgtDir", "renderer" : "renderRedColorForFloat", "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('outMsrmtDir'), "dataIndex": "outMsrmtDir", "width": 130, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('outQtyDir'), "dataIndex": "outQtyDir",  "filter": "string", "width": 130, "xtype": "numbercolumn", "align" : "right", "renderer" : "renderRedColorForInt"
				},
				{
					"header": ViewUtil.getLabel('outWgtIndir'), "dataIndex": "outWgtIndir", "width": 150, "renderer" : "renderRedColorForFloat", "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('outMsrmtIndir'), "dataIndex": "outMsrmtIndir", "width": 150, "renderer" : "renderRedColorForFloat", "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('outQtyIndir'), "dataIndex": "outQtyIndir", "width": 150, "renderer" : "renderRedColorForInt", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('outWgtDmg'), "dataIndex": "outWgtDmg", "width": 110, "renderer" : "renderGreenColorForFloat", "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('outMsrmtDmg'), "dataIndex": "outMsrmtDmg", "width": 110, "renderer" : "renderGreenColorForFloat", "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('outQtyDmg'), "dataIndex": "outQtyDmg", "width": 110, "renderer" : "renderGreenColorForInt", "xtype": "numbercolumn", "align" : "right",
				},
				{
					"header": ViewUtil.getLabel('finalOpe'), "dataIndex": "finalOpe", "width": 110, "xtype": 'actioncolumn',
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.finalOpe === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('disEndDt'), "dataIndex": "disEndDt", "filter": "string", "width": 140
				},
				{
					"header": ViewUtil.getLabel('shftNm'), "dataIndex": "shftNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('hatchNo'), "dataIndex": "hatchNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('lorryNo'), "dataIndex": "lorryNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('chassisNo'), "dataIndex": "chassisNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('bargeNo'), "dataIndex": "bargeNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('bargeNm'), "dataIndex": "bargeNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('fwrAgnt'), "dataIndex": "fwdNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('cnsne'), "dataIndex": "cnsne", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('commodity'), "dataIndex": "descr", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('pkgTpCd'), "dataIndex": "pkgTpCd", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('eqNo'), "dataIndex": "eqNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('isDgCargo'), "dataIndex": "isDgCargo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('dgApprStat'), "dataIndex": "dgApprStat", "filter": "string", "width": 110
				}
			]
		},
		{
			"key": "WarehouseHistory",
			"items": [
				{
					"header": ViewUtil.getLabel('vessel'),
					"width": 150,
					"dataIndex": "vslCallId",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('masterBLNo'),
					"width": 150,
					"dataIndex": "mfDocId",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('bl_sn'),
					"width": 150,
					"dataIndex": "snBlNo",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('whHistoryDOGR'),
					"width": 150,
					"dataIndex": "grDoNo",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('whHistoryCGCond'),
					"width": 150,
					"dataIndex": "cgCoCd",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('mt'),
					"width": 150,
					"dataIndex": "wgt",
					"filter": "number"
				},
				{
					"header": ViewUtil.getLabel('m3'),
					"width": 150,
					"dataIndex": "msrmt",
					"filter": "number"
				},
				{
					"header": ViewUtil.getLabel('qty'),
					"width": 150,
					"dataIndex": "pkgQty",
					"filter": "number"
				},
				{
					"header": ViewUtil.getLabel('whHistoryTotMT'),
					"width": 150,
					"dataIndex": "locWgt",
					"filter": "number"
				},	
				{
					"header": ViewUtil.getLabel('whHistoryTotM3'),
					"width": 150,
					"dataIndex": "locMsrmt",
					"filter": "number"
				},
				{
					"header": ViewUtil.getLabel('whHistoryTotQty'),
					"width": 150,
					"dataIndex": "locQty",
					"filter": "number"
				},
				{
					"header": ViewUtil.getLabel('Wh'),
					"width": 150,
					"dataIndex": "locId",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('whHistoryHIn'),
					"width": 150,
					"dataIndex": "hiDate",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('whHistoryHOut'),
					"width": 150,
					"dataIndex": "hoDate",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('whHistoryShift'),
					"width": 150,
					"dataIndex": "shftNm",
					"filter": "string"
				},
				{
					"header": ViewUtil.getLabel('remarks'),
					"width": 150,
					"dataIndex": "rmk",
					"filter": "string"
				}
			]
		},
		
		{
			"key": "WarehouseBalance",
			"items": [
				{
					"header": ViewUtil.getLabel('lotNo'), "dataIndex": "userRefNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "filter": "string", "width": 120
				},
				{
					"header": ViewUtil.getLabel('vesselname'), "dataIndex": "vslNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('masterBLNo'), "dataIndex": "mfDocId", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('blNo'), "dataIndex": "blNo", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('snNo'), "dataIndex": "shipgNoteNo", "filter": "string", "width": 140
				},
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "filter": "list", "width": 90
				},
				{
					"header": ViewUtil.getLabel('modeofOPR'), "dataIndex": "tsptTpNm", "filter": "list", "width": 130
				},
				{
					"header": ViewUtil.getLabel('cgTp'), "dataIndex": "cgTpNm", "filter": "list", "width": 130
				},
				{
					"header": ViewUtil.getLabel('commodity'), "dataIndex": "cmdtNm", "filter": "string", "width": 110
				},
				{
					"header": ViewUtil.getLabel('WHId'), "dataIndex": "whId", "filter": "list", "width": 110
				},
				{
					"header": ViewUtil.getLabel('WHLocId'), "dataIndex": "locId", "filter": "list", "width": 110
				},
				{
					"header": ViewUtil.getLabel('WHType'), "dataIndex": "whTpNm", "filter": "string", "width": 110, "hidden": false
				},
				{
					"header": ViewUtil.getLabel('storedMT'), "dataIndex": "storedMt", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('storedM3'), "dataIndex": "storedM3", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{ 
					"header": ViewUtil.getLabel('storedQty'), "dataIndex": "storedQty", "filter": "string", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('balMt'), "dataIndex": "balMt", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('balM3'), "dataIndex": "balM3", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('balQty'), "dataIndex": "balQty", "width": 80, "xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('vslschlShpA'), "dataIndex": "shaNm", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('fwrAgnt'), "dataIndex": "fwdNm", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('shipper'), "dataIndex": "shpNm", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('cnsne'), "dataIndex": "cnsneNm", "filter": "string", "width": 150
				}
			]
		},
		{
			"key": "logMOSTMonitoring",
			"items": [
				{
					"header":  ViewUtil.getLabel('fileName'),
					"dataIndex": "fileName",
					"reference": "refFileName",
					"filter": "string",
					"width": 200,
				},
				{
					"header":  ViewUtil.getLabel('fileSizeKb'),
					"dataIndex": "fileSize",
					"align": "right",
					"reference": "refFileSize",
					"filter": "string",
					"width": 100,
					"xtype":"numbercolumn",
					"format":"0,000",
				},
				{
					"header":  ViewUtil.getLabel('modifiedTime'),
					"dataIndex": "modifiedTime",
					"reference": "refModifiedTime",
					"filter": "string",
					"width": 200,
					"renderer": function(value) {
				        // Assuming 'value' is a Date object, format it as 'dd/mm/yyyy hh:mm'
				        if (value instanceof Date) {
				            const day = String(value.getDate()).padStart(2, '0');
				            const month = String(value.getMonth() + 1).padStart(2, '0');
				            const year = value.getFullYear();
				            const hours = String(value.getHours()).padStart(2, '0');
				            const minutes = String(value.getMinutes()).padStart(2, '0');
				            return `${day}/${month}/${year} ${hours}:${minutes}`;
				        }
				        return value; // Return the original value if it's not a Date
				    }
				},
			]
		},		
		{
			"key": "logWBMonitoring",
			"items": [
				{
					"header":  ViewUtil.getLabel('fileName'),
					"dataIndex": "fileName",
					"reference": "refFileName",
					"filter": "string",
					"width": 200,
				},
				{
					"header":  ViewUtil.getLabel('fileSizeKb'),
					"dataIndex": "fileSize",
					"align": "right",
					"reference": "refFileSize",
					"filter": "string",
					"width": 100,
					"xtype":"numbercolumn",
					"format":"0,000",
				},
				{
					"header":  ViewUtil.getLabel('modifiedTime'),
					"dataIndex": "modifiedTime",
					"reference": "refModifiedTime",
					"filter": "string",
					"width": 200,
					"renderer": function(value) {
				        // Assuming 'value' is a Date object, format it as 'dd/mm/yyyy hh:mm'
				        if (value instanceof Date) {
				            const day = String(value.getDate()).padStart(2, '0');
				            const month = String(value.getMonth() + 1).padStart(2, '0');
				            const year = value.getFullYear();
				            const hours = String(value.getHours()).padStart(2, '0');
				            const minutes = String(value.getMinutes()).padStart(2, '0');
				            return `${day}/${month}/${year} ${hours}:${minutes}`;
				        }
				        return value; // Return the original value if it's not a Date
				    }
				},
			]
		},
		{
			"key": "logHGMonitoring",
			"items": [
				{
					"header":  ViewUtil.getLabel('fileName'),
					"dataIndex": "fileName",
					"reference": "refFileName",
					"filter": "string",
					"width": 200,
				},
				{
					"header":  ViewUtil.getLabel('fileSizeKb'),
					"dataIndex": "fileSize",
					"align": "right",
					"reference": "refFileSize",
					"filter": "string",
					"width": 100,
					"xtype":"numbercolumn",
					"format":"0,000",
				},
				{
					"header":  ViewUtil.getLabel('modifiedTime'),
					"dataIndex": "modifiedTime",
					"reference": "refModifiedTime",
					"filter": "string",
					"width": 200,
					"renderer": function(value) {
				        // Assuming 'value' is a Date object, format it as 'dd/mm/yyyy hh:mm'
				        if (value instanceof Date) {
				            const day = String(value.getDate()).padStart(2, '0');
				            const month = String(value.getMonth() + 1).padStart(2, '0');
				            const year = value.getFullYear();
				            const hours = String(value.getHours()).padStart(2, '0');
				            const minutes = String(value.getMinutes()).padStart(2, '0');
				            return `${day}/${month}/${year} ${hours}:${minutes}`;
				        }
				        return value; // Return the original value if it's not a Date
				    }
				},
			]
		},
		/************** administrator *****************/
		{
			"key": "UserRegister",
			"items": [ 	
				{ "header": ViewUtil.getLabel('partnerCode'), "dataIndex": "ptnrCd", "width": 100, "align":"center", "caption":"partnerCode", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('partnerType'), "dataIndex": "ptnrType", "width": 200, "align":"center", "caption":"partnerType", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('parnterName'), "dataIndex": "ptnrNm", "flex": 1, "align":"left", "caption":"parnterName",  "filter": "string"},
				{ "header": ViewUtil.getLabel('userRegId'), "dataIndex": "regUserId", "width": 100, "align":"center", "caption":"userId", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('userName'), "dataIndex": "engNm", "width": 200, "align":"center", "caption":"userName", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('userType'), "dataIndex": "userTypeNm", "width": 100, "align":"center", "caption":"userType", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('telephone'), "dataIndex": "telNo", "width": 100, "align":"center", "caption":"telephone", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('email'), "dataIndex": "emailAddr", "width": 200, "align":"left", "caption":"email", "filter": "string"},
				{ "header": ViewUtil.getLabel('usage'), "dataIndex": "useYn", "width": 60, "align":"center", "caption":"usage", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('lastlogtime'), "dataIndex": "lastLoginTime", "width": 150, "align":"center", "caption":"lastlogtime", "style" : "text-align:center", "filter": "string"}
			]
		},
		{
			"key": "UserDetailGroup",
			"items": [ 	
				{ "header": ViewUtil.getLabel('authGroup'), "dataIndex": "authGrp", "flex": 2, "align":"left", "caption":"authGroup", "style" : "text-align:center", "filter": "string",
					"editor": {
						"xtype": "combo",
						"bind": {
							"store": "{userAuthCombo}"
						},
						"displayField": "authGrpNm",
						"valueField": "authGrp",
						"queryMode": "local",
						"allowBlank": false,
						"editable": true,
						"listeners": {
							"select": "onAuthGrpSelect"
						},
					},
					"renderer":"onGridComboRenderer"
				},
				{ "header": ViewUtil.getLabel('orderGroup'), "dataIndex": "grpOrd", "flex": 1, "align":"center", "caption":"orderGroup", "style" : "text-align:center", "filter": "string",
					"editor": {
						"xtype": "textfield",
						"maxLength": "2",
						"maskRe": /[0-9]/,
						"enforceMaxLength": true,
						"allowBlank": true
					}
				},
			]
		},
		{
			"key": "PartnerTypeCode",
			"items": [ 	
				{ "header": ViewUtil.getLabel('ptyCd'), "dataIndex": "ptnrCode", "width": 80, "reference": "refPtnrCode", "filter": "string"},
				{ "header": ViewUtil.getLabel('engPtyNm'), "dataIndex": "ptnrName", "width": 230, "reference": "refPtnrName", "filter": "string"},
				{ "header": ViewUtil.getLabel('ptyDivName'), "dataIndex": "ptnrType", "width": 150, "reference": "refPtnrType", "filter": "string"},
				{ "header": ViewUtil.getLabel('telNo'), "dataIndex": "telNo", "width": 110, "reference": "refTelNo", "filter": "string"},
				{ "header": ViewUtil.getLabel('faxNo'), "dataIndex": "faxNo", "width": 110, "reference": "refFaxNo", "filter": "string"},
				{ "header": ViewUtil.getLabel('representative'), "dataIndex": "representative", "width": 120, "reference": "refRepresentative", "filter": "string"},
			]
		},
		{
			"key": "LogUserPassword",
			"items": [ 	
				{ "header": ViewUtil.getLabel('logUserPassUserId'), "dataIndex": "userId", "width": 150, "align":"center", "caption":"logUserPassUserId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('logUserPassSquence'), "dataIndex": "userSeq", "width": 120, "align":"center", "caption":"logUserPassSquence", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('logUserPassName'), "dataIndex": "engNm", "width": 150, "align":"center", "caption":"logUserPassName", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('logUserPassEmail'), "dataIndex": "emailAddr", "width": 200, "align":"center", "caption":"logUserPassEmail", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('logUserPassTelephone'), "dataIndex": "telNo", "width": 170, "align":"center", "caption":"logUserPassTelephone", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('logUserPassInsertDate'), "dataIndex": "insDt", "width": 150, "align":"center", "caption":"logUserPassInsertDate", "style" : "text-align:center", "filter": "string"},
			]
		},
		{
			"key": "CompanyRegister",
			"items": [ 	
				{ "header": ViewUtil.getLabel('ptnrCd'), "dataIndex": "companyCode", "width": 100, "align":"center", "caption":"companyCode", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('ptnrNm'), "dataIndex": "engSnm", "width": 220, "align":"center", "caption":"ptnrNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('companyType'), "dataIndex": "ptnrTp", "width": 300, "align":"center", "caption":"companyType", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('addr'), "dataIndex": "addr", "width": 200, "align":"center", "caption":"addr", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('telephone'), "dataIndex": "telNo", "width": 100, "align":"center", "caption":"telephone", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('businessFax'), "dataIndex": "faxNo", "width": 100, "align":"center", "caption":"businessFax", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('hold'), "dataIndex": "holdChk",  "width": 100, "align":"center", "caption":"hold", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('accountHold'), "dataIndex": "accountHold", "width": 100, "align":"center", "caption":"accountHold", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('contactPerson'), "dataIndex": "representative", "width": 100, "align":"center", "caption":"contactPerson", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('taxCd'), "dataIndex": "taxCd", "width": 100, "align":"center", "caption":"taxCd", "style" : "text-align:center", "filter": "string"}
				
			]
		},
		{
			"key": "CompanyShippingLine",
			"items": [ 	
				{ "header": ViewUtil.getLabel('companyCode'), "dataIndex": "agencyCode", "width": 150, "align":"center", "caption":"companyCode", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('companyType'), "dataIndex": "agencyType", "width": 150, "align":"center", "caption":"companyType", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('shpCode'), "dataIndex": "companyCode", "width": 150, "align":"center", "caption":"shpCode", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('shpType'), "dataIndex": "ptnrType", "width": 150, "align":"center", "caption":"shpType", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('shpName'), "dataIndex": "shpNm", "flex": 1, "align":"left", "caption":"shpName", "style" : "text-align:center", "filter": "string"},
			]
		},
		{
			"key": "CompanyRegisterAccountNo",
			"items": [ 	
				{ "header": ViewUtil.getLabel('accountNo'), "dataIndex": "accNo", "width": 100, "align":"center", "caption":"companyCode", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('paymentType'), "dataIndex": "ptnrType", "width": 100, "align":"center", "caption":"companyType", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('paymentTerm'), "dataIndex": "paymentTerm", "width": 100, "align":"center", "caption":"shpCode", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('terminal'), "dataIndex": "tmnl", "width": 100, "align":"center", "caption":"shpType", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('suspendAccount'), "dataIndex": "suspendChk", "flex": 1, "align":"center", "caption":"shpName", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('rentalAccount'), "dataIndex": "rentalChk", "flex": 1, "align":"center", "caption":"shpName", "style" : "text-align:center", "filter": "string"},
			]
		},
		{
			"key": "CompanyRegisterFileUpload",
			"items": [ 	
				{ "header": ViewUtil.getLabel('fileName'), "dataIndex": "fileName", "flex": 1, "align":"left", "caption":"fileName", "reference": "refFileName", "filter": "string"},
				{ "header": ViewUtil.getLabel('fileSize'), "dataIndex": "fileSize", "xtype":"numbercolumn","format":"0,000","width": 100, "align":"center", "caption":"fileSize", "style" : "text-align:center", "reference": "reffileSize", "filter": "string"},
			]
		},
		{
			"key": "AuthorityGroup",
			"items": [ 	
				{ "header": ViewUtil.getLabel('grpCd'), "dataIndex": "authGrp", "reference": "refColPgmId", "width": 150, "align":"center", "caption":"grpCd", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('grpNm'),"reference": "refColGrpNm", "dataIndex": "authGrpNm", "width": 150, "align":"center", "caption":"grpNm", "style" : "text-align:center", "filter": "string",
					"editor": {
						"xtype": "textfield",
						"maxLength": "50",
						"maskRe": /[^$]/,
						"allowBlank":false
					}
				},
				{ "header": ViewUtil.getLabel('usage'), "dataIndex": "usage", "width": 120, "align":"center", "caption":"usage", "style" : "text-align:center",  "filter": "string",
					"editor": {
						"xtype": "combo",
						"bind": {
							"store": "{yesNoCombo}"
						},
						"valueField": "code",
						"displayField": "codeName",
						"queryMode": "local",
						"allowBlank": false,
						"editable": false,
						"labelWidth": "130",
						"width": "300"
					}
				},
				{ "header": ViewUtil.getLabel('grant'), "dataIndex": "grantYn", "width": 120, "align":"center", "caption":"grant", "style" : "text-align:center", "filter": "string",
					"editor": {
						"xtype": "combo",
						"bind": {
							"store": "{yesNoCombo}"
						},
						"valueField": "code",
						"displayField": "codeName",
						"queryMode": "local",
						"editable": false,
						"labelWidth": "130",
						"width": "300",
						"allowBlank": false,
					}
				},
				{ "header": ViewUtil.getLabel('grpLevel'), "dataIndex": "grpLevel", "width": 120, "align":"center", "caption":"grpLevel", "style" : "text-align:center", "filter": "string",}
			]
		},
		{
			"key": "AuthorityGroupUserList",
			"items": [ 	
				{ "header": ViewUtil.getLabel('userId'), "dataIndex": "userId", "width": 180, "align":"center", "caption":"userId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('userName'), "dataIndex": "userNm", "width": 150, "align":"center", "caption":"userName", "style" : "text-align:center", "filter": "string"},
				/* { "header": ViewUtil.getLabel('userLevel'), "dataIndex": "userLevel", "width": 220, "align":"center", "caption":"userLevel", "style" : "text-align:center",  "filter": "string"}, */
				{ "header": ViewUtil.getLabel('userTerminal'), "dataIndex": "tmnlCd", "width": 220, "align":"center", "caption":"userTerminal", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('updDt'), "dataIndex": "updDt", "width": 250, "align":"center", "caption":"updDt", "style" : "text-align:center", "filter": "string"},
			]
		},
		{
			"key": "ProgramApplyGroup",
			"items": [ 	
				{ "header": ViewUtil.getLabel('programApplyGrpCd'), "dataIndex": "authGrp", "width": 120, "align":"center", "caption":"programApplyGrpCd", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('groupNm'), "dataIndex": "authGrpNm", "width": 400, "align":"center", "caption":"groupNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('programApplyTmplType'), "dataIndex": "grpTypeNm", "width": 400, "align":"center", "caption":"programApplyTmplType", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('userTerminal'), "dataIndex": "usage", "width": 120, "align":"center", "caption":"userTerminal", "style" : "text-align:center",  "filter": "string"},
			]
		},
		{
			"key": "ProgramApplyList",
			"items": [ 	
				{ "header": ViewUtil.getLabel('programApplyAuthGrp'), "dataIndex": "authGrp", "width": 120, "align":"center", "caption":"programApplyAuthGrp", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('programApplyUserId'), "dataIndex": "userId", "width": 120, "align":"center", "caption":"programApplyUserId", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('programApplyPGMID'), "dataIndex": "pgmId", "width": 120, "align":"center", "caption":"programApplyPGMID", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('programApplyPGMTitle'), "dataIndex": "pgmTitle", "width": 500, "align":"center", "caption":"programApplyPGMTitle", "style" : "text-align:center",  "filter": "string"},
				{ "xtype": "checkcolumn", "header": ViewUtil.getLabel('programApplyUse'), "dataIndex": "useYn", "width": 70, "align":"center", "caption":"programApplyUse", "style" : "text-align:center",  "filter": "string", "editable": true},
			]
		},
		{
			"key": "MenuRegisterList",
			"items": [
				{ "header": ViewUtil.getLabel('programId'), "dataIndex": "pgmId", "width": 120, "align":"center", "caption":"pgmId", "reference": "refProgramId", "style" : "text-align:center",  "filter": "string",
				   "editor": {
						"xtype": "textfield",
						"maxLength": "20",
						"maskRe": /[^$]/, 
						"allowBlank": false
					}
				
				},
				{ "header": ViewUtil.getLabel('programNm'), "dataIndex": "pgmNm", "width": 200, "align":"center", "caption":"pgmNm", "style" : "text-align:center", "filter": "string",
			      "editor": {
						"xtype": "textfield",
						"maxLength": "50",
						"maskRe": /[^$]/, 
						"allowBlank": false
					}
				},
				{ "header": ViewUtil.getLabel('aClass'), "dataIndex": "laClsf", "width": 70, "align":"center", "caption":"laClsf", "style" : "text-align:center", "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "3",
						"maskRe": /[0-9.]/,
						"allowBlank": false
					}
				},
				{ "header": ViewUtil.getLabel('bClass'), "dataIndex": "midClsf", "width": 70, "align":"center", "caption":"midClsf", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "3",
						"maskRe": /[0-9.]/,
						"allowBlank": false
					}
				},
				{ "header": ViewUtil.getLabel('cClass'), "dataIndex": "smClsf", "width": 70, "align":"center", "caption":"smClsf", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "1",
						"maskRe": /[0-9.]/,
						"allowBlank": false
					}
				},
				/* { "header": ViewUtil.getLabel('menuClsf'), "dataIndex": "menuClsf", "width": 90, "align":"center", "caption":"menuClsf", "reference": "refColMenuClsf", "style" : "text-align:center",  "filter": "string",
					"editor": {
						"xtype": "textfield",
						"maxLength": "1",
						"maskRe": /[0-9.]/, 
						"allowBlank": false,
						"readOnly": true
					}
				}, */
				 { "header": ViewUtil.getLabel('upperMenuId'), "dataIndex": "upperMenuId", "width": 180, "align":"center", "caption":"upperMenuId", "style" : "text-align:center", "filter": "string",
			      "editor": {
						"xtype": "textfield",
						"maxLength": "20",
						"maskRe": /[^$]/, 
						"allowBlank": true
					}
				}, 
				/* { "header": ViewUtil.getLabel('urlQueryString'), "dataIndex": "pgmPath", "width": 250, "align":"center", "caption":"pgmPath", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "200",
						"maskRe": /[^$]/
					}
				},*/
				{ "header": ViewUtil.getLabel('useyn'), "dataIndex": "pgmUseYn", "width": 70, "align":"center", "caption":"pgmUseYn", "style" : "text-align:center",  "filter": "string",
				  "editor":{
				    
							"xtype": "combo",
							"bind": {
								"store":"{yesNoCombo}",
							},
							"valueField": "code",
							"displayField": "codeName",
							"queryMode": "local",
							"allowBlank": false,
						}
				},
				{ "header": ViewUtil.getLabel('scrnPathAddr'), "dataIndex": "scrnPathAddr", "width": 200, "align":"center", "caption":"scrnPathAddr", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "1000"
					}
				},
				{ "header": ViewUtil.getLabel('scrnIcn'), "dataIndex": "scrnIcnDefCd", "width": 200, "align":"center", "caption":"scrnIcnDefCdv", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "200"
				  }
				},
				/* { "header": ViewUtil.getLabel('secretCd'), "dataIndex": "secretCd", "width": 170, "align":"center", "caption":"secretCd", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "8",
						"maskRe": /[^$]/
					}
				}, */
				{ "header": ViewUtil.getLabel('remark'), "dataIndex": "rmk", "width": 170, "align":"center", "caption":"rmk", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "200",
						"maskRe": /[^$]/
					}
				},
				/* { "header": ViewUtil.getLabel('width'), "dataIndex": "width", "width": 170, "align":"center", "caption":"width", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "3",
						"maskRe": /[0-9.]/
					}
				},
				{ "header": ViewUtil.getLabel('height'), "dataIndex": "height", "width": 170, "align":"center", "caption":"height", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "3",
						"maskRe": /[0-9.]/
					}
				}, 
				{ "header": ViewUtil.getLabel('menuType'), "dataIndex": "menuType", "width": 170, "align":"center", "caption":"menuType", "style" : "text-align:center",  "filter": "string",
				  "editor": {
						"xtype": "textfield",
						"maxLength": "1",
						"maskRe": /[^$]/
					}
				},*/
			]
		},
		{
			"key": "AccessAuthorityGroup",
			"items": [ 	
				{ "header": ViewUtil.getLabel('groupCd'), "dataIndex": "authGrp", "width": 120, "align":"center", "caption":"authGrp", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('groupName'), "dataIndex": "authGrpNm", "width": 200, "align":"center", "caption":"authGrpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('templateTp'), "dataIndex": "grpTpNm", "width": 200, "align":"center", "caption":"grpTpNm", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('usage'), "dataIndex": "usage", "width": 70, "align":"center", "caption":"usage", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('modify'), "dataIndex": "modify", "width": 70, "xtype": "actioncolumn","align":"center", "caption":"modify", "style" : "text-align:center",  "filter": "string",
				  "items": [{
						"iconCls": "x-fa fa-edit",
						"tooltip": "Modify",
						"handler": "onUpdate",
						"scope": "controller"
					}]
				},
				{ "header": ViewUtil.getLabel('delete'), "dataIndex": "delete", "width": 70, "xtype" : "actioncolumn", "align":"center", "caption":"", "style" : "text-align:center",  "filter": "string",
				  "items": [{
						"iconCls": "x-fa fa-remove",
						"tooltip": "Delete",
						"handler": "onRemove",
						"scope": "controller"
					}]
				}
			]
		},
		{
		
			"key": "AccessAuthorityUserList",
			"items": [ 	
				{ "header": ViewUtil.getLabel('authGrp'), "dataIndex": "authGrp", "width": 80, "align":"center", "caption":"authGrp", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('authGrpNm'), "dataIndex": "authGrpNm", "width": 150, "align":"center", "caption":"authGrpNm", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('ptnrCode'), "dataIndex": "authPtnrCode", "width": 80, "align":"center", "caption":"authPtnrCode", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('ptnrType'), "dataIndex": "authPtnrType", "width": 200, "align":"center", "caption":"authPtnrType", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('ptnrNm'), "dataIndex": "authPtnrNm", "width": 250, "align":"center", "caption":"authPtnrNm", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('adminUserId'), "dataIndex": "adminUserId", "width": 100, "align":"center", "caption":"adminUserId", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('authUserId'), "dataIndex": "authUserId", "width": 100, "align":"center", "caption":"authUserId", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('userNm'), "dataIndex": "authUserNm", "width": 150, "align":"center", "caption":"authUserNm", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('userType'), "dataIndex": "authUserTypeNm", "width": 90, "align":"center", "caption":"authUserTypeNm", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('userLevel'), "dataIndex": "authUserLevelNm", "width": 120, "align":"center", "caption":"authUserLevelNm", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('accessRegistry'), "dataIndex": "accessCnt", "width": 100, "align":"center", "caption":"accessCnt", "style" : "text-align:center",  "filter": "string"}
			]
		
		},
		{
			"key": "AccessAuthorityAuth",
			"items": [ 	
				/* { "header": ViewUtil.getLabel('authority'), "dataIndex": "authGrp", "width": 100, "align":"center", "caption":"authGrp", "style" : "text-align:center", "filter": "string"}, */
				/* { "header": ViewUtil.getLabel('authUserId'), "dataIndex": "authUserId", "width": 100, "align":"center", "caption":"authUserId", "style" : "text-align:center", "filter": "string"}, */
				{ "header": ViewUtil.getLabel('pgmId'), "dataIndex": "pgmId", "width": 150, "align":"center", "caption":"pgmId", "style" : "text-align:center",  "filter": "string"},
				{ "header": ViewUtil.getLabel('pgmTitle'), "dataIndex": "pgmNm", "width": 250, "align":"center", "caption":"pgmNm", "style" : "text-align:center",  "filter": "string"},
				{
					"header": ViewUtil.getLabel('programApplyUseYn'),
					"dataIndex": "cuseYn",
					"width": 70,
					"align": "center",
					"caption": "cuseYn",
					"xtype": 'checkcolumn',
					"style": "text-align:center",
					"filter": "string",
					"renderer": function(value, meta) {
							var record = meta.record;
							var cssPrefix = Ext.baseCSSPrefix,
                            cls = cssPrefix + 'grid-checkcolumn';
							if(record.get("cuseYn") == 'N'){
								meta.tdCls = 'blue-row';
								meta.tdCls += ' ' + this.disabledCls;
						}
							if(record.get('authUserId') != 'GROUP'){
								meta.tdCls += ' ' + this.disabledCls;
						}
							return (new Ext.grid.column.CheckColumn).renderer(value);
					}
				},
				{ "header": ViewUtil.getLabel('retrive'), "dataIndex": "cinquiry", "width": 70, "align":"center", "caption":"cinquiry", "xtype": 'checkcolumn',"style" : "text-align:center",  "filter": "string",
				  "renderer": function(value, meta) {
								var record = meta.record;
								var cssPrefix = Ext.baseCSSPrefix,
	                            cls = cssPrefix + 'grid-checkcolumn';
								if(record.get("pinquiry") == 'N'){
									meta.tdCls = 'blue-row';
									meta.tdCls += ' ' + this.disabledCls;
								}
	
								if(record.get('authUserId') != 'GROUP'){
									meta.tdCls += ' ' + this.disabledCls;
								}
								return (new Ext.grid.column.CheckColumn).renderer(value);
							}
				},
				{
					"header": ViewUtil.getLabel('clear'),
					"dataIndex": "cclear",
					"width": 90,
					"align": "center",
					"caption": "cclear",
					"xtype": 'checkcolumn',
					"style": "text-align:center",
					"filter": "string",
					"renderer": function(value, meta) {
							var record = meta.record;
							var cssPrefix = Ext.baseCSSPrefix,
                            cls = cssPrefix + 'grid-checkcolumn';
							if(record.get("pclear") == 'N'){
								meta.tdCls = 'blue-row';
								meta.tdCls += ' ' + this.disabledCls;
						}
							if(record.get('authUserId') != 'GROUP'){
								meta.tdCls += ' ' + this.disabledCls;
						}
							return (new Ext.grid.column.CheckColumn).renderer(value);
					}
				},
				{ "header": ViewUtil.getLabel('create'), "dataIndex": "ccreate", "width": 90, "align":"center", "caption":"ccreate", "xtype": 'checkcolumn',"style" : "text-align:center",  "filter": "string",
				  "renderer": function(value, meta) {
							var record = meta.record;
							var cssPrefix = Ext.baseCSSPrefix,
                            cls = cssPrefix + 'grid-checkcolumn';
							if(record.get("pcreate") == 'N'){
								meta.tdCls = 'blue-row';
								meta.tdCls += ' ' + this.disabledCls;
							}
							if(record.get('authUserId') != 'GROUP'){
								meta.tdCls += ' ' + this.disabledCls;
							}
							return (new Ext.grid.column.CheckColumn).renderer(value);
						}
				},
				{ "header": ViewUtil.getLabel('save'), "dataIndex": "csave", "width": 90, "align":"center", "caption":"csave", "xtype": 'checkcolumn',"style" : "text-align:center",  "filter": "string",
				  "renderer": function(value, meta) {
							var record = meta.record;
							var cssPrefix = Ext.baseCSSPrefix,
                            cls = cssPrefix + 'grid-checkcolumn';
							if(record.get("psave") == 'N'){
								meta.tdCls = 'blue-row';
								meta.tdCls += ' ' + this.disabledCls;
							}
							if(record.get('authUserId') != 'GROUP'){
								meta.tdCls += ' ' + this.disabledCls;
							}
							return (new Ext.grid.column.CheckColumn).renderer(value);
					}
				},
				{ "header": ViewUtil.getLabel('delete'), "dataIndex": "cdelete", "width": 90, "align":"center", "caption":"cdelete", "xtype": 'checkcolumn',"style" : "text-align:center",  "filter": "string",
				  "renderer": function(value, meta) {
							var record = meta.record;
							var cssPrefix = Ext.baseCSSPrefix,
                            cls = cssPrefix + 'grid-checkcolumn';
							if(record.get("pdelete") == 'N'){
								meta.tdCls = 'blue-row';
								meta.tdCls += ' ' + this.disabledCls;
							}
							if(record.get('authUserId') != 'GROUP'){
								meta.tdCls += ' ' + this.disabledCls;
							}
							return (new Ext.grid.column.CheckColumn).renderer(value);
					}
				},
				{ "header": ViewUtil.getLabel('download'), "dataIndex": "cdownload", "width": 90, "align":"center", "caption":"cdownload", "xtype": 'checkcolumn',"style" : "text-align:center",  "filter": "string",
				  "renderer": function(value, meta) {
							var record = meta.record;
							var cssPrefix = Ext.baseCSSPrefix,
                            cls = cssPrefix + 'grid-checkcolumn';
							if(record.get("pdownload") == 'N'){
								meta.tdCls = 'blue-row';
								meta.tdCls += ' ' + this.disabledCls;
							}
							if(record.get('authUserId') != 'GROUP'){
								meta.tdCls += ' ' + this.disabledCls;
							}
							return (new Ext.grid.column.CheckColumn).renderer(value);
					}
				},
				{ "header": ViewUtil.getLabel('preview'), "dataIndex": "cpreview", "width": 90, "align":"center", "caption":"cpreview", "xtype": 'checkcolumn',"style" : "text-align:center",  "filter": "string",
				  "renderer": function(value, meta) {
							var record = meta.record;
							var cssPrefix = Ext.baseCSSPrefix,
                            cls = cssPrefix + 'grid-checkcolumn';
							if(record.get("ppreview") == 'N'){
								meta.tdCls = 'blue-row';
								meta.tdCls += ' ' + this.disabledCls;
							}
							if(record.get('authUserId') != 'GROUP'){
								meta.tdCls += ' ' + this.disabledCls;
							}
							return (new Ext.grid.column.CheckColumn).renderer(value);
					}
				},
				{ "header": ViewUtil.getLabel('print'), "dataIndex": "cprint", "width": 90, "align":"center", "caption":"cprint", "xtype": 'checkcolumn',"style" : "text-align:center",  "filter": "string",
				  "renderer": function(value, meta) {
							var record = meta.record;
							var cssPrefix = Ext.baseCSSPrefix,
                            cls = cssPrefix + 'grid-checkcolumn';
							if(record.get("pprint") == 'N'){
								meta.tdCls = 'blue-row';
								meta.tdCls += ' ' + this.disabledCls;
							}
							if(record.get('authUserId') != 'GROUP'){
								meta.tdCls += ' ' + this.disabledCls;
							}
							return (new Ext.grid.column.CheckColumn).renderer(value);
					}
				},
				{ "header": ViewUtil.getLabel('history'), "dataIndex": "chistory", "width": 90, "align":"center", "caption":"chistory", "xtype": 'checkcolumn',"style" : "text-align:center",  "filter": "string",
				  "renderer": function(value, meta) {
							var record = meta.record;
							var cssPrefix = Ext.baseCSSPrefix,
                            cls = cssPrefix + 'grid-checkcolumn';
							if(record.get("phistory") == 'N'){
								meta.tdCls = 'blue-row';
								meta.tdCls += ' ' + this.disabledCls;
							}
							if(record.get('authUserId') != 'GROUP'){
								meta.tdCls += ' ' + this.disabledCls;
							}    
							return (new Ext.grid.column.CheckColumn).renderer(value);
					}
				}
			]
		},{
		
			"key": "ProgramManager",
			"items": [ 	
				{ "header": ViewUtil.getLabel('programId'), "dataIndex": "pgmId", "width": 120, "align":"center", "caption":"pgmId", "reference":"refProgramId","style" : "text-align:center", "filter": "string",
				   "editor":{
							"xtype":'textfield',
							"fieldStyle": 'text-align:center',
					        "forceSelection" : true,
					        "allowBlank": false
					}
				},
				{ "header": ViewUtil.getLabel('programName'), "dataIndex": "pgmNm", "width": 200, "align":"center", "caption":"pgmNm", "reference":"refProgramNm", "style" : "text-align:center", "filter": "string",
				  "editor":{
							"xtype":'textfield',
							"fieldStyle": 'text-align:center',
					        "forceSelection" : true,
					        "allowBlank": false
					}
				},
				{ "header": ViewUtil.getLabel('programPath'), "dataIndex": "pgmPath", "width": 200, "align":"center", "caption":"pgmPath", "reference":"refProgramPath", "style" : "text-align:center", "filter": "string",
				  "editor":{
							"xtype":'textfield',
							"fieldStyle": 'text-align:center',
					        "forceSelection" : true,
					        "allowBlank": false
					}
				},
				{ "header": ViewUtil.getLabel('programManagerInquiry'), "dataIndex": "cInquiry", "width": 70, "align":"center", "caption":"cInquiry", "xtype":'checkcolumn',"reference":"refInquiry", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				 
				},
				{ "header": ViewUtil.getLabel('programManagerClear'), "dataIndex": "cClear", "width": 70, "align":"center", "caption":"cClear", "xtype":'checkcolumn',"reference":"refClear", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				},
				{ "header": ViewUtil.getLabel('programManagerCreate'), "dataIndex": "cCreate", "width": 70, "align":"center", "caption":"cCreate", "xtype":'checkcolumn',"reference":"refCreate", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				},
				{ "header": ViewUtil.getLabel('programManagerSave'), "dataIndex": "cSave", "width": 70, "align":"center", "caption":"cSave", "xtype":'checkcolumn',"reference":"refSave", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				},
				{ "header": ViewUtil.getLabel('programManagerDelete'), "dataIndex": "cDelete", "width": 70, "align":"center", "caption":"cDelete", "xtype":'checkcolumn',"reference":"refDelete", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				},
				{ "header": ViewUtil.getLabel('programManagerDownLoad'), "dataIndex": "cDownload", "width": 70, "align":"center", "caption":"cDownload", "xtype":'checkcolumn',"reference":"refDownLoad", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				},
				{ "header": ViewUtil.getLabel('programManagerPreview'), "dataIndex": "cPreview", "width": 70, "align":"center", "caption":"cPreview", "xtype":'checkcolumn',"reference":"refPreview", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				},
				{ "header": ViewUtil.getLabel('programManagerPrint'), "dataIndex": "cPrint", "width": 70, "align":"center", "caption":"cPrint", "xtype":'checkcolumn',"reference":"refPrint", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				},
				{ "header": ViewUtil.getLabel('programManagerHistory'), "dataIndex": "cHistory", "width": 70, "align":"center", "caption":"cHistory", "xtype":'checkcolumn',"reference":"refHistory", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				},
				{ "header": ViewUtil.getLabel('programManagerUse'), "dataIndex": "useYn", "width": 70, "align":"center", "caption":"useYn", "xtype":'checkcolumn',"reference":"refUse", "style" : "text-align:center", "filter": "string",
				  "listeners": {
							"beforecheckchange": "onBeforeCheckChange"
				  }
				},
				{ "header": ViewUtil.getLabel('programManagerRemark'), "dataIndex": "rmk", "width": 70, "align":"center", "caption":"rmk", "reference":"refRemark", "style" : "text-align:center", "filter": "string",
				  "editor":{
							"xtype":"textfield",
							"fieldStyle": 'text-align:center'
					}
				},
				{ "header": ViewUtil.getLabel('programManagerStartDate'), "dataIndex": "useStartDt", "width": 90, "align":"center", "caption":"useStartDt", "reference":"refStartDate", "style" : "text-align:center", "filter": "string",
				  "editor":{
						"xtype":"datefield",
						"maskRe": /[0-9]/,
						"altFormats": "dmY",
						"format": MOST.config.Locale.getShortDate(),
						"listeners": {
									"focusleave": 'onAutoFillDate',
			                    	"focusenter": 'onAutoSelect',
						}
					}
				},
				{ "header": ViewUtil.getLabel('programManagerEndDate'), "dataIndex": "useEndDt", "width": 90, "align":"center", "caption":"useEndDt", "reference":"refEndDate", "style" : "text-align:center", "filter": "string",
				  "editor":{
						"xtype":"datefield",
						"maskRe": /[0-9]/,
						"altFormats": "dmY",
						"format": MOST.config.Locale.getShortDate(),
						"listeners": {
									"focusleave": 'onAutoFillDate',
			                    	"focusenter": 'onAutoSelect',
						}
					}
				},
				{ "header": ViewUtil.getLabel('programManagerSystemCode'), "dataIndex": "sysCd", "width": 150, "align":"center", "caption":"sysCd", "reference":"refSystemCode", "renderer":"onCboSysCdRender","style" : "text-align:center", "filter": "string",
				  "editor":{
						"xtype": "combo",							
						"bind":{
							"store":"{systemCodeCombo}"
						 },
						"displayField":"sysCdNm",
						"valueField": "sysCd",
						"queryMode":"local",
						"allowBlank":false,
						"editable": true
					}
				}

			]
		
		},
		{
			"key": "MenuRegisterProgramMng",
			"items": [ 	
				{ "header": ViewUtil.getLabel('programId'), "dataIndex": "pgmId", "width": 120, "align":"center", "caption":"pgmId", "reference":"refProgramId","style" : "text-align:center", "filter": "string",
				   "editor":{
							"xtype":'textfield',
							"fieldStyle": 'text-align:center',
					        "forceSelection" : true,
					        "allowBlank": false
					},
					/* "bind":{
							"store":"{programInfoList}"
					} */
				},
				{ "header": ViewUtil.getLabel('programName'), "dataIndex": "pgmNm", "width": 200, "align":"center", "caption":"pgmNm", "reference":"refProgramNm", "style" : "text-align:center", "filter": "string",
				  "editor":{
							"xtype":'textfield',
							"fieldStyle": 'text-align:center',
					        "forceSelection" : true,
					        "allowBlank": false
					},
					/* "bind":{
							"store":"{programInfoList}"
					} */
				},
				{ "header": ViewUtil.getLabel('programPath'), "dataIndex": "pgmPath", "width": 200, "align":"center", "caption":"pgmPath", "reference":"refProgramPath", "style" : "text-align:center", "filter": "string",
				  "editor":{
							"xtype":'textfield',
							"fieldStyle": 'text-align:center',
					        "forceSelection" : true,
					        "allowBlank": false
					},
					/* "bind":{
							"store":"{programInfoList}"
					} */
				},
				{ "header": ViewUtil.getLabel('programManagerInquiry'), "dataIndex": "cInquiry", "width": 70, "align":"center", "caption":"cInquiry", "xtype":'checkcolumn',"reference":"refInquiry", "style" : "text-align:center", "filter": "string",

				},
				{ "header": ViewUtil.getLabel('programManagerClear'), "dataIndex": "cClear", "width": 70, "align":"center", "caption":"cClear", "xtype":'checkcolumn',"reference":"refClear", "style" : "text-align:center", "filter": "string",

				},
				{ "header": ViewUtil.getLabel('programManagerCreate'), "dataIndex": "cCreate", "width": 70, "align":"center", "caption":"cCreate", "xtype":'checkcolumn',"reference":"refCreate", "style" : "text-align:center", "filter": "string",

				},
				{ "header": ViewUtil.getLabel('programManagerSave'), "dataIndex": "cSave", "width": 70, "align":"center", "caption":"cSave", "xtype":'checkcolumn',"reference":"refSave", "style" : "text-align:center", "filter": "string",

				},
				{ "header": ViewUtil.getLabel('programManagerDelete'), "dataIndex": "cDelete", "width": 70, "align":"center", "caption":"cDelete", "xtype":'checkcolumn',"reference":"refDelete", "style" : "text-align:center", "filter": "string",

				},
				{ "header": ViewUtil.getLabel('programManagerDownLoad'), "dataIndex": "cDownload", "width": 70, "align":"center", "caption":"cDownload", "xtype":'checkcolumn',"reference":"refDownLoad", "style" : "text-align:center", "filter": "string",

				},
				{ "header": ViewUtil.getLabel('programManagerPreview'), "dataIndex": "cPreview", "width": 70, "align":"center", "caption":"cPreview", "xtype":'checkcolumn',"reference":"refPreview", "style" : "text-align:center", "filter": "string",

				},
				{ "header": ViewUtil.getLabel('programManagerPrint'), "dataIndex": "cPrint", "width": 70, "align":"center", "caption":"cPrint", "xtype":'checkcolumn',"reference":"refPrint", "style" : "text-align:center", "filter": "string",

				},
				{ "header": ViewUtil.getLabel('programManagerHistory'), "dataIndex": "cHistory", "width": 70, "align":"center", "caption":"cHistory", "xtype":'checkcolumn',"reference":"refHistory", "style" : "text-align:center", "filter": "string",

				},
				{ "header": ViewUtil.getLabel('programManagerUse'), "dataIndex": "useYn", "width": 70, "align":"center", "caption":"useYn", "xtype":'checkcolumn',"reference":"refUse", "style" : "text-align:center", "filter": "string",

				},
				/* { "header": ViewUtil.getLabel('programManagerRemark'), "dataIndex": "rmk", "width": 70, "align":"center", "caption":"rmk", "reference":"refRemark", "style" : "text-align:center", "filter": "string",
				  "editor":{
							"xtype":"textfield",
							"fieldStyle": 'text-align:center'
					}
				},
				{ "header": ViewUtil.getLabel('programManagerStartDate'), "dataIndex": "useStartDt", "width": 90, "align":"center", "caption":"useStartDt", "reference":"refStartDate", "style" : "text-align:center", "filter": "string",
				  "editor":{
						"xtype":"datefield",
						"maskRe": /[0-9]/,
						"altFormats": "dmY",
						"format": MOST.config.Locale.getShortDate(),
						"listeners": {
									"focusleave": 'onAutoFillDate',
			                    	"focusenter": 'onAutoSelect',
						}
					}
				},
				{ "header": ViewUtil.getLabel('programManagerEndDate'), "dataIndex": "useEndDt", "width": 90, "align":"center", "caption":"useEndDt", "reference":"refEndDate", "style" : "text-align:center", "filter": "string",
				  "editor":{
						"xtype":"datefield",
						"maskRe": /[0-9]/,
						"altFormats": "dmY",
						"format": MOST.config.Locale.getShortDate(),
						"listeners": {
									"focusleave": 'onAutoFillDate',
			                    	"focusenter": 'onAutoSelect',
						}
					}
				}, */
				/* { "header": ViewUtil.getLabel('programManagerSystemCode'), "dataIndex": "sysCd", "width": 150, "align":"center", "caption":"sysCd", "reference":"refSystemCode", "renderer":"onCboSysCdRender","style" : "text-align:center", "filter": "string",
				  "editor":{
						"xtype": "combo",							
						"bind":{
							"store":"{systemCodeCombo}"
						 },
						"displayField":"sysCdNm",
						"valueField": "sysCd",
						"queryMode":"local",
						"allowBlank":false,
						"editable": true
					}
				}*/
			]
		
		},{
			
			"key": "ParameterSettingListView",
			"items": [ 	
				{ "header": ViewUtil.getLabel('parameterCode'), "dataIndex": "code",   "width": 150, "align":"left", "caption":"parameterCode", "style" : "text-align:center", "reference": "refParametersettingParameterCode", "filter": "string", "locked": "true"},
				{ "header": ViewUtil.getLabel('category'), "dataIndex": "category",   "width": 100, "align":"center", "caption":"category", "style" : "text-align:center", "reference": "refParametersettingCategory"},
				{ "header": ViewUtil.getLabel('parameterCheck'), "dataIndex": "settingChk",   "width": 130, "align":"center", "caption":"parameterCheck", "style" : "text-align:center", "reference": "refParametersettingParameterCheck", "filter": "string",
					"editor":{
						"xtype": "combo",
						"bind": {
							"store": "{parametercheckCombo}"
						},
						"displayField": "code",
						"valueField": "code",
						"queryMode": "local"
					}
				},
				{ "header": ViewUtil.getLabel('parameterVal'), "dataIndex": "value",   "width": 150, "align":"left", "caption":"parameterVal", "style" : "text-align:center", "reference": "refParametersettingParameterVal", "filter": "string",
					"editor": {
						"xtype": "textfield",
						"maxLength": "50",
						"fieldStyle": "text-transform:uppercase",
						"enforceMaxLength": "true",
						"allowBlank": "true"
					}
				},				
				{ "header":  ViewUtil.getLabel("description"), "dataIndex": "description",   "flex": 1, "align":"left", "caption":"description", "style" : "text-align:center", "reference": "refParametersettingDescription", "filter": "string",
					"editor": {
						"xtype": "textfield",
						"maxLength": "100",
						"fieldStyle": "text-transform:uppercase",
						"enforceMaxLength": "true",
						"allowBlank": "true"
					}
				}
			]
		
		},
        {
			"key": "HandlingInOut",
			"items": [ 	
				{
					"header": ViewUtil.getLabel('handlingIOCategory'),				
					"dataIndex": "catgCd",
					"filter" : "string",
					"width": 70
				},{
					"header": ViewUtil.getLabel('jpvc'),
					"dataIndex": "vslCallId",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('vesselName'),
					"dataIndex": "vslNm",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('handlingInDt'),
					"xtype": "datecolumn",
        			"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "hdlInDate",
					"reference":"refColHdlInDt",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('handlingOutDt'),
        			"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "hdlOutDt",
					"reference":"refColHdlOutDt",
					"filter" : "string",
					"width": 150,
					"hidden":true
				},{
					"header": ViewUtil.getLabel('saShift'),
					"dataIndex": "shftNm",
					"filter" : "list",
					"width": 100
				},{
					"header": ViewUtil.getLabel('handlingIOWhStartDt'),
					"reference": "refWhStartDt",
					"dataIndex": "whStartDt",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('handlingIOInWhDtNo'),	
					"dataIndex": "inWhDtNo",
					"filter" : "string",
					"width": 150
				},{
					"header":ViewUtil.getLabel('masterBLNo'),
					"dataIndex": "mfDocId",
					"filter" : "string",
					"width": 150
				},
				{
					"header":ViewUtil.getLabel('whReconcilBLSN'),
					"dataIndex": "blSn",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('handlingIOGrDo'),
					"dataIndex": "grDo",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('sdoNo'),
					"dataIndex": "sdoNo",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('unitNo'),
					"dataIndex": "unitNo",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('cgTpCd'),
					"dataIndex": "cgTpNm",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('commodity'),
					"dataIndex": "cargo",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('WHType'),
					"dataIndex": "whTpCd",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('csgnee'),
					"dataIndex": "cnsneNm",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('lotNo'),
					"dataIndex": "lotNo",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('handlingIODelvStatus'),
					"dataIndex": "jobPurpNm",
					"filter" : "string",
					"width": 150
				},{ 
					"header": ViewUtil.getLabel('domesticCargo'), 
					"dataIndex": "domesticChk", 
					"reference": "refdomYn", 
					"filter": "string", 
					"width": 120
				},{
					"header": ViewUtil.getLabel('sAgent'),
					"reference": "refEstArrDate",
					"dataIndex": "shpgAgent",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('fwrAgnt'),
					//"reference": 'refFASubmittedDate',
					"dataIndex": "fwrAgnt",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('cngShp'),
					//"reference": "refFAName",
					"dataIndex": "shpCng",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('gatePassNo'),
					//"reference": "refFAName",
					"dataIndex": "grGp",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('handlingIOPkg'),
					//"reference": "refFAName",
					"dataIndex": "pkgTpCd",
					"filter" : "string",
					"width": 100
				},{
					"header":ViewUtil.getLabel('handlingIOWh'),
					//"reference": "refFAName",
					"dataIndex": "currLocId",
					"filter" : "string",
					"width": 150
				},{
					"header": ViewUtil.getLabel('handlingIODocMt'),
					//"reference": "refFAName",
					"dataIndex": "docMt",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('handlingIODocM3'),
					//"reference": "refFAName",
					"dataIndex": "docM3",
					"filter" : "string",
					"width": 100
				},{
					"header":ViewUtil.getLabel('handlingIODocQty'),
					//"reference": "refFAName",
					"dataIndex": "docQty",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('handlingIOScaleAmt'),
					//"reference": "refFAName",
					"dataIndex": "scaleAmt",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('mT'),
					//"reference": "refFAName",
					"dataIndex": "wgt",
					"filter" : "string",
					"width": 60
				},{
					"header": ViewUtil.getLabel('m3'),
					//"reference": "refFAName",
					"dataIndex": "msrmt",
					"filter" : "string",
					"width": 60
				},{
					"header": ViewUtil.getLabel('qty'),
					//"reference": "refFAName",
					"dataIndex": "pkgQty",
					"filter" : "string",
					"width": 60
				},{
					"header": ViewUtil.getLabel('rhdlMode'),
					//"reference": "refFAName",
					"dataIndex": "lblPkgQty",
					"filter" : "string",
					"width": 100
				},{
					"header":ViewUtil.getLabel('dmgYn'),
					//"reference": "refFAName",
					"dataIndex": "dmgYn",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('shuYn'),
					//"reference": "refFAName",
					"dataIndex": "shuYn",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('dg'),
					//"reference": "refFAName",
					"dataIndex": "dgYn",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('dgStatus'),
					//"reference": "refFAName",
					"dataIndex": "dgStatus",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('rcCoNm'),
					//"reference": "refFAName",
					"dataIndex": "rcYn",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('handlingIOSpCond'),
					//"reference": "refFAName",
					"dataIndex": "spYn",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('handlingIOLoadTime'),
					"reference": "refLoadTime",
					"dataIndex": "loadStDt",
					"filter" : "string",
					"width": 100
				},{
					"header": ViewUtil.getLabel('handlingIODsDt'),
					"reference": "refDisTime",
					"dataIndex": "disStDt",
					"filter" : "string",
					"width": 80,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('lorryNo'),
					//"reference": "refFAName",
					"dataIndex": "lorryNo",
					"filter" : "string",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('chassisNo'),
					//"reference": "refFAName",
					"dataIndex": "chassisNo",
					"filter" : "string",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('firstWgt'),
					//"reference": "refFAName",
					"dataIndex": "firstWgt",
					"filter" : "string",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('firstWgtTime'),
					"dataIndex": "firstWgtDt",
					"filter" : "string",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('secondWgt'),
					//"reference": "refFAName",
					"dataIndex": "secondWgt",
					"filter" : "string",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('secondWgtTime'),
					"dataIndex": "secondWgtDt",
					"filter" : "string",
					"width": 80
				}
			]
		},
        {
            "key": "MovementList",
			"items": [ 	
                {
						"header":ViewUtil.getLabel('catgNm'),
						"dataIndex": "catgNm",
						"filter": "string",
						"width": 100
					},
					{
						"header":ViewUtil.getLabel('bl_sn'),
						"dataIndex": "blSn",
						"filter": "string",
						"width": 150
					},
					{
						"header":ViewUtil.getLabel('shpgAgent'),
						"dataIndex": "shipgAgnt",
						"filter": "string",
						"width": 100
					},
					{
						"header":ViewUtil.getLabel('fwrAgnt'),
						"dataIndex": "fwrAgnt",
						"filter": "string",
						"width": 100
					},
					{
						"header":ViewUtil.getLabel('shpCng'),
						"dataIndex": "shpCng",
						"width": 100
					},
					{
						"header":ViewUtil.getLabel('cargo'),
						"dataIndex": "cargo",
						"filter": "string",
						"width": 100				
					},
					{
						"header":ViewUtil.getLabel('mt'),
						"dataIndex": "msrmt",
						"filter": "string",
						"width": 80
					},
					{
						"header":ViewUtil.getLabel('m3'),
						"dataIndex": "wgt",
						"filter": "string",
						"width": 80
					},
					{
						"header":ViewUtil.getLabel('qty'),
						"dataIndex": "pkgQty",
						"filter": "string",
						"width": 80
					},
					{
						"header":ViewUtil.getLabel('cgNoItem'),
						"dataIndex": "grItem",
						"filter": "string",
						"width": 80
					},
					{
						"header":ViewUtil.getLabel('type'),
						"dataIndex": "mvTp",
						"filter": "string",
						"width": 80
					},
					{
						"header":ViewUtil.getLabel('from'),
						"dataIndex": "fmLocId",
						"filter": "string",
						"width": 100
					},
					{
						"header":ViewUtil.getLabel('to'),
						"dataIndex": "toLocId",
						"filter": "string",
						"width": 100
					},
					{
						"header":ViewUtil.getLabel('movementDate'),
						"dataIndex": "mvDt",
						"filter": "string",
						"width": 220
					}
            ]
        },
        {
            "key": "ExportManifest",
			"items": [ 	
				{
					"xtype": "rownumberer",
					"width" : 50,
					"align" : "center"

				},
				{
					"header": ViewUtil.getLabel('ALSnNo'),
					"dataIndex": "shipgNoteNo",            		
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('delvTpCd'),
					"dataIndex": "delvTpCd",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('oprsModeNm'),
					"dataIndex": "tsptTpCd",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoType'),
					"dataIndex": "cgTpCd",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dOCMT'),
					"dataIndex": "totInWgt",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dOCM3'),
					"dataIndex": "totInMsrmt",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dOCQty'),
					"dataIndex": "pkgQty",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('scaleAmt'),
					"dataIndex": "scaleAmt",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('totInWgt'),
					"dataIndex": "wgt",            		
					"width": 100,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'color: red';
						return value;
					}
				},
				{
					"header": ViewUtil.getLabel('totInMsrmt'),
					"dataIndex": "msrmt",            		
					"width": 100,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'color: red';
						return value;
					}
				},
				{
					"header": ViewUtil.getLabel('totInPkgQty'),
					"dataIndex": "cumulative",            		
					"width": 100,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'color: red';
						return value;
					}
				},
				{
					"header": ViewUtil.getLabel('balMt'),
					"dataIndex": "balMt",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('balM3'),
					"dataIndex": "balM3",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('balQty'),
					"dataIndex": "balQty",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('finalYn'),
					"dataIndex": "finalYn",            		
					"width": 80,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.finalYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('loadingDmgYn'),
					"dataIndex": "dmgYn",            		
					"width": 80,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.dmgYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('shuYn'),
					"dataIndex": "shuYn",            		
					"width": 80,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.shuYn === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('fAgent'),
					"dataIndex": "fwrAgnt",            		
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('consignee'),
					"dataIndex": "cnsne",            		
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('commodity'),
					"dataIndex": "descr",            		
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('packageType'),
					"dataIndex": "pkgTpCd",            		
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dgCargo'),
					"dataIndex": "imdgUnno",            		
					"width": 80,
					"items": [{
						"getClass": function (value, meta, record) {
							return (record.data.imdgUnno === 'Y') ? 'x-fa fa-check green' : '';
						}
					}]
				},
				{
					"header": ViewUtil.getLabel('dgStatus'),
					"dataIndex": "dgApprStat",            		
					"width": 80
				}
			]
        },

		/************** Billing *****************/
		{
		
			"key": "CostCenter",
			"items": [ 	
 				{ "header" : ViewUtil.getLabel('code'), "dataIndex": "codeCostCenter", "width": 50, "align":"center", "caption":"codeCostCenter", "style" : "text-align:center", "reference": "refCostCenterCd", "maxLength":"10","filter": "string", 
 				  "editor" : {
 							"xtype": "textfield", 
 							"allowBlank": false, 
 							"maxLength": "3", 
 							"enforceMaxLength" : true, 
 							"allowOnlyWhitespace": false, 
 							"listeners":{ 
 								"change": 'onUpperCase'
 							}
 						} 
			
 				}, 
				{ "header": ViewUtil.getLabel('financialCode'), "dataIndex": "codeFinancial", "width": 120, "align":"center", "caption":"codeFinancial", "style" : "text-align:center", "reference": "refFinancialCode", "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"maxLength": "10",
							"enforceMaxLength": true
						}
				},
				{ "header": ViewUtil.getLabel('description'), "dataIndex": "codeDescription", "width": 200, "align":"center", "caption":"lcdDesc", "style" : "text-align:center", "reference": "refDescr", "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"maxLength":"200",
							"enforceMaxLength" : true
						}
				},
				{ "header": ViewUtil.getLabel('SBU'), "dataIndex": "codeSBU", "width": 120, "align":"center", "caption":"codeSBU", "style" : "text-align:center", "reference": "refSBUcode", "renderer":"onGridComboRenderer","filter": "string",
				  "editor":{  
							"xtype": "combo",
							"bind": {
								"store":"{SBUCombo}",
							},
							"valueField": "scd",
							"displayField": "scdNm",
							"queryMode": "local",
							"enforceMaxLength" : true,
							"allowBlank": false,
							"allowOnlyWhitespace": false,
							"forceSelection":true
						}
				},
				{ "header": ViewUtil.getLabel('cargoTypeCd'), "dataIndex": "typeCargo", "width": 120, "align":"center", "caption":"typeCargo", "style" : "text-align:center", "reference": "refTypeCargo",  "renderer":"onGridComboRenderer","filter": "string",
				  "editor":{  
							"xtype": "combo",
							"bind": {
								"store":"{cargoTypeCombo}",
							},
							"valueField": "scd",
							"displayField": "scdNm",
							"queryMode": "local",
							"enforceMaxLength" : true,
							"forceSelection":true
						}
				},
				{ "header": ViewUtil.getLabel('deliveryCd'), "dataIndex": "typeDelivery", "width": 150, "align":"center", "caption":"useYn", "style" : "text-align:center", "reference": "refuseYn", "renderer":"onGridComboRenderer","filter": "string",
				  "editor":{  
							"xtype": "combo",
							"bind": {
								"store":"{deliveryCombo}",
							},
							"valueField": "scd",
							"displayField": "scdNm",
							"queryMode": "local",
							"enforceMaxLength" : true,
							"forceSelection":true
						}
				},
				{ "header": ViewUtil.getLabel('staffCode'), "dataIndex": "userId", "width": 100, "align":"center", "caption":"userId", "style" : "text-align:center", "reference": "refupdatedBy", "filter": "string"},
				{ "header": ViewUtil.getLabel('updateTime'), "dataIndex": "updateTimeField", "width": 120, "align":"center", "caption":"updateTimeField", "style" : "text-align:center", "reference": "refupdatedDate", "filter": "string"}
				
			]
		},
		{
		
			"key": "InvoiceUnit",
			"items": [ 	
 				{ "header" : ViewUtil.getLabel('type'), "dataIndex": "unitTpCd", "width": 100, "align":"center", "caption":"unitTpCd", "style" : "text-align:center", "reference": "refUnitTpCdCombo", "filter": "string", 
 				  "editor" : {  
							"xtype": "combo",
							"bind": {
								"store":"{invoiceUnitTypeCombo}",
							},
							"valueField": "scd",
							"displayField": "scd",
							"queryMode": "local",
							"enforceMaxLength" : true,
							"allowBlank": false,
							"allowOnlyWhitespace": false,
							"forceSelection":true
					 	} 
			
 				}, 
				{ "header": ViewUtil.getLabel('code'), "dataIndex": "unitCd", "width": 200, "align":"center", "caption":"unitCd", "style" : "text-align:center", "reference": "refUnitCd", "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"maxLength": "10",
							"enforceMaxLength": true,
							"allowBlank": false,
							"allowOnlyWhitespace": false,
							"listeners": {
								"change" : 'onUpperCase'
							}
						}
				},
				{ "header": ViewUtil.getLabel('description'), "dataIndex": "descr", "width": 120, "align":"center", "caption":"descr", "style" : "text-align:center", "reference": "refDescr", "filter": "string",
				  "editor":{  
							"xtype": "textfield",
							"maxLength": "100",
							"enforceMaxLength" : true
						}
				},
				{ "header": ViewUtil.getLabel('staffCode'), "dataIndex": "userId", "width": 100, "align":"center", "caption":"userId", "style" : "text-align:center", "reference": "refupdatedBy", "filter": "string"},
				{ "header": ViewUtil.getLabel('updateTime'), "dataIndex": "updateTimeField", "width": 120, "align":"center", "caption":"updateTimeField", "style" : "text-align:center", "reference": "refupdatedDate", "filter": "string"}
				
			]
		},
		{
		
			"key": "DefineHolidayCode",
			"items": [ 	
 				{ "header" : ViewUtil.getLabel('day'), "dataIndex": "strHlDayYmd", "width": 80, "align":"center", "caption":"strHlDayYmd", "style" : "text-align:center", "reference": "refDay", "filter": "string", 
 				  "editor" : {
 							"xtype": "numberfield", 
 							"minValue": "1", 
 							"maxValue": "31", 
 							"enforceMaxLength" : true, 
 							"allowBlank": false,
 							"allowOnlyWhitespace": false
 						} 
			
 				}, 
				{ "header": ViewUtil.getLabel('month'), "dataIndex": "strHlMonthYmd", "width": 80, "align":"center", "caption":"strHlMonthYmd", "style" : "text-align:center", "reference": "refMonth", "filter": "string",
				  "editor": {
 							"xtype": "numberfield", 
 							"minValue": "1", 
 							"maxValue": "12", 
 							"enforceMaxLength" : true, 
 							"allowBlank": false,
 							"allowOnlyWhitespace": false
						}
				},
				{ "header": ViewUtil.getLabel('holiday'), "dataIndex": "strFormatHlDayYmd", "width": 200, "align":"center", "caption":"strFormatHlDayYmd", "style" : "text-align:center", "reference": "refHoliday", "filter": "string"},
				{ "header": ViewUtil.getLabel('code'), "dataIndex": "strHlDayCd", "width": 200, "align":"center", "caption":"strHlDayCd", "style" : "text-align:center", "reference": "refHolidayCd", "filter": "string",
				  "editor":{
							"xtype": "textfield",
							"maxLength":"3",
 							"enforceMaxLength" : true, 
 							"allowBlank": false,
 							"allowOnlyWhitespace": false,
							"listeners": {
								"change" : 'onUpperCase'
							}
						}
				},
				{ "header": ViewUtil.getLabel('description'), "dataIndex": "strDescr", "width": 200, "align":"center", "caption":"strDescr", "style" : "text-align:center", "reference": "refDescr", "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"maxLength":"100",
							"enforceMaxLength" : true
						}
				},
				{ "header": ViewUtil.getLabel('staffCode'), "dataIndex": "userId", "width": 100, "align":"center", "caption":"userId", "style" : "text-align:center", "reference": "refStaffcode", "filter": "string"},
				{ "header": ViewUtil.getLabel('updateTime'), "dataIndex": "updateTimeField", "width": 120, "align":"center", "caption":"updateTimeField", "style" : "text-align:center", "reference": "refUpdateTime", "filter": "string", 
					"renderer": function(value) {
				        // Assuming 'value' is a Date object, format it as 'dd/mm/yyyy hh:mm'
				        if (value instanceof Date) {
				            const day = String(value.getDate()).padStart(2, '0');
				            const month = String(value.getMonth() + 1).padStart(2, '0');
				            const year = value.getFullYear();
				            const hours = String(value.getHours()).padStart(2, '0');
				            const minutes = String(value.getMinutes()).padStart(2, '0');
				            return `${day}/${month}/${year} ${hours}:${minutes}`;
				        }
				        return value; // Return the original value if it's not a Date
				    }
			    }
				
			]
		},
		{
		
			"key": "AnnualHoliday_Holiday",
			"items": [ 	
				{ "header": ViewUtil.getLabel('holiday'), "dataIndex": "strFormatHlDayYmd", "width": 50, "align":"center", "caption":"strFormatHlDayYmd", "style" : "text-align:center", "reference": "refHoliday", "filter": "string" , "flex": 1},
				{ "header": ViewUtil.getLabel('code'), "dataIndex": "strHlDayCd", "width": 50, "align":"center", "caption":"strHlDayCd", "style" : "text-align:center", "reference": "refHolidayCd", "filter": "string","hidden":true,
				  "editor":{
							"xtype": "textfield",
							"maxLength":"3",
 							"enforceMaxLength" : true, 
 							"allowBlank": false,
 							"allowOnlyWhitespace": false,
							"listeners": {
								"change" : 'onUpperCase'
							}
						}
						
				},
				{ "header": ViewUtil.getLabel('description'), "dataIndex": "strDescr", "width": 150, "align":"center", "caption":"strDescr", "style" : "text-align:center", "reference": "refDescr", "filter": "string", "flex": 1,
				  "editor": {
							"xtype": "textfield",
							"maxLength":"100",
							"enforceMaxLength" : true
						}
				}
				
			]
		},{
			"key": "AnnualHoliday",
			"items": [ 	
 				{ "header" : ViewUtil.getLabel('day'), "dataIndex": "strHlDay", "width": 50, "align":"center", "caption":"strHlDay", "style" : "text-align:center", "reference": "refDay", "filter": "string", 
 				  "renderer": function (value, metaData, record) {
					 return Ext.util.Format.number(value, '00');
				  },
 				  "editor" : {
 							"xtype": "numberfield", 
 							"minValue": "1", 
 							"maxValue": "31", 
 							"enforceMaxLength" : true, 
 							"allowBlank": false,
 							"allowOnlyWhitespace": false,
 							
 						} 
			
 				}, 
				{ "header": ViewUtil.getLabel('month'), "dataIndex": "strHlMonth", "width": 50, "align":"center", "caption":"strHlMonth", "style" : "text-align:center", "reference": "refMonth", "filter": "string",
				  "renderer": function (value, metaData, record) {
					 return Ext.util.Format.number(value, '00');
				  },
				  "editor": {
 							"xtype": "numberfield", 
 							"minValue": "1", 
 							"maxValue": "12", 
 							"enforceMaxLength" : true, 
 							"allowBlank": false,
 							"allowOnlyWhitespace": false
						}
				},
				{ "header": ViewUtil.getLabel('holiday'), "dataIndex": "strFormatHlDayYmd", "width": 100, "align":"center", "caption":"strFormatHlDayYmd", "style" : "text-align:center", "reference": "refHoliday", "filter": "string"},
				{ "header": ViewUtil.getLabel('code'), "dataIndex": "strHlDayCd", "width": 200, "align":"center", "caption":"strHlDayCd", "style" : "text-align:center", "reference": "refHolidayCd", "filter": "string"},
				{ "header": ViewUtil.getLabel('description'),  "dataIndex": "strDescr", "width": 200, "align":"center", "caption":"strDescr", "style" : "text-align:center", "reference": "refDescr", "filter": "string", "flex": 1},
				{ "header": ViewUtil.getLabel('staffCode'), "hidden": true,"dataIndex": "userId", "width": 100, "align":"center", "caption":"userId", "style" : "text-align:center", "reference": "refStaffcode", "filter": "string"},
				{ "header": ViewUtil.getLabel('updateTime'),  "hidden":true, "dataIndex": "updateTimeField", "width": 120, "align":"center", "caption":"updateTimeField", "style" : "text-align:center", "reference": "refUpdateTime", "filter": "string"}
			]
		},
		//CFG-005 Free Storage Days – Add All selection
		{
			"key": "FreeStorageDays",
			"items": [ 	
				{
					"header": ViewUtil.getLabel('ptnrCdStrgDays'),
					"dataIndex": "ptnrCd",
					"width": 150,
					"align": "center",
					"caption": "ptnrCd",
					"style": "text-align:center",
					"reference": "refPtnrCd",
					"filter": "string",
					"editor": {
						"xtype": "combobox",
						"store": ["ALL"],
						"queryMode": "local",
						"reference": "refPtnrCdGrid",
						"editable": false,
						"allowBlank": false,
						"triggersAction": "all",
						"triggers": {
							"search": {
		                        "cls": "fa-search",
		                        "scope": "controller",
		                        "handler": "onSearchPartnerPopup",
		                    }
						}
					}
				},
				{
					"header": ViewUtil.getLabel('opeClassCd'),
					"dataIndex": "opeClassCd",
					"width": 150,
					"align": "center",
					"caption": "opeClassCd",
					"style": "text-align:center",
					"reference": "refOpeClassCdComboGrid",
					"filter": "string",
					"renderer": "onCategoryRenderer",
					"editor": {
						"xtype": "combo",
						"bind": {
							"store": "{catergoryCombo}",
						},
						"valueField": "code",
						"displayField": "codeName",
						"queryMode": "local",
						"allowBlank": false
					},
				},
				{ "header": ViewUtil.getLabel('por'), "dataIndex": "por", "width": 150, "align":"center", "caption":"por", "style" : "text-align:center", "reference": "refPorCodedGrid", "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"reference": "refPorCdGrid",
							"maxLength":"100",
							"enforceMaxLength" : true,
							"editable": false,
        					"selectOnFocus":true,
        					"triggers": {
			                    "someField": {
			                        "cls": "fa-search",
			                        "scope": "controller",
			                        "handler": "onOpenCommonCodePopup"
			                    }
			                }
						}
				},
				{ "header": ViewUtil.getLabel('cgTpCd'), "dataIndex": "cgTpCd", "width": 150, "align":"center", "caption":"cgTpCd", "style" : "text-align:center", "reference": "refCgTpCd", "filter": "string",
				  "renderer":"onCargoTypeRenderer",
				  "editor": {
							"xtype": "combo",
							"bind": {
								"store":"{cargoTypeCombo}",
							},
							"valueField": "scd",
							"displayField": "scdNm",
							"queryMode": "local",
							"allowBlank":false,
							"enforceMaxLength" : true,
							"forceSelection":true
						}
				},
				{
					"header": ViewUtil.getLabel('cmdtCdF'),
					"dataIndex": "cmdtCd",
					"width": 150,
					"align": "center",
					"caption": "cmdtCd",
					"style": "text-align:center",
					"reference": "refCMDTField",
					"filter": "string", 
					"editor": {
						"xtype": "combobox",
						"store": [
							"ALL"
						],
						"reference": "refCommodityField",
						"allowBlank": false,
						"maxLength": "100",
						"editable": false,
						"triggers": {
							"someField": {
								"cls": "fa-search",
								"scope": "controller",
								"handler": "onOpenCommonCodePopup"
							}
						},
					}
				},
				{ 
					"header": ViewUtil.getLabel('cmdtCdF'),
					"hidden": true,
					"dataIndex": "cmdtCdNm",
					"width": 150,
					"align": "center",
					"caption": "cmdtCdNm",
					"style": "text-align:center",
					"reference": "refCMDTNmField",
					"filter": "string",
					"editor": {
						"xtype": "textfield",
					}
				},
				{ "header": ViewUtil.getLabel('freeDd'), "dataIndex": "freeDd", "width": 150, "align":"center", "caption":"freeDd", "style" : "text-align:center", "reference": "refFreeDd", "filter": "string",
				  "editor": {
							"xtype": "numberfield",
							"minValue" :"0",
        	    			"maxValue": "1000",
							"enforceMaxLength" : true,
							"editable":true,
							"allowBlank":false,
							"allowOnlyWhitespace": false
						}
				},
				{ "header": ViewUtil.getLabel('incldSunYn'), "dataIndex": "incldSunYnDisplay", "xtype": "checkcolumn","width": 150, "align":"center", "caption":"incldSunYn", "style" : "text-align:center", "reference": "refChkHldGrid", "filter": "string",
				  "editor": {
							"xtype": "checkbox",
							"maxLength":"100",
							"enforceMaxLength" : true,
							"listeners": {
								"change" : 'onChangeIncludeSunday'
							}
						}
				},
				/* { "header": ViewUtil.getLabel('aplyYmd'), "dataIndex": "aplyYmd", "width": 120, "align":"center", "caption":"aplyYmd", "style" : "text-align:center", "reference": "refAplyYmd", "filter": "string",
				  "editor": {
							"xtype": "datefield",
			                 "maskRe": /[0-9]/,
			                 "bind": "{exprYmdString}",
			                 "allowBlank":false,
			                 "altFormats": "Ymd",
			                 "format": MOST.config.Locale.getShortDate()
						}
				},
				{ "header": ViewUtil.getLabel('exprYmd'), "dataIndex": "exprYmd", "width": 120, "align":"center", "caption":"exprYmd", "style" : "text-align:center", "reference": "refExprYmd", "filter": "string",
				  "editor": {
							"xtype": "datefield",
			                 "maskRe": /[0-9]/,
			                 "bind": "{exprYmdString}",
			                 "allowBlank":false,
			                 "altFormats": "Ymd",
			                 "format": MOST.config.Locale.getShortDate()
						}
				}, */
				{	"header": ViewUtil.getLabel('aplyYmd'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getShortDate(),
					"dataIndex": "aplyYmd", 
					"width": 150, "align":"center", 
					"caption":"aplyYmd", 
					"reference": "refAplyYmd",
					"editor": {
						"xtype": "datefield",
						"allowBlank":false,
						"format": MOST.config.Locale.getShortDate()
					},
				},
				{	"header": ViewUtil.getLabel('exprYmd'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getShortDate(), 
					"dataIndex": "exprYmd",
					"width": 150, "align":"center", "caption":"exprYmd",
					"reference": "refExprYmd",
					"editor": {
							"xtype": "datefield",
							"allowBlank":false,
							"format": MOST.config.Locale.getShortDate()
					},
				},
				{
					"header": ViewUtil.getLabel('rmk'),
					"dataIndex": "rmk",
					"flex": 1,
					"align": "center",
					"caption": "strDescr",
					"style": "text-align:center",
					"reference": "refRmk",
					"filter": "string",
					"editor": {
						"xtype": "textfield",
						"maxLength": "100",
						"enforceMaxLength": true
					}
				}
				
			]
		},
		//CFG-005 Free Storage Days – Add All selection
		{
			"key": "ForeignExchangeRate",
			"items": [ 	
				{ "header": ViewUtil.getLabel('currency'), "dataIndex": "currency", "width": 120, "align":"center", "caption":"currency", "style" : "text-align:center", "reference": "refcurrencyCombo", "filter": "string"},
				{ "header": ViewUtil.getLabel('rate'), "dataIndex": "rate", "width": 100, "align":"center", "caption":"rate", "style" : "text-align:center", "reference": "refRate", "filter": "string",
				  "editor":{
							"xtype": "numberfield",
							"minValue":0,
							"maxValue":999999.99999,
 							"decimalPrecision" : 5, 
 							"selectOnFocus": true,
						}
				},
				{ "header": ViewUtil.getLabel('applyDate'), "dataIndex": "applyDate", "width": 170, "align":"center", "caption":"applyDate", "style" : "text-align:center", "reference": "refApplyDate", "filter": "string"},
				{ "header": ViewUtil.getLabel('expireDate'), "dataIndex": "expireDate", "width": 170, "align":"center", "caption":"applyDate", "style" : "text-align:center", "reference": "refExpireDate", "filter": "string"},
				{ "header": ViewUtil.getLabel('descr'), "dataIndex": "descr", "width": 200, "align":"left", "caption":"strDescr", "style" : "text-align:center", "reference": "refDescr", "filter": "string",
				  "editor": {
							"xtype": "textfield",
							"maxLength":"100",
							"enforceMaxLength" : true
					}
				}
				
			]
		
		},
		{
			"key": "TariffCodes",
			"items": [
				{
					"header": ViewUtil.getLabel('trfCd'),
					"dataIndex": "trfCd",
					//"reference": "refTariffCode",
					"filter": "string",
					"editable": false,
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('subTrf'),
					"dataIndex": "subTrfCd",
					//"reference": "ctlsubTrfCd",
					"editable": false,
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('trfTpCd'),
					"dataIndex": "trfTpCd",
					"filter": "list",
					//"reference": "ctltrfTpCd",
					"editable": false,
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('ssrTp'),
					"dataIndex": "sCdNm",
					//"reference": "ctlSSRTp",
					"editable": false,
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('descr'),
					"dataIndex": "descr",
					//"reference": "ctldescr",
					"editable": false,
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('descrInVN'),
					"dataIndex": "descrVN",
					//"reference": "ctldescr",
					"editable": false,
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('ivUnit1'),
					"dataIndex": "ivUnit1",
					//"reference": "ctlivUnit1",
					"editable": false,
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('ivUnit2'),
					"dataIndex": "ivUnit2",
					//"reference": "ctlivUnit2",
					"editable": false,
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('ivUnit3'),
					"dataIndex": "ivUnit3",
					//"reference": "ctlivUnit3",
					"editable": false,
					"width": 80
				},{
					"header": ViewUtil.getLabel('tariffCostCentre'),
					//"reference": "refCostCenter",
					"dataIndex": "costCntCd",
					"width": 100
				},{
					"header": ViewUtil.getLabel('payer'),
					//"reference": "refPayer",
					"dataIndex": "pyrTpCd",
					"width": 80
				},{
					"header": ViewUtil.getLabel('billingtype'),
					//"reference": "refBillingType",
					"dataIndex": "billTpCd",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('tarifftGSTType'),
					//"reference": "refGSTType",
					"dataIndex": "gstTpCd",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('tariffGSTValue'),
					//"reference": "refGSTValue",
					"dataIndex": "gstValue",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('tariffGSTRate'),
					//"reference": "refGSTValue",
					"dataIndex": "gstRate",
					"width": 100,
					"renderer": function (value) {
						return Ext.util.Format.number(value, "0.00");
					}
				},
				{
					"header": ViewUtil.getLabel('staffCode'),
					//"reference": "refStaffCode",
					"dataIndex": "userId",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('tariffUpdateTime'),
					//"reference": "refUpdateTime",
					"dataIndex": "updDt",
					"width": 150
				}]
		},
		{
			"key": "TariffCodes",
			"items": [
				{
					"header": ViewUtil.getLabel('trfCd'),
					"dataIndex": "trfCd",
					//"reference": "refTariffCode",
					"filter": "string",
					"editable": false,
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('subTrf'),
					"dataIndex": "subTrfCd",
					//"reference": "ctlsubTrfCd",
					"editable": false,
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('trfTpCd'),
					"dataIndex": "trfTpCd",
					"filter": "list",
					//"reference": "ctltrfTpCd",
					"editable": false,
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('ssrTp'),
					"dataIndex": "sCdNm",
					//"reference": "ctlSSRTp",
					"editable": false,
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('descr'),
					"dataIndex": "descr",
					//"reference": "ctldescr",
					"editable": false,
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('ivUnit1'),
					"dataIndex": "ivUnit1",
					//"reference": "ctlivUnit1",
					"editable": false,
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('ivUnit2'),
					"dataIndex": "ivUnit2",
					//"reference": "ctlivUnit2",
					"editable": false,
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('ivUnit3'),
					"dataIndex": "ivUnit3",
					//"reference": "ctlivUnit3",
					"editable": false,
					"width": 80
				},{
					"header": ViewUtil.getLabel('tariffCostCentre'),
					//"reference": "refCostCenter",
					"dataIndex": "costCntCd",
					"width": 100
				},{
					"header": ViewUtil.getLabel('payer'),
					//"reference": "refPayer",
					"dataIndex": "pyrTpCd",
					"width": 80
				},{
					"header": ViewUtil.getLabel('billingtype'),
					//"reference": "refBillingType",
					"dataIndex": "billTpCd",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('tarifftGSTType'),
					//"reference": "refGSTType",
					"dataIndex": "gstTpCd",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('tariffGSTValue'),
					//"reference": "refGSTValue",
					"dataIndex": "gstValueHidden",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('tarifftGSTType'),
					//"reference": "refGSTType",
					"dataIndex": "gstType",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('tariffGSTValue'),
					//"reference": "refGSTValue",
					"dataIndex": "gstValue",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('staffCode'),
					//"reference": "refStaffCode",
					"dataIndex": "userId",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('tariffUpdateTime'),
					//"reference": "refUpdateTime",
					"dataIndex": "updDt",
					"width": 150
				}]
		},
		{
			"key":"StandardTariffRate",
			"items": [
			{
				"xtype": "rownumberer",
				"locked": true,
				"lockable": false,
				"hideable": false,	            		
				"width" : 50,
				"align" : "center"
			},
			{
				"header":ViewUtil.getLabel('trfCd'), //me.lblTrfCd,
				"dataIndex": "trfCd",
				"reference": "ctltrfCd",
				"locked" : true,
				"lockable": true,
				"editable": false,
				"width": 200,
				"filter": "string",
			},
			{
				"header":  ViewUtil.getLabel('subTrfCd'), //me.lblSubTrfCd,
				"dataIndex": "subTrfCd",
				"reference": "ctlsubTrfCd",
				"editable": false,
				"lockable": true,
				"locked" : true,
				"width": 200,
				"filter": "string",
			},
			{
				"header":  ViewUtil.getLabel('trfTpCd'), //me.lblTrfTpCd,
				"dataIndex": "trfTpNm",
				"reference": "ctltrfTpCd",
				"editable": false,
				"locked" : true,
				"lockable": true,
				"width": 200,
				"align":"left",
			},
			
			{
				"header":  ViewUtil.getLabel('descr'), //me.lblDescr,
				"dataIndex": "descr",
				"reference": "ctldescr",
				"editable": false,
				"lockable": true,
				"width": 300,
				"align":"left",
			},
			{
				"header":  ViewUtil.getLabel('gstTpCd'), //me.lblGstTpCd,
				"dataIndex": "gstTpCd",
				"reference": "ctlgstTpCd",
				"editable": false,
				"lockable": false,
				"width": 100,
				"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
					metaData.style =  'background: #F0F8FF;';
					return value;
				},
				"editor": {
					"xtype": "combo",
					"bind": {
						"store":"{gstTypeCombo}",
					},
					"valueField": "scd",
					"displayField": "gstTpCd",
					"queryMode": "local",
					"allowBlank":true,
					"editable" : false,
					"listeners": {
						"select" : 'onSelectGSTtype'
					},
					"enforceMaxLength" : true,
					"forceSelection":true
				}
			},
			{
				"header":  ViewUtil.getLabel('gstValue'), //me.lblGstValue,
				"dataIndex": "gstValue",
				"reference": "ctlgstValue",
				"editable": false,
				"lockable": false,
				"width": 100,
				"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
				}
			},
			{
				"header":  ViewUtil.getLabel('ivUnit1'), //me.lblIvUnit1,
				"dataIndex": "ivUnit1",
				"reference": "ctlivUnit1",
				"editable": false,
				"lockable": false,
				"width": 100
			},
			{
				"header":  ViewUtil.getLabel('ivUnit2'), //me.lblIvUnit2,
				"dataIndex": "ivUnit2",
				"reference": "ctlivUnit2",
				"editable": false,
				"lockable": false,
				"width": 100
			},
			{
				"header":  ViewUtil.getLabel('ivUnit3'), //me.lblIvUnit3,
				"dataIndex": "ivUnit3",
				"reference": "ctlivUnit3",
				"editable": false,
				"lockable": false,
				"width": 100
			},
			{
				"header":  ViewUtil.getLabel('minVal1'), //me.lblminVal1,
				"dataIndex": "minVal1",
				"reference": "ctlminVal1",
				"editable": false,
				"lockable": false,
				"width": 150,
				"format": "000,000,000,000.000",
				"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
					metaData.style =  'background: #F0F8FF;';
					return Ext.util.Format.number(value, '0,000.00');
				},
				"editor": {
					"xtype": "numberfield",
					"minValue":0,
					"maxValue":999999999999.999,
					"align":"right",
					"decimalPrecision":3,
					"selectOnFocus":true
				}
			},
			{
				"header":  ViewUtil.getLabel('minVal2'), //me.lblminVal2,
				"dataIndex": "minVal2",
				"reference": "ctlminVal2",
				"editable": false,
				"lockable": false,
				"width": 150,
				"format": "000,000,000,000.000",
				"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
					metaData.style =  'background: #F0F8FF;';
					return Ext.util.Format.number(value, '0,000.00');
				},
				"editor": {
					"xtype": "numberfield",
					"minValue":0,
					"maxValue":999999999999.999,
					"align":"right",
					"decimalPrecision":3,
					"selectOnFocus":true
				}
			},
			{
				"header":  ViewUtil.getLabel('minVal3'), //me.lblminVal3,
				"dataIndex": "minVal3",
				"reference": "ctlminVal3",
				"editable": false,
				"lockable": false,
				"width": 150,
				"format": "000,000,000,000.000",
				"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
					metaData.style =  'background: #F0F8FF;';
					return Ext.util.Format.number(value, '0,000.00');
				},
				"editor": {
					"xtype": "numberfield",
					"minValue":0,
					"maxValue":999999999999.999,
					"align":"right",
					"decimalPrecision":3,
					"selectOnFocus":true
				}
			},
			{
				"header":  ViewUtil.getLabel('minRate'),
				"dataIndex": "minRate",
				"reference": "ctlMinRate",
				"editable": false,
				"lockable": false,
				"width": 150,
				"format": "00,000.00",
				"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
					metaData.style =  'background: #F0F8FF;';
					return Ext.util.Format.number(value, '0,000.00');
				},
				"editor": {
					"xtype": "numberfield",
					"minValue":0,
					"maxValue":999999999999.999,
					"align":"right",
					"decimalPrecision":3,
					"selectOnFocus":true,
					"listeners": {
							"change" : 'onMinimumRateValidation'
					}
				}
			},
			{
				"header":  ViewUtil.getLabel('rateStandard'), //me.lblrateStandard,
				"dataIndex": "unitPrc",
				"reference": "ctlunitPrc",
				"editable": false,
				"lockable": false,
				"width": 150,
				"format": "00,000.00",
				"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
					metaData.style =  'background: #F0F8FF;';
					return Ext.util.Format.number(value, '0,000.00');
				},
				"editor": {
					"xtype": "numberfield",
					"minValue":0,
					"maxValue":999999999999.999,
					"align":"right",
					"decimalPrecision":3,
					"selectOnFocus":true
				}
			},
			{
				"header":  ViewUtil.getLabel('maxRate'),
				"dataIndex": "maxRate",
				"reference": "ctlMaxRate",
				"editable": false,
				"lockable": false,
				"width": 150,
				"format": "00,000.00",
				"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
					metaData.style =  'background: #F0F8FF;';
					return Ext.util.Format.number(value, '0,000.00');
				},
				"editor": {
					"xtype": "numberfield",
					"minValue":0,
					"maxValue":999999999999.999,
					"align":"right",
					"decimalPrecision":3,
					"selectOnFocus":true
				}
			},
			{
				"header":  ViewUtil.getLabel('costCntCd'), //me.lblCostCntCd,
				"dataIndex": "costCntCd",
				"reference": "ctlcostCntCd",
				"editable": false,
				"lockable": false,
				"width": 150
			},
			{
				"header":  ViewUtil.getLabel('billTpCd'), //me.lblBillTpCd,
				"dataIndex": "billTpCd",
				"reference": "ctlbillTpCd",
				"editable": false,
				"lockable": false,
				"width": 150
			},
			{
				"header":  ViewUtil.getLabel('staffCode'), //me.lblUserId,
				"dataIndex": "userId",
				"reference": "ctluserId",
				"editable": false,
				"lockable": false,
				"width": 150
			},
			{
				"header":  ViewUtil.getLabel('updateTime'), //me.lblUpdateTime,
				"dataIndex": "updateTimeField",
				"reference": "ctlupdateTime",
				"editable": false,
				"lockable": false,
				"xtype": "datecolumn",
				"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
				"width": 150,
				"exportRenderer": function(value, record, dataIndex, cell, column){
					return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
				}
			}]
		},
		{
			"key": "PartnerTariffRates",
			"items": [
				{
					"header": ViewUtil.getLabel('partner'),  //lblpartner,
					"dataIndex": "ptnrCd",
					"width":100,
					"reference": "refPartner",
						
				},
				{
					"header": ViewUtil.getLabel('partnername'),  //lblpartnername,
					"dataIndex": "ptnrNm",
					"reference": "refPartnerNm",
					"flex": 1
				},
				{
					"header":  ViewUtil.getLabel('cnsne'), 
					"dataIndex": "conSig",
					"reference": "refCNS",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('vesselCode'),  //lblvesselCode,
					"dataIndex": "vessels",
					"reference": "refVsCd",
					"flex": 1
				},
				{
					"header": ViewUtil.getLabel('applyDate'),  //lblapplyDate,
					"dataIndex": "aplyYmd",
					"reference": "refAplDt",
					"width": 100,
					"align": "center"
				},
				{
					"header": ViewUtil.getLabel('expiryDate'),  //lblexpiryDate,
					"dataIndex": "exprYmd",
					"reference": "refExpDt",
					"width": 100, 
					"align": "center"
				},
				{
					"header": ViewUtil.getLabel('refNo'),  //lblrefNo,
					"dataIndex": "rmk",
					"reference": "refRefNo",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('staffCode'),  //lblStaffCode,
					"dataIndex": "userId",
					"reference": "refStaffCode",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('updateTime'),  //lblUpdateTime,
					"dataIndex": "updTime",
					"reference": "refUpdateTime",
					"width": 120
				}]
		},{
		
			"key": "PartnerTariffRates_detail",
			"items": [
				{
					"header": ViewUtil.getLabel('trfCd'),  //lblpartner,
					"dataIndex": "trfCd",
					"width":100,
					"reference": "refTrfCd",
						
				},
				{
					"header": ViewUtil.getLabel('subTrfCd'),  //lblpartnername,
					"dataIndex": "subTrfCd",
					"reference": "refSubTrfcd",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('description'),  //lblvesselCode,
					"dataIndex": "descr",
					"reference": "refDescription",
					"align": "left",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('rate'),  //lblapplyDate,
					"dataIndex": "unitPrc",
					"reference": "refRate",
					"hidden": true,
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('rateStandard'), //me.lblrateStandard,
					"dataIndex": "unitPrc",
					"reference": "ctlunitPrc",
					"editable": false,
					"lockable": false,
					"width": 150,
					"format": "00,000.00",
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header": ViewUtil.getLabel('ptnrRate'),  //lblexpiryDate,
					"dataIndex": "ptnrPrc",
					"reference": "refExpDt",
					"width": 120,
					"editable": true,
					"format": "00,000.00",
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #F0F8FF;';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999999999.99,
						"align":"right",
						"decimalPrecision":2,
						"selectOnFocus":true,
						"listeners": {
								"change" : 'onPartnerRateChange'
						}
					},
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header":  ViewUtil.getLabel('minRate'),
					"dataIndex": "minRate",
					"reference": "ctlMinRate",
					"editable": false,
					"lockable": false,
					"width": 150,
					"format": "00,000.00",
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #F0F8FF;';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":99999.99,
						"align":"right",
						"decimalPrecision":2,
						"selectOnFocus":true
					},
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header": ViewUtil.getLabel('ivUnit1'),  //lblStaffCode,
					"dataIndex": "ivUnit1",
					"reference": "refInvoiceUnit1",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('ivUnit2'),  //lblUpdateTime,
					"dataIndex": "ivUnit2",
					"reference": "refInvoiceUnit2",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('ivUnit3'),  //lblUpdateTime,
					"dataIndex": "ivUnit3",
					"reference": "refInvoiceUnit3",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('costCntCd'),  //lblUpdateTime,
					"dataIndex": "costCntCd",
					"reference": "refCostCntCd",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('billTpCd'),  //lblUpdateTime,
					"dataIndex": "billTpCd",
					"reference": "refBillTpCd",
					"width": 120
				}]
		},
		{
			"key": "PartnerTariffFileUpload",
			"items": [ 	
				{ "header": ViewUtil.getLabel('fileName'), "dataIndex": "fileName", "flex": 1, "align":"center", "caption":"fileName", "style" : "text-align:center", "reference": "refFileName", "filter": "string"},
				{ "header": ViewUtil.getLabel('fileSize'), "dataIndex": "fileSize", "xtype":"numbercolumn","format":"0,000","width": 80, "align":"center", "caption":"fileSize", "style" : "text-align:center", "reference": "reffileSize", "filter": "string"},
			]
		},
		{
			"key": "ExportReconcile",
			"items": [
				{"header": ViewUtil.getLabel('sNNo'), "dataIndex": "snNo", "width":150, "reference": "ctlBLNO", },
				/* {"header": ViewUtil.getLabel('bookingNo'), "dataIndex": "cbrNo", "reference": "ctlDONo", "width": 80 }, */
				{"header": ViewUtil.getLabel('bookingNo'), "dataIndex": "mfDocId", "reference": "ctlMfDocId", "width": 80 },
				{"header": ViewUtil.getLabel('dOCMT'), "dataIndex": "docWgt", "reference": "ctlOPRMT", "width": 80},
				{"header": ViewUtil.getLabel('dOCM3'), "dataIndex": "docMsrmt", "reference": "ctlOPRM3", "width": 80},
				{"header": ViewUtil.getLabel('dOCQty'), "dataIndex": "docPkgQty", "reference": "ctlOPRQTY", "width": 80},
				{"header": ViewUtil.getLabel('oPRMT'), "dataIndex": "wgt", "reference": "ctlOPRMT", "width": 80 },
				{"header": ViewUtil.getLabel('oPRM3'), "dataIndex": "msrmt", "reference": "ctlOPRM3", "width": 80},
				{"header": ViewUtil.getLabel('oPRQTY'), "dataIndex": "pkgQty", "reference": "ctlOPRQTY", "width": 80},
				{"header": ViewUtil.getLabel('dsMT'), "dataIndex": "wgt", "reference": "ctlDSMT", "width": 80 },
				{"header": ViewUtil.getLabel('dsM3'), "dataIndex": "msrmt", "reference": "ctlDSM3", "width": 80},
				{"header": ViewUtil.getLabel('dsQTY'), "dataIndex": "pkgQty", "reference": "ctlDSQTY", "width": 80},
				{"header": ViewUtil.getLabel('SNMT'), "dataIndex": "billWgt", "reference": "ctlBLMT", "editable": false, "width": 80,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
        				metaData.style =  'background: #ffff80; color: red; align: right';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999999999.999,
						"align":"right",
						"decimalPrecision":3,
						"selectOnFocus":true
						
					}
				},
				{"header": ViewUtil.getLabel('SNM3'), "dataIndex": "billMsrmt", "reference": "ctlBLM3", "width": 80, "editable": false,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
        				metaData.style =  'background: #ffff80; color: red; align: right';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999999999.999,
						"align":"right",
						"decimalPrecision":3,
						"selectOnFocus":true
						
					}
				},
				{"header": ViewUtil.getLabel('SNQTY'), "dataIndex": "billPkgQty", "reference": "ctlBLQTY", "width": 80, "editable": false,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
        				metaData.style =  'background: #ffff80; color: red; align: right';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999999999,
						"decimalPrecision":3,
						"align":"right",
						"selectOnFocus":true
						
					}
				},
				{"header": ViewUtil.getLabel('delivery'), "dataIndex": "delvTpCd","reference": "ctlDelivery","width": 80,},
				{"header": ViewUtil.getLabel('modeofOPR'), "dataIndex": "tsptTpCd","reference": "ctlTransportTypeCombo","editable": false,"width": 120,
					/* "style": "background: #ffffb3", */
					"renderer": "onGridComboRenderer",
					"editor": {
						"xtype": "combo",
						"bind": {
							"store":"{exportReconcileTransportTypeList}",
						},
						"listeners": {
   							"select": 'onSelectModeofOPR'
   						},
						"valueField": "scd",
						"displayField": "scdNm",
						"queryMode": "local",
						"allowBlank": true, 
						"editable": false, 
						"forceSelection" : true
						
					}
				},
				{"header": ViewUtil.getLabel('fA'),  "dataIndex": "fwrAgnt","reference": "ctlFA","width": 60},
				{"header": ViewUtil.getLabel('shipper'), "dataIndex": "shpr","reference": "ctlConsignee","width": 100},
				{"header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpCd","reference": "ctlCargoType","editable": false, "width": 150,
					/* "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
        				metaData.style =  'background: #ffff80; color: red; align: right';
						return value;
					},
					"editor": {
						"xtype": "combo",
						"bind": {
								"store":"{cargoTypeCombo}",
						},
						"displayField": "scdNm",
						"valueField": "scd",
						"queryMode": "local",
						"enforceMaxLength": true, 
						"editable": false, 
						"forceSelection" : true
						
					} */
				},
				{"header": ViewUtil.getLabel('commodity'), "dataIndex": "cmdtCd","reference": "ctlCommodity","editable": false,"width": 100,
					/* "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
        				metaData.style =  'background: #ffff80; color: red; align: right';
						return value;
					},
					"editor": {
						"xtype": "textfield",
						"align":"right",
						"selectOnFocus":true
						
					} */
				},
				{"header": ViewUtil.getLabel('commodityDescr'),"dataIndex": "cmdtDescr","reference": "ctlCargoDescr","width": 200},
				{"header": ViewUtil.getLabel('packageType'),"dataIndex": "pkgTpCd","reference": "ctlPackageType","editable": false,"width": 200,
					/* "renderer": "onGridComboRenderer",
					"editor": {
						"xtype": "combo",
						"bind": {
								"store":"{exportReconcilePackageTypeList}",
						},
						"listeners": {
   							"select": 'onSelectPackageType'
   						},
						"displayField": "cdNm",
						"valueField": "cd",
						"queryMode": "local",
						"allowBlank": true, 
						"editable": false, 
						"forceSelection" : true,
						"matchFieldWidth": false, 
						
					} */
				},
				{"header": ViewUtil.getLabel('dGClass'), "dataIndex": "dgClass","reference": "ctlDGClass","width": 100},
				{"header": ViewUtil.getLabel('pOD'), "dataIndex": "pod","reference": "ctlPOL","width": 100},
				{ "header": ViewUtil.getLabel('whTp'), "dataIndex": "whTpNm", "width":130, "reference": "refWhTpNm"},
			]
		},{
			"key": "ExportReconcile_subGrid",
			"items": [
				{
					"header": ViewUtil.getLabel('bLNo'),  
					"dataIndex": "blNo",
					"width":100,
					"reference": "ctlMFBLMo"
						
				},
				{
					"header": ViewUtil.getLabel('cBRNo'),  
					"dataIndex": "jobNo",
					"reference": "ctlMFDocMT",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('dOCMT'), 
					"dataIndex": "wgt",
					"reference": "ctlMFDocM3",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('dOCM3'), 
					"dataIndex": "vol",
					"reference": "ctlMFDocQTY",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('dOCQty'), 
					"dataIndex": "pkgQty",
					"reference": "ctlMFCargoDesc",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('cargoDescription'),  
					"dataIndex": "gdsRemark",
					"reference": "ctlMFFa",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('fA'), 
					"dataIndex": "fa",
					"reference": "ctlMFConsignee",
					"width": 80
				},
				{
					"header": ViewUtil.getLabel('shipper'),  
					"dataIndex": "shipper",
					"reference": "ctlMFPOL",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('pOD'), 
					"dataIndex": "pod",
					"reference": "ctlMFPOD",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('submitDate'), 
					"xtype": "datecolumn",
					"reference": "ctlMFSubmitDate",
					"dataIndex": "updateTimeField",
					"format":  MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 150,
					"renderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}			
				}
			]
		},{
			
			"key": "ImportReconcile",
			"items": [
				{ "header": ViewUtil.getLabel('bLNo'), "dataIndex": "blNo", "width":100,"reference": "ctlBLNO"	},
				{ "header": ViewUtil.getLabel('dONo'),  "dataIndex": "doNo","reference": "ctlDONo","width": 100 },
				{ "header": ViewUtil.getLabel('docMt'), "dataIndex": "docWgt","reference": "ctlDOCMT","width": 80 },
				{ "header": ViewUtil.getLabel('docM3'),  "dataIndex": "docMsrmt","reference": "ctlDOCM3","width": 80 },
				{ "header": ViewUtil.getLabel('docQty'), "dataIndex": "docPkgQty","reference": "ctlDOCQTY","width": 80 },
				{ "header": ViewUtil.getLabel('bLMT'), "dataIndex": "billWgt","reference": "ctlBLMT","filter": "string", "width": 80,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red; align: right';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999.999,
						"align":"right",
						"decimalPrecision":3,
						"selectOnFocus":true
						
					}
				},
				{ "header": ViewUtil.getLabel('bLM3'), "dataIndex": "billMsrmt","reference": "ctlBLM3","filter": "string","width": 80,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
        				metaData.style =  'background: #ffff80; color: red; align: right';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999.999,
						"align":"right",
						"decimalPrecision":3,
						"selectOnFocus":true
						
					}
				},
				{ "header": ViewUtil.getLabel('bLQTY'), "dataIndex": "billPkgQty", "reference": "ctlBLQTY", "filter": "string",	"width": 80,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
        				metaData.style =  'background: #ffff80; color: red; align: right';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999.999,
						"align":"right",
						"decimalPrecision":3,
						"selectOnFocus":true
						
					}
				},
				{ "header": ViewUtil.getLabel('oPRMT'), "dataIndex": "wgt","reference": "ctlOPRMT","filter": "string", "align":"left","width": 80 },
				{ "header": ViewUtil.getLabel('oPRM3'), "dataIndex": "msrmt", "reference": "ctlOPRM3", "filter": "string", "align":"left", "width": 80 },
				{ "header": ViewUtil.getLabel('oPRQTY'), "dataIndex": "pkgQty","reference": "ctlOPRQTY", "filter": "string", "align":"left", "width": 80 },
				{ "header": ViewUtil.getLabel('dsMT'), "dataIndex": "wgt","reference": "ctlDSMT","filter": "string", "align":"left","width": 80 },
				{ "header": ViewUtil.getLabel('dsM3'), "dataIndex": "msrmt", "reference": "ctlDSM3", "filter": "string", "align":"left", "width": 80 },
				{ "header": ViewUtil.getLabel('dsQTY'), "dataIndex": "pkgQty","reference": "ctlDSQTY", "filter": "string", "align":"left", "width": 80 },
				{ "header": ViewUtil.getLabel('delivery'), "dataIndex": "delvTpCd","reference": "ctlDelivery", "filter": "string", "align":"left", "width": 100 },
				{ "header": ViewUtil.getLabel('transportType'), "dataIndex": "tsptTpCd", "reference": "ctlTransportType", "editable": false, "width": 150,
					"style": "text-align:center",
       				"align": "center",
       				"filter": "string",
       				"renderer": "onGridComboRenderer",
					"editor" : {
						"xtype": "combo", 
						"bind": {
							"store":'{importReconcileTransportTypeList}',
						},
						"listeners": {
   							//"select": 'onSelectTransportType'
   						},
						"queryMode": "local",
						"displayField": "scdNm",
                    	"valueField": "scd",
                    	"allowBlank": true,
						"editabled" : false,
						"forceSelection": true
					}
				},
				{ "header": ViewUtil.getLabel('fA'), "dataIndex": "fwrAgnt","reference": "ctlFA","width": 60 },
				{ "header": ViewUtil.getLabel('consignee'), "dataIndex": "cnsne","reference": "ctlConsignee","width": 150 },
				{ "header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpCd", "reference": "ctlCargoType", "width": 120,
					/* "renderer": "onGridComboRenderer", */
					/*	System won뭪 allow
						"editor" : {
						"xtype": "combo", 
						"bind": {
								"store":'{cargoTypeCombo}',
						},
						"queryMode": "local",
						"displayField": "scdNm",
                    	"valueField": "scd",
                    	"enforceMaxLength": true, 
						"editable" : false, 
						"forceSelection": true,
						"matchFieldWidth":false
					}  */
				},
				{ "header": ViewUtil.getLabel('commodity'),  "dataIndex": "cmdtCd", "reference": "ctlCommodity", "width": 100,
					/*	System won뭪 allow 
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffffb3;';
						return value;
					},
					"editor": {
						"xtype": "textfield",
						"reference": "refTxtCmdtCode",
						"align":"right",
	   					"editable": false,
	   					"enforceMaxLength": true,
						"triggers": {
		                    "someField": {
		                        "cls": "fa-search",
		                        "scope": "controller",
		                        "handler": "onOpenCommonCodePopup"
		                    }
		                }
					}		 */	
				},
				{ "header": ViewUtil.getLabel('cargoDescr'), "dataIndex": "cmdtDescr", "reference": "ctlCargoDescr", "width": 150	},
				{ "header": ViewUtil.getLabel('packageType'), "dataIndex": "pkgTpCd", "reference": "ctlPackageType", "width": 120,
				/*"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffffb3;';
						return value;
					},		
					"editor" : {
						"xtype": "combo", 
						"bind": {
							"store":'{importReconcilePackageTypeList}',
						},
						"queryMode": "local",
						"displayField": "scdNm",
                    	"valueField": "scd",
                    	"allowBlank": true, 
						"editable" : false, 
						"forceSelection": true,
						"matchFieldWidth":false
					} */
				},
				{ "header": ViewUtil.getLabel('dGClass'), "dataIndex": "dgClass","reference": "ctlDGClass","width": 150	},
				{ "header": ViewUtil.getLabel('pOL'), "dataIndex": "pol","reference": "ctlPOL","width": 80 },
				{ "header": ViewUtil.getLabel('whTp'), "dataIndex": "whTpNm", "width":130, "reference": "refWhTpNm"},
			]
		},{
			"key": "ImportReconcile_manifests",
			"items": [
				{
					"header": ViewUtil.getLabel('bLNo'),  
					"dataIndex": "blNo",
					"width":100,
					"reference": "ctlMFBLMo"
						
				},
				{
					"header": ViewUtil.getLabel('dOCMT'),  
					"dataIndex": "wgt",
					"reference": "ctlMFDocMT",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dOCM3'), 
					"dataIndex": "vol",
					"reference": "ctlMFDocM3",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dOCQty'), 
					"dataIndex": "pkhQty",
					"reference": "ctlMFDocQTY",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoDesc'), 
					"dataIndex": "gdsRemark",
					"reference": "ctlMFCargoDesc",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('fA'),  
					"dataIndex": "fa",
					"reference": "ctlMFFa",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('consignee'), 
					"dataIndex": "consignee",
					"reference": "ctlMFConsignee",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('pOL'),  
					"dataIndex": "pol",
					"reference": "ctlMFPOL",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('submitDate'), 
					"xtype": "datecolumn",
					"reference": "ctlMFSubmitDate",
					"dataIndex": "updateTimeField",
					"format":  MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 150,
					"renderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}			
				}
			]
		},{
			
			"key": "ImportReconcile_Cert",
			"items": [
				{
					"header": ViewUtil.getLabel('bLNo'),  
					"dataIndex": "blNo",
					"reference": "ctlStaffCode",
					"width":100
						
				},
				{
					"header": ViewUtil.getLabel('dOCQty'),  
					"dataIndex": "orgQty",
					"reference": "ctlOUTDocQty",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('actQty'), 
					"dataIndex": "actlQty",
					"reference": "ctlOUTActQty",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('diffQty'), 
					"dataIndex": "pkgQty",
					"reference": "ctlOUTDiffQty",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('docMGR'), 
					"dataIndex": "orgMgr",
					"reference": "ctlOUTDocMGR",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('actMGR'),  
					"dataIndex": "actlMgr",
					"reference": "ctlOUTActMGR",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('diffMGR'), 
					"dataIndex": "pkgMgr",
					"reference": "ctlOUTDiffMGR",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('docWGT'),  
					"dataIndex": "orgWgt",
					"reference": "ctlOUTDocWGT",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('actWGT'),  
					"dataIndex": "actlWgt",
					"reference": "ctlOUTActWGT",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('diffWGT'),  
					"dataIndex": "pkgWgt",
					"reference": "ctlOUTDiffWGT",
					"width": 100
				}
			]
		
		},{			
		
			"key": "ExportReconcileLiquid",
			"items": [
				{
					"header": ViewUtil.getLabel('opetype'),  
					"dataIndex": "opeTp",
					"reference": "ctlOpeTp",
					"width":150,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffffb3;';
						return value;
					},		
					"editor" : {
						"xtype": "combo", 
						"bind": {
								"store":'{operationTypeCombo}',
						},
						"queryMode": "local",
						"displayField": "label",
                    	"valueField": "data",
						"editable" : false, 
						"forceSelection": true,
						"enforceMaxLength":true
					}		
				},
				{
					"header": ViewUtil.getLabel('fA'),  
					"dataIndex": "fwrAgnt",
					"reference": "ctlFA",
					"width": 60
				},
				{
					"header": ViewUtil.getLabel('cargoType'),  
					"dataIndex": "cgTpCd",
					"reference": "ctlCargoType",
					"width": 150,
					"renderer": "onGridComboRenderer",
					"editor" : {
						"xtype": "combo", 
						"bind": {
								"store":"{cargoTypeCombo}",
						},
						"queryMode": "local",
						"displayField": "scdNm",
                    	"valueField": "scd",
						"editable" : false, 
						"forceSelection": true,
						"enforceMaxLength":true
					}	
				},
				{
					"header": ViewUtil.getLabel('bLMT'),  
					"dataIndex": "billWgt",
					"reference": "ctlBLMT",
					"width": 100,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffffb3;';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999999999.999,
						"align":"right",
						"decimalPrecision":3,
						"selectOnFocus":true
						
					}
				},
				{
					"header": ViewUtil.getLabel('oPRMT'), 
					"dataIndex": "handleMT",
					"reference": "ctlOPRMT",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('consignee'),  
					"dataIndex": "cnsneNm",
					"reference": "ctlConsignee",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('shipper'), 
					"dataIndex": "shprNm",
					"reference": "ctlShipper",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('commodity'),  
					"dataIndex": "cmdtCd",
					"reference": "ctlCommodity",
					"width": 80,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffffb3;';
						return value;
					},
					"editor" : {
						"xtype": "textfield", 
						"reference":"refTxtCmdtCode",
						"align":'right',
						"selectOnFocus" : true, 
						"triggers": {
   	    	                    "someField": {
   	    	                        "cls": "fa-search",
		                        	"scope": "controller",
		                        	"handler":  "onOpenCommonCodePopup"
   	    	                    }
   	    	                }
					}
				},
				{
					"header": ViewUtil.getLabel('commodityDescr'), 
					"dataIndex": "cmdtDescr",
					"reference": "ctlCargoDescr",
					"editable": false,
					"width": 200
					
				},
				{
					"header": ViewUtil.getLabel('lqRecPackageType'),  
					"dataIndex": "pkgTpCd",
					"reference": "ctlPackageType",
					"width": 150,
					"editable": false,
					"renderer": "onGridComboRenderer",
					"editor" : {
						"xtype": "combo", 
						"bind": {
								"store":'{importReconcilePackageTypeList}',
						},
						"queryMode": "local",
						"displayField": "scdNm",
                    	"valueField": "scd",
						"allowBlank": true,
						"forceSelection": true,
						"matchFieldWidth":false
					} 
				}
			
			]
		
		},{
			
			
			"key": "ExportReconcileLiquid_mf",
			"items": [
				{
					"header": ViewUtil.getLabel('bLNo'),  
					"dataIndex": "blNo",
					"width":100
						
				},
				{
					"header": ViewUtil.getLabel('dOCMT'),  
					"dataIndex": "docMt",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dOCM3'), 
					"dataIndex": "docM3",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoDesc'), 
					"dataIndex": "cgDescr",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('fA'),  
					"dataIndex": "fwrdNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('consignee'), 
					"dataIndex": "cnsneNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('pOD'),  
					"dataIndex": "pod",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('submitDate'), 
					"xtype": "datecolumn",
					"dataIndex": "submitDate",
					"format":  MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 150,
					"renderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}			
				}
			]
		
		},{
			"key": "ImportReconcileLiquid",
			"items": [
				
				{
					"header": ViewUtil.getLabel('opetype'),  
					"dataIndex": "opeTp",
					"reference": "ctlOpeTp",
					"width":150,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffffb3;';
						return value;
					},		
					"editor" : {
						"xtype": "combo", 
						"bind": {
								"store":'{operationTypeCombo}',
						},
						"queryMode": "local",
						"displayField": "label",
                    	"valueField": "data",
						"editable" : false, 
						"forceSelection": true,
						"enforceMaxLength":true
					}		
				},
				{
					"header": ViewUtil.getLabel('fA'),  
					"dataIndex": "fwrAgnt",
					"reference": "ctlFA",
					"width": 60
				},
				{
					"header": ViewUtil.getLabel('cargoType'),  
					"dataIndex": "cgTpCd",
					"reference": "ctlCargoType",
					"width": 150,
					"renderer": "onGridComboRenderer",
					"editor" : {
						"xtype": "combo", 
						"bind": {
								"store":"{cargoTypeCombo}",
						},
						"queryMode": "local",
						"displayField": "scdNm",
                    	"valueField": "scd",
						"editable" : false, 
						"forceSelection": true,
						"enforceMaxLength":true
					}	
				},
				{
					"header": ViewUtil.getLabel('bLMT'),  
					"dataIndex": "billWgt",
					"reference": "ctlBLMT",
					"width": 100,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffffb3;';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"minValue":0,
						"maxValue":999999999999.999,
						"align":"right",
						"decimalPrecision":3,
						"selectOnFocus":true
						
					}
				},
				{
					"header": ViewUtil.getLabel('oPRMT'), 
					"dataIndex": "handleMT",
					"reference": "ctlOPRMT",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('consignee'),  
					"dataIndex": "cnsneNm",
					"reference": "ctlConsignee",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('shipper'), 
					"dataIndex": "shprNm",
					"reference": "ctlShipper",
					"width": 180
				},
				{
					"header": ViewUtil.getLabel('commodity'),  
					"dataIndex": "cmdtCd",
					"reference": "ctlCommodity",
					"width": 80,
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffffb3;';
						return value;
					},
					"editor" : {
						"xtype": "textfield", 
						"reference":"refTxtCmdtCode",
						"align":'right',
						"selectOnFocus" : true, 
						"triggers": {
   	    	                    "someField": {
   	    	                        "cls": "fa-search",
		                        	"scope": "controller",
		                        	"handler":  "onOpenCommonCodePopup"
   	    	                    }
   	    	                }
					}
				},
				{
					"header": ViewUtil.getLabel('commodityDescr'), 
					"dataIndex": "cmdtDescr",
					"reference": "ctlCargoDescr",
					"editable": false,
					"width": 200
					
				},
				{
					"header": ViewUtil.getLabel('lqRecPackageType'),  
					"dataIndex": "pkgTpCd",
					"reference": "ctlPackageType",
					"width": 150,
					"editable": false,
					"renderer": "onGridComboRenderer",
					"editor" : {
						"xtype": "combo", 
						"bind": {
								"store":'{importReconcilePackageTypeList}',
						},
						"queryMode": "local",
						"displayField": "scdNm",
                    	"valueField": "scd",
						"allowBlank": true,
						"forceSelection": true,
						"matchFieldWidth":false
					} 
				}
			]
		
		},{
			
			"key": "ImportReconcileLiquid_manifests",
			"items": [
				{
					"header": ViewUtil.getLabel('bLNo'),  
					"dataIndex": "blNo",
					"width":100
						
				},
				{
					"header": ViewUtil.getLabel('dOCMT'),  
					"dataIndex": "docMt",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dOCM3'), 
					"dataIndex": "docM3",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('cargoDesc'), 
					"dataIndex": "cgDescr",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('fA'),  
					"dataIndex": "fwrdNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('consignee'), 
					"dataIndex": "cnsneNm",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('pOL'),  
					"dataIndex": "pol",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('submitDate'), 
					"xtype": "datecolumn",
					"dataIndex": "submitDate",
					"format":  MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 150,
					"renderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}			
				}
			]
		
		},{
			
			
			"key": "ImportReconcileLiquid_Cert",
			"items": [
				{
					"header": ViewUtil.getLabel('bLNo'),  
					"dataIndex": "blNo",
					"width":100
						
				},
				{
					"header": ViewUtil.getLabel('dOCQty'),  
					"dataIndex": "docQty",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('actQty'), 
					"dataIndex": "actQty",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('diffQty'), 
					"dataIndex": "diffQty",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('docMGR'), 
					"dataIndex": "docM3",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('actMGR'),  
					"dataIndex": "actlM3",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('diffMGR'), 
					"dataIndex": "diffM3",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('docWGT'),  
					"dataIndex": "docMt",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('actWGT'),  
					"dataIndex": "actMt",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('diffWGT'),  
					"dataIndex": "diffMt",
					"width": 100
				}
			]
		
		},{
            "key": "SsrList",
			"items": [ 	
				{
        			"header": ViewUtil.getLabel('jpvc'), "dataIndex": 'vslCallId', "reference": 'refVslCallId', "filter": "string", "width": 140
        		},
				{
					"header": ViewUtil.getLabel('payerCd'), "dataIndex": 'payerCd', "reference": 'refPayerCd', "filter": "string", "width": 80
				},
				{
                    "header": ViewUtil.getLabel('ssrNo'), "dataIndex": 'ssrNo', "reference": 'refSsrNo', "filter": "string", "width": 120
				},
				{
                    "header": ViewUtil.getLabel('gstAmount'), "dataIndex": 'gstAmount', "reference": 'refGstAmount', "filter": "string", "width": 120
                    ,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('totalAmount'), "dataIndex": 'totalAmount', "reference": 'refTotalAmount', "filter": "string", "width": 170
                    ,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('payableAmount'), "dataIndex": 'payableAmount', "reference": 'refPayableAmount', "filter": "string", "width": 190
                    ,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('issueDt'), "dataIndex": 'issueDt', "reference": 'refIssueDt', "filter": "string", "width": 100
                },
                {
                    "header": ViewUtil.getLabel('ssrStatCd'), "dataIndex": 'ssrStatCd', "reference": 'refSsrStatCd', "filter": "string", "width": 80
                },
                {
                    "header": ViewUtil.getLabel('ivNo'), "dataIndex": 'ivNo', "reference": 'refIvNo', "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('berthNo'), "dataIndex": 'berthNo', "reference": 'refBerthNo', "filter": "string", "width": 80
                },
                {
                    "header": ViewUtil.getLabel('whId'), "dataIndex": 'whId', "reference": 'refWhId', "filter": "string", "width": 120
                },
                {
                    "header": ViewUtil.getLabel('refNo'), "dataIndex": 'refNo', "reference": 'refRefNo', "filter": "string", "width": 150
                },
                {
                    "header": ViewUtil.getLabel('rmk'), "dataIndex": 'rmk', "reference": 'refRmk', "filter": "string", "width": 120
                },
                {
                    "header": ViewUtil.getLabel('createBy'), "dataIndex": 'userId', "reference": 'refUserId', "filter": "string", "width": 120
                },
                {
                    "header": ViewUtil.getLabel('updateUserId'), "dataIndex": 'updateUserId', "reference": 'refUpdateUserId', "filter": "string", "width": 120
                }
			]
        },
		{
			"key": "SsrDetail",
			"items": [
				{
					"header":  ViewUtil.getLabel('ssrtype'), "dataIndex": "ssrTpCd", "reference": "refSsrTpCd", "filter": "string", "width": 80
				},
				{
					"header":  ViewUtil.getLabel('trfCd'), "dataIndex": "trfCd", "reference": "refTrfCd", "filter": "string", "width": 100
				},
				{
					"header":  ViewUtil.getLabel('trfDescrSSR'), "dataIndex": "trfDescr", "reference": "refTrfDescr", "filter": "string", "width": 100
				},
				{
					"header":  ViewUtil.getLabel('subTrfCdSSR'), "dataIndex": "subTrfCd", "reference": "refSubTrfCd", "filter": "string", "width": 120
				},
				{
					"header":  ViewUtil.getLabel('costCenter'), "dataIndex": "costCenter", "reference": "refcostCenter", "filter": "string", "width": 100, "hidden": true
				},
				{
					"header":  ViewUtil.getLabel('statusSSR'), "dataIndex": "subStatus", "reference": "refsubStatus", "filter": "string", "width": 60
				},
				{
					"header":  ViewUtil.getLabel('ivNo'), "dataIndex": "ivNo", "reference": "refIvNo", "filter": "string", "width": 100
				},
				{
					"header":  ViewUtil.getLabel('ssrUnit1'), "dataIndex": "unitQty1", "reference": "refUnitQty1", "filter": "string", "width": 80
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header":  ViewUtil.getLabel('ssrUnit2'), "dataIndex": "unitQty2", "reference": "refUnitQty2", "filter": "string", "width": 80
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header":  ViewUtil.getLabel('ssrUnit3'), "dataIndex": "unitQty3", "reference": "refUnitQty3", "filter": "string", "width": 80
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header":  ViewUtil.getLabel('ttQty'), "dataIndex": "amount", "reference": "reftotalAmount", "filter": "string", "width": 100
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000');
					}
				},
				{
					"header":  ViewUtil.getLabel('aplRateSSR'), "dataIndex": "aplyUnitPrc", "reference": "refAplyUnitPrc", "filter": "string", "width": 120
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header":  ViewUtil.getLabel('gstTpCd'), "dataIndex": "gstTpCd", "reference": "refGstTpCd", "filter": "string", "width": 120
				},
				{
					"header":  ViewUtil.getLabel('AmtExcl'), "dataIndex": "totalAmount", "reference": "refTotalAmount", "filter": "string", "width": 150
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header":  ViewUtil.getLabel('gstValue'), "dataIndex": "gstValue", "reference": "refGstValue", "filter": "string", "width": 120
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header":  ViewUtil.getLabel('gstAmount'), "dataIndex": "gstAmount", "reference": "refGstAmount", "filter": "string", "width": 130
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header":  ViewUtil.getLabel('AmtTTIn'), "dataIndex": "payableAmount", "reference": "refPayableAmount", "filter": "string", "width": 180
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
			
			]
		},
        {
            "key": "DataGathering",
			"items": [ 	
                {
					"xtype": "rownumberer", "width" : 50, "align" : "center", "locked": true
				},
				{
                    "header": ViewUtil.getLabel('vessel'), "dataIndex": 'vslCallId', "reference": 'ctljpvc', "filter": "string", "width": 150, "locked": true
                },
				{
                    "header": ViewUtil.getLabel('datagatheringatb'), "dataIndex": 'atb', "reference": 'ctlatb', "filter": "string", "width": 170
                },
				{
                    "header": ViewUtil.getLabel('datagatheringatw'), "dataIndex": 'atw', "reference": 'ctlatw', "filter": "string", "width": 170
                },
				{
                    "header": ViewUtil.getLabel('datagatheringatc'), "dataIndex": 'atc', "reference": 'ctlatc', "filter": "string", "width": 170
                },
                {
                    "header": ViewUtil.getLabel('datagatheringatu'), "dataIndex": 'atu', "reference": 'ctlatu', "filter": "string", "width": 170
                },
                {
                    "header": ViewUtil.getLabel('datagatheringberth'), "dataIndex": 'berth', "reference": 'ctlberth', "filter": "string", "width": 100
                },
                {
                    "header": ViewUtil.getLabel('datagatheringcargoType'), "dataIndex": 'cargoType', "reference": 'ctlcargoType', "filter": "string", "width": 100
                },
                {
                    "header": ViewUtil.getLabel('datagatheringwarehouseId'), "dataIndex": 'warehouseId', "reference": 'ctlwarehouseId', "filter": "string", "width": 100
                },
                {
                    "header": ViewUtil.getLabel('datagatheringimRecclCd'), "dataIndex": 'imRecclCd', "reference": 'ctlimRecclCd', "filter": "string", "width": 150
                },
                {
                    "header": ViewUtil.getLabel('datagatheringexRecclCd'), "dataIndex": 'exRecclCd', "reference": 'ctlexRecclCd', "filter": "string", "width": 150
                },
                {
                    "header": ViewUtil.getLabel('datagatheringstatus'), "dataIndex": 'status', "reference": 'ctlstatus', "filter": "string", "width": 100
                },
                {
                    "header": ViewUtil.getLabel('datagatheringgatheredDate'), "dataIndex": 'gatheredDate', "reference": 'ctlgatheredDate', "filter": "string", "width": 120
                },
                {
                    "header": ViewUtil.getLabel('datagatheringgatheringStaff'), "dataIndex": 'gatheringStaff', "reference": 'ctlgatheringStaff', "filter": "string", "width": 120
                },
                {
                    "xtype": 'actioncolumn', "header": ViewUtil.getLabel('datagatheringmarineCharge'), "dataIndex": 'marineCharge', "reference": 'ctlmarineCharge', "width": 130,
                    "items": [{
                        getClass: function (value, meta, record) {
                                return (record.data.marineCharge === 'Y') ? 'x-fa fa-check green' : '';
                        }
                    }]
                },
                {
                    "header": ViewUtil.getLabel('datagatheringpayer'), "dataIndex": 'payer', "reference": 'ctlpayer', "filter": "string", "width": 100
                },
                {
                    "header": ViewUtil.getLabel('datagatheringshippingAgent'), "dataIndex": 'shippingAgent', "reference": 'ctlshippingAgent', "filter": "string", "width": 130
                },
                {
                    "header": ViewUtil.getLabel('datagatheringversion'), "dataIndex": 'version', "reference": 'ctlversion', "filter": "string", "width": 100
                }
			]
        },
		{
			"key": "DataGatheringDetailCargoInfoDetailInfomation",
			"items": [
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationreferenceNo'), "dataIndex": "referenceNo", "reference": "refCargoDetailReferenceNo", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationoperationNo'), "dataIndex": "operationNo", "reference": "refCargoDetailOperationNo", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationcategory'), "dataIndex": "category", "reference": "refCargoDetailCategory", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationdelivery'), "dataIndex": "delivery", "reference": "refCargoDetailDelivery", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationcargoType'), "dataIndex": "cargoType", "reference": "refCargoDetailCargoType", "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationcommodity'), "dataIndex": "commodity", "reference": "refCargoDetailCommodity", "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationdgClass'), "dataIndex": "dgClass", "reference": "refCargoDetailDgClass", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationpackageType'), "dataIndex": "packageType", "reference": "refCargoDetailPackageType", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationtransportType'), "dataIndex": "transportType", "reference": "refCargoDetailTransportType", "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationunit1'), "dataIndex": "unit1", "reference": "refCargoDetailUnit1", "filter": "string", "width": 100, "align":"right",
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationunit2'), "dataIndex": "unit2", "reference": "refCargoDetailUnit2", "filter": "string", "width": 100, "align":"right",
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationunit3'), "dataIndex": "unit3", "reference": "refCargoDetailUnit3", "filter": "string", "width": 100, "align":"right",
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationwgt'), "dataIndex": "wgt", "reference": "refCargoDetailWgt", "filter": "string", "width": 100, "align":"right",
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationtonnage'), "dataIndex": "tonnage", "reference": "refCargoDetailTonnage", "filter": "string", "width": 100, "align":"right",
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationpkgQty'), "dataIndex": "pkgQty", "reference": "refCargoDetailPkgQty", "filter": "string", "width": 100, "align":"right",
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationopWgt'), "dataIndex": "opWgt", "reference": "refCargoDetailOpWgt", "filter": "string", "width": 100, "align":"right",
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationopMsrmt'), "dataIndex": "opMsrmt", "reference": "refCargoDetailOpMsrmt", "filter": "string", "width": 100, "align":"right",
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationopPkgQty'), "dataIndex": "opPkgQty", "reference": "refCargoDetailOpPkgQty", "filter": "string", "width": 100, "align":"right",
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationworkDate'), "dataIndex": "workDate", "reference": "refCargoDetailWorkDate", "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationshft'), "dataIndex": "shft", "reference": "refCargoDetailShft", "filter": "string", "width": 170
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationtariffCode'), "dataIndex": "tariffCode", "reference": "refCargoDetailTariffCode", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationsubTariffCode'), "dataIndex": "subTariffCode", "reference": "refCargoDetailSubTariffCode", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationtariffDesc'), "dataIndex": "tariffDesc", "reference": "refCargoDetailTariffDesc", "filter": "string", "width": 170
				},
			]
		},
		{
			"key": "DataGatheringDetailGatheredData",
			"items": [
				{
					"xtype": "checkcolumn",
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatabbtCheck'), "dataIndex": "bbtCheck", "reference": "refGatheredBbtCheck", "filter": "string", "width": 100,
					/*editor: {
						xtype: 'checkbox'
					},*/
					"listeners": {
						"checkchange": "onDetailChecked"
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatawaiverDescr'), "dataIndex": "waiverDescr", "reference": "refGatheredWaiverDescr", "filter": "string", "width": 100,
					"editor": {
						"xtype": "textfield",
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatapayer'), "dataIndex": "payer", "reference": "refGatheredPayer", "filter": "list", "width": 80
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatatariffCode'), "dataIndex": "tariffCode", "reference": "refGatheredTariffCode", "filter": "list", "width": 100
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatasubTariffCode'), "dataIndex": "subTariffCode", "reference": "refGatheredSubTariffCode", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddataprefix'), "dataIndex": "prefix", "reference": "refGatheredPrefix", "filter": "list", "width": 100
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatatariffType'), "dataIndex": "tariffType", "reference": "refGatheredTariffType", "filter": "list", "width": 100
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatatariffDesc'), "dataIndex": "tariffDesc", "reference": "refGatheredTariffDesc", "filter": "string", "width": 400
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatarefNo'), "dataIndex": "refNo", "reference": "refGatheredRefNo", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddataunit1'), "dataIndex": "unit1", "reference": "refGatheredUnit1", "filter": "string", "width": 80, "align" : "right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddataunit2'), "dataIndex": "unit2", "reference": "refGatheredUnit2", "filter": "string", "width": 80, "align" : "right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddataunit3'), "dataIndex": "unit3", "reference": "refGatheredUnit3", "filter": "string", "width": 80, "align" : "right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddataaplyRate'), "dataIndex": "aplyRate", "reference": "refGatheredAplyRate", "filter": "string", "width": 130, "align" : "right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatastdRate'), "dataIndex": "stdRate", "reference": "refGatheredStdRate", "filter": "string", "width": 100, "align" : "right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddataaplyAmt'), "dataIndex": "aplyAmt", "reference": "refGatheredAplyAmt", "filter": "string", "width": 130, "align" : "right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatagstType'), "dataIndex": "gstType", "reference": "refGatheredGstType", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatagstValue'), "dataIndex": "gstValue", "reference": "refGatheredGstValue", "filter": "string", "width": 100, "align" : "right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatagstAmt'), "dataIndex": "gstAmt", "reference": "refGatheredGstAmt", "filter": "string", "width": 110, "align" : "right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatatotalAmt'), "dataIndex": "totalAmt", "reference": "refGatheredTotalAmt", "filter": "string", "width": 190, "align" : "right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatacostcenter'), "dataIndex": "costcenter", "reference": "refGatheredCostcenter", "filter": "list", "width": 100
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatastatus'), "dataIndex": "status", "reference": "refGatheredStatus", "filter": "list", "width": 80
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatainvoiceNo'), "dataIndex": "invoiceNo", "reference": "refGatheredInvoiceNo", "filter": "list", "width": 130
				},
				{
					"header": ViewUtil.getLabel('datagatheringdetailgathereddatascrId'), "dataIndex": "scrId", "reference": "refGatheredScrId", "filter": "string", "width": 100
				}]
		},
		{
			"key": "DataGatheringDetailCargoInfoSummarizeInformation",
			"items": [
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationreferenceNo'), "dataIndex": "referenceNo", "reference": "refCargoSummarizeReferenceNo", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationjobTpCd'), "dataIndex": "jobTpCd", "reference": "refCargoSummarizeJobTpCd", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationpackageType'), "dataIndex": "packageType", "reference": "refCargoSummarizePackageType", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationcommodity'), "dataIndex": "commodity", "reference": "refCargoSummarizeCommodity", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationfwrAgnt'), "dataIndex": "fwrAgnt", "reference": "refCargoSummarizeFwrAgnt", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationdelivery'), "dataIndex": "delivery", "reference": "refCargoSummarizeDelivery", "filter": "string", "width": 150
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationdocWgt'), "dataIndex": "docWgt", "reference": "refCargoSummarizeDocWgt", "filter": "string", "width": 100, "align":"right"
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationdocMsrmt'), "dataIndex": "docMsrmt", "reference": "refCargoSummarizeDocMsrmt", "filter": "string", "width": 100, "align":"right"
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationdocPkgQty'), "dataIndex": "docPkgQty", "reference": "refCargoSummarizeDocPkgQty", "filter": "string", "width": 100, "align":"right"
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationblWgt'), "dataIndex": "blWgt", "reference": "refCargoSummarizeBlWgt", "filter": "string", "width": 100, "align":"right"
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationblMsrmt'), "dataIndex": "blMsrmt", "reference": "refCargoSummarizeBlMsrmt", "filter": "string", "width": 100, "align":"right"
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationblPkgQty'), "dataIndex": "blPkgQty", "reference": "refCargoSummarizeBlPkgQty", "filter": "string", "width": 100, "align":"right"
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationopWgt'), "dataIndex": "opWgt", "reference": "refCargoSummarizeOpWgt", "filter": "string", "width": 100, "align":"right"
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationopMsrmt'), "dataIndex": "opMsrmt", "reference": "refCargoSummarizeOpMsrmt", "filter": "string", "width": 100, "align":"right"
				},
				{
					"header": ViewUtil.getLabel('dataGatheringDetailCargoSummarizeInformationopPkgQty'), "dataIndex": "opPkgQty", "reference": "refCargoSummarizeOpPkgQty", "filter": "string", "width": 100, "align":"right"
				}
				]
		},
		{
			"key": "DataGatheringDetailEquipmentInformation",
			"items":  [
				{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinequType'), "dataIndex": "equType", "reference": "refEquipmentEquType", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinpayer'), "dataIndex": "payer", "reference": "refEquipmentPayer", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioindate'), "dataIndex": "date", "reference": "refEquipmentDate", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinshift'), "dataIndex": "shift", "reference": "refEquipmentShift", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioincapacity'), "dataIndex": "capacity", "reference": "refEquipmentCapacity", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioincostct'), "dataIndex": "costct", "reference": "refEquipmentCostct", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioingearType'), "dataIndex": "gearType", "reference": "refEquipmentGearType", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinfromTime'), "dataIndex": "fromTime", "reference": "refEquipmentFromTime", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatiointoTime'), "dataIndex": "toTime", "reference": "refEquipmentToTime", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatiointotalHrs'), "dataIndex": "totalHrs", "reference": "refEquipmentTotalHrs", "filter": "string", "width": 100,
				"align":"right"
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinnos'), "dataIndex": "nos", "reference": "refEquipmentNos", "filter": "string", "width": 100,
				"align":"right"
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioincgTpCd'), "dataIndex": "cgTpCd", "reference": "refEquipmentCgTpCd", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatiointrfCd'), "dataIndex": "trfCd", "reference": "refEquipmentTrfCd", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinsubTrfCd'), "dataIndex": "subTrfCd", "reference": "refEquipmentSubTrfCd", "filter": "string", "width": 100
			},
			{
				"header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatiointrfDescr'), "dataIndex": "trfDescr", "reference": "refEquipmentTrfDescr", "filter": "string", "width": 100
			},
			]
		},
        {
        	"key": "DataGatheringNonVesselOpeSum",
			"items": [
				{
					"header": ViewUtil.getLabel('GtrNonJpvcGridno'),
					"xtype": "rownumberer",
					"width" : 50,
					"align" : "center"
				},	
				{
					"header": ViewUtil.getLabel('GtrNonJpvcGridpayer'),
					"dataIndex": "payer",
					"reference": "refPayerOpeSum",
					"filter": "string",
					"width": 70
				},{
					"xtype": "checkcolumn",
					"header": ViewUtil.getLabel('GtrNonJpvcGridcargo'),
					"dataIndex": "cargo",
					"reference": "refCargo",
					"filter": "string",
					"width": 70,
					"listeners": {
						beforecheckchange: function() { 
							return false;
						}
					}
				},
				{
					"xtype": "checkcolumn",
					"header": ViewUtil.getLabel('GtrNonJpvcGridvsr'),
					"dataIndex": "vsr",
					"reference": "refVsr",
					"filter": "string",
					"width": 70,
					"listeners": {
						beforecheckchange: function() { 
							return false;
						}
					}
				},
				{
					"xtype": "checkcolumn",
					"header": ViewUtil.getLabel('GtrNonJpvcGridmega'),
					"dataIndex": "mega",
					"reference": "refMega",
					"filter": "string",
					"width": 70,
					"listeners": {
						beforecheckchange: function() { 
							return false;
						}
					}
				},
				{
					"xtype": "checkcolumn",
					"header": ViewUtil.getLabel('GtrNonJpvcGridssr'),
					"dataIndex": "ssr",
					"reference": "refSsr",
					"filter": "string",
					"width": 70,
					"listeners": {
						beforecheckchange: function() { 
							return false;
						}
					}
				},
				{
					"header": ViewUtil.getLabel('GtrNonJpvcGridstatus'),
					"dataIndex": "status",
					"reference": "refStatusOpeSum",
					"filter": "string",
					"width": 170
				},

			]
		},
		{
			"key": "DataGatheringNonVesselOpeDetail",
			"items": [
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcNo'),
				    "xtype": "rownumberer",
				    "width" : 50,
				    "align" : "center"
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridrsNm'),
				    "dataIndex": "rsNm",
				    "reference": "refRsNm",
				    "filter": "string",
				    "width": 170,
				    //"align" : "left"
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridcgNo'),
				    "dataIndex": "cgNo",
				    "reference": "refCgNo",
				    "filter": "string",
				    "width": 80
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridpayer'),
				    "dataIndex": "payer",
				    "reference": "refPayerOpeDetail",
				    "filter": "string",
				    "width": 60
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridfwrAgnt'),
				    "dataIndex": "fwrAgnt",
				    "reference": "refFwrAgnt",
				    "filter": "string",
				    "width": 60
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridstatus'),
				    "dataIndex": "status",
				    "reference": "refStatusOpeDetail",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridcgTpCd'),
				    "dataIndex": "cgTpCd",
				    "reference": "refCgTpCd",
				    "filter": "string",
				    "width": 90
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridcommodity'),
				    "dataIndex": "commodity",
				    "reference": "refCommodity",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridOpeClassCd'),  //					    		<com:TDataGridColumn "header"Text="OPE CLASS_opeClassCd,
				    "dataIndex": "opeClassCd",   //					    		<com:TDataGridColumn "header"Text="OPE CLASS_opeClassCd",
				    "reference": "refopeClassCd", //					    		<com:TDataGridColumn "header"Text="OPE CLASS_opeClassCd",
				    "filter": "string",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridhdlInStDt'),
				    "dataIndex": "hdlInStDt",
				    "reference": "refHdlInStDt",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridhdlInEndDt'),
				    "dataIndex": "hdlInEndDt",
				    "reference": "refHdlInEndDt",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridhdlOutStDt'),
				    "dataIndex": "hdlOutStDt",
				    "reference": "refHdlOutStDt",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridhdlOutEndDt'),
				    "dataIndex": "hdlOutEndDt",
				    "reference": "refHdlOutEndDt",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridworkStartDt'),
				    "dataIndex": "workStartDt",
				    "reference": "refWorkStartDt",
				    "filter": "string",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridworkEndDt'),
				    "dataIndex": "workEndDt",
				    "reference": "refWorkEndDt",
				    "filter": "string",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridmsrmt'),
				    "dataIndex": "msrmt",
				    "reference": "refMsrmt",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridwgt'),
				    "dataIndex": "wgt",
				    "reference": "refWgt",
				    "filter": "string",
				    "width": 60
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridpkgQty'),
				    "dataIndex": "pkgQty",
				    "reference": "refPkgQty",
				    "filter": "string",
				    "width": 60
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGriddelvTpCd'),
				    "dataIndex": "delvTpCd",
				    "reference": "refDelvTpCd",
				    "filter": "string",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridworkLoc'),
				    "dataIndex": "workLoc",
				    "reference": "refWorkLoc",
				    "filter": "string",
				    "width": 80
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridcapacity'),
				    "dataIndex": "capacity",
				    "reference": "refCapacity",
				    "filter": "string",
				    "width": 90
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridworkYMD'),
				    "dataIndex": "workYMD",
				    "reference": "refWorkYMD",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridshft'),
				    "dataIndex": "shft",
				    "reference": "refShft",
				    "filter": "string",
				    "width": 70
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridmegaStatus'),
				    "dataIndex": "megaStatus",
				    "reference": "refMegaStatus",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridsubmitDt'),
				    "dataIndex": "submitDt",
				    "reference": "refSubmitDt",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridgatherDate'),
				    "dataIndex": "gatherDate",
				    "reference": "refGatherDate",
				    "filter": "string",
				    "width": 130
				},
				{
				    "header": ViewUtil.getLabel('GtrNonJpvcGridversion'),
				    "dataIndex": "version",
				    "reference": "refVersion",
				    "filter": "string",
				    "width": 130
				},
			]
		},
		{
			"key": "DataGatheringForNonVesselCargoTab",
			"items": [
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationreferenceNo'),
				    "dataIndex": "referenceNo",
				    "reference": "refReferenceNo",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationoperationNo'),
				    "dataIndex": "operationNo",
				    "reference": "refOperationNo",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationtariffCode'),
				    "dataIndex": "tariffCode",
				    "reference": "refTariffCode",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationPayer'),
				    "dataIndex": "fwrAgnt",
				    "reference": "refFwrAgnt",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationsubTariffCode'),
				    "dataIndex": "subTariffCode",
				    "reference": "refSubTariffCode",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationtariffDesc'),
				    "dataIndex": "tariffDesc",
				    "reference": "refTariffDesc",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationcategory'),
				    "dataIndex": "category",
				    "reference": "refCategory",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationdelivery'),
				    "dataIndex": "delivery",
				    "reference": "refDelivery",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationcargoType'),
				    "dataIndex": "cargoType",
				    "reference": "refCargoType",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationcommodity'),
				    "dataIndex": "commodity",
				    "reference": "refCommodity",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationdgClass'),
				    "dataIndex": "dgClass",
				    "reference": "refDgClass",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationpackageType'),
				    "dataIndex": "packageType",
				    "reference": "refPackageType",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationtransportType'),
				    "dataIndex": "transportType",
				    "reference": "refTransportType",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationunit1'),
				    "dataIndex": "unit1",
				    "reference": "refUnit1",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationunit2'),
				    "dataIndex": "unit2",
				    "reference": "refUnit2",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationunit3'),
				    "dataIndex": "unit3",
				    "reference": "refUnit3",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationwgt'),
				    "dataIndex": "wgt",
				    "reference": "refWgt",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationtonnage'),
				    "dataIndex": "tonnage",
				    "reference": "refTonnage",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationpkgQty'),
				    "dataIndex": "pkgQty",
				    "reference": "refPkgQty",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationworkDate'),
				    "dataIndex": "workDate",
				    "reference": "refWorkDate",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('dataGatheringDetailCargoDetailInformationshft'),
				    "dataIndex": "shft",
				    "reference": "refShft",
				    "filter": "string",
				    "width": 170
				},
			]
		},
		{
			"key": "DataGatheringNonVesselDetailGatheredTab",
			"items": [
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatabbtCheck'),
				    "xtype": "checkcolumn",    
				    "dataIndex": "bbtCheck",
				    "reference": "refGatheredBbtCheck",
				    "filter": "string",
				    "width": 120,
				    /*"editor": {
				        "xtype": "checkbox"
				    },*/
				    "listeners": {
				        checkchange: "onDetailChecked"
				    }
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatawaiverDescr'),
				    "dataIndex": "waiverDescr",
				    "reference": "refWaiverDescr",
				    "filter": "string",
				    "width": 100,
				    "editor": {
				        "xtype": "textfield",
				    },
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store){
				        metaData.style =  'background: #ffff80;';
				        return value;
				    }
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatapayer'),
				    "dataIndex": "payer",
				    "reference": "refPayer",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddataprefix'),
				    "dataIndex": "prefix",
				    "reference": "refPrefix",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatatariffType'),
				    "dataIndex": "tariffType",
				    "reference": "refTariffType",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatatariffCode'),
				    "dataIndex": "tariffCode",
				    "reference": "refTariffCode",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatasubTariffCode'),
				    "dataIndex": "subTariffCode",
				    "reference": "refSubTariffCode",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatatariffDesc'),
				    "dataIndex": "tariffDesc",
				    "reference": "refTariffDesc",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatarefNo'),
				    "dataIndex": "refNo",
				    "reference": "refRefNo",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddataunit1'),
				    "dataIndex": "unit1",
				    "reference": "refUnit1",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddataunit2'),
				    "dataIndex": "unit2",
				    "reference": "refUnit2",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddataunit3'),
				    "dataIndex": "unit3",
				    "reference": "refUnit3",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddataaplyRate'),
				    "dataIndex": "aplyRate",
				    "reference": "refAplyRate",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatastdRate'),
				    "dataIndex": "stdRate",
				    "reference": "refStdRate",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddataaplyAmt'),
				    "dataIndex": "aplyAmt",
				    "reference": "refAplyAmt",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatagstType'),
				    "dataIndex": "gstType",
				    "reference": "refGstType",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatagstValue'),
				    "dataIndex": "gstValue",
				    "reference": "refGstValue",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatagstAmt'),
				    "dataIndex": "gstAmt",
				    "reference": "refGstAmt",
				    "filter": "string",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatatotalAmt'),
				    "dataIndex": "totalAmt",
				    "reference": "refTotalAmt",
				    "filter": "string",
				    "width": 250
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatastatus'),
				    "dataIndex": "status",
				    "reference": "refStatus",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddatainvoiceNo'),
				    "dataIndex": "invoiceNo",
				    "reference": "refInvoiceNo",
				    "filter": "list",
				    "width": 100
				},
				{
				    "header": ViewUtil.getLabel('datagatheringdetailgathereddataversion'),
				    "dataIndex": "version",
				    "reference": "refVersion",
				    "filter": "string",
				    "width": 100
				}
			]
		},
		{
			"key": "DataGatheringNonVesselDetailMegaTab",
			"items": [
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcMegaInformegaNo'),
				    "dataIndex": "megaNo",
				    "reference": "refMegaNo",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcMegaInforworkDt'),
				    "dataIndex": "workDt",
				    "reference": "refWorkDt",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcMegaInforshift'),
				    "dataIndex": "shift",
				    "reference": "refShift",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcMegaInforsubmitDt'),
				    "dataIndex": "submitDt",
				    "reference": "refSubmitDt",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcMegaInforapprvDt'),
				    "dataIndex": "apprvDt",
				    "reference": "refApprvDt",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcMegaInformegaStatus'),
				    "dataIndex": "megaStatus",
				    "reference": "refMegaStatus",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcMegaInforpayer'),
				    "dataIndex": "payer",
				    "reference": "refPayer",
				    "filter": "string",
				    "width": 170
				}
			]
		},
		{
			"key": "DataGatheringNonVesselDetailEqTab",
			"items": [
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinequType'),
			    "dataIndex": "equType",
			    "reference": "refEquType",
			    "filter": "string",
			    "width": 100
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioindate'),
			    "dataIndex": "date",
			    "reference": "refDate",
			    "filter": "string",
			    "width": 100
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinshift'),
			    "dataIndex": "shift",
			    "reference": "refShift",
			    "filter": "string",
			    "width": 50
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioincapacity'),
			    "dataIndex": "capacity",
			    "reference": "refCapacity",
			    "filter": "string",
			    "width": 170
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioingearType'),
			    "dataIndex": "gearType",
			    "reference": "refGearType",
			    "filter": "string",
			    "width": 170
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinfromTime'),
			    "dataIndex": "fromTime",
			    "reference": "refFromTime",
			    "filter": "string",
			    "width": 170
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatiointoTime'),
			    "dataIndex": "toTime",
			    "reference": "refToTime",
			    "filter": "string",
			    "width": 170
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatiointotalHrs'),
			    "dataIndex": "totalHrs",
			    "reference": "refTotalHrs",
			    "filter": "string",
			    "width": 170
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinnos'),
			    "dataIndex": "nos",
			    "reference": "refNos",
			    "filter": "string",
			    "width": 50
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioincgTpCd'),
			    "dataIndex": "cgTpCd",
			    "reference": "refCgTpCd",
			    "filter": "string",
			    "width": 120
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatiointrfCd'),
			    "dataIndex": "trfCd",
			    "reference": "refTrfCd",
			    "filter": "string",
			    "width": 120
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatioinsubTrfCd'),
			    "dataIndex": "subTrfCd",
			    "reference": "refSubTrfCd",
			    "filter": "string",
			    "width": 120
			},
			{
			    "header": ViewUtil.getLabel('dataGatheringDetailEquipmentInformatiointrfDescr'),
			    "dataIndex": "trfDescr",
			    "reference": "refTrfDescr",
			    "filter": "string",
			    "width": 170
			}			
			]
		},
		{
			"key": "DataGatheringNonVesselDetailSSRTab",
				"items": [
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfotrfCd'),
				    "dataIndex": "trfCd",
				    "reference": "refTrfCd",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfosubTrfCd'),
				    "dataIndex": "subTrfCd",
				    "reference": "refSubTrfCd",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfodescr'),
				    "dataIndex": "descr",
				    "reference": "refDescr",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfossrTpCd_TP_CD'),
				    "dataIndex": "ssrTpCd_TP_CD",
				    "reference": "refSsrTpCd_TP_CD",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfounit1Qty'),
				    "dataIndex": "unit1Qty",
				    "reference": "refUnit1Qty",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfounit2Qty'),
				    "dataIndex": "unit2Qty",
				    "reference": "refUnit2Qty",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfounit3Qty'),
				    "dataIndex": "unit3Qty",
				    "reference": "refUnit3Qty",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfoapplyUnitPrc'),
				    "dataIndex": "applyUnitPrc",
				    "reference": "refApplyUnitPrc",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfogstTpCd'),
				    "dataIndex": "gstTpCd",
				    "reference": "refGstTpCd",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfogstValue'),
				    "dataIndex": "gstValue",
				    "reference": "refGstValue",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfogstPercent'),
				    "dataIndex": "gstPercent",
				    "reference": "refGstPercent",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfogstAmount'),
				    "dataIndex": "gstAmount",
				    "reference": "refGstAmount",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfounitPrc'),
				    "dataIndex": "unitPrc",
				    "reference": "refUnitPrc",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfoivPrfx'),
				    "dataIndex": "ivPrfx",
				    "reference": "refIvPrfx",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfopkgNm'),
				    "dataIndex": "pkgNm",
				    "reference": "refPkgNm",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfobillTpCd'),
				    "dataIndex": "billTpCd",
				    "reference": "refBillTpCd",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfossrNo'),
				    "dataIndex": "ssrNo",
				    "reference": "refSsrNo",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInforefNo'),
				    "dataIndex": "refNo",
				    "reference": "refRefNo",
				    "filter": "string",
				    "width": 170
				},
				{
				    "header": ViewUtil.getLabel('gaheringNonJpvcSSRInfocostCentCd'),
				    "dataIndex": "costCentCd",
				    "reference": "refCostCentCd",
				    "filter": "string",
				    "width": 170
				}
			]
		},
		{
			"key": "ProofsheetMain",
			"items": [
                {
                    "header": ViewUtil.getLabel('no'),
                    "xtype": "rownumberer",
                    "width": 40,
                    "sortable": false				    	            		    
                },
                {
                    "header": ViewUtil.getLabel('proofSheetStatus'),
                    "reference": "refStatus",
                    "dataIndex": "status",
                    "filter": "list",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('proofSheetPayer'),
                    "reference": "refPayer",
                    "dataIndex": "payer",
                    "filter": "list",
                    "width": 100
                },
				{
                    "header": ViewUtil.getLabel('payerName'),
                    "reference": "refPayerName",
                    "dataIndex": "payerName",
                    "filter": "list",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('proofSheetPrefix'),
                    "reference": "refPrefix",
                    "dataIndex": "prefix",
                    "filter": "list",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('userRefNo'),
                    "reference": "refUserRefNo",
                    "dataIndex": "userRefNo",
                    "filter": "list",
                    "width": 150
                },
                {
                    "header": ViewUtil.getLabel('subBlOrSn'),
                    "reference": "refSubBlSnNo",
                    "dataIndex": "cgNo",
                    "filter": "list",
                    "width": 150
                },
                {
                    "header": ViewUtil.getLabel('proofSheetRefNo'),
                    "reference": "refRefNoGrid",
                    "dataIndex": "refNo",
                    "filter": "list",
                    "width": 100,
                    "hidden": true
                },
                {
                    "header": ViewUtil.getLabel('trfTpCd'),
                    "reference": "refTariffTp",
                    "filter": "list",
                    "dataIndex": "tariffTypeName",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('trfCd'),
                    "reference": "refTariffCd",
                    "dataIndex": "tariffCode",
                    "filter": "list",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('proofSheetSubTariffCode'),
                    "reference": "refSubTariffCode",
                    "dataIndex": "subTariffCode",
                    "width": 120
                },
                {
                    "header": ViewUtil.getLabel('proofSheetTariffDesc'),
                    "reference": "refTariffDesc",
                    "dataIndex": "tariffDesc",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('proofSheetCostCenter'),
                    "reference": "refCostCenter",
                    "dataIndex": "costCentreCode",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('proofSheetUnit1'),
                    "reference": "refProofSheetUnit1",
                    "dataIndex": "unit1",
                    "width": 100,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetUnit2'),
                    "reference": "refProofSheetUnit2",
                    "dataIndex": "unit2",
                    "width": 100,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetUnit3'),
                    "reference": "refProofSheetUnit3",
                    "dataIndex": "unit3",
                    "width": 100,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetApplyRate'),
                    "reference": "refApplyRate",
                    "dataIndex": "aplyRate",
                    "width": 100,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetSTDRate'),
                    "reference": "refSTDRate",
                    "dataIndex": "stdRate",
                    "width": 100,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetAmountRm'),
                    "reference": "refAmountRm",
                    "dataIndex": "aplyAmt",
                    "width": 100,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetGSTType'),
                    "reference": "refGSTType",
                    "dataIndex": "gstType",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('proofSheetGSTValue'),
                    "reference": "refGSTValue",
                    "dataIndex": "gstValue",
                    "width": 100,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetGSTAmount'),
                    "reference": "refGSTAmount",
                    "dataIndex": "gstAmt",
                    "width": 100,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetTotalAmount'),
                    "reference": "refTotalAmount",
                    "dataIndex": "totalAmt",
                    "width": 150,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetAmountExchange'),
                    "reference": "refAmountExchange",
                    "dataIndex": "aplyAmtUSD",
                    "width": 150,
                    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
                },
                {
                    "header": ViewUtil.getLabel('proofSheetInvoiceNo'),
                    "reference": "refInvoiceNo",
                    "dataIndex": "invoiceNo",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('screenId'),
                    "reference": "refScreenId",
                    "dataIndex": "scrId",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('proofSheetVersion'),
                    "reference": "refVersion",
                    "dataIndex": "version",
                    "width": 100
                }
			]
		},
		{
			"key": "ProofsheetTariffList",
			"items": [
                {
                    "xtype": "checkcolumn",
                    "dataIndex": "trfCheck",
                    "reference": "ctlTrfCheck",
                    "width":40,
                    "listeners": {
                        "beforecheckchange": function (me, rowIndex, checked, record, e, eOpts) {
                            return false;
                        }
                    },
                    "editor": {
                        "xtype": "checkbox"
                    }
                },
                {
                    "header": ViewUtil.getLabel('trfTpCd'),
                    "reference": "refTariffTp",
                    "dataIndex": "trfTpCdNm",
                    "width": 100
                },{
                    "header": ViewUtil.getLabel('trfCd'),
                    "reference": "refTariffCd",
                    "dataIndex": "trfCd",
                    "width": 100
                },{
                    "header": ViewUtil.getLabel('proofSheetSubTrfCd'),
                    "reference": "refSubTariffCd",
                    "dataIndex": "subTrfCd",
                    "width": 100
                },{
                    "header": ViewUtil.getLabel('proofSheetDescr'),
                    "reference": "refDescr",
                    "dataIndex": "descr",
                    "width": 100
                }
			]
		},
		{
			"key": "StoreRentGatheredDataTab",
			"items": [
				{
				    "header": ViewUtil.getLabel('storeRentBBTCheck'),
				    "reference": "refBBTCheck",
				    "xtype": "checkcolumn",
				    "dataIndex": "bbtCheck",
				    "width": 100,
				    "disabled":false,
				    "editable": true,
				    "listeners": {
				        checkchange: "onBBTColumnCheckChange"
				    },
				    "editor":{
				        "xtype":"checkbox",
				        "listeners":{
				            change: "onBBTCheckChange"
				        }
				    }
				},{
				    "header": ViewUtil.getLabel('remark'),
				    "dataIndex": "waiverDescr",
				    "width": 100,
				    "reference": "refColRemark",
				    "align":"left",
				    "editable": true,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: #fffeab;';
				        return value;
				    },
				    "editor":{
				        "xtype":"textfield",
				        "reference":"refTxtCgShftRmk",
				        "selectOnFocus":true
				    }
				},{
				    "header": ViewUtil.getLabel('payer'),
				    "dataIndex": "payer",
				    "reference": "refpayerGrid",
				    "filter": "string",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('prefix'),
				    "dataIndex": "prefix",
				    "reference": "refPrefix",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentTariffCode'),
				    "dataIndex": "tariffCode",
				    "reference": "refTariffCode",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentTariffType'),
				    "dataIndex": "tariffType",
				    "reference": "refTariffType",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentRefNo1'),
				    "dataIndex": "refNo",
				    "reference": "refRefNo1",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentRefNo2'),
				    "dataIndex": "refNo3",
				    "reference": "refRefNo3",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentTariffDesc'),
				    "dataIndex": "tariffDesc",
				    "reference": "refTariffDesc",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentUnit1'),
				    "dataIndex": "unit1",
				    "reference": "refUnit1",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentUnit2'),
				    "dataIndex": "unit2",
				    "reference": "refUnit2",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentUnit3'),
				    "dataIndex": "unit3",
				    "reference": "refUnit3",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentAplRate'),
				    "dataIndex": "aplyRate",
				    "reference": "refAplRate",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentSTDRate'),
				    "dataIndex": "stdRate",
				    "reference": "refSTDRate",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('AmtExcl'),
				    "dataIndex": "aplyAmt",
				    "reference": "refAmtExcl",
				    "filter": "string",
				    "width": 170
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentGSTType'),
				    "dataIndex": "gstTpCd",
				    "reference": "refGSTType",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentGSTValue'),
				    "dataIndex": "gstValue",
				    "reference": "refGSTValue",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentGSTAmt'),
				    "dataIndex": "gstAmount",
				    "reference": "refGSTAmt",
				    "filter": "string",
				    "width": 170
				    
				},
				{
				    "header": ViewUtil.getLabel('AmtTTIn'),
				    "dataIndex": "licsNo",
				    "reference": "totalAmount",
				    "filter": "string",
				    "width": 170
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentCostCenter'),
				    "dataIndex": "costcenter",
				    "reference": "refCostCenter",
				    "filter": "string",
				    "width": 120
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentStatus'),
				    "dataIndex": "status",
				    "reference": "refColStatus",
				    "filter": "string",
				    "width": 120
				},
				{
				    "header": ViewUtil.getLabel('ivNo'),
				    "dataIndex": "invoiceNo",
				    "reference": "refIvNo",
				    "filter": "string",
				    "width": 120
				    
				}
			]
		},
		{
			"key": "StoreRentInfoTab",
			"items": [
				{
				    "header": ViewUtil.getLabel('storeRentJPVC'),
				    "dataIndex": "vslCallId",
				    "reference": "refJPVC",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentBLNo'),
				    "dataIndex": "blNo",
				    "reference": "refBLNo",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentGPNo'),
				    "dataIndex": "gatePassNo",
				    "reference": "refGPNo",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentSNNo'),
				    "dataIndex": "shipgNoteNo",
				    "reference": "refSNNo",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentGRNo'),
				    "dataIndex": "grNo",
				    "reference": "refGRNo",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentShipCons'),
				    "dataIndex": "shipgAgnt",
				    "reference": "refShipCons",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentFA'),
				    "dataIndex": "fwrAgnt",
				    "reference": "refFA",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentHIO'),
				    "dataIndex": "cgInOutCd",
				    "reference": "refHIO",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentHIODate'),
				    "dataIndex": "hdlDt",
				    "reference": "refHIODate",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentHIOShift'),
				    "dataIndex": "hdlShftId",
				    "reference": "refHIOShift",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentFreeStrgDay'),
				    "dataIndex": "freeStrgDay",
				    "reference": "refFreeStrgDay",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentStartStrgDate'),
				    "dataIndex": "strgStYmd",
				    "reference": "refStartStrgDate",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentStShift'),
				    "dataIndex": "strgStShft",
				    "reference": "refStShift",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentStorageEndDt'),
				    "dataIndex": "strgEndYmd",
				    "reference": "refStorageEndDt",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentEndShift'),
				    "dataIndex": "strgEndShft",
				    "reference": "refEndShift",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentStrgDays'),
				    "dataIndex": "strgDd",
				    "reference": "refStrgDays",
				    "filter": "string",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: pink;';
				        return value;
				    },
				},
				{
				    "header": ViewUtil.getLabel('atb'),
				    "dataIndex": "atb",
				    "reference": "refATBGrid",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentDisEndDt'),
				    "dataIndex": "disEndDt",
				    "reference": "refDisEndDt",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentHiEndDt'),
				    "dataIndex": "hdlEndDt",
				    "reference": "refHiEndDt",
				    "filter": "string",
				    "width": 120,
				},
				
				{
				    "header": ViewUtil.getLabel('storeRentHIOMT'),
				    "dataIndex": "revsWgt",
				    "reference": "refHIOMT",
				    "filter": "string",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: #fffeab;';
				        return value;
				    },
				    "editor": {
				        "xtype": "numberfield",
				        "minValue":0,
				        "maxValue":999999.999,
				        "align":"right",
				        "decimalPrecision":3,
				        "selectOnFocus":true
				    }
				},
				{
				    "header": ViewUtil.getLabel('storeRentHIOM3'),
				    "dataIndex": "revsMsrmt",
				    "reference": "refHIOM3",
				    "filter": "string",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: #fffeab;';
				        return value;
				    },
				    "editor": {
				        "xtype": "numberfield",
				        "minValue":0,
				        "maxValue":999999.999,
				        "align":"right",
				        "decimalPrecision":3,
				        "selectOnFocus":true
				    }
				},
				{
				    "header": ViewUtil.getLabel('storeRentHIOQTY'),
				    "dataIndex": "revsQty",
				    "reference": "refHIOQTY",
				    "filter": "string",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: #fffeab;';
				        return value;
				    },
				    "editor": {
				        "xtype": "numberfield",
				        "minValue":0,
				        "maxValue":999999.999,
				        "align":"right",
				        "decimalPrecision":3,
				        "selectOnFocus":true
				    }
				},
				{
				    "header": ViewUtil.getLabel('storeRentBalMT'),
				    "dataIndex": "balWgt",
				    "reference": "refBalMT",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentBalM3'),
				    "dataIndex": "balMsrmt",
				    "reference": "refBalM3",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentBalQTY'),
				    "dataIndex": "balQty",
				    "reference": "refBalQTY",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentYN'),
				    "dataIndex": "incldSunYn",
				    "reference": "refYN",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentTonnage'),
				    "dataIndex": "rvnTon",
				    "reference": "refTonnage",
				    "filter": "string",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: pink;';
				        return value;
				    },
				},
				{
				    "header": ViewUtil.getLabel('storeRentDirection'),
				    "dataIndex": "jobPurpCd",
				    "reference": "refDirection",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentWH'),
				    "dataIndex": "whId",
				    "reference": "refWH",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentWHType'),
				    "dataIndex": "whTpCd",
				    "reference": "refWHType",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentCargoType'),
				    "dataIndex": "cgTpCd",
				    "reference": "refCargoType",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentCommodity'),
				    "dataIndex": "cmdtCd",
				    "reference": "refCommodity",
				    "filter": "string",
				    "width": 120,
				    
				}
			]
		},
		{
			"key": "StoreRentSummaryTab",
			"items": [
				{
				    "header": ViewUtil.getLabel('storeRentBLNo'),
				    "dataIndex": "blNo",
				    "reference": "refBLNoTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentGPNo'),
				    "dataIndex": "gatePassNo",
				    "reference": "refGPNoTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentSNNo'),
				    "dataIndex": "shipgNoteNo",
				    "reference": "refSNNoTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentShipCons'),
				    "dataIndex": "shipgAgnt",
				    "reference": "refShipConsTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentFA'),
				    "dataIndex": "fwrAgnt",
				    "reference": "refFATabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentHIO'),
				    "dataIndex": "cgInOutCd",
				    "reference": "refHIOTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentHIODate'),
				    "dataIndex": "hdlDt",
				    "reference": "refHIODateTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},{
				    "header": ViewUtil.getLabel('storeRentHIOMT'),
				    "dataIndex": "revsWgt",
				    "reference": "refHIOMTTabSum",
				    "filter": "string",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: #fffeab;';
				        return value;
				    },
				    editor: {
				        "xtype": "numberfield",
				        "minValue":0,
				        "maxValue":999999.999,
				        "align":"right",
				        "decimalPrecision":3,
				        "selectOnFocus":true
				    }
				},
				{
				    "header": ViewUtil.getLabel('storeRentHIOM3'),
				    "dataIndex": "revsMsrmt",
				    "reference": "refHIOM3TabSum",
				    "filter": "string",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: #fffeab;';
				        return value;
				    },
				    "editor": {
				        "xtype": "numberfield",
				        "minValue":0,
				        "maxValue":999999.999,
				        "align":"right",
				        "decimalPrecision":3,
				        "selectOnFocus":true
				    }
				},
				{
				    "header": ViewUtil.getLabel('storeRentHIOQTY'),
				    "dataIndex": "revsQty",
				    "reference": "refHIOQTYTabSum",
				    "filter": "string",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: #fffeab;';
				        return value;
				    },
				    "editor": {
				        "xtype": "numberfield",
				        "minValue":0,
				        "maxValue":999999.999,
				        "align":"right",
				        "decimalPrecision":3,
				        "selectOnFocus":true
				    }
				},
				{
				    "header": ViewUtil.getLabel('storeRentBalMT'),
				    "dataIndex": "balWgt",
				    "reference": "refBalMTTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentBalM3'),
				    "dataIndex": "balMsrmt",
				    "reference": "refBalM3TabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentBalQTY'),
				    "dataIndex": "balQty",
				    "reference": "refBalQTYTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentTonnage'),
				    "dataIndex": "rvnTon",
				    "reference": "refTonnageTabSum",
				    "filter": "string",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
				        metaData.style =  'background: pink;';
				        return value;
				    },
				},
				{
				    "header": ViewUtil.getLabel('storeRentWH'),
				    "dataIndex": "whId",
				    "reference": "refWHTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentWHType'),
				    "dataIndex": "whTpCd",
				    "reference": "refWHTypeTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentCargoType'),
				    "dataIndex": "cgTpCd",
				    "reference": "refCargoTypeTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentCategory'),
				    "dataIndex": "cgInOutCd",
				    "reference": "refCategoryTabSum",
				    "filter": "string",
				    "width": 120,
				    
				},
				{
				    "header": ViewUtil.getLabel('storeRentCommodity'),
				    "dataIndex": "cmdtCd",
				    "reference": "refCommodityTabSum",
				    "filter": "string",
				    "width": 120,
				    
				}
			]	
		},
		{
			"key": "InvoiceList",
			"items": [
				{
				    "xtype": "checkcolumn",
				    "headerCheckbox": true, // THIS OPETION SHOW YOU CHECKBOX ON "HEADER".
				    "sortable": true, // THIS OPTION DISABLE SORTING.
				    "hideable": true, // THIS OPTION EXCLUDE COLUMN FORM MENU.
				    "menuDisabled": true, //THIS OPTION HIDE MENU ON THE "HEADER".
				    "dataIndex": "chkTrf",
				    "reference": "refchk",
				    "editable": true,
				    "width": 50,
				    "height": 30,
				    "margin": "-23 0 0 0",
				    "listeners": {
				        "checkChange": "onCheckedTrf"
				    }
				},
				{
				    "header": ViewUtil.getLabel('paid'),
				    "xtype": "checkcolumn",
				    "dataIndex": "paidSt",
				    "reference": "refPaid",
				    "id": "idpaidSt",
				    "width": 50,
				    "listeners": {
				        "checkChange": "onCheckPaidStatus"
				    }
				},
				{
				    "header": ViewUtil.getLabel('inNo'),
				    "dataIndex": "ivNo",
				    "reference": "refInviceNo",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('ERP'),
				    "dataIndex": "erpStatCd",
				    "reference": "refERP",
				    "filter": "list",
				    "align": "center",
				    "width": 50
				}, {
				    "header": ViewUtil.getLabel('vessel'),
				    "dataIndex": "vslCallId",
				    "reference": "refJpvc",
				    "filter": "list",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('VslNm'),
				    "dataIndex": "vslNm",
				    "reference": "refVesselName",
				    "filter": "list",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('inPayer'),
				    "dataIndex": "payer",
				    "reference": "refPayer",
				    "filter": "list",
				    "align": "center",
				    "width": 80
				}, {
				    "header": ViewUtil.getLabel('PaymentType'),
				    "dataIndex": "payTpCd",
				    "reference": "refPayer",
				    "filter": "list",
				    "align": "center",
				    "width": 100
				}, {
				    "header": ViewUtil.getLabel('ATBInList'),
				    "dataIndex": "atb",
				    "reference": "refAtb",
				    "filter": "string",
				    "align": "center",
				    "width": 130
				}, {
				    "header": ViewUtil.getLabel('ATUin'),
				    "dataIndex": "atu",
				    "reference": "refATU",
				    "filter": "string",
				    "align": "center",
				    "width": 130
				}, {
				    "header": ViewUtil.getLabel('inDate'),
				    "dataIndex": "ivDt",
				    "reference": "refInDate",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('amountRM'),
				    "dataIndex": "revsAmt",
				    "reference": "refAmountRM",
				    "filter": "string",
				    "align": "center",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				}, {
				    "header": ViewUtil.getLabel('gstAmount'),
				    "dataIndex": "gstAmount",
				    "reference": "refGstAmount",
				    "filter": "string",
				    "align": "center",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				}, {
				    "header": ViewUtil.getLabel('payAmInGSt'),
				    "dataIndex": "totalAmount",
				    "reference": "refPayAmInGSt",
				    "filter": "string",
				    "align": "center",
				    "width": 180,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				}, {
				    "header": ViewUtil.getLabel('amountFor'),
				    "dataIndex": "frgnAmt",
				    "id": "idAmountFor",
				    "reference": "refAmountFor",
				    "filter": "string",
				    "align": "center",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				}, {
				    "header": ViewUtil.getLabel('billDay'),
				    "dataIndex": "billDays",
				    "reference": "refBillDay",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('berthNo'),
				    "dataIndex": "berthLoc",
				    "reference": "refBerthNo",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('statusIn'),
				    "dataIndex": "statusNm",
				    "reference": "refStatusIn",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('rmk'),
				    "dataIndex": "rmk",
				    "reference": "refRemark",
				    "filter": "string",
				    "align": "center",
				    "width": 180
				}, {
				    "header": ViewUtil.getLabel('fileAttach'),
				    "xtype": "checkcolumn",
				    "dataIndex": "isFileAtt",
				    "reference": "refFileAttach",
				    "filter": "string",
				    "align": "center",
				    "editable": false,
				    "disabled": true,
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('viewDate'),
				    "dataIndex": "vwDt",
				    "reference": "refViewDate",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('viewUser'),
				    "dataIndex": "vwUserId",
				    "reference": "refViewUser",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('printDate'),
				    "dataIndex": "prDt",
				    "reference": "refPrintDate",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('printUser'),
				    "dataIndex": "prUserId",
				    "reference": "refPrintUser",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('createby'),
				    "dataIndex": "userId",
				    "reference": "refCreatedBy",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('createDate'),
				    "dataIndex": "crDate",
				    "reference": "refCreatedDt",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}
			]
		},
				
		{
			"key": "InvoiceDetail",
			"items": [
				{
				    "header": ViewUtil.getLabel('trfCd'),
				    "dataIndex": "trfCd",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('subTrfCd'),
				    "dataIndex": "subTrfCd",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('costCenter'),
				    "dataIndex": "costCentCd",
				    "filter": "string",
				    "align": "center",
				    "width": 100,
                    "editable": true,
	                "editor": {
	                    "xtype": "combo",
	                    "bind": {
	                        "store": '{costCentreCombo}'
	                    },
	                    "reference": "cboCostCentre",
	                    "displayField": "cdNm",
	                    "valueField": "cd",
	                    "queryMode": "local",
	                    "listeners": {
	                        "select": "onSelectCostCentre"
	                    }
	                }
				}, {
				    "header": ViewUtil.getLabel('tariffType'),
				    "dataIndex": "trfTpCd",
				    "filter": "list",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('descr'),
				    "dataIndex": "trfDescr",
				    "filter": "string",
				    "align": "center",
				    "width": 120,
				    "editable": true,
	                "editor": {
	                    "xtype": "textfield",
	                    "reference": "refTxtTrfDescr",
	                    "allowBlank": false,
	                    "listeners": {
	                        "change": "onTxtTrfDescrChange"
	                    }
	                }
				}, {
				    "header": ViewUtil.getLabel('ivUnit1'),
				    "dataIndex": "unit1Val",
				    "filter": "string",
				    "align": "center",
				    "width": 100,
				    "editable": true,
	                "editor": {
	                    "xtype": "textfield",
	                    "maskRe": /[0-9.]/,
	                    "reference": "refTxtUnit1",
	                    "allowBlank": false,
	                    "listeners": {
	                        "change": "onGridChange"
	                    }
	                },
	                "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				}, {
				    "header": ViewUtil.getLabel('ivUnit2'),
				    "dataIndex": "unit2Val",
				    "filter": "string",
				    "align": "center",
				    "width": 100,
				    "editable": true,
	                "editor": {
	                    "xtype": "textfield",
	                    "maskRe": /[0-9.]/,
	                    "reference": "refTxtUnit2",
	                    "allowBlank": false,
	                    "listeners": {
	                        "change": "onGridChange"
	                    }
	                },
	                "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				}, {
				    "header": ViewUtil.getLabel('ivUnit3'),
				    "dataIndex": "unit3Val",
				    "filter": "string",
				    "align": "center",
				    "width": 100,
				    "editable": true,
	                "editor": {
	                    "xtype": "textfield",
	                    "maskRe": /[0-9.]/,
	                    "reference": "refTxtUnit3",
	                    "allowBlank": false,
	                    "listeners": {
	                        "change": "onGridChange"
	                    }
	                },
	                "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				}, {
				    "header": ViewUtil.getLabel('rate'),
				    "dataIndex": "aplyRate",
				    "filter": "string",
				    "align": "center",
				    "width": 100,
				    "editable": true,
	                "editor": {
	                    "xtype": "textfield",
	                    "maskRe": /[0-9.]/,
	                    "reference": "refTxtRate",
	                    "allowBlank": false,
	                    "listeners": {
	                        "change": "onGridChange"
	                    }
	                },
	                "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				}, {
				    "header": ViewUtil.getLabel('amountRM'),
				    "dataIndex": "revsAmt",
				    "filter": "string",
				    "align": "center",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				}, {
				    "header": ViewUtil.getLabel('gstAmount'),
				    "dataIndex": "gstAmt",
				    "filter": "string",
				    "align": "center",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				}, {
				    "header": ViewUtil.getLabel('totalAmount'),
				    "dataIndex": "totalAmt",
				    "filter": "string",
				    "align": "center",
				    "width": 120,
				    "renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.000');
					}
				}, {
				    "header": ViewUtil.getLabel('referenceNo'),
				    "dataIndex": "refNo",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('vslcallid'),
				    "dataIndex": "vslCallId",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('inPayer'),
				    "dataIndex": "payer",
				    "filter": "string",
				    "align": "center",
				    "width": 120
				}, {
				    "header": ViewUtil.getLabel('inPrefix'),
				    "dataIndex": "ivPrfx",
				    "filter": "list",
				    "align": "center",
				    "width": 120,
                    "editable": true,
	                "editor": {
	                    "xtype": "combo",
	                    "reference": "refTxtInvoicePrefix",
	                    "bind": {
	                        "store": '{invPrefixCombo}'
	                    },
	                    "displayField": "cdNm",
	                    "valueField": "cd",
	                    "queryMode": "local"
	                }
				}, {
				    "header": ViewUtil.getLabel('screenId'),
				    "dataIndex": "scrId",
				    "align": "center",
				    "width": 120,
				}
			]
		},
		
		{
		
			"key": "InvoiceFileUploadGrid",
			"items": [ 	
				{ "header": ViewUtil.getLabel('fileName'), "dataIndex": "fileName", "width": 300, "align":"center", "caption":"fileName", "style" : "text-align:center", "reference": "refFileName", "filter": "string"},
				{ "header": ViewUtil.getLabel('fileSize'), "dataIndex": "fileSize", "xtype":"numbercolumn","format":"0,000","width": 170, "align":"center", "caption":"fileSize", "style" : "text-align:center", "reference": "reffileSize", "filter": "string"},
			]
		},

        {
			"key": "AccessControlItemList",
			"items": [ 	
				{ "header": ViewUtil.getLabel('itemId'), "dataIndex": "itemCd", "width": 120, "align":"center", "caption":"programApplyAuthGrp", "style" : "text-align:center", "filter": "string",
				"editor":	{  
	   					"xtype": "textfield",
	   					"allowBlank": false,
	   					"maxLength": "10",
	   					"enforceMaxLength": true,
	   					"reference": "refTxtDetailCode",
	   					/*listeners: {
							select: 'onOpenUserInquiryPopup'
						},*/
						"triggers": {
		                    "someField": {
		                        "cls": "fa-search",
		                        "scope": "controller",
		                        "handler": "onOpenUserListPopup"
		                    }
		                }
   					}
				},
				{ "header": ViewUtil.getLabel('description'), "dataIndex": "itemNm", "width": 120, "align":"center", "caption":"programApplyUserId", "style" : "text-align:center", "filter": "string",
					"editor":	{  
	   					"xtype": "textfield",
	   					"allowBlank": false,
	   					"maxLength": "10",
	   					"enforceMaxLength": true,
	   					"reference": "refTxtDetailCode",
	   					/*listeners: {
							select: 'onOpenUserInquiryPopup'
						},*/
						"triggers": {
		                    "someField": {
		                        "cls": "fa-search",
		                        "scope": "controller",
		                        "handler": "onOpenUserListPopup"
		                    }
		                }
					}
				},
				{ "xtype": "checkcolumn", "header": ViewUtil.getLabel('usage'), "dataIndex": "useYn", "width": 70, "align":"center", "caption":"programApplyUse", "style" : "text-align:center",  "filter": "string", "editable": true},
				{ "header": ViewUtil.getLabel('remark'), "dataIndex": "rmk", "width": 500, "align":"center", "caption":"programApplyPGMTitle", "style" : "text-align:center",  "filter": "string",
					"editor":	{  
		   					"xtype": "textfield",
		   					"allowBlank": false,
		   					"maxLength": "10",
		   					"enforceMaxLength": true,
		   					"reference": "refTxtDetailCode",
		   					/*listeners: {
								select: 'onOpenUserInquiryPopup'
							},*/
							"triggers": {
			                    "someField": {
			                        "cls": "fa-search",
			                        "scope": "controller",
			                        "handler": "onOpenUserListPopup"
			                    }
			                }
	   					}
   					},
			]
		},{
			"key": "AccessControlItemGroup",
			"items": [ 	
				{ "header": ViewUtil.getLabel('programId'), "dataIndex": "pgmId", "width": 200, "align":"center", "caption":"programApplyAuthGrp", "style" : "text-align:center", "filter": "string"},
				{ "header": ViewUtil.getLabel('programTitle'), "dataIndex": "pgmTitle", "width": 450, "align":"center", "caption":"programApplyUserId", "style" : "text-align:center", "filter": "string"},
			]
		},{
			"key": "VesselShiftingRequest",
			"items": [
				{
					"header": ViewUtil.getLabel('vslcallid'),
					"dataIndex": "vslCallId",
					"reference": "refVslCallId",
					"filter" : "string",
					"align" : "left",
					"locked" : false,
					"lockable": false,
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('requestor'),
					"dataIndex": "reqrNm",
					"reference": "refReqrNm",
					"lockable": false,
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('submitTime'),
					"lockable": false,
					"dataIndex": "submitDt",
					"reference": "refSubmitDt",
					"width": 170,
				},
				{
					"header": ViewUtil.getLabel('status'),
					"dataIndex": "statCdNm",
					"lockable": false,
					"reference": "refStatCdNm",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('shiftingDt'),
					"lockable": false,
					"dataIndex": "reqDt",
					"reference": "refReqDt",
					"width": 170,
				},
				{
					"header": ViewUtil.getLabel('sftFrmLoc'),
					"dataIndex": "prevBerthNo",
					"lockable": false,
					"reference": "refPrevBerthNo",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('sftToLoc'),
					"dataIndex": "nxBerthNo",
					"lockable": false,
					"reference": "refNxBerthNo",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('sftPos'),
					"dataIndex": "berthAlongSide",
					"lockable": false,
					"reference": "refBerthAlongSide",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('reason'),
					"dataIndex": "rsnNm",
					"lockable": false,
					"reference": "refRsnNm",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('so_apprvDt'),
					"lockable": false,
					"dataIndex": "apprvDt",
					"reference": "refApprvDt",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('vesselname'),
					"dataIndex": "vslNm",
					"lockable": false,
					"reference": "refVslNm",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('loa'),
					"lockable": false,
					"dataIndex": "loa",
					"reference": "refLoa",
					"filter" : "string",
					"align" : "left",
					"width": 170
				}
			]
		},
		{
			"key": "CustomsCargoReleaseControl",
			"items": [
				{
					"header": ViewUtil.getLabel('category'),
					"dataIndex": "categoryNm",
					"reference": "refCategoryNm",
					"filter" : "string",
					"locked" : false,
					"lockable": false,
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('docNo'),
					"dataIndex": "docNo",
					"reference": "refDocNo",
					"lockable": false,
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('status'),
					"dataIndex": "status",
					"lockable": false,
					"reference": "refStatus",
					"filter" : "string",
					"width": 90
				},
				{
					"header": ViewUtil.getLabel('customsReleaseDt'),
					"lockable": false,
					"dataIndex": "customReleaseDT",
					"reference": "refCustomReleaseDT",
					"width": 140
				},
				{
					"header": ViewUtil.getLabel('blNo'),
					"lockable": false,
					"dataIndex": "blNo",
					"reference": "refBlNo",
					"filter" : "string",
					"align" : "center",
					"width": 120,
				},
				{
					"header": ViewUtil.getLabel('snNo'),
					"lockable": false,
					"dataIndex": "snNo",
					"reference": "refSnNo",
					"filter" : "string",
					"align" : "center",
					"width": 120,
				},
				{
					"header": ViewUtil.getLabel('BLSNNo'),
					"lockable": false,
					"dataIndex": "cargoNo",
					"reference": "refCargoNo",
					"filter" : "string",
					"align" : "left",
					"width": 140,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('commodity'),
					"lockable": false,
					"dataIndex": "cmdtNm",
					"reference": "refCmdtNm",
					"filter" : "string",
					"align" : "left",
					"width": 170,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('docMt'),
					"lockable": false,
					"dataIndex": "docMt",
					"reference": "refDocMt",
					"filter" : "string",
					"width": 90,
					"xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('docM3'),
					"lockable": false,
					"dataIndex": "docM3",
					"reference": "refDocM3",
					"filter" : "string",
					"width": 90,
					"xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('docQty'),
					"lockable": false,
					"dataIndex": "docQty",
					"reference": "refDocQty",
					"filter" : "string",
					"width": 90,
					"xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('mt'),
					"lockable": false,
					"dataIndex": "releaseMt",
					"reference": "refReleaseMt",
					"filter" : "string",
					"width": 90,
					"xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				}, 
				{
					"header": ViewUtil.getLabel('m3'),
					"lockable": false,
					"dataIndex": "releaseM3",
					"reference": "refReleaseM3",
					"filter" : "string",
					"width": 90,
					"xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('qty'),
					"lockable": false,
					"dataIndex": "releaseQty",
					"reference": "refReleaseQty",
					"filter" : "string",
					"width": 90,
					"xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('balmt'),
					"hidden": true,
					"lockable": false,
					"dataIndex": "balanceMt",
					"reference": "refBalanceMt",
					"filter" : "string",
					"width": 90,
					"xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},  
				{
					"header": ViewUtil.getLabel('balqty'),
					"hidden": true,
					"lockable": false,
					"dataIndex": "balanceQty",
					"reference": "refBalanceQty",
					"filter" : "string",
					"width": 90,
					"xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('balm3'),
					"hidden": true,
					"lockable": false,
					"dataIndex": "balanceM3",
					"reference": "refBalanceM3",
					"filter" : "string",
					"width": 90,
					"xtype": "numbercolumn", "align" : "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('bondedWarehouse'),
					"lockable": false,
					"dataIndex": "bondedWhYn",
					"reference": "refBondedWhYn",
					"filter" : "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateInTime'),
					"lockable": false,
					"dataIndex": "custGetIn",
					"reference": "refGateInTime",
					"filter" : "string",
					"align" : "left",
					"width": 140
				},
				{
					"header": ViewUtil.getLabel('portSafetyConfirmationGateOutTime'),
					"lockable": false,
					"dataIndex": "custGetOut",
					"reference": "refGateOutTime",
					"filter" : "string",
					"align" : "left",
					"width": 140
				},
				{
					"header": ViewUtil.getLabel('createby'),
					"lockable": false,
					"dataIndex": "createdBy",
					"reference": "refCreateUserName",
					"filter" : "string",
					"align" : "center",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('updatedBy'),
					"lockable": false,
					"dataIndex": "updatedBy",
					"reference": "reUpdateUserName",
					"filter" : "string",
					"align" : "center",
					"width": 120
				}
			]
		},
		{
			"key": "TerminalHoldReleaseControl",
			"items": [
				{
					"header": ViewUtil.getLabel('vslcallid'),
					"dataIndex": "vslCallId",
					"reference": "refVslCallId",
					"filter" : "string",
					"align" : "left",
					"locked" : false,
					"lockable": false,
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('docNo'),
					"dataIndex": "docNo",
					"reference": "refDocNo",
					"lockable": false,
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('blSnNo'),
					"dataIndex": "cgNo",
					"lockable": false,
					"reference": "refCgNo",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('importExport'),
					"dataIndex": "ie",
					"lockable": false,
					"reference": "refIe",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('vinNo'),
					"dataIndex": "vinNo",
					"lockable": false,
					"reference": "refVinNo",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('holdCheck'),
					 "xtype": 'checkcolumn',
					"dataIndex": "holdCheck",
					"lockable": false,
					"reference": "refHoldCheck",
					"filter" : "string",
					"disabled": true,
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('holdReason'),
					"dataIndex": "holdReasonDesc",
					"lockable": false,
					"reference": "refHoldReasonDesc",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('holdRemark'),
					"lockable": false,
					"dataIndex": "holdRemark",
					"reference": "refHoldRemark",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('holdBy'),
					"lockable": false,
					"dataIndex": "holdBy",
					"reference": "refHoldBy",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('holdDate'),
					"lockable": false,
					"dataIndex": "holdDt",
					"reference": "refHoldDt",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('releaseCheck'),
					"lockable": false,
					"xtype": 'checkcolumn',
					"dataIndex": "releaseCheck",
					"reference": "refReleaseCheck",
					"filter" : "string",
					"width": 170,
					"listeners": {
							"checkChange": "onChecked"
				  	},
				  	"renderer": function(value, meta) {
						var record = meta.record;
						var cssPrefix = Ext.baseCSSPrefix,
	                    cls = cssPrefix + 'grid-checkcolumn';
						if(!record.get("holdCheck")){
							meta.tdCls = ' ' + this.disabledCls;
						}
						
						return (new Ext.grid.column.CheckColumn).renderer(value);
					}
				},
				{
					"header": ViewUtil.getLabel('releaseRemark'),
					"lockable": false,
					"dataIndex": "releaseRemark",
					"reference": "refReleaseRemark",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('releaseBy'),
					"lockable": false,
					"dataIndex": "releaseBy",
					"reference": "refReleaseBy",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('releaseDate'),
					"lockable": false,
					"dataIndex": "releaseDt",
					"reference": "refReleaseDt",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('opeartionToBeStoped'),
					"lockable": false,
					"dataIndex": "opToBeStoppedNm",
					"reference": "refOpToBeStoppedNm",
					"filter" : "string",
					"align" : "left",
					"width": 170
				}
			]
		},{
			"key": "TerminalHoldReleaseControlHistory",
			"items": [
				{
					"header": ViewUtil.getLabel('cudFlag'),
					"dataIndex": "cudFlag",
					"reference": "refCudFlag",
					"filter" : "string",
					"align" : "left",
					"locked" : false,
					"lockable": false,
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('vslcallid'),
					"dataIndex": "vslCallId",
					"reference": "refVslCallId",
					"filter" : "string",
					"align" : "left",
					"locked" : false,
					"lockable": false,
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('docNo'),
					"dataIndex": "docNo",
					"reference": "refDocNo",
					"lockable": false,
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('BLSNNo'),
					"dataIndex": "cgNo",
					"lockable": false,
					"reference": "refCgNo",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('importExport'),
					"dataIndex": "ie",
					"lockable": false,
					"reference": "refIe",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('vinNo'),
					"dataIndex": "vinNo",
					"lockable": false,
					"reference": "refVinNo",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('holdCheck'),
					"dataIndex": "holdCheck",
					"lockable": false,
					"reference": "refHoldCheck",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('holdReason'),
					"dataIndex": "holdReasonDesc",
					"lockable": false,
					"reference": "refHoldReasonDesc",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('holdRemark'),
					"lockable": false,
					"dataIndex": "holdRemark",
					"reference": "refHoldRemark",
					"filter" : "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('holdDate'),
					"lockable": false,
					"dataIndex": "holdDt",
					"reference": "refHoldDt",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('releaseCheck'),
					"lockable": false,
					"dataIndex": "releaseCheck",
					"reference": "refReleaseCheck",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('releaseRemark'),
					"lockable": false,
					"dataIndex": "releaseRemark",
					"reference": "refReleaseRemark",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('releaseBy'),
					"lockable": false,
					"dataIndex": "releaseBy",
					"reference": "refReleaseBy",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('releaseDate'),
					"lockable": false,
					"dataIndex": "releaseDt",
					"reference": "refReleaseDt",
					"filter" : "string",
					"align" : "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('opeartionToBeStoped'),
					"lockable": false,
					"dataIndex": "opToBeStoppedNm",
					"reference": "refOpToBeStoppedNm",
					"filter" : "string",
					"align" : "left",
					"width": 170
				}
			]
		},{
			"key": "SpaceMovementPlanNonVessel",
			"items": [
				{
					"xtype": "rownumberer", "width" : 50, "align" : "center"
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqNo'), "dataIndex": "reqNo", "reference": "refSpaceMovementPlanReqNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqr'), "dataIndex": "reqr", "reference": "refSpaceMovementPlanReqr", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqTpNm'), "dataIndex": "reqTpNm", "reference": "refSpaceMovementPlanReqTpNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestCgRefNo'), "dataIndex": "cgRefNo", "reference": "refSpaceMovementPlanCgRefNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestStatNm'), "dataIndex": "statNm", "reference": "refSpaceMovementPlanStatNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqDt'), "dataIndex": "reqDt", "reference": "refSpaceMovementPlanReqDt", "filter": "string", "width": 130
				}
			]
		},
		{
			"key": "SpaceMovementPlanNonVesselDetail",
			"items": [
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqTpNm'), "dataIndex": "reqTpNm", "reference": "refSpaceMovementRequestReqTpNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestOpeClassCd'), "dataIndex": "opeClassCd", "reference": "refSpaceMovementRequestOpeClassCd", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vslCallId", "reference": "refSpaceMovementRequestVslCallId", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestBlSn'), "dataIndex": "blSn", "reference": "refSpaceMovementRequestBlSn", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestGrNo'), "dataIndex": "grNo", "reference": "refSpaceMovementRequestGrNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestShipgAgnt'), "dataIndex": "shipgAgnt", "reference": "refSpaceMovementRequestShipgAgnt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestFwdAgnt'), "dataIndex": "fwdAgnt", "reference": "refSpaceMovementRequestFwdAgnt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestCngShp'), "dataIndex": "cngShp", "reference": "refSpaceMovementRequestCngShp", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqPos'), "dataIndex": "reqPos", "reference": "refSpaceMovementRequestReqPos", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestPlanLocId'), "dataIndex": "planLocId", "reference": "refSpaceMovementRequestPlanLocId", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqM2'), "dataIndex": "reqM2", "reference": "refSpaceMovementRequestReqM2", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqMt'), "dataIndex": "reqMt", "reference": "refSpaceMovementRequestReqMt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestEta'), "dataIndex": "eta", "reference": "refSpaceMovementRequestEta", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestPeriod'), "dataIndex": "period", "reference": "refSpaceMovementRequestPeriod", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestCgType'), "dataIndex": "cgType", "reference": "refSpaceMovementRequestCgType", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestDgYn'), "dataIndex": "dgYn", "reference": "refSpaceMovementRequestDgYn", "filter": "string", "width": 130
				}
			]
		},
		{
			"key": "SpaceMovementRequest",
			"items": [
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqNo'), "dataIndex": "reqNo", "reference": "refSpaceMovementRequestReqNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqr'), "dataIndex": "reqr", "reference": "refSpaceMovementRequestReqr", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqTpNm'), "dataIndex": "reqTpNm", "reference": "refSpaceMovementRequestReqTpNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestCgRefNo'), "dataIndex": "cgRefNo", "reference": "refSpaceMovementRequestCgRefNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestStatNm'), "dataIndex": "statNm", "reference": "refSpaceMovementRequestStatNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqDt'), "dataIndex": "reqDt", "reference": "refSpaceMovementRequestReqDt", "filter": "string", "width": 130
				}
			]
		},
		{
			"key": "SpaceMovementRequestDetail",
			"items":[
				{
					"header": "",
					"xtype": "actioncolumn",
					"dataIndex": "workingStatus",
					"hideable": false,
					"width": 80,
					"items": [{
						"getClass": function (value, meta, record) {
							return 	record.data.workingStatus === 'D' || 
									record.data.workingStatus === 'U' || 
									record.data.workingStatus === 'C' ? 'x-fa fa-check txt_red' : '';
							}
					}]						
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqTpNm'), "dataIndex": "reqTpNm", "reference": "refSpaceMovementRequestReqTpNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestOpeClassCd'), "dataIndex": "opeClassCd", "reference": "refSpaceMovementRequestOpeClassCd", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestVslCallId'), "dataIndex": "vslCallId", "reference": "refSpaceMovementRequestVslCallId", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestBlSn'), "dataIndex": "blSn", "reference": "refSpaceMovementRequestBlSn", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestGrNo'), "dataIndex": "grNo", "reference": "refSpaceMovementRequestGrNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestShipgAgnt'), "dataIndex": "shipgAgnt", "reference": "refSpaceMovementRequestShipgAgnt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestFwdAgnt'), "dataIndex": "fwdAgnt", "reference": "refSpaceMovementRequestFwdAgnt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestCngShp'), "dataIndex": "cngShp", "reference": "refSpaceMovementRequestCngShp", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqPos'), "dataIndex": "reqPos", "reference": "refSpaceMovementRequestReqPos", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestPlanLocId'), "dataIndex": "planLocId", "reference": "refSpaceMovementRequestPlanLocId", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqM2'), "dataIndex": "reqM2", "reference": "refSpaceMovementRequestReqM2", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestReqMt'), "dataIndex": "reqMt", "reference": "refSpaceMovementRequestReqMt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestEta'), "dataIndex": "eta", "reference": "refSpaceMovementRequestEta", "filter": "string", "width": 130, "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds()
					,"renderer": function(value, meta, record, rowIndex, colIndex, store) {
						return Ext.Date.format( value, meta.column.format );
					}
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestPeriod'), "dataIndex": "period", "reference": "refSpaceMovementRequestPeriod", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestCgType'), "dataIndex": "cgType", "reference": "refSpaceMovementRequestCgType", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('spaceMovementRequestDgYn'), "dataIndex": "dgYn", "reference": "refSpaceMovementRequestDgYn", "filter": "string", "width": 130
				}
				
			]
		},
		{
			"key": "NonManifestedCargoOfGc",
			"items": [
				{
					"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "reference": "refCatgNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('originalSubBlSn'), "dataIndex": "orgBlSnNo", "reference": "refOrgBlSnNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('originalGr'), "dataIndex": "orgGrNo", "reference": "refOrgGrNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('newMasterBlBookingNo'), "dataIndex": "linkageMblBookingNo", "reference": "refLinkageMblBookingNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('newSubBlSn'), "dataIndex": "linkageBlSnNo", "reference": "refLinkageBlSnNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('newGr'), "dataIndex": "linkageGrNo", "reference": "refLinkageGrNo", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('cargoType'), "dataIndex": "cgTpNm", "reference": "refCgTpNm", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('grPopupGrWgt'), "dataIndex": "nonManifestedMt", "reference": "refNonManifestedMt", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('grPopupGrMsrmt'), "dataIndex": "nonManifestedM3", "reference": "refNonManifestedM3", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('grPopupGrQty'), "dataIndex": "nonManifestedQty", "reference": "refNonManifestedQty", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('location'), "dataIndex": "nonManifestedLocId", "reference": "refNonManifestedLocId", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('remark'), "dataIndex": "remark", "reference": "refRemark", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedDt'), "dataIndex": "updDate", "reference": "refUpdDate", "filter": "string", "width": 130
				},
				{
					"header": ViewUtil.getLabel('lastUpdatedBy'), "dataIndex": "updUserId", "reference": "refUpdUserId", "filter": "string", "width": 130
				}				
			]
		},
		
		{
			"key": "ProformaInvoiceGenerationItems",
			"items": [
/* 				{ "headerCheckbox": false,"disabled": true, "editable": true, "sortable": true,"hideable": true,"menuDisabled": true,"dataIndex": "chk", "width": 50, "align":"center", "xtype":'checkcolumn', "style" : "text-align:center", "filter": "string", */
/* 				  "listeners": { */
/* 						"checkChange": "onChecked" */
/* 				  } */
				 
/* 				}, */
				{
					"xtype": "actioncolumn",
					"width" : 40,
					"header": '',
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.paidYn == 'N') {
							this.items[0].iconCls = 'x-fa fa-check green';
						} else
							this.items[0].iconCls = '';
					}
				},
				{ "header": ViewUtil.getLabel('status'), "dataIndex": "itemStatus", "filter": "string", "width": 120, "align":"left" },
				{ "header": ViewUtil.getLabel('trfTpCd'), "dataIndex": "trfTpNm", "filter": "string", "width": 120, "align":"center" },
				{ "header": ViewUtil.getLabel('trfCd'), "dataIndex": "trfCd", "filter": "string", "width": 80, "align":"left"},
				{ "header": ViewUtil.getLabel('subTrfCd'), "dataIndex": "subTrf", "filter": "string", "width": 100, "align":"left"},
				{ "header": ViewUtil.getLabel('descr'), "dataIndex": "trfDesc", "filter": "string", "width": 250, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceVslCallId'), "dataIndex": "vslCallId", "filter": "string", "width": 110, "align":"left" },
				{ "header": ViewUtil.getLabel('proformaInvoiceCategory'), "dataIndex": "opClassCd", "filter": "string", "width": 80, "align":"center"},
				{ "header": ViewUtil.getLabel('SNorBL'), "dataIndex": "blSnNo", "filter": "string", "width": 120, "align":"left"},
				{ "header": ViewUtil.getLabel('expectedDate'), "dataIndex": "estDt", "filter": "string", "width": 100, "align":"center"},
				{ "header": ViewUtil.getLabel('ivUnit1'), "dataIndex": "unit1Val", "filter": "string", "width": 70, "align":"right"
						,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
							metaData.style =  'background: #ffff80; color: red';
							return Ext.util.Format.number(value, '0,000.000');
						}
		                ,"editor": {
		                    "xtype": "textfield",
		                    "maskRe": /[0-9.]/,
		                    "reference": "refTxtUnit1",
		                    "allowBlank": false,
		                    "listeners": {
		                        "change": "onGridChange"
		                    }
		                }
				},
				{ "header": ViewUtil.getLabel('ivUnit2'), "dataIndex": "unit2Val", "filter": "string", "width": 70, "align":"right"
						,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
							metaData.style =  'background: #ffff80; color: red';
							return Ext.util.Format.number(value, '0,000.000');
						}
		                ,"editor": {
		                    "xtype": "textfield",
		                    "maskRe": /[0-9.]/,
		                    "reference": "refTxtUnit2",
		                    "allowBlank": false,
		                    "listeners": {
		                        "change": "onGridChange"
		                    }
		                }
				},
				{ "header": ViewUtil.getLabel('ivUnit3'), "dataIndex": "unit3Val", "filter": "string", "width": 70, "align":"right"
						,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
							metaData.style =  'background: #ffff80; color: red';
							return Ext.util.Format.number(value, '0,000.000');
						}
		                ,"editor": {
		                    "xtype": "textfield",
		                    "maskRe": /[0-9.]/,
		                    "reference": "refTxtUnit3",
		                    "allowBlank": false,
		                    "listeners": {
		                        "change": "onGridChange"
		                    }
		                }
				},
				{ "header": ViewUtil.getLabel('ivRate'), "dataIndex": "applyRate", "filter": "string", "width": 100, "align":"right"
						,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
							metaData.style =  'background: #ffff80; color: red';
							return Ext.util.Format.number(value, '0,000.00');
						}
		                ,"editor": {
		                    "xtype": "textfield",
		                    "maskRe": /[0-9.-]/,
		                    "reference": "refTxtRate",
		                    "allowBlank": false,
							"editable": false,
		                    "validator": function(v) {
			                    return /^-?[0-9]*(.[0-9]{1,3})?$/.test(v)? true : 'Only positive/negative float (0.000)/int formats allowed!';
			                },
		                    "listeners": {
		                        "change": "onGridChange"
		                    }
		                }
				},
				{ "header": ViewUtil.getLabel('invoiceAmount'), "dataIndex": "ivAmt", "filter": "string", "width": 150, "align":"right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
							return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{ "header": ViewUtil.getLabel('proformaInvoiceTaxAmount'), "dataIndex": "taxAmt", "filter": "string", "width": 130, "align":"right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
							return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{ "header": ViewUtil.getLabel('totalAmount'), "dataIndex": "totalAmt", "filter": "string", "width": 150, "align":"right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
							return Ext.util.Format.number(value, '0,000.00');
					}
				}
			]
		},
				
		{
			"key": "ProformaInvoiceList",			
			"items": [
			 	{
					"xtype": "rownumberer", "width" : 50, "align" : "center", "locked": true
				},	
				{ "header": ViewUtil.getLabel('proformaInvoiceVslCallId'), "dataIndex": "vslCallId", "filter": "string", "width": 110, "align":"left" },
				{ "header": ViewUtil.getLabel('proformaInvoiceInvNo'), "dataIndex": "ivNo", "filter": "string", "width": 90, "align":"left"},
				{ "header": ViewUtil.getLabel('invoiceType'), "dataIndex": "ivTpNm", "filter": "list", "width": 120, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceCategory'), "dataIndex": "category", "filter": "string", "width": 80, "align":"center"},
				{ "header": ViewUtil.getLabel('BLSNNo'), "dataIndex": "docNo", "filter": "string", "width": 120, "align":"left"},
/* 				{ "header": ViewUtil.getLabel('proformaInvoiceProformaInvoiceNo'), "dataIndex": "proformaInvoiceNo", "filter": "string", "width": 130, "align":"center"}, */
				{ "header": ViewUtil.getLabel('proformaInvoiceDOCMT'), "dataIndex": "docMT", "filter": "string", "width": 100, "align":"right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red';
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{ "header": ViewUtil.getLabel('proformaInvoiceIssuedMT'), "dataIndex": "issuedMT", "filter": "string", "width": 100, "align":"right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red';
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{ "header": ViewUtil.getLabel('proformaInvoiceOperationMT'), "dataIndex": "operationMT", "filter": "string", "width": 120, "align":"right", "hidden": true
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red';
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{ "header": ViewUtil.getLabel('invoiceAmount'), "dataIndex": "ivAmt", "filter": "string", "width": 150, "align":"right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{ "header": ViewUtil.getLabel('proformaInvoiceTaxAmount'), "dataIndex": "taxAmt", "filter": "string", "width":100, "align":"right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{ "header": ViewUtil.getLabel('totalAmount'), "dataIndex": "totalAmt", "filter": "string", "width": 150, "align":"right"
					,"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						return Ext.util.Format.number(value, '0,000.00');
					}
				},
				{ "header": ViewUtil.getLabel('proformaInvoiceIssuedStatus'), "dataIndex": "issuedStatus", "filter": "string", "width": 100, "align":"center"},
/* 				{ "header": ViewUtil.getLabel('paid'), "dataIndex": "paidYn", "filter": "string", "width": 70, "align":"center"}, */
				{
					"xtype": "actioncolumn",
					"width" : 70,
					"header": ViewUtil.getLabel('paid'),
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function(v,m,r) {
						if (r.data.paidYn == 'Y') {
							this.items[0].iconCls = 'x-fa fa-check green';
						} else
							this.items[0].iconCls = '';
					}
				},	
				
				{ "header": ViewUtil.getLabel('proformaInvoiceCancelledStatus'), "dataIndex": "cancelYn", "filter": "string", "width": 120, "hidden": true, "align":"center"},
				{ "header": ViewUtil.getLabel('proformaInvoiceAddCreditIvNo'), "dataIndex": "addCreditIvNo", "filter": "string", "width": 140, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceFinalInvoiceNo'), "dataIndex": "finalInvNo", "filter": "string", "width": 100, "hidden": true, "align":"center"},
				{ "header": ViewUtil.getLabel('proformaInvoiceAdviceNo'), "dataIndex": "adviceNo", "filter": "string", "width": 100, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceAdviceSeq'), "dataIndex": "adaviceSeq", "filter": "string", "width": 100, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceCntDoc'), "dataIndex": "cntDoc", "filter": "string", "width": 100, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceCustomerType'), "dataIndex": "customerType", "filter": "string", "width": 100, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceCustomerType'), "dataIndex": "ivAddr", "filter": "string", "width": 100, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoicePayer'), "dataIndex": "payerCd", "filter": "string", "width": 100, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoicePayer'), "dataIndex": "payerTp", "filter": "string", "width": 100, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoicePayer'), "dataIndex": "responsibilityCompanyCd", "filter": "string", "width": 100, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoicePayer'), "dataIndex": "responsibilityCompanyTpCd", "filter": "string", "width": 100, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceRefInvNo'), "dataIndex": "refInvNo", "filter": "string", "width": 150, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceAllowCreateAddCredit'), "dataIndex": "allowCreateAddCredit", "filter": "string", "width": 120, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceTaxPercent'), "dataIndex": "taxPrtg", "filter": "string", "width": 80, "hidden": true, "align":"right"},
				{ "header": ViewUtil.getLabel('proformaInvoiceSRate'), "dataIndex": "stdRate", "filter": "string", "width": 90, "hidden": true, "align":"left"},
				{ "header": ViewUtil.getLabel('proformaInvoiceRate'), "dataIndex": "applyRate", "filter": "string", "width": 60, "hidden": true, "align":"left"}
			
			]
		},
		{
			"key": "CreditNoteApprovalList",
			"items": [	
				{ "header": ViewUtil.getLabel('creditNoteApprovalVslCallId'), "reference": "refVslCallId", "dataIndex": "vslCallId", "filter": "string", "width": 110, "align":"center", "hidden": true },
				{ "header": ViewUtil.getLabel('creditNoteApprovalCreditNoteNo'), "reference": "refCreditNoteNo", "dataIndex": "creditNoteNo", "filter": "string", "width": 100, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalIvNo'), "reference": "refIvNo", "dataIndex": "ivNo", "filter": "string", "width": 120, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalChk'), "reference": "refChk", "dataIndex": "chk", "filter": "string", "width": 50, "xtype":'checkcolumn', "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalReasonNm'), "reference": "refReasonNm", "dataIndex": "reasonNm", "filter": "string", "width": 120, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDescription'), "reference": "refDescription", "dataIndex": "description", "filter": "string", "width": 220, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalReIvNo'), "reference": "refReIvNo", "dataIndex": "reIvNo", "filter": "string", "width": 100, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalReIvConfirm'), "reference": "refReIvConfirm", "dataIndex": "reIvConfirm", "filter": "string", "width": 120, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalIvAmt'), "reference": "refIvAmt", "dataIndex": "ivAmt", "filter": "string", "width": 80, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalTaxAmt'), "reference": "refTaxAmt", "dataIndex": "taxAmt", "filter": "string", "width":130, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalAplyTotalAmt'), "reference": "refAplyTotalAmt", "dataIndex": "aplyTotalAmt", "filter": "string", "width": 140, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalSubmittedBy'), "reference": "refSubmittedBy", "dataIndex": "submittedBy", "filter": "string", "width": 90, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalApprovedBy'), "reference": "refApprovedBy", "dataIndex": "approvedBy", "filter": "string", "width": 90, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalSubmittedDt'), "reference": "refSubmittedDt", "dataIndex": "submittedDt", "filter": "string", "width": 170, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalApprovedDt'), "reference": "refApprovedDt", "dataIndex": "approvedDt", "filter": "string", "width": 140, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalReasonCd'), "reference": "refReasonCd", "dataIndex": "reasonCd", "filter": "string", "width": 100, "align":"center", "hidden": true},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDiscountCreditAmt'), "reference": "refDiscountCreditAmt", "dataIndex": "discountCreditAmt", "filter": "string", "width": 140, "align":"right", "hidden": true},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDiscountCreditStatCd'), "reference": "refDiscountCreditStatCd", "dataIndex": "discountCreditStatCd", "filter": "string", "width": 100, "align":"center", "hidden": true},
				{ "header": ViewUtil.getLabel('creditNoteApprovalCancelCreditStatCd'), "reference": "refCancelCreditStatCd", "dataIndex": "cancelCreditStatCd", "filter": "string", "width": 140, "align":"left",  "hidden": true},
				{ "header": ViewUtil.getLabel('creditNoteApprovalIvTp'), "reference": "refIvTp", "dataIndex": "ivTp", "filter": "string", "width": 130, "align":"center", "hidden": true},
				{ "header": ViewUtil.getLabel('creditNoteApprovalRefIvNo'), "reference": "refRefIvNo", "dataIndex": "refIvNo", "filter": "string", "width": 130, "align":"left",  "hidden": true},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDraftIvNo'), "reference": "refDraftIvNo", "dataIndex": "draftIvNo", "filter": "string", "width": 130, "align":"left",  "hidden": true},
				{ "header": ViewUtil.getLabel('creditNoteApprovalGatherNo'), "reference": "refGatherNo", "dataIndex": "gatherNo", "filter": "string", "width": 130, "align":"left",  "hidden": true},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDiscountSeq'), "reference": "refDiscountSeq", "dataIndex": "discountSeq", "filter": "string", "width": 120, "align":"left",  "hidden": true},
				{ "header": ViewUtil.getLabel('creditNoteApprovalCreatedBy'), "reference": "refCreatedBy", "dataIndex": "createdBy", "filter": "string", "width": 90, "align":"center",  "hidden": true}				
			]
		},
		{
			"key": "CreditNoteApprovalDetailList",
			"items": [	
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailRefIvNo'), "reference": "refRefIvNo", "dataIndex": "refIvNo", "filter": "string", "width": 150, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailAplyAmt'), "reference": "refAplyAmt", "dataIndex": "aplyAmt", "filter": "string", "width": 150, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailAplyTaxAmt'), "reference": "refAplyTaxAmt", "dataIndex": "aplyTaxAmt", "filter": "string", "width": 160, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailAplyTotalAmt'), "reference": "refAplyTotalAmt", "dataIndex": "aplyTotalAmt", "filter": "string", "width": 160, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailTrfCd'), "reference": "refTtrfCd", "dataIndex": "trfCd", "filter": "string", "width": 130, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailSubTrfCd'), "reference": "refSubTrfCd", "dataIndex": "subTrfCd", "filter": "string", "width": 100, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailTrfTpNm'), "reference": "refTrfTpNm", "dataIndex": "trfTpNm", "filter": "string", "width": 90, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailTrfDescr'), "reference": "refTrfDescr", "dataIndex": "trfDescr", "filter": "string", "width": 170, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailUnit1Val'), "reference": "refUnit1Val", "dataIndex": "unit1Val", "filter": "string", "width": 90, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailUnit2Val'), "reference": "refUnit2Val", "dataIndex": "unit2Val", "filter": "string", "width":90, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailUnit3Val'), "reference": "refUnit3Val", "dataIndex": "unit3Val", "filter": "string", "width": 90, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailAplyRate'), "reference": "refAplyRate", "dataIndex": "aplyRate", "filter": "string", "width":60, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailNetAmt'), "reference": "refNetAmt", "dataIndex": "netAmt", "filter": "string", "width": 80, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailTaxAmt'), "reference": "refTaxAmt", "dataIndex": "taxAmt", "filter": "string", "width": 130, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailTotalAmt'), "reference": "refTotalAmt", "dataIndex": "totalAmt", "filter": "string", "width": 130, "align":"right"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailPayer'), "reference": "refPayer", "dataIndex": "payer", "filter": "string", "width": 80, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailPayerNm'), "reference": "refPayerNm", "dataIndex": "payerNm", "filter": "string", "width": 120, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailResponsibilityCompany'), "reference": "refResponsibilityCompany", "dataIndex": "responsibilityCompany", "filter": "string", "width": 90, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailResponsibilityCompanyNm'), "reference": "refResponsibilityCompanyNm", "dataIndex": "responsibilityCompanyNm", "filter": "string", "width": 120, "align":"center"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailReasonNm'), "reference": "refReasonNm", "dataIndex": "reasonNm", "filter": "string", "width": 100, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailDescription'), "reference": "refDescription", "dataIndex": "description", "filter": "string", "width": 180, "align":"left"},
				{ "header": ViewUtil.getLabel('creditNoteApprovalDetailDiscountSeq'), "reference": "refDiscountSeq", "dataIndex": "discountSeq", "filter": "string", "width": 130, "align":"left", "hidden": true},
					
			]
		},
		{
			"key": "GeneralCargoLoadingList",
			"items": [
 				{ "header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "width": 100, "align":"center", "caption":"vslCallId", "style" : "text-align:center", "reference": "refVslCallId", "maxLength":"10","filter": "list",}, 
				{ "header": ViewUtil.getLabel('importExport'), "dataIndex": "opeClassCd", "width": 120, "align":"center", "caption":"opeClassCd", "style" : "text-align:center", "reference": "refOpeClassCd", "filter": "string",},
				{ "header": ViewUtil.getLabel('SNLBookingNo'), "dataIndex": "mfDocId", "width": 120, "align":"center", "caption":"mfDocId", "style" : "text-align:center", "reference": "refMfDocId", "filter": "string",},
				{ "header": ViewUtil.getLabel('shipgNoteNoFull'), "dataIndex": "shipgNoteNo", "width": 140, "align":"center", "caption":"blNo", "style" : "text-align:center", "reference": "refBlNo", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListConSignee'), "dataIndex": "consignee", "width": 80, "align":"center", "caption":"consignee", "style" : "text-align:center", "reference": "refConsignee", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListShipper'), "dataIndex": "shipper", "width": 80, "align":"center", "caption":"shipper", "style" : "text-align:center", "reference": "refShipper", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListTransporter'), "dataIndex": "transporter", "width": 120, "align":"center", "caption":"transporter", "style" : "text-align:center", "reference": "refTransporter", "filter": "string",},
				{ "header": ViewUtil.getLabel('typeofCargo'), "dataIndex": "cargoType", "width": 120, "align":"center", "caption":"cargoType", "style" : "text-align:center", "reference": "refCargoType", "filter": "string",},
				{ "header": ViewUtil.getLabel('commodityGroup'), "dataIndex": "cargoSubType", "width": 130, "align":"center", "caption":"cargoSubType", "style" : "text-align:center", "reference": "refCargoSubType", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListCommodity'), "dataIndex": "commodity", "width": 160, "align":"center", "caption":"commodity", "style" : "text-align:center", "reference": "refCommodity", "filter": "string",},
				{ "header": ViewUtil.getLabel('packageTp'), "dataIndex": "packageType", "width": 140, "align":"center", "caption":"packageType", "style" : "text-align:center", "reference": "refPackageType", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListMark'), "dataIndex": "mark", "width": 250, "align":"center", "caption":"mark", "style" : "text-align:center", "reference": "refMark", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListPackageNumber'), "dataIndex": "packageNumber", "width": 140, "align":"center", "caption":"packageNumber", "style" : "text-align:center", "reference": "refPackageNumber", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListQuantity'), "dataIndex": "quantity", "width": 80, "align":"center", "caption":"quantity", "style" : "text-align:center", "reference": "refQuantity", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListLength'), "dataIndex": "length", "width": 120, "align":"center", "caption":"length", "style" : "text-align:center", "reference": "refLength", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListWidth'), "dataIndex": "width", "width": 120, "align":"center", "caption":"width", "style" : "text-align:center", "reference": "refWidth", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListHeight'), "dataIndex": "height", "width": 120, "align":"center", "caption":"height", "style" : "text-align:center", "reference": "refHeight", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListEachWeight'), "dataIndex": "eachWeight", "width": 120, "align":"center", "caption":"eachWeight", "style" : "text-align:center", "reference": "refEachWeight", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListEachVolumn'), "dataIndex": "eachVolumn", "width": 120, "align":"center", "caption":"eachVolumn", "style" : "text-align:center", "reference": "refEachVolumn", "filter": "string",},
				{ "header": ViewUtil.getLabel('grossWeight'), "dataIndex": "totalWeight", "width": 120, "align":"center", "caption":"totalWeight", "style" : "text-align:center", "reference": "refTotalWeight", "filter": "string",},
				{ "header": ViewUtil.getLabel('measurement'), "dataIndex": "totalVolumn", "width": 120, "align":"center", "caption":"totalVolumn", "style" : "text-align:center", "reference": "refTotalVolumn", "filter": "string",},
				{ "header": ViewUtil.getLabel('portOfLoading'), "dataIndex": "loadPort", "width": 120, "align":"center", "caption":"loadPort", "style" : "text-align:center", "reference": "refLoadPort", "filter": "string",},
				{ "header": ViewUtil.getLabel('portOfDischarging'), "dataIndex": "dischargePort", "width": 120, "align":"center", "caption":"dischargePort", "style" : "text-align:center", "reference": "refDischargePort", "filter": "string",},
				{ "header": ViewUtil.getLabel('finalDest'), "dataIndex": "cargoDest", "width": 120, "align":"center", "caption":"cargoDest", "style" : "text-align:center", "reference": "refCargoDest", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListDG'), "dataIndex": "dgNo", "width": 140, "align":"center", "caption":"dgNo", "style" : "text-align:center", "reference": "refDgNo", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListCargoDesc'), "dataIndex": "cargoDesc", "width": 300, "align":"center", "caption":"cargoDesc", "style" : "text-align:center", "reference": "refCargoDesc", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListParentId'), "dataIndex": "parentId", "width": 120, "align":"center", "caption":"parentId", "style" : "text-align:center", "reference": "refParentId", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListParentCargoType'), "dataIndex": "parentCargoType", "width": 120, "align":"center", "caption":"parentCargoType", "style" : "text-align:center", "reference": "refParentCargoType", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListDeliveryMode'), "dataIndex": "deliveryMode", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListDeliveryModeCode'), "dataIndex": "deliveryModeCd", "width": 140, "align":"center", "caption":"deliveryModeCd", "style" : "text-align:center", "reference": "refDeliveryModeCd", "filter": "string",},
				/* { "header": ViewUtil.getLabel('cargoLoadingListHatchNo'), "dataIndex": "hatchNo", "width": 120, "align":"center", "caption":"hatchNo", "style" : "text-align:center", "reference": "refHatchNo", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				}, */
				{ "header": ViewUtil.getLabel('cargoLoadingListEstimateArrivalDate'), "dataIndex": "estimateArrivalDate", "width": 140, "align":"center", "caption":"estimateArrivalDate", "style" : "text-align:center", "reference": "refEstimateArrivalDate", "filter": "string", "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),},
				{ "header": ViewUtil.getLabel('cargoLoadingListModeofOp'), "dataIndex": "modeofOp", "width": 120, "align":"center", "caption":"modeofOp", "style" : "text-align:center", "reference": "refModeofOp",  "filter": "string",}
				
			]
		},
		{
			"key": "GeneralCargoDischargingList",
			"items": [
 				{ "header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "width": 100, "align":"center", "caption":"vslCallId", "style" : "text-align:center", "reference": "refVslCallId", "maxLength":"10","filter": "list",}, 
				{ "header": ViewUtil.getLabel('importExport'), "dataIndex": "opeClassCd", "width": 120, "align":"center", "caption":"opeClassCd", "style" : "text-align:center", "reference": "refOpeClassCd", "filter": "string",},
				{ "header": ViewUtil.getLabel('masterBillOfLading'), "dataIndex": "mfDocId", "width": 150, "align":"center", "caption":"mfDocId", "style" : "text-align:center", "reference": "refMfDocId", "filter": "string", },
				{ "header": ViewUtil.getLabel('cargoDischargingListBL'), "dataIndex": "blNo", "width": 140, "align":"center", "caption":"blNo", "style" : "text-align:center", "reference": "refBlNo", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListConSignee'), "dataIndex": "consignee", "width": 80, "align":"center", "caption":"consignee", "style" : "text-align:center", "reference": "refConsignee", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListShipper'), "dataIndex": "shipper", "width": 80, "align":"center", "caption":"shipper", "style" : "text-align:center", "reference": "refShipper", "filter": "string", },
				{ "header": ViewUtil.getLabel('shippingAgent'), "dataIndex": "cargoAgent", "width": 120, "align":"center", "caption":"cargoAgent", "style" : "text-align:center", "reference": "refCargoAgent", "filter": "string",},
				{ "header": ViewUtil.getLabel('typeofCargo'), "dataIndex": "cargoType", "width": 120, "align":"center", "caption":"cargoType", "style" : "text-align:center", "reference": "refCargoType", "filter": "string",},
				{ "header": ViewUtil.getLabel('commodityGroup'), "dataIndex": "cargoSubType", "width": 130, "align":"center", "caption":"cargoSubType", "style" : "text-align:center", "reference": "refCargoSubType", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListCommodity'), "dataIndex": "commodity", "width": 160, "align":"center", "caption":"commodity", "style" : "text-align:center", "reference": "refCommodity", "filter": "string",},
				{ "header": ViewUtil.getLabel('packageTp'), "dataIndex": "packageType", "width": 140, "align":"center", "caption":"packageType", "style" : "text-align:center", "reference": "refPackageType", "filter": "string",},
				{ "header": ViewUtil.getLabel('mAndN'), "dataIndex": "mark", "width": 250, "align":"center", "caption":"mark", "style" : "text-align:center", "reference": "refMark", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListPackageNumber'), "dataIndex": "packageNumber", "width": 140, "align":"center", "caption":"packageNumber", "style" : "text-align:center", "reference": "refPackageNumber", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListQuantity'), "dataIndex": "quantity", "width": 80, "align":"center", "caption":"quantity", "style" : "text-align:center", "reference": "refQuantity", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListLength'), "dataIndex": "length", "width": 120, "align":"center", "caption":"length", "style" : "text-align:center", "reference": "refLength", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListWidth'), "dataIndex": "width", "width": 120, "align":"center", "caption":"width", "style" : "text-align:center", "reference": "refWidth", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListHeight'), "dataIndex": "height", "width": 120, "align":"center", "caption":"height", "style" : "text-align:center", "reference": "refHeight", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListEachWeight'), "dataIndex": "eachWeight", "width": 120, "align":"center", "caption":"eachWeight", "style" : "text-align:center", "reference": "refEachWeight", "filter": "string", },
				{ "header": ViewUtil.getLabel('cargoDischargingListEachVolumn'), "dataIndex": "eachVolumn", "width": 120, "align":"center", "caption":"eachVolumn", "style" : "text-align:center", "reference": "refEachVolumn", "filter": "string",},
				{ "header": ViewUtil.getLabel('grossWeight'), "dataIndex": "totalWeight", "width": 120, "align":"center", "caption":"totalWeight", "style" : "text-align:center", "reference": "refTotalWeight", "filter": "string",},
				{ "header": ViewUtil.getLabel('measurement'), "dataIndex": "totalVolumn", "width": 120, "align":"center", "caption":"totalVolumn", "style" : "text-align:center", "reference": "refTotalVolumn", "filter": "string",},
				{ "header": ViewUtil.getLabel('portOfLoading'), "dataIndex": "loadPort", "width": 120, "align":"center", "caption":"loadPort", "style" : "text-align:center", "reference": "refLoadPort", "filter": "string",},
				{ "header": ViewUtil.getLabel('portOfDischarging'), "dataIndex": "dischargePort", "width": 120, "align":"center", "caption":"dischargePort", "style" : "text-align:center", "reference": "refDischargePort", "filter": "string",},
				{ "header": ViewUtil.getLabel('finalDest'), "dataIndex": "cargoDest", "width": 120, "align":"center", "caption":"cargoDest", "style" : "text-align:center", "reference": "refCargoDest", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListDG'), "dataIndex": "dgNo", "width": 140, "align":"center", "caption":"dgNo", "style" : "text-align:center", "reference": "refDgNo", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListCargoDesc'), "dataIndex": "cargoDesc", "width": 300, "align":"center", "caption":"cargoDesc", "style" : "text-align:center", "reference": "refCargoDesc", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListParentId'), "dataIndex": "parentId", "width": 120, "align":"center", "caption":"parentId", "style" : "text-align:center", "reference": "refParentId", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListParentCargoType'), "dataIndex": "parentCargoType", "width": 120, "align":"center", "caption":"parentCargoType", "style" : "text-align:center", "reference": "refParentCargoType", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListDeliveryMode'), "dataIndex": "deliveryMode", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListHatchNo'), "dataIndex": "hatchNo", "width": 120, "align":"center", "caption":"hatchNo", "style" : "text-align:center", "reference": "refHatchNo", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListModeofOp'), "dataIndex": "modeofOp", "width": 120, "align":"center", "caption":"modeofOp", "style" : "text-align:center", "reference": "refModeofOp",  "filter": "string"}		
			]
		},
		{
			"key": "RORODischargingList",
			"items": [
				{ "header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "width": 100, "align":"center", "caption":"vslCallId", "style" : "text-align:center", "reference": "refVslCallId", "maxLength":"10","filter": "list",}, 
				{ "header": ViewUtil.getLabel('importExport'), "dataIndex": "opeClassCd", "width": 120, "align":"center", "caption":"opeClassCd", "style" : "text-align:center", "reference": "refOpeClassCd", "filter": "string",},
				{ "header": ViewUtil.getLabel('masterBillOfLading'), "dataIndex": "mfDocId", "width": 150, "align":"center", "caption":"mfDocId", "style" : "text-align:center", "reference": "refMfDocId", "filter": "string", },
				{ "header": ViewUtil.getLabel('cargoDischargingListBL'), "dataIndex": "blNo", "width": 140, "align":"center", "caption":"blNo", "style" : "text-align:center", "reference": "refBlNo", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListObjectVINNumber'), "dataIndex": "chassisNo", "width": 120, "align":"center", "caption":"chassisNo", "style" : "text-align:center", "reference": "refChassisNo",  "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoDischargingListConSignee'), "dataIndex": "consignee", "width": 80, "align":"center", "caption":"consignee", "style" : "text-align:center", "reference": "refConsignee", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListShipper'), "dataIndex": "shipper", "width": 80, "align":"center", "caption":"shipper", "style" : "text-align:center", "reference": "refShipper", "filter": "string", },
				{ "header": ViewUtil.getLabel('shippingAgent'), "dataIndex": "cargoAgent", "width": 120, "align":"center", "caption":"cargoAgent", "style" : "text-align:center", "reference": "refCargoAgent", "filter": "string",},
				{ "header": ViewUtil.getLabel('typeofCargo'), "dataIndex": "cargoType", "width": 120, "align":"center", "caption":"cargoType", "style" : "text-align:center", "reference": "refCargoType", "filter": "string",},
				{ "header": ViewUtil.getLabel('commodityGroup'), "dataIndex": "cargoSubType", "width": 130, "align":"center", "caption":"cargoSubType", "style" : "text-align:center", "reference": "refCargoSubType", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListCommodity'), "dataIndex": "commodity", "width": 160, "align":"center", "caption":"commodity", "style" : "text-align:center", "reference": "refCommodity", "filter": "string",},
				{ "header": ViewUtil.getLabel('packageTp'), "dataIndex": "packageType", "width": 140, "align":"center", "caption":"packageType", "style" : "text-align:center", "reference": "refPackageType", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListVehicleBrand'), "dataIndex": "vehicleBrand", "width": 120, "align":"center", "caption":"vehicleBrand", "style" : "text-align:center", "reference": "refVehicleBrand",  "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoDischargingListVehicleModel'), "dataIndex": "vehicleModel", "width": 120, "align":"center", "caption":"vehicleModel", "style" : "text-align:center", "reference": "refVehicleModel",  "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoDischargingListNewUsed'), "dataIndex": "newUsed", "width": 120, "align":"center", "caption":"newUsed", "style" : "text-align:center", "reference": "refNewUsed",  "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoDischargingListQuantity'), "dataIndex": "quantity", "width": 80, "align":"center", "caption":"quantity", "style" : "text-align:center", "reference": "refQuantity", "filter": "string",	},
				{ "header": ViewUtil.getLabel('cargoDischargingListMT'), "dataIndex": "docWgt", "width": 80, "align":"center", "caption":"docWgt", "style" : "text-align:center", "reference": "refDocWgt", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListTotalWeight'), "dataIndex": "totalWeight", "width": 120, "align":"center", "caption":"totalWeight", "style" : "text-align:center", "reference": "refTotalWeight", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListTotalVolumn'), "dataIndex": "totalVolumn", "width": 120, "align":"center", "caption":"totalVolumn", "style" : "text-align:center", "reference": "refTotalVolumn", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListLoadPort'), "dataIndex": "loadPort", "width": 120, "align":"center", "caption":"loadPort", "style" : "text-align:center", "reference": "refLoadPort", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListDischargePort'), "dataIndex": "dischargePort", "width": 120, "align":"center", "caption":"dischargePort", "style" : "text-align:center", "reference": "refDischargePort", "filter": "string",},
 				{ "header": ViewUtil.getLabel('cargoDischargingListCargoDest'), "dataIndex": "cargoDest", "width": 120, "align":"center", "caption":"cargoDest", "style" : "text-align:center", "reference": "refCargoDest", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListCargoDesc'), "dataIndex": "cargoDesc", "width": 300, "align":"center", "caption":"cargoDesc", "style" : "text-align:center", "reference": "refCargoDesc", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListDeliveryMode'), "dataIndex": "deliveryMode", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListHatchNo'), "dataIndex": "hatchNo", "width": 120, "align":"center", "caption":"hatchNo", "style" : "text-align:center", "reference": "refHatchNo", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoDischargingListModeofOp'), "dataIndex": "modeofOp", "width": 120, "align":"center", "caption":"modeofOp", "style" : "text-align:center", "reference": "refModeofOp",  "filter": "string"}
			]
		},
		{
			"key": "ROROLoadingList",
			"items": [
 				{ "header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "width": 100, "align":"center", "caption":"vslCallId", "style" : "text-align:center", "reference": "refVslCallId", "maxLength":"10","filter": "list",}, 
				{ "header": ViewUtil.getLabel('importExport'), "dataIndex": "opeClassCd", "width": 120, "align":"center", "caption":"opeClassCd", "style" : "text-align:center", "reference": "refOpeClassCd", "filter": "string",},
				{ "header": ViewUtil.getLabel('SNLBookingNo'), "dataIndex": "mfDocId", "width": 120, "align":"center", "caption":"mfDocId", "style" : "text-align:center", "reference": "refMfDocId", "filter": "string",},
				{ "header": ViewUtil.getLabel('shipgNoteNoFull'), "dataIndex": "shipgNoteNo", "width": 140, "align":"center", "caption":"blNo", "style" : "text-align:center", "reference": "refBlNo", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListObjectVINNumber'), "dataIndex": "chassisNo", "width": 120, "align":"center", "caption":"chassisNo", "style" : "text-align:center", "reference": "refChassisNo",  "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoLoadingListConSignee'), "dataIndex": "consignee", "width": 80, "align":"center", "caption":"consignee", "style" : "text-align:center", "reference": "refConsignee", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListShipper'), "dataIndex": "shipper", "width": 80, "align":"center", "caption":"shipper", "style" : "text-align:center", "reference": "refShipper", "filter": "string",},
				{ "header": ViewUtil.getLabel('SNLTrans'), "dataIndex": "transporter", "width": 120, "align":"center", "caption":"transporter", "style" : "text-align:center", "reference": "refTransporter", "filter": "string",},
				/* { "header": ViewUtil.getLabel('typeofCargo'), "dataIndex": "cargoType", "width": 120, "align":"center", "caption":"cargoType", "style" : "text-align:center", "reference": "refCargoType", "filter": "string",}, */
				{ "header": ViewUtil.getLabel('commodityGroup'), "dataIndex": "cargoSubType", "width": 130, "align":"center", "caption":"cargoSubType", "style" : "text-align:center", "reference": "refCargoSubType", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListCommodity'), "dataIndex": "commodity", "width": 160, "align":"center", "caption":"commodity", "style" : "text-align:center", "reference": "refCommodity", "filter": "string",},
				{ "header": ViewUtil.getLabel('packageTp'), "dataIndex": "packageType", "width": 140, "align":"center", "caption":"packageType", "style" : "text-align:center", "reference": "refPackageType", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListVehicleBrand'), "dataIndex": "vehicleBrand", "width": 120, "align":"center", "caption":"vehicleBrand", "style" : "text-align:center", "reference": "refVehicleBrand",  "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoLoadingListVehicleModel'), "dataIndex": "vehicleModel", "width": 120, "align":"center", "caption":"vehicleModel", "style" : "text-align:center", "reference": "refVehicleModel",  "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoLoadingListNewUsed'), "dataIndex": "newUsed", "width": 120, "align":"center", "caption":"newUsed", "style" : "text-align:center", "reference": "refNewUsed",  "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoLoadingListQuantity'), "dataIndex": "quantity", "width": 80, "align":"center", "caption":"quantity", "style" : "text-align:center", "reference": "refQuantity", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListMT'), "dataIndex": "docWgt", "width": 80, "align":"center", "caption":"docWgt", "style" : "text-align:center", "reference": "refDocWgt", "filter": "string"},
				{ "header": ViewUtil.getLabel('cargoLoadingListTotalWeight'), "dataIndex": "totalWeight", "width": 120, "align":"center", "caption":"totalWeight", "style" : "text-align:center", "reference": "refTotalWeight", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListTotalVolumn'), "dataIndex": "totalVolumn", "width": 120, "align":"center", "caption":"totalVolumn", "style" : "text-align:center", "reference": "refTotalVolumn", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListLoadPort'), "dataIndex": "loadPort", "width": 120, "align":"center", "caption":"loadPort", "style" : "text-align:center", "reference": "refLoadPort", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListDischargePort'), "dataIndex": "dischargePort", "width": 120, "align":"center", "caption":"dischargePort", "style" : "text-align:center", "reference": "refDischargePort", "filter": "string",},
				/* { "header": ViewUtil.getLabel('finalDest'), "dataIndex": "cargoDest", "width": 120, "align":"center", "caption":"cargoDest", "style" : "text-align:center", "reference": "refCargoDest", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				}, */
				{ "header": ViewUtil.getLabel('cargoLoadingListCargoDesc'), "dataIndex": "cargoDesc", "width": 300, "align":"center", "caption":"cargoDesc", "style" : "text-align:center", "reference": "refCargoDesc", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListDeliveryMode'), "dataIndex": "deliveryMode", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListEstimateArrivalDate'), "dataIndex": "estimateArrivalDate", "width": 120, "align":"center", "caption":"estimateArrivalDate", "style" : "text-align:center", "reference": "refEstimateArrivalDate",			
					"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						return value == '' || value == null ? null : Ext.util.Format.date(new Date(value), MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{ "header": ViewUtil.getLabel('cargoLoadingListHatchNo'), "dataIndex": "hatchNo", "width": 120, "align":"center", "caption":"hatchNo", "style" : "text-align:center", "reference": "refHatchNo", "filter": "string",},
				{ "header": ViewUtil.getLabel('cargoLoadingListModeofOp'), "dataIndex": "modeofOp", "width": 120, "align":"center", "caption":"modeofOp", "style" : "text-align:center", "reference": "refModeofOp",  "filter": "string"},
			]
		},
		{
			"key": "RORODetailUploadList",
			"items": [
				{ "header": ViewUtil.getLabel('vehicleMake'), "dataIndex": "brandCd", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('vehicleModel'), "dataIndex": "modelCd", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('vinNo'), "dataIndex": "unitNo", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('newUsed'), "dataIndex": "newYn", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('weightMt'), "dataIndex": "roroMt", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('volumeCbm'), "dataIndex": "cbm", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				}
			]
		},
		{
			"key": "PackageDetailUploadList",
			"items": [
				{ "header": ViewUtil.getLabel('packageNo'), "dataIndex": "pkgNo", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('packageDesc'), "dataIndex": "pkgDesc", "width": 200, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('grossWeight'), "dataIndex": "pkgMt", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('measurement'), "dataIndex": "pkgM3", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('lengthCm'), "dataIndex": "length", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('widthCm'), "dataIndex": "width", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				{ "header": ViewUtil.getLabel('heightCm'), "dataIndex": "height", "width": 140, "align":"center", "caption":"deliveryMode", "style" : "text-align:center", "reference": "refDeliveryMode", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				},
				
				
				{ "header": ViewUtil.getLabel('rmk'), "dataIndex": "pkgRmk", "width": 140, "align":"center", "caption":"pkgRmk", "style" : "text-align:center", "reference": "refPkgRmk", "filter": "string"
					,"renderer": function (value, meta, record, rowIndex, colIndex, store) {
						var me = this,
							targetColumn = me.getColumns()[colIndex].dataIndex,
							validResult = record.getValidation();

						if(
							!validResult.isValid()
							&& validResult.modified[targetColumn]
						) {
							var msgCode = store.model.getField(targetColumn).invalidCode,
								msg = ViewUtil.getLabel(msgCode);
								
							meta.tdAttr = 'data-qtip="' + msg + '"';
							meta.style = "background-color:yellow;"
						}
						return value;
					}
				}
				
				
			]
		},
		{
			"key": "InvoiceTemplateList",
			"items": [
				{
					"header": ViewUtil.getLabel('invoicetemplatetemplateNm'), "dataIndex": "templateNm", "reference": "refTemplateNm", "filter": "string", "width": 130,
				},
				{
					"header": ViewUtil.getLabel('invoicetemplatepayer'), "dataIndex": "payer", "reference": "refPayer", "filter": "list", "width": 100,
				},
				{
					"header": ViewUtil.getLabel('invoicetemplatecargoTpCd'), "dataIndex": "cargoTpCd", "reference": "refCargoTpCd", "filter": "string", "width": 130,
				},
				{
					"header": ViewUtil.getLabel('invoicetemplatecategory'), "dataIndex": "category", "reference": "refCategory", "filter": "string", "width": 130,
				},
				{
					"header": ViewUtil.getLabel('invoicetemplatedeliveryTpCd'), "dataIndex": "deliveryTpCd", "reference": "refDeliveryTpCd", "filter": "string", "width": 100,
				},
				{
					"header": ViewUtil.getLabel('invoicetemplatedescr'), "dataIndex": "descr", "reference": "refDescr", "filter": "string", "width": 100,
				}]
		},
		{
			"key": "InvoiceTemplateTariffList",
			"items": [
				{
					"xtype": "checkcolumn", "headerCheckbox": true, "sortable": false, "hideable": false, "menuDisabled": true, "dataIndex": "selected", "reference": "refTariffTypeCheck", "filter": "string", "width": 50, "listeners": {
						"checkchange": "onChecked"
					}
				},
				{
					"header": ViewUtil.getLabel('invoicetemplatetrfTpCdNm'), "dataIndex": "trfTpCdNm", "reference": "refTrfTpCdNm", "filter": "string", "width": 100,
				},
				{
					"header": ViewUtil.getLabel('invoicetemplatetrfCd'), "dataIndex": "trfCd", "reference": "refTrfCd", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('invoicetemplatesubTrfCd'), "dataIndex": "subTrfCd", "reference": "refSubTrfCd", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('invoicetemplatedescr'), "dataIndex": "descr", "reference": "refDescr", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('invoicetemplateivUnit1'), "dataIndex": "ivUnit1", "reference": "refIvUnit1", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('invoicetemplateivUnit2'), "dataIndex": "ivUnit2", "reference": "refIvUnit2", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('invoicetemplateivUnit3'), "dataIndex": "ivUnit3", "reference": "refIvUnit3", "filter": "string", "width": 100
				}]
		},
		{
			"key": "InvoiceAdviceList",
			"items": [
				{
					"header": ViewUtil.getLabel('adviceNo'), "dataIndex": "adviceNo", "reference": "refAdviceNo", "filter": "string", "editable": false, "width": 200
				},
				{
					"header": ViewUtil.getLabel('vessel'), "dataIndex": "vesselCallingID", "reference": "refJPVC", "filter": "string", "width": 150,
				},
				{
					"header": ViewUtil.getLabel('vesselName'), "dataIndex": "vesselName", "reference": "refVesselName", "filter": "string", "width": 200
				},
				{
					"header": ViewUtil.getLabel('sA'), "dataIndex": "shippingAgent", "reference": "refSA", "filter": "string", "width": 100
				},
				{
					"header": ViewUtil.getLabel('eTA'), "dataIndex": "eta", "reference": "refETA", "filter": "string", "width": 170, "xtype": "datecolumn", "format": MOST.config.Locale.getShortDate(),
					"exportRenderer": function (value, record, dataIndex, cell, column) {
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('eTD'), "dataIndex": "etd", "reference": "refETD", "filter": "string", "width": 170, "xtype": "datecolumn", "format": MOST.config.Locale.getShortDate(),
					"exportRenderer": function (value, record, dataIndex, cell, column) {
						return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
					}
				},
				{
					"header": ViewUtil.getLabel('status'), "dataIndex": "ackStatusCode", "reference": "refStatus", "filter": "string", "width": 100,
				},
				{
					"header": ViewUtil.getLabel('updateTime'), "dataIndex": "updateTimeField", "reference": "refupdateTime", "editable": false, "xtype": "datecolumn", "format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(), "width": 150,
					"exportRenderer": function (value, record, dataIndex, cell, column) {
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('updateUser'), "dataIndex": "updUserId", "reference": "refUserId", "filter": "string", "width": 150,
				},
				{
					"header": ViewUtil.getLabel('remark'), "dataIndex": "rmk", "reference": "refRemark", "filter": "string", "width": 200,
				}
			]
		},
		{
			"key": "InvoiceAdviceDetailHistoryGridList",
			"items": [
				{
					"header":  ViewUtil.getLabel('event_time'), "dataIndex": "chgDt", "width" : 150, "align" : "center"
				},
				{
					"header":  ViewUtil.getLabel('status'), "dataIndex": "ackStatusCode", "width" : 150, "align" : "center"
				},
				{
					"header":  ViewUtil.getLabel('partnerCode'), "dataIndex": "partnerCode", "width" : 150, "align" : "center"
				},
				{
					"header":  ViewUtil.getLabel('partnerName'), "dataIndex": "partnerName", "width" : 150, "align" : "center"
				},
				{
					"header":  ViewUtil.getLabel('authUserId'), "dataIndex": "userId", "width" : 150, "align" : "center"
				},
				{
					"header":  ViewUtil.getLabel('userName'), "dataIndex": "userId", "width" : 150, "align" : "center"
				},
			]
		},
		{
			"key": "InvoiceAdviceHeadList",
			"items": [
				{
					"header": ViewUtil.getLabel('payerCode'), "reference": "ctlPayerCode", "editable": false, "width": 150, "dataIndex": "payerCd"
				}, {
					"header": ViewUtil.getLabel('totalTariffs'), "reference": "ctlTotalTariffs", "editable": false, "width": 150, "dataIndex": "totalTariffs", "align": "right",
				}, {
					"header": ViewUtil.getLabel('confirmAcceptPayment'), "reference": "ctlConfirmAcceptPayment", "editable": false, "width": 200, "dataIndex": "confirmAcceptPayment"
				},
			]
		},
		{
			"key": "InvoiceAdviceDetailGridList",
			"items": [
				{
					"xtype": "actioncolumn", "width": 30, "text": "",
					"items": [
						{
							"icon": ""
						}
					],
					"renderer": function (v, m, r) {
						if (r.data.workingStatus == 'C') {
							this.items[0].iconCls = 'x-fa fa-file-text-o';
						} else if (r.data.workingStatus == 'U') {
							this.items[0].iconCls = 'x-fa fa-pencil-square-o';
						} else if (r.data.workingStatus == 'D') {
							this.items[0].iconCls = 'x-fa fa-times';
						} else
							this.items[0].iconCls = '';
					}
				},
				{
					"header": ViewUtil.getLabel('requester'), "dataIndex": "partnerName", "reference": "ctlRequester", "width": 150,  "align": "left"
				},
				{
					"header": ViewUtil.getLabel('payer'), "dataIndex": "payerName", "reference": "ctlPayer", "width": 120, "align": "left"
				},
				{
					"header": ViewUtil.getLabel('tariffType'), "dataIndex": "tarrifTypeName", "reference": "ctlTariffType", "width": 120
				},
				{
					"header": ViewUtil.getLabel('lDDS'), "dataIndex": "operationTypeName", "reference": "ctlLDDS", "width": 80
				},
				{
					"header": ViewUtil.getLabel('commodity'), "dataIndex": "commodityCode", "filter": "string", "reference": "ctlCommodity", "width": 80
				},
				{
					"header": ViewUtil.getLabel('tonnageMT'), "dataIndex": "wgt", "reference": "ctlTonnageMT", "width": 80, "align": "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('m3'), "dataIndex": "msrmt", "reference": "ctlM3", "width": 70, "align": "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('qTY'), "dataIndex": "qty", "reference": "ctlQTY", "width": 70, "align": "right", "format": "0,000.000"
				},
				{
					"header": ViewUtil.getLabel('bLNo'), "dataIndex": "blNo", "reference": "ctlBLNo", "width": 100
				},
				{
					"header": ViewUtil.getLabel('sNNo'), "dataIndex": "shipgNoteNo", "reference": "ctlSNNo", "width": 100
				},
				{
					"header": ViewUtil.getLabel('remark'), "dataIndex": "rmk", "reference": "ctlRemark", "width": 100
				}
			]
		},
		{
			"key": "GeneralTotalList",
			"items": [
				{
					"header": ViewUtil.getLabel('generalOperationTotal'), "editable": false, "width": 300, "dataIndex": "type"
				}, {
					"header": ViewUtil.getLabel('grPopupGrWgt'), "editable": false, "width": 80, "dataIndex": "sumWgt"
				}, {
					"header": ViewUtil.getLabel('grPopupGrMsrmt'), "editable": false, "width": 80, "dataIndex": "sumM3"
				}, {
					"header": ViewUtil.getLabel('grPopupGrQty'), "editable": false, "width": 80, "dataIndex": "sumQty"
				}
			]
		},{
			"key": "InterfaceLogList",
			"items": [
				{
					"header": ViewUtil.getLabel('transactionId'), "editable": false, "width": 130, "dataIndex": "transactionId"
				}
				,{
					"header": ViewUtil.getLabel('msgId'), "editable": false, "width": 270, "dataIndex": "msgId"
				}
				,{
					"header": ViewUtil.getLabel('transType'), "editable": false, "width": 80, "dataIndex": "transType"
				}
				,{
					"header": ViewUtil.getLabel('msgType'), "editable": false, "width": 95, "dataIndex": "msgType", "filter": "string"
				}
				,{
					"header": ViewUtil.getLabel('applyStatus'), "editable": false, "width": 90, "dataIndex": "applyStatus"
				}
				,{
					"header": ViewUtil.getLabel('applyDate'), "editable": false, "width": 135, "dataIndex": "applyDate"
				}
				,{
					"header": ViewUtil.getLabel('errMsg'), "editable": false, "width": 360, "dataIndex": "errMsg"
				}
				,{
					"header": ViewUtil.getLabel('retry'), "editable": false, "width": 80, "dataIndex": "retry"
				}
			]
		},
		{
			"key": "GeneralOngoingRemainList",
			"items": [
				{
					"header": ViewUtil.getLabel('generalOperationOngoingReamain'), "editable": false, "width": 300, "dataIndex": "type"
				}, {
					"header": ViewUtil.getLabel('grPopupGrWgt'), "editable": false, "width": 80, "dataIndex": "sumWgt"
				}, {
					"header": ViewUtil.getLabel('grPopupGrMsrmt'), "editable": false, "width": 80, "dataIndex": "sumM3"
				}, {
					"header": ViewUtil.getLabel('grPopupGrQty'), "editable": false, "width": 80, "dataIndex": "sumQty"
				}
			]
		},
		{
			"key": "VesselBaplieForGC",
			"items": [
				{"header": ViewUtil.getLabel('hatchNo'), "dataIndex": "hatchNo", "reference": "refHatchNo", "filter": "string", "align" : "left", "locked" : false, "width": 170},
				{"header": ViewUtil.getLabel('deckLocation'), "dataIndex": "deckLoc", "reference": "refDeckLocation","filter": "string", "align" : "left", "locked" : false, "width": 170},
				{"header": ViewUtil.getLabel('hackSeq'),"dataIndex": "hatchSeq","reference": "refHackSeq","filter": "string", "align" : "left","width": 170},
				{"header": ViewUtil.getLabel('bl'), "dataIndex": "blNo", "reference": "refBTNNo", "width": 110,"filter": "string", "align" : "left"},
				{"header": ViewUtil.getLabel('marksNo'), "dataIndex": "marksNo", "reference": "refMarksNo", "width": 120,"filter": "string", "align" : "left" },
				{"header": ViewUtil.getLabel('mt'), "dataIndex": "mt", "reference": "refMT", "width": 170,"filter": "string", "align" : "left"},
				{"header": ViewUtil.getLabel('qty'), "dataIndex": "qty", "reference": "refQty", "align" : "left", "filter": "string", "width": 170},
				{"header": ViewUtil.getLabel('rmk'), "align" : "left", "dataIndex": "rmk", "reference": "refRemark", "filter": "string", "width": 170 }
			]
		},
		
		{
			"key": "BTNSearch",
			"items": [
				{"header": ViewUtil.getLabel('vslschCallId'), "dataIndex": "vslCallId", "reference": "refVslCallId", "filter": "string", "align" : "left", "locked" : false, "width": 170},
				{"header": ViewUtil.getLabel('vesselId'), "dataIndex": "vslCd", "reference": "refVslCd","filter": "string", "align" : "left", "locked" : false, "width": 170},
				{ "header": ViewUtil.getLabel('category'), "filter" : "string", "dataIndex": "opClassNm", "width": 130},
				{"header": ViewUtil.getLabel('btn'), "dataIndex": "btnNo", "reference": "refBTNNo", "width": 120,"filter": "string", "align" : "left"},
				{"header": ViewUtil.getLabel('btnSeq'), "dataIndex": "btnSeq", "reference": "refBTNSeq", "width": 160,"filter": "string", "align" : "left" },
				{"header": ViewUtil.getLabel('docMt'), "dataIndex": "wgt", "reference": "refMT", "width": 170,"filter": "string", "align" : "left"},
				{"header": ViewUtil.getLabel('docM3'), "dataIndex": "vol", "reference": "refM3", "align" : "left", "filter": "string", "width": 170},
				{"header": ViewUtil.getLabel('docQty'), "align" : "left", "dataIndex": "pkgQty", "reference": "refQty", "filter": "string", "width": 170 },
				{"header": ViewUtil.getLabel('packageType'), "align" : "left", "dataIndex": "pkgTpCd", "reference": "refPkgTpCd", "filter": "string", "width": 170 },
				{"header": ViewUtil.getLabel('shippingAgent'), "align" : "left", "dataIndex": "shaCd", "reference": "refShgAgent", "filter": "string", "width": 170 }
				]
		},
		
		{
			"key": "VesselWorkPlan",
			"items": [
				{"header": ViewUtil.getLabel('craneNo'), "dataIndex": "craneNo", "reference": "refCraneNo", "filter": "string", "align" : "left", "width": 150,
						"editor": {
							"xtype": "textfield",
							"maxLength": "20",
							"enforceMaxLength": true
						}
				},
				{"header": ViewUtil.getLabel('vesselSeq'), "dataIndex": "vslSeq", "reference": "refVslSeq","filter": "string", "align" : "left", "width": 120,
						"editor": {
							"xtype": "textfield",
							"maxLength": "20",
							"enforceMaxLength": true
						}	
				},
				{
				    "header": ViewUtil.getLabel('hatchNo'),
				    "reference": "refGridHatch",
				    "dataIndex": "hatchNo",
				    "editor": {
				        "xtype": "combo",
				        "bind": {
				        	"store": '{hatchNoCombo}'
				        },
				        "displayField": "scdNm",
				        "valueField": "scd",
				        "queryMode": "local",
				        "value":"",
				        "editable": false,
		   				"disabled": false,
				        "forceSelection" : true,
				        "activeError": "important",
				    },
				    "width": 100
			},
				{"header": ViewUtil.getLabel('stevedoreTrimmingDeck'), "dataIndex": "deckLoc", "reference": "refDeckLock", "width": 150,"filter": "string", "align" : "left",
					"editor":{
						"xtype": "combo",
						"bind": {
							"store": '{deckLocCombo}' 
						 },
						
						"displayField": "scdNm",
						"valueField": "scd",
						"activeError": "important",
						"editable": false,
						"disabled": false,
				    }
				},
				{"header": ViewUtil.getLabel('hackSeq'), "dataIndex": "hatchSeq", "reference": "refHatchSeq", "width": 140,"filter": "string", "align" : "left" ,
						"editor": {
							"xtype": "textfield",
							"maxLength": "20",
							"enforceMaxLength": true
						}	
				},
				{"header": ViewUtil.getLabel('pod'), "dataIndex": "pod", "reference": "refPOD", "width": 180,"filter": "string", "align" : "left"},
				{"header": ViewUtil.getLabel('category'), "dataIndex": "catgNm", "reference": "refCategory", "align" : "left", "filter": "string", "width": 120},
				{"header": ViewUtil.getLabel('bl_sn'), "align" : "left", "dataIndex": "blSNNo", "reference": "refBLSN", "filter": "string", "width": 150 },
				{"header": ViewUtil.getLabel('commodity'), "align" : "left", "dataIndex": "commodity", "reference": "refCmdtCd", "filter": "string", "width": 150 },
				{"header": ViewUtil.getLabel('packageTp'), "align" : "left", "dataIndex": "pkgType", "reference": "refPkgTp", "filter": "string", "width": 120 },
				{"header": ViewUtil.getLabel('cargoMark'), "align" : "left", "dataIndex": "rmk", "reference": "refPkgMark", "filter": "string", "width": 150 },
				{"header": ViewUtil.getLabel('mt'), "align" : "left", "dataIndex": "mt", "reference": "refWgt", "filter": "string", "width": 80 },
				{"header": ViewUtil.getLabel('qty'), "align" : "left", "dataIndex": "qty", "reference": "refQty", "filter": "string", "width": 80 },
				{"header": ViewUtil.getLabel('forwarder'), "align" : "left", "dataIndex": "fwd", "reference": "refForwarder", "filter": "string", "width": 150 },
				{"header": ViewUtil.getLabel('dangerousGoods'), "align" : "left", "dataIndex": "dgGoods", "reference": "refDG", "filter": "string", "width": 160 }
				]
		},
		{
			"key": "SNBLGridList",
			"items": [
				{
				    "header": ViewUtil.getLabel('gridNo'),
				    "xtype": "rownumberer",
				    "width" : 50,
				    "align" : "center"
				},
				{
					"header":  ViewUtil.getLabel('vslcallid'),
					"dataIndex": "vslCallId",
					"reference": "refVslCallIdDt",
					"filter": "string",
					"width": 150,
				},
				{
					"header":  ViewUtil.getLabel('rehandleOrgRefNo'),
					"dataIndex": "blSNNo",
					"reference": "refSNBLNoDt",
					"filter": "string",
					"width": 120
				},
			]
		},
		{
			"key": "SNBLGridCompletionList",
			"items": [
				{
				    "header": ViewUtil.getLabel('gridNo'),
				    "xtype": "rownumberer",
				    "width" : 50,
				    "align" : "center"
				},
				{
					"header":  ViewUtil.getLabel('vslcallid'),
					"dataIndex": "vslCallId",
					"reference": "refCompletionVslCallId",
					"filter": "string",
					"width": 150,
				},
				{
					"header":  ViewUtil.getLabel('rehandleOrgRefNo'),
					"dataIndex": "blSNNo",
					"reference": "refSNBLCompletionNo",
					"filter": "string",
					"width": 120
				},
			]
		},
		{
			"key": "InternalTruckMonitoring",
			"items": [
				{
				    "header": ViewUtil.getLabel('gridNo'),
				    "xtype": "rownumberer",
				    "width" : 50,
				    "align" : "center",
				    "locked": true
				},
				{
					"header":  ViewUtil.getLabel('vslCallId'),
					"dataIndex": "vslCallId",
					"filter": "string",
					"width": 150,
				},
				{
					"header":  ViewUtil.getLabel('vslNm'),
					"dataIndex": "vslNm",
					"filter": "string",
					"width": 150,
				},
				{
					"header":  ViewUtil.getLabel('blNo'),
					"dataIndex": "blNo",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('sdoNo'),
					"dataIndex": "sdoNo",
					"filter": "string",
					"width": 120,
					"hidden": true
				},
				{
					"header":  ViewUtil.getLabel('snNo'),
					"dataIndex": "snNo",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('grNo'),
					"dataIndex": "grNo",
					"filter": "string",
					"width": 120,
					"hidden": true
				},
				{
					"header":  ViewUtil.getLabel('cmc_bookingno'),
					"dataIndex": "bookingNo",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('cmc_masterbl'),
					"dataIndex": "masterBlNo",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('confirmDt'),
					"dataIndex": "confirmDt",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('vesselDelayContractor'),
					"dataIndex": "contractorNm",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('truckNo'),
					"dataIndex": "truckNo",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('jobTp'),
					"dataIndex": "jobTp",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('orgWh'),
					"dataIndex": "orgWh",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('newWh'),
					"dataIndex": "newWh",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('chassisNo'),
					"dataIndex": "chassisNo",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('bargeNo'),
					"dataIndex": "bargeNo",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('bargeNm'),
					"dataIndex": "bargeNm",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('firstWgtTime'),
					"dataIndex": "firstWgtTime",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('firstWgt'),
					"dataIndex": "firstWgt",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('secondWgtTime'),
					"dataIndex": "secondWgtTime",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('secondWgt'),
					"dataIndex": "secondWgt",
					"filter": "string",
					"width": 120
				},
				{
					"header":  ViewUtil.getLabel('rmk'),
					"dataIndex": "rmk",
					"filter": "string",
					"width": 120
				}
			]
		},
		{
			"key": "LiquidOperation",
			"items": [
				{"header": ViewUtil.getLabel('no'), "xtype": "rownumberer", "width" : 40, "locked" : true, "align" : "center"},
				{"header": ViewUtil.getLabel('vorLoadingDischarging'), "dataIndex": "statNm", "reference": "refGridLoadingDischarging","filter": "string", "align" : "center", "locked" : false, "width": 130},
				{"header": ViewUtil.getLabel('blSN'), "dataIndex": "cgNo", "reference": "refGridCargoNo","filter": "string", "align" : "center", "locked" : false, "width": 130},
				{"header": ViewUtil.getLabel('sdogrNo'), "dataIndex": "sdoGrNo", "reference": "refGridSDOGRNo","filter": "string", "align" : "center", "locked" : false, "width": 130},
				{ "header": ViewUtil.getLabel('cargoType'), "filter" : "string", "dataIndex": "cgTpCdNm", "reference": "refGridCargoType","width": 130},
				{"header": ViewUtil.getLabel('commodityGroup'), "dataIndex": "cmdtGrpCd", "reference": "refGridCommodityGroup", "width": 170,"filter": "string", "align" : "center"},
				{"header": ViewUtil.getLabel('commodity'), "dataIndex": "cmdtNm", "reference": "refGridCommodityCode", "width": 170,"filter": "string", "align" : "center" },
				{"header": ViewUtil.getLabel('packageTp'), "dataIndex": "pkgTpCd", "reference": "refGridPackageType", "width": 150,"filter": "string", "align" : "center"},
				{"header": ViewUtil.getLabel('startTime'), "dataIndex": "workStDt", "reference": "refGridStartTime", "align" : "center", "filter": "string", "width": 170},
				{"header": ViewUtil.getLabel('endTime'), "align" : "center", "dataIndex": "workEndDt", "reference": "refGridEndTime", "filter": "string", "width": 170 },
				{"header": ViewUtil.getLabel('vorM3Handled'), "align" : "center", "dataIndex": "msrmt", "reference": "refGridCBM", "filter": "string", "width": 130 },
				{"header": ViewUtil.getLabel('gateoperation.custom'), "align" : "center", "dataIndex": "custMode", "reference": "refGridCustomsStatus", "filter": "string", "width": 150 }
				]
		},
		{
			"key": "ConsolDeconsolidation",
			"items": [
				{ "header": ViewUtil.getLabel('select_column'), "xtype": "rownumberer", "width" : 80, "locked" : true, "align" : "center"},
				{ "header": ViewUtil.getLabel('category'), "filter" : "string", "dataIndex": "opClassNm", "width": 100},
				{ "header": ViewUtil.getLabel('vslcallid'), "filter" : "string", "dataIndex": "vslCallId", "width": 130},
				{ "header": ViewUtil.getLabel('docNo'), "filter" : "string", "dataIndex": "mfDocId"},
				{ "header": ViewUtil.getLabel('blsnNo'), "filter" : "string", "dataIndex": "blSnNo"},
				{ "header": ViewUtil.getLabel('status'), "filter" : "string", "dataIndex": "docStatNm"},
				{ "header": ViewUtil.getLabel('whLocation'), "filter" : "string", "dataIndex": "toLocId","width": 130},
				{ "header": ViewUtil.getLabel('saCode'), "filter" : "string", "dataIndex": "shaCd"},
				{ "header": ViewUtil.getLabel('saName'), "filter" : "string", "dataIndex": "shaNm", "width": 150},
				{ "header": ViewUtil.getLabel('faCode'), "filter" : "string", "dataIndex": "fwdCd"},
				{ "header": ViewUtil.getLabel('faName'), "filter" : "string", "dataIndex": "fwdNm", "width": 150}, 
				{ "header": ViewUtil.getLabel('cneCode'), "filter" : "string", "dataIndex": "cnsne", "width": 150},
				{ "header": ViewUtil.getLabel('cneName'), "filter" : "string", "dataIndex": "cnsneNm", "width": 150},
				{ "header": ViewUtil.getLabel('shprCode'), "filter" : "string", "dataIndex": "shpr", "width": 150},
				{ "header": ViewUtil.getLabel('shprName'), "filter" : "string", "dataIndex": "shprNm", "width": 150},
				{ "header": ViewUtil.getLabel('docMt'), "filter" : "string", "dataIndex": "docMt"},
				{ "header": ViewUtil.getLabel('docM3'), "filter" : "string", "dataIndex": "docM3"},
				{ "header": ViewUtil.getLabel('docQty'), "filter" : "string", "dataIndex": "docQty"},
				{ "header": ViewUtil.getLabel('storedMT'), "filter" : "string", "dataIndex": "storedMt"},
				{ "header": ViewUtil.getLabel('storedM3'), "filter" : "string", "dataIndex": "storedM3"},
				{ "header": ViewUtil.getLabel('storedQty'), "filter" : "string", "dataIndex": "storedQty"},
				{ "header": ViewUtil.getLabel('getInBalanceMt'), "filter" : "string", "dataIndex": "balMt"},
				{ "header": ViewUtil.getLabel('getInBalanceM3'), "filter" : "string", "dataIndex": "balM3"},
				{ "header": ViewUtil.getLabel('getInBalanceQty'), "filter" : "string", "dataIndex": "balQty"},
				{ "header": ViewUtil.getLabel('loadedMT'), "filter" : "string", "dataIndex": "loadedMt"},
				{ "header": ViewUtil.getLabel('loadedM3'), "filter" : "string", "dataIndex": "loadedM3"},
				{ "header": ViewUtil.getLabel('loadedQty'), "filter" : "string", "dataIndex": "loadedQty"},
				{ "header": ViewUtil.getLabel('dischargedMT'), "filter" : "string", "dataIndex": "dischargedMt"},
				{ "header": ViewUtil.getLabel('dischargedM3'), "filter" : "string", "dataIndex": "dischargedM3"},
				{ "header": ViewUtil.getLabel('dischargedQty'), "filter" : "string", "dataIndex": "dischargedQty"}
			]
		},
		{
			"key": "unitsStackedForRehandleList",
			"items": [
				{"header": ViewUtil.getLabel('no'), "xtype": "rownumberer", "width" : 40, "locked" : true, "align" : "center"},
				{"header": ViewUtil.getLabel('category'), "filter" : "string", "dataIndex": "catgNm", "width": 90},
				{"header": ViewUtil.getLabel('blsnNo'), "filter" : "string", "dataIndex": "blSnNo", "width": 130},
				{"header": ViewUtil.getLabel('sdogrNo'), "dataIndex": "sdogrNo", "reference": "refGridSDOGRNo","filter": "string", "align" : "center", "locked" : false, "width": 130},
				{"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 110},
				{"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 130}
			]
		},
		{
			"key": "AssigningUnitsListForRehandle",
			"items": [
				{"header": ViewUtil.getLabel('no'), "xtype": "rownumberer", "width" : 40, "locked" : true, "align" : "center"},
				{"header": ViewUtil.getLabel('category'), "filter" : "string", "dataIndex": "catgNm", "width": 90},
				{"header": ViewUtil.getLabel('blsnNo'), "filter" : "string", "dataIndex": "cargoNo", "width": 130},
				{"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "center", "width": 110},
				{"header": ViewUtil.getLabel('brand'), "dataIndex": "brandNm", "filter" : "string", "align" : "center", "width": 130}
			]
		},

		{
			"key": "PackageTariffRates",
			"items": [
				{"header": ViewUtil.getLabel('no'), "xtype": "rownumberer", "width" : 40, "locked" : true, "align" : "center"},
				{ "header": ViewUtil.getLabel('pckTrfPackageNo'), "filter": "string", "width": 120, "align" : "center", "dataIndex":"pkgTrfNo" },
				{ "header": ViewUtil.getLabel('pckTrfPackageNm'), "filter": "string", "flex": 1, "dataIndex":"pkgNm" },
				{ "header": ViewUtil.getLabel('pckTrfPartner'), "filter": "string",  "width": 120, "dataIndex":"ptnrCd" },
				{ "header": ViewUtil.getLabel('pckTrfVslCd'), "filter": "string", "flex": 1, "dataIndex":"vessels" },
				{ "header": ViewUtil.getLabel('pckTrfApplyDt'), "filter": "string", "width": 120, "align" : "center", "dataIndex":"aplyYmd" },
				{ "header": ViewUtil.getLabel('pckTrfExpireDt'), "filter": "string", "width": 120, "align" : "center", "dataIndex":"exprYmd" },
				{ "header": ViewUtil.getLabel('pckTrfRefNo'), "filter": "string", "width": 120, "dataIndex":"rmk" },
				{ "header": ViewUtil.getLabel('pckTrfStaffCode'), "filter": "string", "width": 120, "align" : "center", "dataIndex":"userId" },
				{ "header": ViewUtil.getLabel('pckTrfUpdateTime'), "filter": "string", "width": 120, "dataIndex":"updTime" },
			]
		},

		{
			"key": "PackageTariffRateDetailGrid",
			"items": [
				{ "header": ViewUtil.getLabel('pckTrfTariffCode'), "filter": "string", "width": 80, "dataIndex":"trfCd" },
				{ "header": ViewUtil.getLabel('pckTrfSubTrfCd'), "filter": "string", "width": 100, "dataIndex":"subTrfCd" },
				{ "header": ViewUtil.getLabel('pckTrfTrfTpCd'), "filter": "string", "width": 80, "dataIndex": "trfTpCd" },
				{ "header": ViewUtil.getLabel('pckTrfTrfDescr'), "filter": "string", "width": 180, "dataIndex": "descr" },
				{ "header": ViewUtil.getLabel('pckTrfTrfRate'), "filter": "string", "width": 80, "dataIndex": "stdPrc" },
				{ "header": ViewUtil.getLabel('pckTrfPckRate'), "filter": "string", "width": 110, "dataIndex": "unitPrc" },
				{ "header": ViewUtil.getLabel('pckTrfPortion'), "filter": "string", "width": 110, "dataIndex": "portion" },
				{ "header": ViewUtil.getLabel('pckTrfUnit1'), "filter": "string", "width": 80, "dataIndex": "ivUnit1" },
				{ "header": ViewUtil.getLabel('pckTrfUnit2'), "filter": "string", "width": 80, "dataIndex": "ivUnit2" },
				{ "header": ViewUtil.getLabel('pckTrfUnit3'), "filter": "string", "width": 80, "dataIndex": "ivUnit3" },
				{ "header": ViewUtil.getLabel('pckTrfCostCentre'), "filter": "string", "width": 110, "dataIndex": "costCntCd" },
				{ "header": ViewUtil.getLabel('pckTrfBillingType'), "filter": "string", "width": 80, "dataIndex": "billTpCd" }
			]
		},

		{
			"key": "CustomRelease",
			"items": [ 
				{ "header": ViewUtil.getLabel('vslcallid'), "reference": 'refVslCallId', "filter": "string", "width": 100, "dataIndex":"vslCallId"},
				{ "header": ViewUtil.getLabel('vslpatiVslCd'), "filter": "string", "width": 80, "dataIndex":"vslCd"},
				{ "header": ViewUtil.getLabel('vslpatiVslNm'), "filter": "string", "flex": 1, "align": "left", "dataIndex": "vslNm"},
				{ "header": ViewUtil.getLabel('vslschlSCNNo'), "filter": "string", "width": 100, "dataIndex": "scn"},
				{ "header": ViewUtil.getLabel('bl_sn'), "reference": 'refBlNo', "filter": "string", "width": 120, "dataIndex": "blCbr"},
				{ "header": ViewUtil.getLabel('importExport'), "reference": 'refIe', "filter": "string", "width": 80, "dataIndex": "ie"},  
				{ "header": ViewUtil.getLabel('pol'), "reference": 'refPOL', "filter": "string", "width": 80, "dataIndex": "pol"},
				{ "header": ViewUtil.getLabel('pod'), "reference": 'refPOD', "filter": "string", "width": 80, "dataIndex": "pod"},
				{ "header": ViewUtil.getLabel('mt'), "reference": 'refMT', "filter": "string", "width": 100, "dataIndex": "refMT"},
				{ 
					"header": ViewUtil.getLabel('status'), 
					"dataIndex": 'status',
					"reference": 'refStatus',
					"filter": 'string',
					"align": 'center',
					"width": 100,
					"editor": {
						"xtype": 'combo',
						"bind": { 
							"store": '{statusStore}' 
						},
						"queryMode": 'local',
						"displayField": 'scdNm',
						"valueField": 'scd',
						"allowBlank": true,
					},
				},   
				{
					"header": ViewUtil.getLabel('customDeclaration'),
					"reference": 'refCustDeclNo',
					"filter": "string",
					"width": 160,
					"dataIndex": "custDeclNo",
					"editor": {
						"xtype": 'textfield',
						"allowBlank": true,
					}
				},
				{
					"header": ViewUtil.getLabel('releaseDate'),
					"reference": 'refTransDate',
					"filter": "string",
					"width": 100,
					"dataIndex": "ediTransDate",
					"format": MOST.config.Locale.getShortDate(),
					"editor": {
						"xtype": 'datefield',
						"allowBlank": true,
						"format": MOST.config.Locale.getShortDate()
					}
				},
				{ "header": ViewUtil.getLabel('staffCode'), "reference": 'refUpdateUserId', "filter": "string", "width": 100, "dataIndex": "modifiedBy"}, 
				{ "header": ViewUtil.getLabel('updateTime'), "reference": 'refUpdateDt', "filter": "string", "width": 120, "dataIndex": "modifiedDate"}, 
			]
		},

		//sMantis: 0167331
		{
			"key": "RoRoUnitNoForGateIn",
			"items": [
				{"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "left", "flex": 1},
			]
		},

		{
			"key": "RoRoUnitNoForGateOut",
			"items": [
				{"header": ViewUtil.getLabel('unitNo'), "dataIndex": "unitNo", "filter" : "string", "align" : "left", "flex": 1},
			]
		},
		//eMantis: 0167331\
		{
			"key": "VesselMonitoringList",
			"items": [
				{ "header": ViewUtil.getLabel('vslcallid'), "dataIndex": "vslCallId", "width": 130},
				{ "header": ViewUtil.getLabel('vesselname'), "dataIndex": "vesselName", "width": 180},
				{ "header": ViewUtil.getLabel('berthNo'), "dataIndex": "berthCd", "width": 100},
				{ "header": ViewUtil.getLabel('vslschlShpCNo'), "dataIndex": "shipCallNo", "width": 100},
				{ "header": ViewUtil.getLabel('callsign'), "dataIndex": "callSign", "width": 100},
				{ "header": ViewUtil.getLabel('loa'), "dataIndex": "loa", "width": 100},
				{
					"header": ViewUtil.getLabel('atb'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "atb",
					"filter": "string",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('etd'),
					"xtype": "datecolumn",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "etd",
					"filter": "string",
					"width": 170,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{ "header": ViewUtil.getLabel('mt'),  "width": 130},
				{ "header": ViewUtil.getLabel('cmdtGrp'),  "width": 130},
				{ "header": ViewUtil.getLabel('commodity'),  "width": 130}, 
				{
				    "header": ViewUtil.getLabel('dbYn'),
				    "xtype": "checkcolumn",
				    "dataIndex": "isDbYn",
				    "filter": "string",
				    "align": "center",
				    "editable": false,
				    "disabled": true,
				    "width": 120
				}
			]	
		},

		{
			"key": "DGlist",
			"items": [
				{
					"header": ViewUtil.getLabel('dgCategory'),
					"dataIndex": "dgDiv",
					"reference": "refDgDiv",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('vslCallId'),
					"dataIndex": "vslCallId",
					"reference": "refVslCallId",
					"filter": "string",
					"align": "left",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('dgVesselName'),
					"dataIndex": "vslNm",
					"reference": "refVslNm",
					"filter": "string",
					"align": "left",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('dgBlSn'),
					"dataIndex": "cgNo",
					"reference": "refCgNo",
					"width": 160
				},
				{
					"header": ViewUtil.getLabel('dgReference'),
					"dataIndex": "refNo",
					"reference": "refRefNo",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('dgImdg'),
					"dataIndex": "imdg",
					"reference": "refImdg",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('dgUnno'),
					"dataIndex": "unno",
					"reference": "refUnno",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('dgCargoType'),
					"dataIndex": "cgTpCd",
					"reference": "refCgTpCd",
					"width": 120
				},
				{
					"header": ViewUtil.getLabel('dgCommodity'),
					"dataIndex": "cmdtDesc",
					"reference": "refCmdtDesc",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('status'),
					"dataIndex": "dgChk",
					"reference": "refDgChk",
					"filter": "string",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('dgDeclarationDate'),
					"dataIndex": "dclrDt",
					"reference": "refDclrDt",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('dgConfirmedBy'),
					"dataIndex": "confmBy",
					"reference": "refConfmBy",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('dgConfirmDate'),
					"dataIndex": "confmDt",
					"reference": "refConfmDt",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('dgContactPerson'),
					"dataIndex": "contactNm",
					"reference": "refContactNm",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('dgContactNo'),
					"dataIndex": "contactNo",
					"reference": "refcCntactNo",
					"filter": "string",
					"width": 170
				},
				{
					"header": ViewUtil.getLabel('dgSa'),
					"dataIndex": "shipgAgncy",
					"reference": "refShipgAgncy",
					"filter": "string",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('dgFa'),
					"dataIndex": "fwrd",
					"reference": "refFwrd",
					"filter": "string",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('dgShipper'),
					"dataIndex": "shpr",
					"reference": "refShpr",
					"filter": "string",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('dgConsignee'),
					"dataIndex": "cnsne",
					"reference": "refCnsne",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dgJpaGroup'),
					"dataIndex": "priGrp",
					"reference": "refPriGrp",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('dgPkgType'),
					"dataIndex": "pkg",
					"reference": "refPkg",
					"filter": "string",
					"width": 70
				},
				{
					"header": ViewUtil.getLabel('dgPkgMt'),
					"dataIndex": "pkgWgt",
					"reference": "refPkgWgt",
					"filter": "string",
					"align": "left",
					"width": 70
				}
			]
		},
		{
			"key": "HSCode",
			"items": [
				{ "header": "Gubun", "dataIndex": "hsCdDiv", "flex": 1,"width": 160, "filter": "string"},
				{ "header": ViewUtil.getLabel('hsCode'), "dataIndex": "hsCode", "reference": "refMonitoringMtr016HSCode", "flex": 1,"width": 100, "align":"center" },
				{ "header": "HS Name", "dataIndex": "hsNm", "reference": "refMonitoringMtr016HSName", "flex": 1,"width": 100, "align":"center" },
				{ "header": "Unit", "dataIndex": "unit",  "flex": 1,"width": 180 ,
					"editor":	
					{
							"xtype": "textfield",
							"reference": "txtCustPkgTpCdGrid",
							"maxLength": "50",
							"enforceMaxLength" : true,
							"maskRe": /[0-9.]/
					} 
				},
				{ "header": "CHPT", "dataIndex": "chpt", "flex": 1,"width": 160, "filter": "string"}
						
			]
		},
		{
			"key": "CreditNoteGridList",
			"items": [
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteIvNo'),
					"dataIndex": "invoiceNo"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteStatus'),
					"dataIndex": "crnStatNm"
				},
				{
					"header": ViewUtil.getLabel('LB_creditNoteERP'),
					"dataIndex": "erpStatCd"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteNo'),
					"dataIndex": "creditNoteNo"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteVslcallId'),
					"dataIndex": "vslCallId"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteVslNm'),
					"dataIndex": "vslNm",
					"width": 200,
					"align": "left",
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNotePayerCd'),
					"dataIndex": "payer"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNotePayerNm'),
					"dataIndex": "payerNm",
					"align": "left",
					"width": 200
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNotePayerTp'),
					"dataIndex": "payerTpCd"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteInDate'),
					"format": MOST.config.Locale.getShortDate(),
					"dataIndex": "ivDt",
					"width": 120,
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteAmt'),
					"dataIndex": "aplyAmt"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteGstAmt'),
					"dataIndex": "gstAmt"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteTotalAmt'),
					"dataIndex": "totalAmt"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteCreateBy'),
					"dataIndex": "createdBy"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteCreateDt'),
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"dataIndex": "createdDt",
					"width": 120
				}
			]
		},
		{
			"key": "CreditNoteDetailGridList",
			"items": [
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteIvNo'),
					"dataIndex": "ivNo"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteStatus'),
					"dataIndex": "crnStatCd"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteTrfCd'),
					"dataIndex": "trfCd"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteSubTrfCd'),
					"dataIndex": "subTrfCd"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteTrfTp'),
					"dataIndex": "trfTpNm"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteDesc'),
					"dataIndex": "trfDescr",
					"width": 200,
					"align": "left"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteUnit1'),
					"dataIndex": "unit1Val",
					"format": "0.00",
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"reference": "refEditUnit1",
						"minValue": 0,
						"maxValue": 9999999.999,
						"align": "right",
						"decimalPrecision": 3,
						"selectOnFocus": true,
						"hideTrigger": true
					}
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteUnit2'),
					"dataIndex": "unit2Val",
					"format": "0.00",
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"reference": "refEditUnit2",
						"minValue": 0,
						"maxValue": 9999999.999,
						"align": "right",
						"decimalPrecision": 3,
						"selectOnFocus": true,
						"hideTrigger": true
					}
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteUnit3'),
					"dataIndex": "unit3Val",
					"format": "0.00",
					"renderer": function(value, metaData, record, rowIndex, colIndex, store) {
						metaData.style =  'background: #ffff80; color: red';
						return value;
					},
					"editor": {
						"xtype": "numberfield",
						"reference": "refEditUnit3",
						"minValue": 0,
						"maxValue": 9999999.999,
						"align": "right",
						"decimalPrecision": 3,
						"selectOnFocus": true,
						"hideTrigger": true
					}
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteRateCurr'),
					"xtype": "numbercolumn",
					"dataIndex": "aplyRate",
					"format": "0.00"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteAmt'),
					"dataIndex": "aplyAmt"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteGstAmt'),
					"dataIndex": "gstAmt"
				},
				{
					"header": ViewUtil.getLabel('LB_grid_creditNoteTotalAmt'),
					"dataIndex": "totalAmt"
				},
				{
					"header": ViewUtil.getLabel('LB_creditNoteVslCallId'),
					"dataIndex": "vslCallId"
				}
			]
		},
		//s-MGR-010 MPTS– Allowance Configuration
		{
			"key": "AllowanceTab",
			"items": [
				{
					"header": ViewUtil.getLabel('allowanceTp'),
					"dataIndex": "allowanceCd",
					"editor": {
						xtype: 'combo',
						bind: {
							store: '{allowanceType}',
						},
						displayField: 'scdNm',
						valueField: 'scd',
						queryMode: 'local',
						allowBlank: false,
						editable: false,
					},
					"width": 150,
					"renderer": "onColAllowanceCdRenderer",
				},
				{
					"header": ViewUtil.getLabel('stMonth'),
					"dataIndex": "stMonth",
					"reference": "refAllowanceColStMonth",
					"filter": "string",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel('endMonth'),
					"dataIndex": "edMonth",
					"reference": "refAllowanceColEndMonth",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel('amountRM'),
					"dataIndex": "amount",
					"reference": "refAllowanceColAmount",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						maskRe: /[\d\.]/,
						regex: /^\d+(\.\d{1,3})?$/,
					},
				},
			]
		},
		{
			"key": "BonusRmTab",
			"items": [
				{
					"header": ViewUtil.getLabel('allowanceTp'),
					"dataIndex": "allowance",
					"filter": "string",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						editable: false,
						fieldStyle: 'text-align:center',
					},
				},
				{
					"header": ViewUtil.getLabel('roleCd'),
					"dataIndex": "roleCd1",
					"reference": "refBonusRmColRole",
					"width": 150,
					"editor": {
						xtype: 'combo',
						bind: {
							store: '{roleList}',
						},
						displayField: 'scdNm',
						valueField: 'scd',
						queryMode: 'local',
						allowBlank: false,
						editable: true,
						readOnly: false,
						fieldStyle: 'text-align:center',
					},
					renderer: 'onColRoleListRenderer',
				}, 
				{
					"header": ViewUtil.getLabel('bonusRmAmmount'),
					"dataIndex": "amount",
					"reference": "refBonusRmColAmount",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						maskRe: /[\d\.]/,
						regex: /^\d+(\.\d{1,3})?$/,
					},
				}, 
				{
					"header": ViewUtil.getLabel('stMonth'),
					"dataIndex": "stMonth",
					"reference": "refBonusRmColStMonth",
					"hidden": true,
					"filter": "string",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel('endMonth'),
					"dataIndex": "edMonth",
					"reference": "refBonusRmColEndMonth",
					"hidden": true,
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
			]
		},
		{
			"key": "DayOffTab",
			"items": [
				{
					"header": ViewUtil.getLabel('allowanceTp'),
					"dataIndex": "allowance",
					"filter": "string",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						editable: false,
						fieldStyle: 'text-align:center',
					},
				},
				{
					"header": ViewUtil.getLabel('dayOff'),
					"dataIndex": "amount",
					"reference": "refDayoffColDayoff",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						maskRe: /[\d\.]/,
						regex: /^\d+(\.\d{1,3})?$/,
					},
				}, 
				{
					"header": "%",
					"dataIndex": "amount2",
					"reference": "refDayoffColDayOffPer",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						maskRe: /[\d\.]/,
						regex: /^\d+(\.\d{1,3})?$/,
					},
				}, 
				{
					"header": ViewUtil.getLabel('stMonth'),
					"dataIndex": "stMonth",
					"reference": "refDayoffColStMonth",
					"hidden": true,
					"filter": "string",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel('endMonth'),
					"dataIndex": "edMonth",
					"reference": "refDayoffColEndMonth",
					"hidden": true,
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
			]
		},
		{
			"key": "FuelTab",
			"items": [
				{
					"header": ViewUtil.getLabel('allowanceTp'),
					"dataIndex": "allowance",
					"filter": "string",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						editable: false,
						fieldStyle: 'text-align:center',
					},
				},
				{
					"header": ViewUtil.getLabel('staffId'),
					"dataIndex": "staffId",
					"reference": "refFuelColStaffId",
					"currentTab": "Fuel",
					"width": 100,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						editable: true,
						listeners: {
							focusleave: 'onStaffIdCellFocusLeave',
						},
					},
				},
				{
					"header": ViewUtil.getLabel('roleCd'),
					"dataIndex": "roleCd1",
					"reference": "refFuelColRole",
					"width": 200,
					"align": "left",
					"editor": {
						xtype: 'combo',
						bind: {
							store: '{roleList}',
						},
						displayField: 'scdNm',
						valueField: 'scd',
						queryMode: 'local',
						allowBlank: false,
						editable: true,
						readOnly: false,
						fieldStyle: 'text-align:center',
					},
					renderer: 'onColRoleListRenderer',
				}, 
				{
					"header": ViewUtil.getLabel('staffId'),
					"dataIndex": "empIdHidden",
					"reference": "refFuelColEmpIdHidden",
					"width": 100,
					"hidden": true,
					"editor": {
						xtype: 'textfield',
						editable: false,
					},
				},
				{
					"header": ViewUtil.getLabel('staffNm'),
					"dataIndex": "staffNm",
					"reference": "refFuelColStaffNm",
					"width": 250,
					"align": "left",
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						editable: false,
					},
				},
				{
					"header": ViewUtil.getLabel('amountRM'),
					"dataIndex": "amount",
					"reference": "refFuelColAmount",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						maskRe: /[\d\.]/,
						regex: /^\d+(\.\d{1,3})?$/,
					},
				}, 
				{
					"header": ViewUtil.getLabel('stMonth'),
					"dataIndex": "stMonth",
					"reference": "refFuelColStMonth",
					"filter": "string",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel('endMonth'),
					"dataIndex": "edMonth",
					"reference": "refFuelColEndMonth",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
			]
		},
		{
			"key": "IncentiveTab",
			"items": [
				{
					"header": ViewUtil.getLabel('allowanceTp'),
					"dataIndex": "allowance",
					"filter": "string",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						editable: false,
						fieldStyle: 'text-align:center',
					},
				},
				{
					"header": ViewUtil.getLabel('roleCd'),
					"dataIndex": "roleCd1",
					"reference": "refIncentiveColRole",
					"width": 200,
					"align": "left",
					"editor": {
						xtype: 'combo',
						bind: {
							store: '{roleList}',
						},
						displayField: 'scdNm',
						valueField: 'scd',
						queryMode: 'local',
						allowBlank: false,
						editable: true,
						readOnly: false,
						fieldStyle: 'text-align:center',
					},
					renderer: 'onColRoleListRenderer',
				}, 
				{
					"header": ViewUtil.getLabel('amountRM'),
					"dataIndex": "amount",
					"reference": "refIncentiveColAmount",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						maskRe: /[\d\.]/,
						regex: /^\d+(\.\d{1,3})?$/,
					},
				}, 
				{
					"header": ViewUtil.getLabel('stMonth'),
					"dataIndex": "stMonth",
					"reference": "refIncentiveColStMonth",
					"filter": "string",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel('endMonth'),
					"dataIndex": "edMonth",
					"reference": "refIncentiveColEndMonth",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
			]
		},
		{
			"key": "TonnageTab",
			"items": [
				{
					"header": ViewUtil.getLabel('allowanceTp'),
					"dataIndex": "allowance",
					"filter": "string",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						editable: false,
						fieldStyle: 'text-align:center',
					},
				},
				{
					"header": ViewUtil.getLabel('staffId'),
					"dataIndex": "staffId",
					"reference": "refTonnageColStaffId",
					"currentTab": "Tonnage",
					"width": 100,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						editable: true,
						listeners: {
							focusleave: 'onStaffIdCellFocusLeave',
						},
					},
				},
				{
					"header": ViewUtil.getLabel('roleCd'),
					"dataIndex": "roleCd1",
					"reference": "refTonnageColRole",
					"width": 200,
					"align": "left",
					"editor": {
						xtype: 'combo',
						bind: {
							store: '{roleList}',
						},
						displayField: 'scdNm',
						valueField: 'scd',
						queryMode: 'local',
						allowBlank: false,
						editable: true,
						readOnly: false,
						fieldStyle: 'text-align:center',
					},
					"renderer": "onColRoleListRenderer",
				}, 
				{
					"header": ViewUtil.getLabel('staffId'),
					"dataIndex": "empIdHidden",
					"reference": "refTonnageColEmpIdHidden",
					"width": 100,
					"hidden": true,
					"editor": {
						xtype: 'textfield',
						editable: false,
					},
				},
				{
					"header": ViewUtil.getLabel('staffNm'),
					"dataIndex": "staffNm",
					"reference": "refTonnageColStaffNm",
					"width": 250,
					"align": "left",
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						editable: false,
					},
				},
				{
					"header": ViewUtil.getLabel('amountRM'),
					"dataIndex": "amount",
					"reference": "refTonnageColAmount",
					"width": 150,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						maskRe: /[\d\.]/,
						regex: /^\d+(\.\d{1,3})?$/,
					},
				}, 
				{
					"header": ViewUtil.getLabel('stMonth'),
					"dataIndex": "stMonth",
					"reference": "refTonnageColStMonth",
					"hidden": true,
					"filter": "string",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel('endMonth'),
					"dataIndex": "edMonth",
					"reference": "refTonnageColEndMonth",
					"hidden": true,
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 150,
				},
			]
		},
		{
			"key": "MultiSkillTab",
			"items": [
				{
					"header": ViewUtil.getLabel('staffId'),
					"dataIndex": "staffId",
					"reference": "refMultiskillColStaffId",
					"width": 75,
					"currentTab": "Multiskill",
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						editable: true,
						listeners: {
							focusleave: 'onStaffIdCellFocusLeave',
						},
					},
				},
				{
					"header": ViewUtil.getLabel('staffId'),
					"dataIndex": "empIdHidden",
					"reference": "refMultiskillColEmpIdHidden",
					"width": 100,
					"hidden": true,
					"editor": {
						xtype: 'textfield',
						editable: false,
					},
				},
				{
					"header": ViewUtil.getLabel('staffNm'),
					"dataIndex": "staffNm",
					"reference": "refMultiskillColStaffNm",
					"width": 200,
					"align": "left",
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						editable: false,
					},
				},
				{
					"header": ViewUtil.getLabel('allowanceTp'),
					"dataIndex": "allowance",
					"filter": "string",
					"width": 100,
					"editor": {
						xtype: 'textfield',
						editable: false,
						fieldStyle: 'text-align:center',
					},
				},
				{
					"header": ViewUtil.getLabel('roleCd'),
					"dataIndex": "roleCd1",
					"reference": "refMultiskillColRole",
					"width": 200,
					"align": "left",
					"editor": {
						xtype: 'combo',
						bind: {
							store: '{roleList}',
						},
						displayField: 'scdNm',
						valueField: 'scd',
						queryMode: 'local',
						allowBlank: false,
						editable: true,
						readOnly: false,
						fieldStyle: 'text-align:center',
					},
					"renderer": "onColRoleListRenderer",
				}, 
				{
					"header": ViewUtil.getLabel('grade'),
					"dataIndex": "gradeCd1",
					"reference": "refMultiskillColGrade",
					"width": 100,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						editable: false,
						fieldStyle: 'text-align:center',
					},
				},
				{
					"header": ViewUtil.getLabel('multiSkill'),
					"dataIndex": "role2",
					"width": 450,
					"align": "left",
					"editor": {
						xtype: 'combo',
						allowBlank: false,
						emptyText: 'Select',
						bind: {
							store: '{multiSkillTag}',
						},
						triggerAction: 'all',
						forceSelection: true,
						queryMode: 'local',
						displayField: 'scdNm',
						valueField: 'scd',
						multiSelect: true,
						filterPickList: true,
						triggerAction: 'query',
						listConfig: {
							itemTpl:
								"<div {[values.disabled ? 'style=\"color:#909090\"' : '']}>{scdNm}</div>",
						},
						listeners: {
							select: 'onTagFieldSelect',
							beforeselect: function (cmp, record) {
								return !record.get('disabled');
							},
						},
					},
				},
				{
					"header": ViewUtil.getLabel('amountRM'),
					"dataIndex": "amount",
					"reference": "refMultiskillColAmount",
					"width": 100,
					"editor": {
						xtype: 'textfield',
						allowBlank: false,
						maskRe: /[\d\.]/,
						regex: /^\d+(\.\d{1,3})?$/,
					},
				}, 
				{
					"header": ViewUtil.getLabel('stMonth'),
					"dataIndex": "stMonth",
					"reference": "refMultiskillColStMonth",
					"filter": "string",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 120,
				},
				{
					"header": ViewUtil.getLabel('endMonth'),
					"dataIndex": "edMonth",
					"reference": "refMultiskillColEndMonth",
					"editor": {
						xtype: 'datefield',
						allowBlank: false,
						editable: false,
						format: MOST.config.Locale.getShortDate(),
					},
					"width": 120,
				},
			]
		},
		//e-MGR-010 MPTS– Allowance Configuration

		//s-AUT-002 Alerting and Notification'
		{
			"key": "InternalAlerting",
			"items": [
				{
					"xtype": "rownumberer",
					"width" : 30,
					"align" : "center"
				},
				{
					"header": "Property",
					"dataIndex": "property",
					"editable": false, 
					"flex": 3,
					"align": "left"
				},
				{
					"header": "Count",
					"dataIndex": "cnt",
					"editable": false,
					"flex": 1
				},
			]
		},
		{
			"key": "ExternalAlerting",
			"items": [
				{
					"dataIndex": "description",
					"editable": false, 
					"flex": 1,
					"align": "left"
				}
			]
		},
		//e-AUT-002 Alerting and Notification
		//s-MGR-011 MPTS– Berth Approval
		{
			"key": "BerthApproval",
			"items": [
				{
					"header": ViewUtil.getLabel('vslCallId'),
					"reference": "refVslCallId",
					"dataIndex": "vslCallId",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('vslNm'),
					"reference": "refVslNm",
					"dataIndex": "vslNm",
					"filter": "string",
					"width": 200,
					"align": "left"
				},
				{
					"header": ViewUtil.getLabel('vslTpNm'),
					"reference": "refVslTpNm",
					"dataIndex": "vslTpNm",
					"filter": "string",
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel('eTA'),
					"dataIndex": "eta",
					"reference": "refETA",
					"filter": "string",
					"width": 120,
					"format": MOST.config.Locale.getShortDate(),
				},
				{
					"header": ViewUtil.getLabel('loa'),
					"reference": "refLoa",
					"dataIndex": "loa",
					"style": "text-align: center;",
					"align": "center",
					"width": 75
				},
				{
					"header": ViewUtil.getLabel('summitStatName'),
					"reference": "refSummitStatName",
					"dataIndex": "summitStatName",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('sumitDt'),
					"reference": "refSumitDt",
					"dataIndex": "sumitDt",
					"filter": "string",
					"width": 150,
					"hidden": true
				},
				{
					"header": ViewUtil.getLabel('berthPlanYn'),
					"xtype": "actioncolumn",
					"reference": "refBerthPlanYn",
					"dataIndex": "berthPlanYn",
					"filter": "string",
					"items": [
						{
							"getClass": function (value, meta, record) {
								return (record.data.berthPlanYn === 'Y') ? 'x-fa fa-check green' : '';
							}
						}
					],
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('berthLocation'),
					"reference": "refBerthLocation",
					"dataIndex": "berthLoc",
					"filter": "string",
					"width": 100
				}, 
				{
					"header": ViewUtil.getLabel('berthAprvStat'),
					"reference": "refBerthAprvStatNm",
					"dataIndex": "berthAprvStatNm",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('berthAprvTime'),
					"xtype": "datecolumn",
					"reference": "refBerthAprvTime",
					"dataIndex": "berthAprvTime",
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"width": 150,
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					}
				},
				{
					"header": ViewUtil.getLabel('berthAprvUserId'),
					"reference": "refBerthAprvUserId",
					"dataIndex": "berthAprvUserId",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('fileYn'),
					"xtype": "actioncolumn",
					"reference": "refFileYn",
					"dataIndex": "fileYn",
					"filter": "string",
					"items": [
						{
							"getClass": function (value, meta, record) {
								return (record.data.berthPlanYn === 'Y') ? 'x-fa fa-check green' : '';
							}
						}
					],
					"width": 100
				}, 
				{
					"header": ViewUtil.getLabel('consignee'),
					"reference": "refConsignee",
					"dataIndex": "consignee",
					"filter" : "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('consignor'),
					"reference": "refConsignor",
					"dataIndex": "consignor",
					"filter": "string",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('arrvSaId'),
					"reference": "refArrvSaId",
					"dataIndex": "arrvSaId",
					"filter": "string",
					"width": 100
				}, 
				{
					"header": ViewUtil.getLabel('balance'),
					"reference": "refBalance",
					"dataIndex": "balance",
					"style": "text-align: center;",
					"align": "center",
					"width": 100
				},
				{
					"header": ViewUtil.getLabel('operationType'),
					"reference": "refOperationType",
					"dataIndex": "operationType",
					"filter": "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('cargoTp'),
					"reference": "refCargoTp",
					"dataIndex": "cargoTp",
					"filter" : "string",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('mt'),
					"reference": "refMt",
					"dataIndex": "mt",
					"filter": "string",
					"style": "text-align: center;",
					"align": "center",
					"width": 150
				},
				{
					"header": ViewUtil.getLabel('updateDate'),
					"xtype": "datecolumn",
					"reference": "refInsDtm",
					"dataIndex": "insDtm",
					"width": 150,
					"format": MOST.config.Locale.getDefaultDateFormatWithNoSeconds(),
					"exportRenderer": function(value, record, dataIndex, cell, column){
						return Ext.util.Format.date(value, MOST.config.Locale.getDefaultDateFormatWithNoSeconds());
					},
				},
			]
		},
		{
			"key": "BerthApprovalBusinessHistory",
			"items": [
				{
					"header": ViewUtil.getLabel('billingtype'),
					"dataIndex": "billTp",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('jpvcjob'),
					"dataIndex": "jpvc",
					"filter": "string",
					"width": 150,
				},
				{
					"header": ViewUtil.getLabel('vesselname'),
					"dataIndex": "vslNm",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('atb'),
					"dataIndex": "atb",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('atc'),
					"dataIndex": "atc",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('atw'),
					"dataIndex": "atw",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('atu'),
					"dataIndex": "atu",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('handlingtype'),
					"dataIndex": "handlingType",
					"filter": "string",
					"width": 130,
				},
				{
					"header": ViewUtil.getLabel('cargotype'),
					"dataIndex": "cargoType",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('amount'),
					"dataIndex": "amount",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('status'),
					"dataIndex": "vslTpNm",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('balance'),
					"dataIndex": "balance",
					"filter": "string",
					"width": 100,
				},
				{
					"header": ViewUtil.getLabel('paymentdate'),
					"dataIndex": "paymentDt",
					"filter": "string",
					"width": 150,
				},
			],
		},
		//e-MGR-011 MPTS– Berth Approval
		{
			"key": "BizConfiguration",
			"items": [
				{
					"header": ViewUtil.getLabel('DCCode'), "editable": false, "width": 130, "dataIndex": "code"
				}
				,{
					"header": ViewUtil.getLabel('DCDesc'), "editable": false, "width": 300, "dataIndex": "description"
				}
				,{
					"header": ViewUtil.getLabel('value'), "editable": false, "width": 150, "dataIndex": "value"
				}
				,{
					"header": ViewUtil.getLabel('category'), "editable": false, "width": 150, "dataIndex": "category", "filter": "string"
				}
				,{
					"header": ViewUtil.getLabel('useyn'), "editable": false, "width": 100, "dataIndex": "useYn"
				}
				,{
					"header": ViewUtil.getLabel('DCStaffCd'), "editable": false, "width": 150, "dataIndex": "staffCd"
				}
				,{
					"header": ViewUtil.getLabel('DCUpdateTime'), "editable": false, "width": 150, "dataIndex": "updTime"
				}
				
			]
		},
		{
            "key": "ShipCallNoPopup",
            "items": [
                {
                    "header": ViewUtil.getLabel('scn'),
                    "dataIndex": "scn",
                    "reference": "refScn",
                    "filter": "string",
                    "width": 120
                },
                {
                    "header": ViewUtil.getLabel('vesselCode'),
                    "dataIndex": "vslCd",
                    "reference": "refVslCd",
                    "filter": "string",
                    "width": 180
                },
                {
                    "header": ViewUtil.getLabel('vesselName'),
                    "dataIndex": "vslNm",
                    "reference": "refVslNm",
                    "filter": "string",
                    "align": "left",
                    "width": 180
                }
            ]
        },
        {
            "key": "ShipCallNoVesselCallPopup",
            "items": [
                {
                    "header": ViewUtil.getLabel('scn'),
                    "dataIndex": "scn",
                    "reference": "refScn",
                    "filter": "string",
                    "width": 120
                },
                {
                    "header": ViewUtil.getLabel('jpvc'),
                    "dataIndex": "vslCallId",
                    "reference": "refVslCallId",
                    "filter": "string",
                    "width": 150
                },
                {
                    "header": ViewUtil.getLabel('vslTpNm'),
                    "dataIndex": "vslTpNm",
                    "reference": "refVslTpNm",
                    "filter": "list",
                    "width": 130
                },
                {
                    "header": ViewUtil.getLabel('vslNm'),
                    "dataIndex": "vslNm",
                    "reference": "refVslNm",
                    "filter": "string",
                    "align": "left",
                    "width": 150
                },
                {
                    "header": ViewUtil.getLabel('callSign'),
                    "dataIndex": "callSign",
                    "reference": "refCallSign",
                    "filter": "string",
                    "width": 100
                },
                {
                    "header": ViewUtil.getLabel('eta'),
                    "xtype": "datecolumn",
                    "dataIndex": "eta",
                    "format": MOST.config.Locale.getShortDate(),
                    "width": 120,
                    "exportRenderer": function(value, record, dataIndex, cell, column){
                        return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
                    }
                },
                {
                    "header": ViewUtil.getLabel('etb'),
                    "xtype": "datecolumn",
                    "dataIndex": "etb",
                    "format": MOST.config.Locale.getShortDate(),
                    "width": 120,
                    "exportRenderer": function(value, record, dataIndex, cell, column){
                        return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
                    }
                },
                {
                    "header": ViewUtil.getLabel('etd'),
                    "xtype": "datecolumn",
                    "dataIndex": "etd",
                    "format": MOST.config.Locale.getShortDate(),
                    "width": 120,
                    "exportRenderer": function(value, record, dataIndex, cell, column){
                        return Ext.util.Format.date(value, MOST.config.Locale.getShortDate());
                    }
                },
                {
                    "header": ViewUtil.getLabel('voyage'),
                    "dataIndex": "voyage",
                    "reference": "refVoyage",
                    "filter": "string",
                    "width": 120
                },
                {
                    "header": ViewUtil.getLabel('vslOperator'),
                    "dataIndex": "vslOperator",
                    "reference": "refVslOperator",
                    "filter": "string",
                    "width": 120
                }
            ]
        },
	]
}